KIDS Distribution saved on Feb 26, 2015@13:10:44
CAREWEB DISTRIBUTION (VISTA) 1.0
**KIDS**:CAREWEB DISTRIBUTION (VISTA) 1.0^CIA UTILITIES 1.2^RG UTILITIES 3.0^CIA RPC BROKER 1.3^CAREWEB FRAMEWORK 1.0^CAREWEB NOTIFICATION 1.0^CAREWEB CONTEXT 1.0^CAREWEB CWADF 1.0^CAREWEB ALLERGY COVERSHEET 1.0^CAREWEB CONSULT COVERSHEET 1.0^CAREWEB LAB COVERSHEET 1.0^CAREWEB VITALS 1.0^CAREWEB SMART ADAPTER 1.0^

**INSTALL NAME**
CAREWEB DISTRIBUTION (VISTA) 1.0
"BLD",8492,0)
CAREWEB DISTRIBUTION (VISTA) 1.0^^1^3150226^n
"BLD",8492,6.3)
118
"BLD",8492,10,0)
^9.63^15^12
"BLD",8492,10,10,0)
CIA UTILITIES 1.2^1
"BLD",8492,10,15,0)
RG UTILITIES 3.0^1
"BLD",8492,10,30,0)
CIA RPC BROKER 1.3^1
"BLD",8492,10,40,0)
CAREWEB FRAMEWORK 1.0^1
"BLD",8492,10,50,0)
CAREWEB NOTIFICATION 1.0^1
"BLD",8492,10,60,0)
CAREWEB CONTEXT 1.0^1
"BLD",8492,10,100,0)
CAREWEB CWADF 1.0^1
"BLD",8492,10,110,0)
CAREWEB ALLERGY COVERSHEET 1.0^1
"BLD",8492,10,120,0)
CAREWEB CONSULT COVERSHEET 1.0^1
"BLD",8492,10,130,0)
CAREWEB LAB COVERSHEET 1.0^1
"BLD",8492,10,140,0)
CAREWEB VITALS 1.0^1
"BLD",8492,10,150,0)
CAREWEB SMART ADAPTER 1.0^0
"BLD",8492,10,"B","CAREWEB ALLERGY COVERSHEET 1.0",110)

"BLD",8492,10,"B","CAREWEB CONSULT COVERSHEET 1.0",120)

"BLD",8492,10,"B","CAREWEB CONTEXT 1.0",60)

"BLD",8492,10,"B","CAREWEB CWADF 1.0",100)

"BLD",8492,10,"B","CAREWEB FRAMEWORK 1.0",40)

"BLD",8492,10,"B","CAREWEB LAB COVERSHEET 1.0",130)

"BLD",8492,10,"B","CAREWEB NOTIFICATION 1.0",50)

"BLD",8492,10,"B","CAREWEB SMART ADAPTER 1.0",150)

"BLD",8492,10,"B","CAREWEB VITALS 1.0",140)

"BLD",8492,10,"B","CIA RPC BROKER 1.3",30)

"BLD",8492,10,"B","CIA UTILITIES 1.2",10)

"BLD",8492,10,"B","RG UTILITIES 3.0",15)

"BLD",8492,"INIT")
SETLOGIN^RGCWFUTL
"BLD",8492,"KRN",0)
^9.67PA^8994^20
"BLD",8492,"KRN",.4,0)
.4
"BLD",8492,"KRN",.401,0)
.401
"BLD",8492,"KRN",.402,0)
.402
"BLD",8492,"KRN",.403,0)
.403
"BLD",8492,"KRN",.5,0)
.5
"BLD",8492,"KRN",.84,0)
.84
"BLD",8492,"KRN",3.6,0)
3.6
"BLD",8492,"KRN",3.8,0)
3.8
"BLD",8492,"KRN",9.2,0)
9.2
"BLD",8492,"KRN",9.8,0)
9.8
"BLD",8492,"KRN",19,0)
19
"BLD",8492,"KRN",19.1,0)
19.1
"BLD",8492,"KRN",101,0)
101
"BLD",8492,"KRN",409.61,0)
409.61
"BLD",8492,"KRN",771,0)
771
"BLD",8492,"KRN",779.2,0)
779.2
"BLD",8492,"KRN",870,0)
870
"BLD",8492,"KRN",8989.51,0)
8989.51
"BLD",8492,"KRN",8989.52,0)
8989.52
"BLD",8492,"KRN",8994,0)
8994
"BLD",8492,"KRN","B",.4,.4)

"BLD",8492,"KRN","B",.401,.401)

"BLD",8492,"KRN","B",.402,.402)

"BLD",8492,"KRN","B",.403,.403)

"BLD",8492,"KRN","B",.5,.5)

"BLD",8492,"KRN","B",.84,.84)

"BLD",8492,"KRN","B",3.6,3.6)

"BLD",8492,"KRN","B",3.8,3.8)

"BLD",8492,"KRN","B",9.2,9.2)

"BLD",8492,"KRN","B",9.8,9.8)

"BLD",8492,"KRN","B",19,19)

"BLD",8492,"KRN","B",19.1,19.1)

"BLD",8492,"KRN","B",101,101)

"BLD",8492,"KRN","B",409.61,409.61)

"BLD",8492,"KRN","B",771,771)

"BLD",8492,"KRN","B",779.2,779.2)

"BLD",8492,"KRN","B",870,870)

"BLD",8492,"KRN","B",8989.51,8989.51)

"BLD",8492,"KRN","B",8989.52,8989.52)

"BLD",8492,"KRN","B",8994,8994)

"INIT")
SETLOGIN^RGCWFUTL
"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","RGCWFUTL")
0^^B7704054
"RTN","RGCWFUTL",1,0)
RGCWFUTL ;RI/CBMI/DKM CareWeb Management Utilites;02-Feb-2015 10:15;DKM
"RTN","RGCWFUTL",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 118
"RTN","RGCWFUTL",3,0)
 ; Initiate shutdown sequence for applications
"RTN","RGCWFUTL",4,0)
SHUTDOWN N DELAY,MSG
"RTN","RGCWFUTL",5,0)
 W !,"Initiate CareWeb Shutdown Sequence",!!
"RTN","RGCWFUTL",6,0)
 D SHOWSESS()
"RTN","RGCWFUTL",7,0)
 W:$$GETLOGIN'="" "Note: shutdown has already been initiated.",!!
"RTN","RGCWFUTL",8,0)
 F  D  Q:$D(DELAY)
"RTN","RGCWFUTL",9,0)
 .R !,"# of seconds till shutdown (30 minimum): ",DELAY:DTIME,!
"RTN","RGCWFUTL",10,0)
 .E  S DELAY=U
"RTN","RGCWFUTL",11,0)
 .S DELAY=$TR(DELAY," ")
"RTN","RGCWFUTL",12,0)
 .Q:DELAY[U
"RTN","RGCWFUTL",13,0)
 .I DELAY["?" D  Q
"RTN","RGCWFUTL",14,0)
 ..K DELAY
"RTN","RGCWFUTL",15,0)
 ..W "Enter number of seconds before shutdown.",!
"RTN","RGCWFUTL",16,0)
 ..W "To specify time in minutes, follow number with letter M.",!
"RTN","RGCWFUTL",17,0)
 .S:DELAY?1.N1(1"M",1"m") DELAY=DELAY*60
"RTN","RGCWFUTL",18,0)
 .S DELAY=DELAY\1
"RTN","RGCWFUTL",19,0)
 .K:DELAY<30 DELAY
"RTN","RGCWFUTL",20,0)
 Q:DELAY[U
"RTN","RGCWFUTL",21,0)
 Q:'$$ASK^RGUT("Do you really want to shut down CareWeb in "_DELAY_" seconds")
"RTN","RGCWFUTL",22,0)
 D SDINIT(.MSG,DELAY,1)
"RTN","RGCWFUTL",23,0)
 W !!,MSG,!!
"RTN","RGCWFUTL",24,0)
 Q
"RTN","RGCWFUTL",25,0)
 ; Abort a shutdown sequence in progress
"RTN","RGCWFUTL",26,0)
ABORTSD N MSG
"RTN","RGCWFUTL",27,0)
 W !,"Abort CareWeb Shutdown and Enable Logins",!!
"RTN","RGCWFUTL",28,0)
 D SHOWSESS()
"RTN","RGCWFUTL",29,0)
 W:$$GETLOGIN="" "Note: a shutdown does not appear to be in progress.",!!
"RTN","RGCWFUTL",30,0)
 Q:'$$ASK^RGUT("Do you really want to abort any shutdowns in progress and enable logins")
"RTN","RGCWFUTL",31,0)
 D SDABORT(.MSG,1)
"RTN","RGCWFUTL",32,0)
 W !!,MSG,!!
"RTN","RGCWFUTL",33,0)
 Q
"RTN","RGCWFUTL",34,0)
 ; RPC: Initiate shutdown
"RTN","RGCWFUTL",35,0)
SDINIT(DATA,DELAY,LOCK,USR) ;
"RTN","RGCWFUTL",36,0)
 S DELAY=DELAY\1
"RTN","RGCWFUTL",37,0)
 I DELAY<30 S DATA="Invalid value for shutdown delay." Q
"RTN","RGCWFUTL",38,0)
 D:$G(LOCK) SETLOGIN("Application is currently offline.  Please try later.")
"RTN","RGCWFUTL",39,0)
 D BRDCAST^CIANBEVT("DESKTOP.SHUTDOWN.START",DELAY*1000,.USR)
"RTN","RGCWFUTL",40,0)
 S DATA="Shutdown sequence initiated.  "_$$SDMSG
"RTN","RGCWFUTL",41,0)
 Q
"RTN","RGCWFUTL",42,0)
 ; RPC: Abort shutdown
"RTN","RGCWFUTL",43,0)
SDABORT(DATA,UNLOCK,USR) ;
"RTN","RGCWFUTL",44,0)
 D BRDCAST^CIANBEVT("DESKTOP.SHUTDOWN.ABORT","Application shutdown has been aborted.  You may continue.",.USR)
"RTN","RGCWFUTL",45,0)
 D:$G(UNLOCK) SETLOGIN()
"RTN","RGCWFUTL",46,0)
 S DATA="Shutdown sequence aborted.  "_$$SDMSG
"RTN","RGCWFUTL",47,0)
 Q
"RTN","RGCWFUTL",48,0)
 ; Login status message
"RTN","RGCWFUTL",49,0)
SDMSG() Q "Logins are "_$S($L($$GETLOGIN):"disabled.",1:"enabled.")
"RTN","RGCWFUTL",50,0)
 ; Get inhibit login message
"RTN","RGCWFUTL",51,0)
GETLOGIN() ;
"RTN","RGCWFUTL",52,0)
 Q $$OPTMSG^CIANBUTL("RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWFUTL",53,0)
 ; Set inhibit login message
"RTN","RGCWFUTL",54,0)
SETLOGIN(MSG) ;
"RTN","RGCWFUTL",55,0)
 D OPTMSG^CIANBUTL("RGCWF CAREWEB FRAMEWORK",$G(MSG))
"RTN","RGCWFUTL",56,0)
 Q
"RTN","RGCWFUTL",57,0)
 ; RPC: Get/set inhibit login message
"RTN","RGCWFUTL",58,0)
MSGLOGIN(DATA,MSG) ;
"RTN","RGCWFUTL",59,0)
 I '$D(MSG) S DATA=$$GETLOGIN
"RTN","RGCWFUTL",60,0)
 E  D SETLOGIN(MSG)
"RTN","RGCWFUTL",61,0)
 Q
"RTN","RGCWFUTL",62,0)
 ; Show active CareWeb sessions
"RTN","RGCWFUTL",63,0)
SHOWSESS() ;
"RTN","RGCWFUTL",64,0)
 N X
"RTN","RGCWFUTL",65,0)
 S X=$$SHOWSESS^CIANBUTL("RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWFUTL",66,0)
 Q:$Q X
"RTN","RGCWFUTL",67,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
CIA UTILITIES 1.2
"BLD",8482,0)
CIA UTILITIES 1.2^CIA UTILITIES^0^3150226^n
"BLD",8482,1,0)
^^3^3^3030224^^
"BLD",8482,1,1,0)
This is the set of routines common to all modules occupying the CIA namespace.  
"BLD",8482,1,2,0)
They perform generic functions.  
"BLD",8482,1,3,0)
 
"BLD",8482,4,0)
^9.64PA^^
"BLD",8482,6.3)
129
"BLD",8482,"ABNS",0)
^9.66A^1^1
"BLD",8482,"ABNS",1,0)
RG
"BLD",8482,"ABNS",1,1,0)
^9.661A^^
"BLD",8482,"ABNS","B","RG",1)

"BLD",8482,"ABPKG")
n^n
"BLD",8482,"INI")

"BLD",8482,"INIT")
POST^CIAUINIT
"BLD",8482,"KRN",0)
^9.67PA^771^18
"BLD",8482,"KRN",.4,0)
.4
"BLD",8482,"KRN",.4,"NM",0)
^9.68A^^
"BLD",8482,"KRN",.401,0)
.401
"BLD",8482,"KRN",.402,0)
.402
"BLD",8482,"KRN",.403,0)
.403
"BLD",8482,"KRN",.5,0)
.5
"BLD",8482,"KRN",.84,0)
.84
"BLD",8482,"KRN",3.6,0)
3.6
"BLD",8482,"KRN",3.8,0)
3.8
"BLD",8482,"KRN",9.2,0)
9.2
"BLD",8482,"KRN",9.8,0)
9.8
"BLD",8482,"KRN",9.8,"NM",0)
^9.68A^72^38
"BLD",8482,"KRN",9.8,"NM",18,0)
CIAU^^0^B38287230
"BLD",8482,"KRN",9.8,"NM",27,0)
CIAUSTX^^0^B18161897
"BLD",8482,"KRN",9.8,"NM",28,0)
CIAUSTX0^^0^B19890648
"BLD",8482,"KRN",9.8,"NM",29,0)
CIAUSTX1^^0^B22089177
"BLD",8482,"KRN",9.8,"NM",33,0)
CIAUALR^^0^B1528114
"BLD",8482,"KRN",9.8,"NM",34,0)
CIAUBIG^^0^B15073939
"BLD",8482,"KRN",9.8,"NM",35,0)
CIAUDAT^^0^B13729833
"BLD",8482,"KRN",9.8,"NM",36,0)
CIAUDIC^^0^B30301399
"BLD",8482,"KRN",9.8,"NM",37,0)
CIAUDT^^0^B5347313
"BLD",8482,"KRN",9.8,"NM",38,0)
CIAUEDT^^0^B50153090
"BLD",8482,"KRN",9.8,"NM",44,0)
CIAUIMP^^0^B12183185
"BLD",8482,"KRN",9.8,"NM",45,0)
CIAUIN^^1^
"BLD",8482,"KRN",9.8,"NM",46,0)
CIAUIN0^^0^B1602000
"BLD",8482,"KRN",9.8,"NM",47,0)
CIAUIN16^^0^B4464566
"BLD",8482,"KRN",9.8,"NM",48,0)
CIAUIN18^^0^B4685326
"BLD",8482,"KRN",9.8,"NM",49,0)
CIAUIN8^^0^B4326711
"BLD",8482,"KRN",9.8,"NM",50,0)
CIAULK2^^0^B51861902
"BLD",8482,"KRN",9.8,"NM",51,0)
CIAULKP^^0^B29201195
"BLD",8482,"KRN",9.8,"NM",52,0)
CIAUMTL^^0^B15227067
"BLD",8482,"KRN",9.8,"NM",53,0)
CIAUOS^^0^B8244808
"BLD",8482,"KRN",9.8,"NM",54,0)
CIAUOS1^^0^B10543276
"BLD",8482,"KRN",9.8,"NM",56,0)
CIAURPC^^0^B16953602
"BLD",8482,"KRN",9.8,"NM",57,0)
CIAUTSK^^0^B1191791
"BLD",8482,"KRN",9.8,"NM",58,0)
CIAUUSR^^0^B4318479
"BLD",8482,"KRN",9.8,"NM",59,0)
CIAUUU^^0^B2196200
"BLD",8482,"KRN",9.8,"NM",60,0)
CIAUINIT^^0^B6143020
"BLD",8482,"KRN",9.8,"NM",61,0)
CIAUHFS^^0^B5207554
"BLD",8482,"KRN",9.8,"NM",62,0)
CIAUDDR^^0^B59564846
"BLD",8482,"KRN",9.8,"NM",63,0)
CIAURPRT^^0^B2992421
"BLD",8482,"KRN",9.8,"NM",64,0)
CIAUREG^^0^B855036
"BLD",8482,"KRN",9.8,"NM",65,0)
CIAUBC28^^0^B10957263
"BLD",8482,"KRN",9.8,"NM",66,0)
CIAUBC39^^0^B7863300
"BLD",8482,"KRN",9.8,"NM",67,0)
CIAUBCDA^^0^B8376055
"BLD",8482,"KRN",9.8,"NM",68,0)
CIAUIN8U^^1^
"BLD",8482,"KRN",9.8,"NM",69,0)
CIAUIN68^^0^B4634876
"BLD",8482,"KRN",9.8,"NM",70,0)
CIAUIN58^^0^B5738292
"BLD",8482,"KRN",9.8,"NM",71,0)
CIAU1^^0^B958298
"BLD",8482,"KRN",9.8,"NM",72,0)
CIAUNTEG^^0^B4422720
"BLD",8482,"KRN",9.8,"NM","B","CIAU",18)

"BLD",8482,"KRN",9.8,"NM","B","CIAU1",71)

"BLD",8482,"KRN",9.8,"NM","B","CIAUALR",33)

"BLD",8482,"KRN",9.8,"NM","B","CIAUBC28",65)

"BLD",8482,"KRN",9.8,"NM","B","CIAUBC39",66)

"BLD",8482,"KRN",9.8,"NM","B","CIAUBCDA",67)

"BLD",8482,"KRN",9.8,"NM","B","CIAUBIG",34)

"BLD",8482,"KRN",9.8,"NM","B","CIAUDAT",35)

"BLD",8482,"KRN",9.8,"NM","B","CIAUDDR",62)

"BLD",8482,"KRN",9.8,"NM","B","CIAUDIC",36)

"BLD",8482,"KRN",9.8,"NM","B","CIAUDT",37)

"BLD",8482,"KRN",9.8,"NM","B","CIAUEDT",38)

"BLD",8482,"KRN",9.8,"NM","B","CIAUHFS",61)

"BLD",8482,"KRN",9.8,"NM","B","CIAUIMP",44)

"BLD",8482,"KRN",9.8,"NM","B","CIAUIN",45)

"BLD",8482,"KRN",9.8,"NM","B","CIAUIN0",46)

"BLD",8482,"KRN",9.8,"NM","B","CIAUIN16",47)

"BLD",8482,"KRN",9.8,"NM","B","CIAUIN18",48)

"BLD",8482,"KRN",9.8,"NM","B","CIAUIN58",70)

"BLD",8482,"KRN",9.8,"NM","B","CIAUIN68",69)

"BLD",8482,"KRN",9.8,"NM","B","CIAUIN8",49)

"BLD",8482,"KRN",9.8,"NM","B","CIAUIN8U",68)

"BLD",8482,"KRN",9.8,"NM","B","CIAUINIT",60)

"BLD",8482,"KRN",9.8,"NM","B","CIAULK2",50)

"BLD",8482,"KRN",9.8,"NM","B","CIAULKP",51)

"BLD",8482,"KRN",9.8,"NM","B","CIAUMTL",52)

"BLD",8482,"KRN",9.8,"NM","B","CIAUNTEG",72)

"BLD",8482,"KRN",9.8,"NM","B","CIAUOS",53)

"BLD",8482,"KRN",9.8,"NM","B","CIAUOS1",54)

"BLD",8482,"KRN",9.8,"NM","B","CIAUREG",64)

"BLD",8482,"KRN",9.8,"NM","B","CIAURPC",56)

"BLD",8482,"KRN",9.8,"NM","B","CIAURPRT",63)

"BLD",8482,"KRN",9.8,"NM","B","CIAUSTX",27)

"BLD",8482,"KRN",9.8,"NM","B","CIAUSTX0",28)

"BLD",8482,"KRN",9.8,"NM","B","CIAUSTX1",29)

"BLD",8482,"KRN",9.8,"NM","B","CIAUTSK",57)

"BLD",8482,"KRN",9.8,"NM","B","CIAUUSR",58)

"BLD",8482,"KRN",9.8,"NM","B","CIAUUU",59)

"BLD",8482,"KRN",19,0)
19
"BLD",8482,"KRN",19,"NM",0)
^9.68A^^0
"BLD",8482,"KRN",19.1,0)
19.1
"BLD",8482,"KRN",101,0)
101
"BLD",8482,"KRN",409.61,0)
409.61
"BLD",8482,"KRN",771,0)
771
"BLD",8482,"KRN",869.2,0)
869.2
"BLD",8482,"KRN",870,0)
870
"BLD",8482,"KRN",8994,0)
8994
"BLD",8482,"KRN",8994,"NM",0)
^9.68A^11^11
"BLD",8482,"KRN",8994,"NM",1,0)
CIAURPC DIC^^0
"BLD",8482,"KRN",8994,"NM",2,0)
CIAURPC FILENT^^0
"BLD",8482,"KRN",8994,"NM",3,0)
CIAURPC FILNXT^^0
"BLD",8482,"KRN",8994,"NM",4,0)
CIAURPC MSYNTAX^^0
"BLD",8482,"KRN",8994,"NM",5,0)
CIAUDDR GETDD^^0
"BLD",8482,"KRN",8994,"NM",6,0)
CIAUDDR LOCK^^0
"BLD",8482,"KRN",8994,"NM",7,0)
CIAUDDR MOVETO^^0
"BLD",8482,"KRN",8994,"NM",8,0)
CIAURPC FILGET^^0
"BLD",8482,"KRN",8994,"NM",9,0)
CIAUDDR CVTPTR^^0
"BLD",8482,"KRN",8994,"NM",10,0)
CIAURPC STRTODAT^^0
"BLD",8482,"KRN",8994,"NM",11,0)
CIAUDDR FIND^^0
"BLD",8482,"KRN",8994,"NM","B","CIAUDDR CVTPTR",9)

"BLD",8482,"KRN",8994,"NM","B","CIAUDDR FIND",11)

"BLD",8482,"KRN",8994,"NM","B","CIAUDDR GETDD",5)

"BLD",8482,"KRN",8994,"NM","B","CIAUDDR LOCK",6)

"BLD",8482,"KRN",8994,"NM","B","CIAUDDR MOVETO",7)

"BLD",8482,"KRN",8994,"NM","B","CIAURPC DIC",1)

"BLD",8482,"KRN",8994,"NM","B","CIAURPC FILENT",2)

"BLD",8482,"KRN",8994,"NM","B","CIAURPC FILGET",8)

"BLD",8482,"KRN",8994,"NM","B","CIAURPC FILNXT",3)

"BLD",8482,"KRN",8994,"NM","B","CIAURPC MSYNTAX",4)

"BLD",8482,"KRN",8994,"NM","B","CIAURPC STRTODAT",10)

"BLD",8482,"KRN","B",.4,.4)

"BLD",8482,"KRN","B",.401,.401)

"BLD",8482,"KRN","B",.402,.402)

"BLD",8482,"KRN","B",.403,.403)

"BLD",8482,"KRN","B",.5,.5)

"BLD",8482,"KRN","B",.84,.84)

"BLD",8482,"KRN","B",3.6,3.6)

"BLD",8482,"KRN","B",3.8,3.8)

"BLD",8482,"KRN","B",9.2,9.2)

"BLD",8482,"KRN","B",9.8,9.8)

"BLD",8482,"KRN","B",19,19)

"BLD",8482,"KRN","B",19.1,19.1)

"BLD",8482,"KRN","B",101,101)

"BLD",8482,"KRN","B",409.61,409.61)

"BLD",8482,"KRN","B",771,771)

"BLD",8482,"KRN","B",869.2,869.2)

"BLD",8482,"KRN","B",870,870)

"BLD",8482,"KRN","B",8994,8994)

"BLD",8482,"QUES",0)
^9.62^^
"BLD",8482,"REQB",0)
^9.611^^
"INIT")
POST^CIAUINIT
"KRN",8994,2579,-1)
0^1
"KRN",8994,2579,0)
CIAURPC DIC^DIC^CIAURPC^2
"KRN",8994,2579,1,0)
^^1^1^3050820.204817
"KRN",8994,2579,1,1,0)
Encapsulates CIAUDIC call for broker.
"KRN",8994,2579,2,0)
^8994.02A^3^3
"KRN",8994,2579,2,1,0)
BOOKMARK^1^255^1^1
"KRN",8994,2579,2,2,0)
COMMAND^1^255^1^2
"KRN",8994,2579,2,3,0)
ARG^1^255^0^3
"KRN",8994,2579,2,"B","ARG",3)

"KRN",8994,2579,2,"B","BOOKMARK",1)

"KRN",8994,2579,2,"B","COMMAND",2)

"KRN",8994,2579,2,"PARAMSEQ",1,1)

"KRN",8994,2579,2,"PARAMSEQ",2,2)

"KRN",8994,2579,2,"PARAMSEQ",3,3)

"KRN",8994,2580,-1)
0^2
"KRN",8994,2580,0)
CIAURPC FILENT^FILENT^CIAURPC^4^^^^1
"KRN",8994,2580,1,0)
^8994.01^1^1^3000107^^^^
"KRN",8994,2580,1,1,0)
Returns list of entries in a file.
"KRN",8994,2580,2,0)
^8994.02A^1^1
"KRN",8994,2580,2,1,0)
FILE NUMBER^1^250^1^1
"KRN",8994,2580,2,"B","FILE NUMBER",1)

"KRN",8994,2580,2,"PARAMSEQ",1,1)

"KRN",8994,2581,-1)
0^4
"KRN",8994,2581,0)
CIAURPC MSYNTAX^MSYNTAX^CIAURPC^1
"KRN",8994,2581,1,0)
^8994.01^1^1^2970922.224252
"KRN",8994,2581,1,1,0)
Performs syntax check on line of M code.
"KRN",8994,2581,2,0)
^8994.02A^2^2
"KRN",8994,2581,2,1,0)
CODE^1^255^1^1
"KRN",8994,2581,2,2,0)
OPTION^1^255^0^2
"KRN",8994,2581,2,"B","CODE",1)

"KRN",8994,2581,2,"B","OPTION",2)

"KRN",8994,2581,2,"PARAMSEQ",1,1)

"KRN",8994,2581,2,"PARAMSEQ",2,2)

"KRN",8994,2582,-1)
0^3
"KRN",8994,2582,0)
CIAURPC FILNXT^FILNXT^CIAURPC^1
"KRN",8994,2582,2,0)
^8994.02A^2^2
"KRN",8994,2582,2,1,0)
FILE NUMBER^1^100^1^1
"KRN",8994,2582,2,2,0)
IEN^1^100^1^2
"KRN",8994,2582,2,"B","FILE NUMBER",1)

"KRN",8994,2582,2,"B","IEN",2)

"KRN",8994,2582,2,"PARAMSEQ",1,1)

"KRN",8994,2582,2,"PARAMSEQ",2,2)

"KRN",8994,2583,-1)
0^5
"KRN",8994,2583,0)
CIAUDDR GETDD^GETDD^CIAUDDR^4^^^^1
"KRN",8994,2584,-1)
0^6
"KRN",8994,2584,0)
CIAUDDR LOCK^LOCK^CIAUDDR^1
"KRN",8994,2585,-1)
0^7
"KRN",8994,2585,0)
CIAUDDR MOVETO^MOVETO^CIAUDDR^1
"KRN",8994,2586,-1)
0^8
"KRN",8994,2586,0)
CIAURPC FILGET^FILGET^CIAURPC^4^^^^1
"KRN",8994,2587,-1)
0^9
"KRN",8994,2587,0)
CIAUDDR CVTPTR^CVTPTR^CIAUDDR^1
"KRN",8994,2588,-1)
0^10
"KRN",8994,2588,0)
CIAURPC STRTODAT^STRTODAT^CIAURPC^1
"KRN",8994,2588,1,0)
^^1^1^3040313.081942
"KRN",8994,2588,1,1,0)
Converts a date in external format to internal FileMan date format.
"KRN",8994,2589,-1)
0^11
"KRN",8994,2589,0)
CIAUDDR FIND^FIND^CIAUDDR^4^^^^1
"MBREQ")
1
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",218,-1)
1^1
"PKG",218,0)
CIA UTILITIES^CIAU^CIA UTILITIES
"PKG",218,5)
CIA
"PKG",218,22,0)
^9.49I^1^1
"PKG",218,22,1,0)
1.2^3150226^3140319^1
"PKG",218,22,1,1,0)
^^3^3^3150226
"PKG",218,22,1,1,1,0)
This is the set of routines common to all modules occupying the CIA namespace.  
"PKG",218,22,1,1,2,0)
They perform generic functions.  
"PKG",218,22,1,1,3,0)
 
"PKG",218,"DEV")
DOUG MARTIN
"PKG",218,"VERSION")
1.2
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
38
"RTN","CIAU")
0^18^B38287230
"RTN","CIAU",1,0)
CIAU ;MSC/IND/DKM - General purpose utilities;20-Jan-2015 13:23;DKM
"RTN","CIAU",2,0)
 ;;1.2;CIA UTILITIES;**1**;Mar 20, 2007;Build 129
"RTN","CIAU",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAU",4,0)
 ;=================================================================
"RTN","CIAU",5,0)
 ; Replaces delimited arguments in string, returning result
"RTN","CIAU",6,0)
MSG(%CIATXT,%CIADLM,%CIARPL) ;EP
"RTN","CIAU",7,0)
 N %CIAZ1,%CIAZ2
"RTN","CIAU",8,0)
 I $$NEWERR^%ZTER N $ET S $ET=""
"RTN","CIAU",9,0)
 S:$G(%CIADLM)="" %CIADLM="%"
"RTN","CIAU",10,0)
 S %CIAZ2="",@$$TRAP^CIAUOS("M1^CIAU")
"RTN","CIAU",11,0)
 S:$G(%CIARPL,1) %CIATXT=$TR(%CIATXT,"~","^")
"RTN","CIAU",12,0)
 F  Q:%CIATXT=""  D
"RTN","CIAU",13,0)
 .S %CIAZ2=%CIAZ2_$P(%CIATXT,%CIADLM),%CIAZ1=$P(%CIATXT,%CIADLM,2),%CIATXT=$P(%CIATXT,%CIADLM,3,999)
"RTN","CIAU",14,0)
 .I %CIAZ1="" S:%CIATXT'="" %CIAZ2=%CIAZ2_%CIADLM
"RTN","CIAU",15,0)
 .E  X "S %CIAZ2=%CIAZ2_("_%CIAZ1_")"
"RTN","CIAU",16,0)
M1 Q %CIAZ2
"RTN","CIAU",17,0)
 ; Case-insensitive string comparison
"RTN","CIAU",18,0)
 ; Returns 0: X=Y, 1: X>Y, -1: X<Y
"RTN","CIAU",19,0)
STRICMP(X,Y) ;EP
"RTN","CIAU",20,0)
 S X=$$UP^XLFSTR(X),Y=$$UP^XLFSTR(Y)
"RTN","CIAU",21,0)
 Q $S(X=Y:0,X]]Y:1,1:-1)
"RTN","CIAU",22,0)
 ; Output an underline X bytes long
"RTN","CIAU",23,0)
UND(X) ;EP
"RTN","CIAU",24,0)
 Q $$REPEAT^XLFSTR("-",$G(X,$G(IOM,80)))
"RTN","CIAU",25,0)
 ; Truncate a string if > Y bytes long
"RTN","CIAU",26,0)
TRUNC(X,Y) ;EP
"RTN","CIAU",27,0)
 Q $S($L(X)'>Y:X,1:$E(X,1,Y-3)_"...")
"RTN","CIAU",28,0)
 ; Formatting for singular/plural
"RTN","CIAU",29,0)
SNGPLR(CIANUM,CIASNG,CIAPLR) ;EP
"RTN","CIAU",30,0)
 N CIAZ
"RTN","CIAU",31,0)
 S CIAZ=CIASNG?.E1L.E,CIAPLR=$G(CIAPLR,CIASNG_$S(CIAZ:"s",1:"S"))
"RTN","CIAU",32,0)
 Q $S('CIANUM:$S(CIAZ:"no ",1:"NO ")_CIAPLR,CIANUM=1:"1 "_CIASNG,1:CIANUM_" "_CIAPLR)
"RTN","CIAU",33,0)
 ; Convert code to external form from set of codes
"RTN","CIAU",34,0)
SET(CIACODE,CIASET) ;EP
"RTN","CIAU",35,0)
 N CIAZ,CIAZ1
"RTN","CIAU",36,0)
 F CIAZ=1:1:$L(CIASET,";") D  Q:CIAZ1'=""
"RTN","CIAU",37,0)
 .S CIAZ1=$P(CIASET,";",CIAZ),CIAZ1=$S($P(CIAZ1,":")=CIACODE:$P(CIAZ1,":",2),1:"")
"RTN","CIAU",38,0)
 Q CIAZ1
"RTN","CIAU",39,0)
 ; Replace each occurrence of CIAOLD in CIASTR with CIANEW
"RTN","CIAU",40,0)
SUBST(CIASTR,CIAOLD,CIANEW) ;EP
"RTN","CIAU",41,0)
 N CIAP,CIAL1,CIAL2
"RTN","CIAU",42,0)
 S CIANEW=$G(CIANEW),CIAP=0,CIAL1=$L(CIAOLD),CIAL2=$L(CIANEW)
"RTN","CIAU",43,0)
 F  S CIAP=$F(CIASTR,CIAOLD,CIAP) Q:'CIAP  D
"RTN","CIAU",44,0)
 .S CIASTR=$E(CIASTR,1,CIAP-CIAL1-1)_CIANEW_$E(CIASTR,CIAP,9999)
"RTN","CIAU",45,0)
 .S CIAP=CIAP-CIAL1+CIAL2
"RTN","CIAU",46,0)
 Q CIASTR
"RTN","CIAU",47,0)
 ; Trim leading (Y=-1)/trailing (Y=1)/leading & trailing (Y=0) spaces
"RTN","CIAU",48,0)
TRIM(X,Y) ;EP
"RTN","CIAU",49,0)
 N CIAZ1,CIAZ2
"RTN","CIAU",50,0)
 S Y=+$G(Y),CIAZ1=1,CIAZ2=$L(X)
"RTN","CIAU",51,0)
 I Y'>0 F CIAZ1=1:1 Q:$A(X,CIAZ1)'=32
"RTN","CIAU",52,0)
 I Y'<0 F CIAZ2=CIAZ2:-1 Q:$A(X,CIAZ2)'=32
"RTN","CIAU",53,0)
 Q $E(X,CIAZ1,CIAZ2)
"RTN","CIAU",54,0)
 ; Format a number with commas
"RTN","CIAU",55,0)
FMTNUM(CIANUM) ;EP
"RTN","CIAU",56,0)
 N CIAZ,CIAZ1,CIAZ2,CIAZ3
"RTN","CIAU",57,0)
 S:CIANUM<0 CIANUM=-CIANUM,CIAZ2="-"
"RTN","CIAU",58,0)
 S CIAZ3=CIANUM#1,CIANUM=CIANUM\1
"RTN","CIAU",59,0)
 F CIAZ=$L(CIANUM):-3:1 S CIAZ1=$E(CIANUM,CIAZ-2,CIAZ)_$S($D(CIAZ1):","_CIAZ1,1:"")
"RTN","CIAU",60,0)
 Q $G(CIAZ2)_$G(CIAZ1)_$S(CIAZ3:CIAZ3,1:"")
"RTN","CIAU",61,0)
 ; Convert X to base Y padded to length L
"RTN","CIAU",62,0)
BASE(X,Y,L) ;EP
"RTN","CIAU",63,0)
 Q:(Y<2)!(Y>62) ""
"RTN","CIAU",64,0)
 N CIAZ,CIAZ1
"RTN","CIAU",65,0)
 S CIAZ1="",X=$S(X<0:-X,1:X)
"RTN","CIAU",66,0)
 F  S CIAZ=X#Y,X=X\Y,CIAZ1=$C($S(CIAZ<10:CIAZ+48,CIAZ<36:CIAZ+55,1:CIAZ+61))_CIAZ1 Q:'X
"RTN","CIAU",67,0)
 Q $S('$G(L):CIAZ1,1:$$REPEAT^XLFSTR(0,L-$L(CIAZ1))_$E(CIAZ1,1,L))
"RTN","CIAU",68,0)
 ; Convert a string to its SOUNDEX equivalent
"RTN","CIAU",69,0)
SOUNDEX(CIAVALUE) ;EP
"RTN","CIAU",70,0)
 N CIACODE,CIASOUND,CIAPREV,CIACHAR,CIAPOS,CIATRANS
"RTN","CIAU",71,0)
 S CIACODE="01230129022455012623019202"
"RTN","CIAU",72,0)
 S CIASOUND=$C($A(CIAVALUE)-(CIAVALUE?1L.E*32))
"RTN","CIAU",73,0)
 S CIAPREV=$E(CIACODE,$A(CIAVALUE)-64)
"RTN","CIAU",74,0)
 F CIAPOS=2:1 S CIACHAR=$E(CIAVALUE,CIAPOS) Q:","[CIACHAR  D  Q:$L(CIASOUND)=4
"RTN","CIAU",75,0)
 .Q:CIACHAR'?1A
"RTN","CIAU",76,0)
 .S CIATRANS=$E(CIACODE,$A(CIACHAR)-$S(CIACHAR?1U:64,1:96))
"RTN","CIAU",77,0)
 .Q:CIATRANS=CIAPREV!(CIATRANS=9)
"RTN","CIAU",78,0)
 .S CIAPREV=CIATRANS
"RTN","CIAU",79,0)
 .S:CIATRANS'=0 CIASOUND=CIASOUND_CIATRANS
"RTN","CIAU",80,0)
 Q $E(CIASOUND_"000",1,4)
"RTN","CIAU",81,0)
 ; Display formatted title
"RTN","CIAU",82,0)
TITLE(CIATTL,CIAVER,CIAFN) ;EP
"RTN","CIAU",83,0)
 I '$D(IOM) N IOM,IOF S IOM=80,IOF="#"
"RTN","CIAU",84,0)
 S CIAVER=$G(CIAVER,"1.0")
"RTN","CIAU",85,0)
 S:CIAVER CIAVER="Version "_CIAVER
"RTN","CIAU",86,0)
 U $G(IO,$I)
"RTN","CIAU",87,0)
 W @IOF,$S(IO=IO(0):$C(27,91,55,109),1:""),*13,$$ENTRY^CIAUDT(+$H_","),?(IOM-$L(CIATTL)\2),CIATTL,?(IOM-$L(CIAVER)),CIAVER,!,$S(IO=IO(0):$C(27,91,109),1:$$UND),!
"RTN","CIAU",88,0)
 W:$D(CIAFN) ?(IOM-$L(CIAFN)\2),CIAFN,!
"RTN","CIAU",89,0)
 Q
"RTN","CIAU",90,0)
 ; Display required header for menus
"RTN","CIAU",91,0)
MNUHDR(PKG,VER) ;EP
"RTN","CIAU",92,0)
 Q:$D(ZTQUEUED)
"RTN","CIAU",93,0)
 Q:$E($G(IOST),1,2)'="C-"
"RTN","CIAU",94,0)
 N X,%ZIS,IORVON,IORVOFF,MNU
"RTN","CIAU",95,0)
 S MNU=$P($G(XQY0),U,2),MNU(0)=$P($G(XQY0),U),VER=$G(VER)
"RTN","CIAU",96,0)
 S X=$$GETPKG($S($L($G(PKG)):PKG,1:MNU(0)))
"RTN","CIAU",97,0)
 I $L(X) D
"RTN","CIAU",98,0)
 .S PKG=$P(X,U,2),X=$P(X,U,3)
"RTN","CIAU",99,0)
 .I $L(X),'$L(VER) S VER=$$VERSION^XPDUTL(X)
"RTN","CIAU",100,0)
 S:VER VER="Version "_VER
"RTN","CIAU",101,0)
 S X="IORVON;IORVOFF"
"RTN","CIAU",102,0)
 D ENDR^%ZISS
"RTN","CIAU",103,0)
 U IO
"RTN","CIAU",104,0)
 W @IOF,IORVON,$$GET1^DIQ(4,DUZ(2),.01),?(IOM-$L(PKG)\2),PKG,?(IOM-$L(VER)),VER,!,IORVOFF,!?(IOM-$L(MNU)\2),MNU,!
"RTN","CIAU",105,0)
 Q
"RTN","CIAU",106,0)
 ; Execute menu action, preserving menu headers
"RTN","CIAU",107,0)
MNUEXEC(EXEC,PAUSE) ;EP
"RTN","CIAU",108,0)
 D MNUHDR()
"RTN","CIAU",109,0)
 X EXEC
"RTN","CIAU",110,0)
 R:$G(PAUSE)&'$D(ZTQUEUED) !,"Press ENTER or RETURN to continue...",PAUSE:$G(DTIME,300),!
"RTN","CIAU",111,0)
 Q
"RTN","CIAU",112,0)
 ; Action for editing parameters from menu
"RTN","CIAU",113,0)
MNUPARAM(PARAM) ;EP
"RTN","CIAU",114,0)
 D MNUEXEC("D EDITPAR^XPAREDIT($G(PARAM,$P(XQY0,U)))")
"RTN","CIAU",115,0)
 Q
"RTN","CIAU",116,0)
 ; Action for editing parameter template from menu
"RTN","CIAU",117,0)
MNUTEMPL(TMPL) ;EP
"RTN","CIAU",118,0)
 D MNUEXEC("D TEDH^XPAREDIT($G(TMPL,$P(XQY0,U)),""BA"")")
"RTN","CIAU",119,0)
 Q
"RTN","CIAU",120,0)
 ; Return package reference from namespace
"RTN","CIAU",121,0)
 ; Returns ien^pkg name^pkg namespace
"RTN","CIAU",122,0)
GETPKG(NAME) ;EP
"RTN","CIAU",123,0)
 N PKG,IEN
"RTN","CIAU",124,0)
 S PKG=NAME
"RTN","CIAU",125,0)
 F  S PKG=$O(^DIC(9.4,"C",PKG),-1) Q:$E(NAME,1,$L(PKG))=PKG
"RTN","CIAU",126,0)
 S IEN=$S($L(PKG):+$O(^DIC(9.4,"C",PKG,0)),1:0)
"RTN","CIAU",127,0)
 Q $S(IEN:IEN_U_$P(^DIC(9.4,IEN,0),U)_U_PKG,1:"")
"RTN","CIAU",128,0)
 ; Create a unique 8.3 filename
"RTN","CIAU",129,0)
UFN(Y) ;EP
"RTN","CIAU",130,0)
 N X
"RTN","CIAU",131,0)
 S Y=$E($G(Y),1,3),X=$$BASE($R(100)_$J_$TR($H,","),36,$S($L(Y):8,1:11))_Y
"RTN","CIAU",132,0)
 Q $E(X,1,8)_"."_$E(X,9,11)
"RTN","CIAU",133,0)
 ; Return formatted SSN
"RTN","CIAU",134,0)
SSN(X) ;EP
"RTN","CIAU",135,0)
 Q $S(X="":X,1:$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,12))
"RTN","CIAU",136,0)
 ; Performs security check on patient access
"RTN","CIAU",137,0)
DGSEC(Y) ;EP
"RTN","CIAU",138,0)
 N DIC
"RTN","CIAU",139,0)
 S DIC(0)="E"
"RTN","CIAU",140,0)
 D ^DGSEC
"RTN","CIAU",141,0)
 Q $S(Y<1:0,1:Y)
"RTN","CIAU",142,0)
 ; Displays spinning icon to indicate progress
"RTN","CIAU",143,0)
WORKING(CIAST,CIAP,CIAS) ;EP
"RTN","CIAU",144,0)
 Q:'$D(IO(0))!$D(ZTQUEUED) 0
"RTN","CIAU",145,0)
 N CIAZ
"RTN","CIAU",146,0)
 S CIAZ(0)=$I,CIAS=$G(CIAS,"|/-\"),CIAST=+$G(CIAST)
"RTN","CIAU",147,0)
 S CIAST=$S(CIAST<0:0,1:CIAST#$L(CIAS)+1)
"RTN","CIAU",148,0)
 U IO(0)
"RTN","CIAU",149,0)
 W:'$G(CIAP) *8,*$S(CIAST:$A(CIAS,CIAST),1:32)
"RTN","CIAU",150,0)
 R *CIAZ:0
"RTN","CIAU",151,0)
 U CIAZ(0)
"RTN","CIAU",152,0)
 Q CIAZ=94
"RTN","CIAU",153,0)
 ; Ask for Y/N response
"RTN","CIAU",154,0)
ASK(CIAP,CIAD,CIAZ) ;EP
"RTN","CIAU",155,0)
 S CIAD=$G(CIAD,"N")
"RTN","CIAU",156,0)
 S CIAZ=$$GETCH(CIAP_"? ","YN",,,,CIAD)
"RTN","CIAU",157,0)
 S:CIAZ="" CIAZ=$E(CIAD)
"RTN","CIAU",158,0)
 W !
"RTN","CIAU",159,0)
 Q $S(CIAZ[U:"",1:CIAZ="Y")
"RTN","CIAU",160,0)
 ; Pause for user response
"RTN","CIAU",161,0)
PAUSE(CIAP,CIAX,CIAY) ;EP
"RTN","CIAU",162,0)
 Q $$GETCH($G(CIAP,"Press RETURN or ENTER to continue..."),U,.CIAX,.CIAY)
"RTN","CIAU",163,0)
 ; Single character read
"RTN","CIAU",164,0)
GETCH(CIAP,CIAV,CIAX,CIAY,CIAT,CIAD) ;EP
"RTN","CIAU",165,0)
 N CIAZ,CIAC
"RTN","CIAU",166,0)
 W:$D(CIAX)!$D(CIAY) $$XY($G(CIAX,$X),$G(CIAY,$Y))
"RTN","CIAU",167,0)
 W $G(CIAP),$E($G(CIAD)_" "),*8
"RTN","CIAU",168,0)
 S CIAT=$G(CIAT,$G(DTIME,999999)),CIAD=$G(CIAD,U),CIAC=""
"RTN","CIAU",169,0)
 S:$D(CIAV) CIAV=$$UP^XLFSTR(CIAV)_U
"RTN","CIAU",170,0)
 F  D  Q:'$L(CIAZ)
"RTN","CIAU",171,0)
 .R CIAZ#1:CIAT
"RTN","CIAU",172,0)
 .E  S CIAC=CIAD Q
"RTN","CIAU",173,0)
 .W *8
"RTN","CIAU",174,0)
 .Q:'$L(CIAZ)
"RTN","CIAU",175,0)
 .S CIAZ=$$UP^XLFSTR(CIAZ)
"RTN","CIAU",176,0)
 .I $D(CIAV) D
"RTN","CIAU",177,0)
 ..I CIAV[CIAZ S CIAC=CIAZ
"RTN","CIAU",178,0)
 ..E  W *7,*32,*8 S CIAC=""
"RTN","CIAU",179,0)
 .E  S CIAC=CIAZ
"RTN","CIAU",180,0)
 W !
"RTN","CIAU",181,0)
 Q CIAC
"RTN","CIAU",182,0)
 ; Position cursor
"RTN","CIAU",183,0)
XY(DX,DY) ;EP
"RTN","CIAU",184,0)
 D:$G(IOXY)="" HOME^%ZIS
"RTN","CIAU",185,0)
 S DX=$S(+$G(DX)>0:+DX,1:0),DY=$S(+$G(DY)>0:+DY,1:0),$X=0
"RTN","CIAU",186,0)
 X IOXY
"RTN","CIAU",187,0)
 S $X=DX,$Y=DY
"RTN","CIAU",188,0)
 Q ""
"RTN","CIAU",189,0)
 ; Parameterized calls to date routines
"RTN","CIAU",190,0)
DT(CIAD,CIAX) ;EP
"RTN","CIAU",191,0)
 N %D,%P,%C,%H,%I,%X,%Y,CIAZ
"RTN","CIAU",192,0)
 D DT^DILF($G(CIAX),CIAD,.CIAZ)
"RTN","CIAU",193,0)
 W:$D(CIAZ(0)) CIAZ(0),!
"RTN","CIAU",194,0)
 Q $G(CIAZ,-1)
"RTN","CIAU",195,0)
DTC(X1,X2) ;EP
"RTN","CIAU",196,0)
 N X3
"RTN","CIAU",197,0)
 S X2=$$DTF(X1)+X2,X1=X1\1,X3=X2\1,X2=X2-X3
"RTN","CIAU",198,0)
 S:X2<0 X3=X3-1,X2=X2+1
"RTN","CIAU",199,0)
 Q $$FMADD^XLFDT(X1,X3)+$J($$DTT(X2),0,6)
"RTN","CIAU",200,0)
DTD(X1,X2) ;EP
"RTN","CIAU",201,0)
 Q $$FMDIFF^XLFDT(X1\1,X2\1)+($$DTF(X1)-$$DTF(X2))
"RTN","CIAU",202,0)
DTF(X) S X=X#1*100
"RTN","CIAU",203,0)
 Q X\1*3600+(X*100#100\1*60)+(X*10000#100)/86400
"RTN","CIAU",204,0)
DTT(X) S X=X*86400
"RTN","CIAU",205,0)
 Q X\3600*100+(X#3600/3600*60)/10000
"RTN","CIAU1")
0^71^B958298
"RTN","CIAU1",1,0)
CIAU1 ;MSC/IND/PLS - General Purpose Utilites - Con't ;04-May-2006 08:19;DKM
"RTN","CIAU1",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAU1",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAU1",4,0)
 ;=================================================================
"RTN","CIAU1",5,0)
 ; Parameterized call to ScreenMan interface
"RTN","CIAU1",6,0)
DDS(DDSFILE,DR,DA,DDSPARM,DDSCHANG,CIAERR) ;
"RTN","CIAU1",7,0)
 S CIAERR=0
"RTN","CIAU1",8,0)
 D:'$D(IOST(0)) HOME^%ZIS
"RTN","CIAU1",9,0)
 D ENS^%ZISS
"RTN","CIAU1",10,0)
 D ^DDS
"RTN","CIAU1",11,0)
 S:$D(DTOUT) CIAERR=1
"RTN","CIAU1",12,0)
 I $D(DIMSG)!($D(DIERR)) D
"RTN","CIAU1",13,0)
 .S CIAERR=1
"RTN","CIAU1",14,0)
 .;D SHOWDLG(23)
"RTN","CIAU1",15,0)
 .W !,?5,"The Screen Manager could not edit this record."
"RTN","CIAU1",16,0)
 .H 5
"RTN","CIAU1",17,0)
 Q
"RTN","CIAU1",18,0)
 ; Prompt for single date date
"RTN","CIAU1",19,0)
 ; PMT = Prompt
"RTN","CIAU1",20,0)
 ; DFL = Default value (optional)
"RTN","CIAU1",21,0)
 ; MIN = Minimum value (optional)
"RTN","CIAU1",22,0)
 ; OPT = Additional options (optional)
"RTN","CIAU1",23,0)
ASKDATE(PMT,DFL,MIN,OPT) ;
"RTN","CIAU1",24,0)
 N %DT,Y
"RTN","CIAU1",25,0)
 S %DT="APEX"_$G(OPT)
"RTN","CIAU1",26,0)
 S %DT("A")=PMT
"RTN","CIAU1",27,0)
 S:$G(MIN) %DT(0)=MIN
"RTN","CIAU1",28,0)
 I $G(DFL) D
"RTN","CIAU1",29,0)
 .S Y=DFL
"RTN","CIAU1",30,0)
 .D DD^%DT
"RTN","CIAU1",31,0)
 .S %DT("B")=Y
"RTN","CIAU1",32,0)
 D ^%DT
"RTN","CIAU1",33,0)
 S:Y<0 POP=1
"RTN","CIAU1",34,0)
 Q Y
"RTN","CIAUALR")
0^33^B1528114
"RTN","CIAUALR",1,0)
CIAUALR ;MSC/IND/DKM - Send alert to user(s) via kernel or mail;04-May-2006 08:19;DKM
"RTN","CIAUALR",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUALR",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUALR",4,0)
 ;=================================================================
"RTN","CIAUALR",5,0)
 ; Send an alert.
"RTN","CIAUALR",6,0)
 ;   XQAMSG = Message to send
"RTN","CIAUALR",7,0)
 ;   CIAUSR  = A semicolon-delimited list of users to receive alert.
"RTN","CIAUALR",8,0)
 ;=================================================================
"RTN","CIAUALR",9,0)
ALERT(XQAMSG,CIAUSR) ;
"RTN","CIAUALR",10,0)
 N XQA,XQAOPT,XQAFLG,XQAROU,XQADATA,XQAID
"RTN","CIAUALR",11,0)
 S @$$TRAP^CIAUOS("EXIT^CIAUALR"),CIAUSR=$G(CIAUSR,"*"),XQAMSG=$TR(XQAMSG,U,"~")
"RTN","CIAUALR",12,0)
 D ENTRY^CIAUUSR(CIAUSR,.XQA),SETUP^XQALERT:$D(XQA)
"RTN","CIAUALR",13,0)
EXIT Q
"RTN","CIAUALR",14,0)
 ;=================================================================
"RTN","CIAUALR",15,0)
 ; Send a mail message
"RTN","CIAUALR",16,0)
 ;   CIAMSG  = Message to send (single node or array)
"RTN","CIAUALR",17,0)
 ;   XMY    = A semicolon-delimited list (or array) of users
"RTN","CIAUALR",18,0)
 ;   XMSUB  = Subject line (optional)
"RTN","CIAUALR",19,0)
 ;   XMDUZ  = DUZ of sender (optional)
"RTN","CIAUALR",20,0)
 ;=================================================================
"RTN","CIAUALR",21,0)
MAIL(CIAMSG,XMY,XMSUB,XMDUZ) ;
"RTN","CIAUALR",22,0)
 N XMTEXT
"RTN","CIAUALR",23,0)
 S:$D(CIAMSG)=1 CIAMSG(1)=CIAMSG
"RTN","CIAUALR",24,0)
 S XMTEXT="CIAMSG(",@$$TRAP^CIAUOS("EXIT^CIAUALR"),XMY=$G(XMY)
"RTN","CIAUALR",25,0)
 S:$G(XMSUB)="" XMSUB=CIAMSG
"RTN","CIAUALR",26,0)
 S:$G(XMDUZ)="" XMDUZ=$G(DUZ)
"RTN","CIAUALR",27,0)
 F  Q:'$L(XMY)  S X=$P(XMY,";"),XMY=$P(XMY,";",2,999) S:$L(X) XMY(X)=""
"RTN","CIAUALR",28,0)
 D ^XMD:$D(XMY)>9
"RTN","CIAUALR",29,0)
 Q
"RTN","CIAUBC28")
0^65^B10957263
"RTN","CIAUBC28",1,0)
CIAUBC28 ;MSC/IND/DKM/PLS - Convert 128 barcode to HPCL-compatible form ;04-May-2006 08:19;DKM
"RTN","CIAUBC28",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUBC28",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUBC28",4,0)
 ;=================================================================
"RTN","CIAUBC28",5,0)
 ; Inputs:
"RTN","CIAUBC28",6,0)
 ;     TX = Text to encode.
"RTN","CIAUBC28",7,0)
 ; Outputs:
"RTN","CIAUBC28",8,0)
 ;     Returns encoded text.
"RTN","CIAUBC28",9,0)
 ; Purpose:
"RTN","CIAUBC28",10,0)
 ;     Performs bar code 128 encoding on a text string.
"RTN","CIAUBC28",11,0)
 ;=================================================================
"RTN","CIAUBC28",12,0)
EN(TX) Q:TX="" ""
"RTN","CIAUBC28",13,0)
 N CD,TP,TP1,EN,Z1,Z2
"RTN","CIAUBC28",14,0)
 S TP=0,TP=$$TP(TX),CD=TP,EN=$C(TP+8)
"RTN","CIAUBC28",15,0)
 F  Q:TX=""  D
"RTN","CIAUBC28",16,0)
 .S TP1=$$TP(TX)
"RTN","CIAUBC28",17,0)
 .I TP1'=TP D CD(6-TP1) S TP=TP1
"RTN","CIAUBC28",18,0)
 .S Z1=$E(TX,1,TP=2+1),TX=$E(TX,TP=2+2,255),Z2=$A(Z1)
"RTN","CIAUBC28",19,0)
 .I TP=2 D CD($S(Z1>95:Z1-95,Z1:Z1+32,1:31))
"RTN","CIAUBC28",20,0)
 .E  D CD($S(Z2<32:Z2+96,Z2=32:31,1:Z2))
"RTN","CIAUBC28",21,0)
 S CD=CD#103,CD=$S('CD:31,CD>95:CD-95,1:CD+32)
"RTN","CIAUBC28",22,0)
 Q EN_$C(CD,11)
"RTN","CIAUBC28",23,0)
TP(X) Q $S(X?2N.E:2,$A(X)<32:0,$A(X)>95:1,TP=2:0,1:TP)
"RTN","CIAUBC28",24,0)
CD(X) S CD=$S(X=31:0,X<11:X+95,1:X-32)*$L(EN)+$G(CD),EN=EN_$C(X)
"RTN","CIAUBC28",25,0)
 Q
"RTN","CIAUBC28",26,0)
 ;=================================================================
"RTN","CIAUBC28",27,0)
 ; Inputs:
"RTN","CIAUBC28",28,0)
 ;   TXT = Data string to print in bar code
"RTN","CIAUBC28",29,0)
 ;   ORN = Orientation of bar code
"RTN","CIAUBC28",30,0)
 ;         0 = portrait (default)
"RTN","CIAUBC28",31,0)
 ;         1 = landscape
"RTN","CIAUBC28",32,0)
 ;   HGT = Height of bar code in dots (1/300 inch)
"RTN","CIAUBC28",33,0)
 ;   HOR = Horizontal position on page in dots
"RTN","CIAUBC28",34,0)
 ;   VER = Vertical position on page in dots
"RTN","CIAUBC28",35,0)
 ;   WID = Width of bar in dots (3=default)
"RTN","CIAUBC28",36,0)
 ; Purpose:
"RTN","CIAUBC28",37,0)
 ;   Accepts a barcode 128 string and writes an HPCL-compatible
"RTN","CIAUBC28",38,0)
 ;   string that will display the barcode on an HP laser printer.
"RTN","CIAUBC28",39,0)
 ;   A barcode font cartridge is not required.  The print position
"RTN","CIAUBC28",40,0)
 ;   on entry is restored on exit.
"RTN","CIAUBC28",41,0)
 ;=================================================================
"RTN","CIAUBC28",42,0)
BC(TXT,ORN,HGT,HOR,VER,WID) ;
"RTN","CIAUBC28",43,0)
 N Z,Z1,Z2,Z3,Z4,Z5,C,P,X
"RTN","CIAUBC28",44,0)
 S X=0 X ^%ZOSF("RM")
"RTN","CIAUBC28",45,0)
 S TXT=$$EN(TXT),C=$C(27)_"*c",P=$C(27)_"*p+",WID=$G(WID,3.5),HGT=$G(HGT,60),ORN=''$G(ORN)+1
"RTN","CIAUBC28",46,0)
 W $C(27),"&f0S"                                                       ;Push cursor position
"RTN","CIAUBC28",47,0)
 W:$D(HOR) $C(27)_"*p"_+HOR_"X"
"RTN","CIAUBC28",48,0)
 W:$D(VER) $C(27)_"*p"_+VER_"Y"
"RTN","CIAUBC28",49,0)
 W C_HGT_$E("BA",ORN)
"RTN","CIAUBC28",50,0)
 F Z=1:1:$L(TXT) D
"RTN","CIAUBC28",51,0)
 .S Z1=$P($T(@$A(TXT,Z)),";;",2),Z4=11,Z5=0
"RTN","CIAUBC28",52,0)
 .F Z2=1:1:$L(Z1) D
"RTN","CIAUBC28",53,0)
 ..S Z3=+$E(Z1,Z2),Z4=Z4-Z3,Z3=Z3*WID
"RTN","CIAUBC28",54,0)
 ..Q:'Z3
"RTN","CIAUBC28",55,0)
 ..I Z2#2 W C_Z3_$E("ab",ORN)_"0P" S Z5=Z3
"RTN","CIAUBC28",56,0)
 ..E  W P_(Z3+Z5)_$E("XY",ORN) S Z5=0
"RTN","CIAUBC28",57,0)
 .S Z4=Z4*WID+Z5
"RTN","CIAUBC28",58,0)
 .W:Z4>0 P_Z4_$E("XY",ORN)
"RTN","CIAUBC28",59,0)
 W $C(27),"&f1S"                                                       ;Pop cursor position
"RTN","CIAUBC28",60,0)
 Q ""
"RTN","CIAUBC28",61,0)
1 ;;11431
"RTN","CIAUBC28",62,0)
2 ;;41111
"RTN","CIAUBC28",63,0)
3 ;;41131
"RTN","CIAUBC28",64,0)
4 ;;11314
"RTN","CIAUBC28",65,0)
5 ;;11413
"RTN","CIAUBC28",66,0)
6 ;;31114
"RTN","CIAUBC28",67,0)
7 ;;41113
"RTN","CIAUBC28",68,0)
8 ;;21141
"RTN","CIAUBC28",69,0)
9 ;;21121
"RTN","CIAUBC28",70,0)
10 ;;21123
"RTN","CIAUBC28",71,0)
11 ;;2331112
"RTN","CIAUBC28",72,0)
31 ;;21222
"RTN","CIAUBC28",73,0)
33 ;;22212
"RTN","CIAUBC28",74,0)
34 ;;22222
"RTN","CIAUBC28",75,0)
35 ;;12122
"RTN","CIAUBC28",76,0)
36 ;;12132
"RTN","CIAUBC28",77,0)
37 ;;13122
"RTN","CIAUBC28",78,0)
38 ;;12221
"RTN","CIAUBC28",79,0)
39 ;;12231
"RTN","CIAUBC28",80,0)
40 ;;13221
"RTN","CIAUBC28",81,0)
41 ;;22121
"RTN","CIAUBC28",82,0)
42 ;;22131
"RTN","CIAUBC28",83,0)
43 ;;23121
"RTN","CIAUBC28",84,0)
44 ;;11223
"RTN","CIAUBC28",85,0)
45 ;;12213
"RTN","CIAUBC28",86,0)
46 ;;12223
"RTN","CIAUBC28",87,0)
47 ;;11322
"RTN","CIAUBC28",88,0)
48 ;;12312
"RTN","CIAUBC28",89,0)
49 ;;12322
"RTN","CIAUBC28",90,0)
50 ;;22321
"RTN","CIAUBC28",91,0)
51 ;;22113
"RTN","CIAUBC28",92,0)
52 ;;22123
"RTN","CIAUBC28",93,0)
53 ;;21321
"RTN","CIAUBC28",94,0)
54 ;;22311
"RTN","CIAUBC28",95,0)
55 ;;31213
"RTN","CIAUBC28",96,0)
56 ;;31122
"RTN","CIAUBC28",97,0)
57 ;;32112
"RTN","CIAUBC28",98,0)
58 ;;32122
"RTN","CIAUBC28",99,0)
59 ;;31221
"RTN","CIAUBC28",100,0)
60 ;;32211
"RTN","CIAUBC28",101,0)
61 ;;32221
"RTN","CIAUBC28",102,0)
62 ;;21212
"RTN","CIAUBC28",103,0)
63 ;;21232
"RTN","CIAUBC28",104,0)
64 ;;23212
"RTN","CIAUBC28",105,0)
65 ;;11132
"RTN","CIAUBC28",106,0)
66 ;;13112
"RTN","CIAUBC28",107,0)
67 ;;13132
"RTN","CIAUBC28",108,0)
68 ;;11231
"RTN","CIAUBC28",109,0)
69 ;;13211
"RTN","CIAUBC28",110,0)
70 ;;13231
"RTN","CIAUBC28",111,0)
71 ;;21131
"RTN","CIAUBC28",112,0)
72 ;;23111
"RTN","CIAUBC28",113,0)
73 ;;23131
"RTN","CIAUBC28",114,0)
74 ;;11213
"RTN","CIAUBC28",115,0)
75 ;;11233
"RTN","CIAUBC28",116,0)
76 ;;13213
"RTN","CIAUBC28",117,0)
77 ;;11312
"RTN","CIAUBC28",118,0)
78 ;;11332
"RTN","CIAUBC28",119,0)
79 ;;13312
"RTN","CIAUBC28",120,0)
80 ;;31312
"RTN","CIAUBC28",121,0)
81 ;;21133
"RTN","CIAUBC28",122,0)
82 ;;23113
"RTN","CIAUBC28",123,0)
83 ;;21311
"RTN","CIAUBC28",124,0)
84 ;;21331
"RTN","CIAUBC28",125,0)
85 ;;21313
"RTN","CIAUBC28",126,0)
86 ;;31112
"RTN","CIAUBC28",127,0)
87 ;;31132
"RTN","CIAUBC28",128,0)
88 ;;33112
"RTN","CIAUBC28",129,0)
89 ;;31211
"RTN","CIAUBC28",130,0)
90 ;;31231
"RTN","CIAUBC28",131,0)
91 ;;33211
"RTN","CIAUBC28",132,0)
92 ;;31411
"RTN","CIAUBC28",133,0)
93 ;;22141
"RTN","CIAUBC28",134,0)
94 ;;43111
"RTN","CIAUBC28",135,0)
95 ;;11122
"RTN","CIAUBC28",136,0)
96 ;;11142
"RTN","CIAUBC28",137,0)
97 ;;12112
"RTN","CIAUBC28",138,0)
98 ;;12142
"RTN","CIAUBC28",139,0)
99 ;;14112
"RTN","CIAUBC28",140,0)
100 ;;14122
"RTN","CIAUBC28",141,0)
101 ;;11221
"RTN","CIAUBC28",142,0)
102 ;;11241
"RTN","CIAUBC28",143,0)
103 ;;12211
"RTN","CIAUBC28",144,0)
104 ;;12241
"RTN","CIAUBC28",145,0)
105 ;;14211
"RTN","CIAUBC28",146,0)
106 ;;14221
"RTN","CIAUBC28",147,0)
107 ;;24121
"RTN","CIAUBC28",148,0)
108 ;;22111
"RTN","CIAUBC28",149,0)
109 ;;41311
"RTN","CIAUBC28",150,0)
110 ;;24111
"RTN","CIAUBC28",151,0)
111 ;;13411
"RTN","CIAUBC28",152,0)
112 ;;11124
"RTN","CIAUBC28",153,0)
113 ;;12114
"RTN","CIAUBC28",154,0)
114 ;;12124
"RTN","CIAUBC28",155,0)
115 ;;11421
"RTN","CIAUBC28",156,0)
116 ;;12411
"RTN","CIAUBC28",157,0)
117 ;;12421
"RTN","CIAUBC28",158,0)
118 ;;41121
"RTN","CIAUBC28",159,0)
119 ;;42111
"RTN","CIAUBC28",160,0)
120 ;;42121
"RTN","CIAUBC28",161,0)
121 ;;21214
"RTN","CIAUBC28",162,0)
122 ;;21412
"RTN","CIAUBC28",163,0)
123 ;;41212
"RTN","CIAUBC28",164,0)
124 ;;11114
"RTN","CIAUBC28",165,0)
125 ;;11134
"RTN","CIAUBC28",166,0)
126 ;;13114
"RTN","CIAUBC28",167,0)
127 ;;11411
"RTN","CIAUBC39")
0^66^B7863300
"RTN","CIAUBC39",1,0)
CIAUBC39 ;MSC/IND/PLS - Converts barcode 39 to HPCL-compatible format ;04-May-2006 08:19;DKM
"RTN","CIAUBC39",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUBC39",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUBC39",4,0)
 ;=================================================================
"RTN","CIAUBC39",5,0)
 ; Inputs:
"RTN","CIAUBC39",6,0)
 ;   TXT = Data string to print in bar code
"RTN","CIAUBC39",7,0)
 ;   ORN = Orientation of bar code/Check Digit
"RTN","CIAUBC39",8,0)
 ;         0 = portrait/no check digit(default)
"RTN","CIAUBC39",9,0)
 ;         1 = landscape/no check digit
"RTN","CIAUBC39",10,0)
 ;         2 = portrait/check digit
"RTN","CIAUBC39",11,0)
 ;         3 = landscape/check digit
"RTN","CIAUBC39",12,0)
 ;   HGT = Height of bar code in dots (1/300 inch)
"RTN","CIAUBC39",13,0)
 ;   HOR = Horizontal position on page in dots
"RTN","CIAUBC39",14,0)
 ;   VER = Vertical position on page in dots
"RTN","CIAUBC39",15,0)
 ;   WID = Width of bar in dots (3=default)
"RTN","CIAUBC39",16,0)
 ; Purpose:
"RTN","CIAUBC39",17,0)
 ;   Accepts a barcode 39 string and writes an HPCL-compatible
"RTN","CIAUBC39",18,0)
 ;   string that will display the barcode on an HP laser printer.
"RTN","CIAUBC39",19,0)
 ;   A barcode font cartridge is not required.  The print position
"RTN","CIAUBC39",20,0)
 ;   on entry is restored upon exit.
"RTN","CIAUBC39",21,0)
 ;=================================================================
"RTN","CIAUBC39",22,0)
BC(TXT,ORN,HGT,HOR,VER,WID) ;
"RTN","CIAUBC39",23,0)
 N DD,CHK,CH,ZDD,C,P,Z1,Z2,Z3,Z4,Z5,X
"RTN","CIAUBC39",24,0)
 S X=0 X ^%ZOSF("RM")
"RTN","CIAUBC39",25,0)
 S CHK=$S($G(ORN)>1:1,1:0),ORN=$S($G(ORN)#2:1,1:0)
"RTN","CIAUBC39",26,0)
 S TXT=$TR(TXT,"*",""),CH="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+Z"
"RTN","CIAUBC39",27,0)
 S DD="" F ZDD=1:1:$L(TXT) S DD=DD_$S(CH[$E(TXT,ZDD):$E(TXT,ZDD),1:"") ;STRIP UNPRINTABLE CHARACTERS
"RTN","CIAUBC39",28,0)
 S TXT=DD I +$G(CHK) S TXT=$$CHK(TXT)                             ;ADD CHECKSUM CHARACTER
"RTN","CIAUBC39",29,0)
 S TXT="*"_TXT_"*"                                                     ;ADD START AND STOP CODES
"RTN","CIAUBC39",30,0)
 S C=$C(27)_"*c",P=$C(27)_"*p+",WID=$G(WID,3),HGT=$G(HGT,60),ORN=''$G(ORN)+1
"RTN","CIAUBC39",31,0)
 W $C(27),"&f0S"                                                       ;Push cursor position
"RTN","CIAUBC39",32,0)
 W:$D(HOR) $C(27)_"*p"_+HOR_"X"
"RTN","CIAUBC39",33,0)
 W:$D(VER) $C(27)_"*p"_+VER_"Y"
"RTN","CIAUBC39",34,0)
 W C_HGT_$E("BA",ORN)
"RTN","CIAUBC39",35,0)
 F Z=1:1:$L(TXT) D
"RTN","CIAUBC39",36,0)
 .S Z1=$S($E(TXT,Z)="*":$P($T(99),";",4),1:$P($T(@($F(CH,$E(TXT,Z))-2)),";",4)),Z4=15,Z5=0
"RTN","CIAUBC39",37,0)
 .F Z2=1:1:$L(Z1) D
"RTN","CIAUBC39",38,0)
 ..S Z3=+$E(Z1,Z2),Z4=Z4-Z3,Z3=Z3*WID
"RTN","CIAUBC39",39,0)
 ..Q:'Z3
"RTN","CIAUBC39",40,0)
 ..I Z2#2 W C_Z3_$E("ab",ORN)_"0P" S Z5=Z3
"RTN","CIAUBC39",41,0)
 ..E  W P_(Z3+Z5)_$E("XY",ORN) S Z5=0
"RTN","CIAUBC39",42,0)
 .S Z4=Z4*WID+Z5
"RTN","CIAUBC39",43,0)
 .W P_(Z5+WID)_$E("XY",ORN)
"RTN","CIAUBC39",44,0)
 W $C(27),"&f1S"                                                       ;Pop cursor position
"RTN","CIAUBC39",45,0)
 Q ""
"RTN","CIAUBC39",46,0)
CHK(X) ;CALCULATE CHECK DIGIT AND RETURN STRING TO PRINT
"RTN","CIAUBC39",47,0)
 Q:X="" ""
"RTN","CIAUBC39",48,0)
 N CHK,Y
"RTN","CIAUBC39",49,0)
 S CHK=0,Y=X
"RTN","CIAUBC39",50,0)
 F  Q:X=""  S CHK=$F(CH,$E(X))-2+CHK,X=$E(X,2,255)
"RTN","CIAUBC39",51,0)
 S CHK=$E(CH,CHK#43+1)
"RTN","CIAUBC39",52,0)
 Q Y_CHK
"RTN","CIAUBC39",53,0)
0 ;;0;111331311
"RTN","CIAUBC39",54,0)
1 ;;1;311311113
"RTN","CIAUBC39",55,0)
2 ;;2;113311113
"RTN","CIAUBC39",56,0)
3 ;;3;313311111
"RTN","CIAUBC39",57,0)
4 ;;4;111331113
"RTN","CIAUBC39",58,0)
5 ;;5;311331111
"RTN","CIAUBC39",59,0)
6 ;;6;113331111
"RTN","CIAUBC39",60,0)
7 ;;7;111311313
"RTN","CIAUBC39",61,0)
8 ;;8;311311311
"RTN","CIAUBC39",62,0)
9 ;;9;113311311
"RTN","CIAUBC39",63,0)
10 ;;A;311113113
"RTN","CIAUBC39",64,0)
11 ;;B;113113113
"RTN","CIAUBC39",65,0)
12 ;;C;313113111
"RTN","CIAUBC39",66,0)
13 ;;D;111133113
"RTN","CIAUBC39",67,0)
14 ;;E;311133111
"RTN","CIAUBC39",68,0)
15 ;;F;113133111
"RTN","CIAUBC39",69,0)
16 ;;G;111113313
"RTN","CIAUBC39",70,0)
17 ;;H;311113311
"RTN","CIAUBC39",71,0)
18 ;;I;113113311
"RTN","CIAUBC39",72,0)
19 ;;J;111133311
"RTN","CIAUBC39",73,0)
20 ;;K;311111133
"RTN","CIAUBC39",74,0)
21 ;;L;113111133
"RTN","CIAUBC39",75,0)
22 ;;M;313111131
"RTN","CIAUBC39",76,0)
23 ;;N;111131133
"RTN","CIAUBC39",77,0)
24 ;;O;311131131
"RTN","CIAUBC39",78,0)
25 ;;P;113131131
"RTN","CIAUBC39",79,0)
26 ;;Q;111111333
"RTN","CIAUBC39",80,0)
27 ;;R;311111331
"RTN","CIAUBC39",81,0)
28 ;;S;113111331
"RTN","CIAUBC39",82,0)
29 ;;T;111131331
"RTN","CIAUBC39",83,0)
30 ;;U;331111113
"RTN","CIAUBC39",84,0)
31 ;;V;133111113
"RTN","CIAUBC39",85,0)
32 ;;W;333111111
"RTN","CIAUBC39",86,0)
33 ;;X;131131113
"RTN","CIAUBC39",87,0)
34 ;;Y;331131111
"RTN","CIAUBC39",88,0)
35 ;;Z;133131111
"RTN","CIAUBC39",89,0)
36 ;;-;131111313
"RTN","CIAUBC39",90,0)
37 ;;.;331111311
"RTN","CIAUBC39",91,0)
38 ;; ;133111311
"RTN","CIAUBC39",92,0)
39 ;;$;131313111
"RTN","CIAUBC39",93,0)
40 ;;/;131311131
"RTN","CIAUBC39",94,0)
41 ;;+;131113131
"RTN","CIAUBC39",95,0)
42 ;;%;111313131
"RTN","CIAUBC39",96,0)
99 ;;*;131131311
"RTN","CIAUBCDA")
0^67^B8376055
"RTN","CIAUBCDA",1,0)
CIAUBCDA ;MSC/IND/PLS - Converts barcode CODABAR to HPCL-compatible format ;04-May-2006 08:19;DKM
"RTN","CIAUBCDA",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUBCDA",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUBCDA",4,0)
 ;=================================================================
"RTN","CIAUBCDA",5,0)
 ; Inputs:
"RTN","CIAUBCDA",6,0)
 ;   TXT = Data string to print in bar code
"RTN","CIAUBCDA",7,0)
 ;   ORN = Orientation of bar code/Check digit
"RTN","CIAUBCDA",8,0)
 ;         0 = portrait/no check digit(default)
"RTN","CIAUBCDA",9,0)
 ;         1 = landscape/no check digit
"RTN","CIAUBCDA",10,0)
 ;         2 = portrait/check digit
"RTN","CIAUBCDA",11,0)
 ;         3 = landscape/check digit
"RTN","CIAUBCDA",12,0)
 ;   HGT = Height of bar code in dots (1/300 inch)
"RTN","CIAUBCDA",13,0)
 ;   HOR = Horizontal position on page in dots
"RTN","CIAUBCDA",14,0)
 ;   VER = Vertical position on page in dots
"RTN","CIAUBCDA",15,0)
 ;   WID = Width of bar in dots (3=default)
"RTN","CIAUBCDA",16,0)
 ;   SSC = Start/Stop characters (a/a = default)
"RTN","CIAUBCDA",17,0)
 ; Purpose:
"RTN","CIAUBCDA",18,0)
 ;   Accepts a barcode CODABAR string and writes an HPCL-compatible
"RTN","CIAUBCDA",19,0)
 ;   string that will display the barcode on an HP laser printer.
"RTN","CIAUBCDA",20,0)
 ;   A barcode font cartridge is not required.  The print position
"RTN","CIAUBCDA",21,0)
 ;   on entry is restored upon exit.
"RTN","CIAUBCDA",22,0)
 ;=================================================================
"RTN","CIAUBCDA",23,0)
BC(TXT,ORN,HGT,HOR,VER,WID,SSC) ;
"RTN","CIAUBCDA",24,0)
 N DD,CHK,CH,ZDD,C,P,Z,Z1,Z2,Z3,Z4,Z5,X
"RTN","CIAUBCDA",25,0)
 S X=0 X ^%ZOSF("RM")
"RTN","CIAUBCDA",26,0)
 S CHK=$S($G(ORN)>1:1,1:0),ORN=$S($G(ORN)#2:1,1:0)
"RTN","CIAUBCDA",27,0)
 S CH="0123456789-$:/.+"
"RTN","CIAUBCDA",28,0)
 S DD="" F ZDD=1:1:$L(TXT) S DD=DD_$S(CH[$E(TXT,ZDD):$E(TXT,ZDD),1:"") ;STRIP UNPRINTABLE CHARACTERS
"RTN","CIAUBCDA",29,0)
 S TXT=DD,TXT="a"_TXT_"a"                                            ;ADD START AND STOP CODES
"RTN","CIAUBCDA",30,0)
 I +$G(CHK) S TXT=$$CHK(TXT)
"RTN","CIAUBCDA",31,0)
 S C=$C(27)_"*c",P=$C(27)_"*p+",WID=$G(WID,3),HGT=$G(HGT,60),ORN=''$G(ORN)+1
"RTN","CIAUBCDA",32,0)
 W $C(27),"&f0S"                                                       ;Push cursor position
"RTN","CIAUBCDA",33,0)
 W:$D(HOR) $C(27)_"*p"_+HOR_"X"
"RTN","CIAUBCDA",34,0)
 W:$D(VER) $C(27)_"*p"_+VER_"Y"
"RTN","CIAUBCDA",35,0)
 W C_HGT_$E("BA",ORN)
"RTN","CIAUBCDA",36,0)
 F Z=1:1:$L(TXT) D
"RTN","CIAUBCDA",37,0)
 .S Z1=$S("AaTt"[$E(TXT,Z):$P($T(16),";",4),"BbNn"[$E(TXT,Z):$P($T(17),";",4),"Cc*"[$E(TXT,Z):$P($T(18),";",4),"DdEe"[$E(TXT,Z):$P($T(19),";",4),1:$P($T(@($F(CH,$E(TXT,Z))-2)),";",4)),Z4=13,Z5=0
"RTN","CIAUBCDA",38,0)
 .F Z2=1:1:$L(Z1) D
"RTN","CIAUBCDA",39,0)
 ..S Z3=+$E(Z1,Z2),Z4=Z4-Z3,Z3=Z3*WID
"RTN","CIAUBCDA",40,0)
 ..Q:'Z3
"RTN","CIAUBCDA",41,0)
 ..I Z2#2 W C_Z3_$E("ab",ORN)_"0P" S Z5=Z3
"RTN","CIAUBCDA",42,0)
 ..E  W P_(Z3+Z5)_$E("XY",ORN) S Z5=0
"RTN","CIAUBCDA",43,0)
 .S Z4=Z4*WID+Z5
"RTN","CIAUBCDA",44,0)
 .W P_(Z5+WID)_$E("XY",ORN)
"RTN","CIAUBCDA",45,0)
 W $C(27),"&f1S"                                                       ;Pop cursor position
"RTN","CIAUBCDA",46,0)
 Q ""
"RTN","CIAUBCDA",47,0)
CHK(X) ;CALCULATE CHECK DIGIT AND RETURN STRING TO PRINT
"RTN","CIAUBCDA",48,0)
 Q:X="" ""
"RTN","CIAUBCDA",49,0)
 N Z1,Y,CHK,XX
"RTN","CIAUBCDA",50,0)
 S CHK=0,Y=X
"RTN","CIAUBCDA",51,0)
 S XX=$E(X,1)_$E(X,$L(X))                                             ;STRIP OFF S/S CODES AND CALCULATE CHECKSUM
"RTN","CIAUBCDA",52,0)
 F Z1=1:1:$L(XX) S CHK=CHK+$S("AaTt"[$E(XX,Z1):16,"BbNn"[$E(XX,Z1):17,"Cc*"[$E(XX,Z1):18,"DdEe"[$E(XX,Z1):19,1:0)
"RTN","CIAUBCDA",53,0)
 ;ADD TO CHECKSUM THE VALUES OF THE DATA
"RTN","CIAUBCDA",54,0)
 S X=$E(X,2,$L(X)-1) F  Q:X=""  S CHK=$F(CH,$E(X))-2+CHK,X=$E(X,2,255)
"RTN","CIAUBCDA",55,0)
 S CHK=$E(CH,$S('CHK#16:1,1:16-CHK#16+1))
"RTN","CIAUBCDA",56,0)
 Q $E(Y,1,$L(Y)-1)_CHK_$E(Y,$L(Y))
"RTN","CIAUBCDA",57,0)
0 ;;0;1111133
"RTN","CIAUBCDA",58,0)
1 ;;1;1111331
"RTN","CIAUBCDA",59,0)
2 ;;2;1113113
"RTN","CIAUBCDA",60,0)
3 ;;3;3311111
"RTN","CIAUBCDA",61,0)
4 ;;4;1131131
"RTN","CIAUBCDA",62,0)
5 ;;5;3111131
"RTN","CIAUBCDA",63,0)
6 ;;6;1311113
"RTN","CIAUBCDA",64,0)
7 ;;7;1311311
"RTN","CIAUBCDA",65,0)
8 ;;8;1331111
"RTN","CIAUBCDA",66,0)
9 ;;9;3113111
"RTN","CIAUBCDA",67,0)
10 ;;-;1113311
"RTN","CIAUBCDA",68,0)
11 ;;$;1133111
"RTN","CIAUBCDA",69,0)
12 ;;:;3111313
"RTN","CIAUBCDA",70,0)
13 ;;/;3131113
"RTN","CIAUBCDA",71,0)
14 ;;.;3131311
"RTN","CIAUBCDA",72,0)
15 ;;+;1131313
"RTN","CIAUBCDA",73,0)
16 ;;AaTt;1133131
"RTN","CIAUBCDA",74,0)
17 ;;BbNn;1313113
"RTN","CIAUBCDA",75,0)
18 ;;Cc*;1113133
"RTN","CIAUBCDA",76,0)
19 ;;DdEe;1113331
"RTN","CIAUBIG")
0^34^B15073939
"RTN","CIAUBIG",1,0)
CIAUBIG ;MSC/IND/PLS - Print a banner in large letters;04-May-2006 08:19;DKM
"RTN","CIAUBIG",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUBIG",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUBIG",4,0)
 ;=================================================================
"RTN","CIAUBIG",5,0)
 ; Prints CIABIG to the current output device in large letters.
"RTN","CIAUBIG",6,0)
 ; Inputs:
"RTN","CIAUBIG",7,0)
 ;   CIABIG = Big letter string
"RTN","CIAUBIG",8,0)
 ;   CIARPT = # times to repeat (default=2)
"RTN","CIAUBIG",9,0)
 ;   CIATXT = Full text string (optional)
"RTN","CIAUBIG",10,0)
 ;=================================================================
"RTN","CIAUBIG",11,0)
ENTRY(CIABIG,CIARPT,CIATXT) ;
"RTN","CIAUBIG",12,0)
 N CIALT,CIAFS,CIAZ,CIAZ1,CIALEN,CIAPF,CIALN
"RTN","CIAUBIG",13,0)
 S CIAFS="ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789,-/.!#'$()*+?\=^&%"
"RTN","CIAUBIG",14,0)
 S:$D(CIATXT) CIATXT=$$REPEAT^XLFSTR("*"_CIATXT,$G(IOM,80)\($L(CIATXT)+1))
"RTN","CIAUBIG",15,0)
 S CIALEN=$L(CIABIG),CIARPT=$G(CIARPT,2)
"RTN","CIAUBIG",16,0)
 W !
"RTN","CIAUBIG",17,0)
 F CIALT=1:1:CIARPT D
"RTN","CIAUBIG",18,0)
 .W !
"RTN","CIAUBIG",19,0)
 .F CIAZ=1:8:65 D
"RTN","CIAUBIG",20,0)
 ..W !
"RTN","CIAUBIG",21,0)
 ..F CIAZ1=1:1:CIALEN D
"RTN","CIAUBIG",22,0)
 ...S CIALN=$F(CIAFS,$E(CIABIG,CIAZ1))-1
"RTN","CIAUBIG",23,0)
 ...S CIAPF=$P($T(TBL+CIALN),";;",2,99)
"RTN","CIAUBIG",24,0)
 ...W $E(CIAPF,CIAZ,CIAZ+7)
"RTN","CIAUBIG",25,0)
 ...W:CIAZ1<CIALEN ?(CIAZ1*12)
"RTN","CIAUBIG",26,0)
 .W !!,$G(CIATXT)
"RTN","CIAUBIG",27,0)
 Q
"RTN","CIAUBIG",28,0)
TBL ;; Table of character "raster images"
"RTN","CIAUBIG",29,0)
 ;; AAAAAA AA    AAAA    AAAAAAAAAAAAAAAAAAAA    AAAA    AAAA    AA
"RTN","CIAUBIG",30,0)
 ;;BBBBBBB BB    BBBB    BBBBBBBBB BBBBBBB BB    BBBB    BBBBBBBBB
"RTN","CIAUBIG",31,0)
 ;;CCCCCCCCCC      CC      CC      CC      CC      CC      CCCCCCCC
"RTN","CIAUBIG",32,0)
 ;;DDDDDD  DD   DD DD    DDDD    DDDD    DDDD    DDDD   DD DDDDDD
"RTN","CIAUBIG",33,0)
 ;;EEEEEEEEEE      EE      EEEEEE  EEEEEE  EE      EE      EEEEEEEE
"RTN","CIAUBIG",34,0)
 ;;FFFFFFFFFF      FF      FFFFFF  FFFFFF  FF      FF      FF
"RTN","CIAUBIG",35,0)
 ;;GGGGGGGGGG      GG      GG  GGGGGG  GGGGGG    GGGG    GGGGGGGGGG
"RTN","CIAUBIG",36,0)
 ;;HH    HHHH    HHHH     HHHHHHHHHHHHHHHHHHH    HHHH    HHHH    HH
"RTN","CIAUBIG",37,0)
 ;;IIIIIIII   II      II      II      II      II      II   IIIIIIII
"RTN","CIAUBIG",38,0)
 ;;JJJJJJJJ    JJ      JJ      JJ      JJ      JJ  JJ  JJ  JJJJJJ
"RTN","CIAUBIG",39,0)
 ;;KK    KKKK   KK KK  KK  KKKK    KKKK    KK  KK  KK   KK KK    KK
"RTN","CIAUBIG",40,0)
 ;;LL      LL      LL      LL      LL      LL      LL      LLLLLLLL
"RTN","CIAUBIG",41,0)
 ;;MM    MMMMM  MMMM MMMM MMM MM MMMM    MMMM    MMMM    MMMM    MM
"RTN","CIAUBIG",42,0)
 ;;N     NNNN    NNNNN   NNNN N  NNNN  N NNNN   NNNNN    NNNN     N
"RTN","CIAUBIG",43,0)
 ;; OOOOOO OO    OOOO    OOOO    OOOO    OOOO    OOOO    OO OOOOOO
"RTN","CIAUBIG",44,0)
 ;;PPPPPPP PP    PPPP    PPPPPPPPP PP      PP      PP      PP
"RTN","CIAUBIG",45,0)
 ;; QQQQQQ QQ    QQQQ    QQQQ    QQQQ  Q QQQQ   Q Q QQQQQQ        Q
"RTN","CIAUBIG",46,0)
 ;;RRRRRRR RR    RRRR    RRRRRRRRR RR RR   RR  RR  RR   RR RR    RR
"RTN","CIAUBIG",47,0)
 ;;SSSSSSSSSS      SS      SSSSSSSSSSSSSSSS      SS      SSSSSSSSSS
"RTN","CIAUBIG",48,0)
 ;;TTTTTTTT   TT      TT      TT      TT      TT      TT      TT
"RTN","CIAUBIG",49,0)
 ;;UU    UUUU    UUUU    UUUU    UUUU    UUUU    UUUUUUUUUU UUUUUU
"RTN","CIAUBIG",50,0)
 ;;VV    VVVV    VVVV    VVVV    VV VV  VV  VV  VV   VVVV     VV
"RTN","CIAUBIG",51,0)
 ;;WW    WWWW    WWWW    WWWW    WWWW    WWWW WW WWWWW  WWWWW    WW
"RTN","CIAUBIG",52,0)
 ;;XX    XXXX    XX XX  XX   XXXX     XX     XXXX   XX  XX XX    XX
"RTN","CIAUBIG",53,0)
 ;;YY    YY YY  YY   Y  Y     YY      YY      YY      YY      YY
"RTN","CIAUBIG",54,0)
 ;;ZZZZZZZZZZZZZZZZ     ZZ     ZZ    ZZ      ZZ    ZZZZZZZZZZZZZZZZ
"RTN","CIAUBIG",55,0)
 ;;
"RTN","CIAUBIG",56,0)
 ;;  0000 0 00  00 00   00000  0 0000 0  00000   00 00  00 0 0000
"RTN","CIAUBIG",57,0)
 ;;   11     111    1111      11      11      11      11   1111111
"RTN","CIAUBIG",58,0)
 ;;  2222   22  22 22    22      22    22    22     22     2222222
"RTN","CIAUBIG",59,0)
 ;;3333333      33     33   33333       33       33     33 33333
"RTN","CIAUBIG",60,0)
 ;;      44     444   44 44 44   44 4444444      44      44      44
"RTN","CIAUBIG",61,0)
 ;;5555555555      55      5555555       55      55     55 555555
"RTN","CIAUBIG",62,0)
 ;;   666   66  66 66      66      66 6666 666   66 66   66  6666
"RTN","CIAUBIG",63,0)
 ;;77777777      77     77    77      77     77     77      77
"RTN","CIAUBIG",64,0)
 ;;  8888   88  88 88  88   8888   88  88  88    88 88  88   8888
"RTN","CIAUBIG",65,0)
 ;;  99999 99    9999    99 9999999      99      99     99   9999
"RTN","CIAUBIG",66,0)
 ;;                                         ''        '      '
"RTN","CIAUBIG",67,0)
 ;;                        ----------------
"RTN","CIAUBIG",68,0)
 ;;              //     //     //    //      //      //
"RTN","CIAUBIG",69,0)
 ;;                                         ....    ....    ....
"RTN","CIAUBIG",70,0)
 ;;    !!     !!      !!      !!     !!               ....    ....
"RTN","CIAUBIG",71,0)
 ;;  #  #  ########  #  #  ########  #  #
"RTN","CIAUBIG",72,0)
 ;;
"RTN","CIAUBIG",73,0)
 ;;   $$   $$$$$$$$$$ $$   $$$$$$$$   $$ $$$$$$$$$$   $$
"RTN","CIAUBIG",74,0)
 ;;   ((     ((     ((     ((      ((       ((       ((
"RTN","CIAUBIG",75,0)
 ;;   ))      ))        ))       ))      ))     ))     ))    ))
"RTN","CIAUBIG",76,0)
 ;;*  **  * * ** *   ****  ********  ****   * ** * *  **  *
"RTN","CIAUBIG",77,0)
 ;;           ++      ++   ++++++++++++++++   ++      ++
"RTN","CIAUBIG",78,0)
 ;;  ???   ??   ??      ??     ??     ??      ??     ....    ....
"RTN","CIAUBIG",79,0)
 ;;         \\       \\       \\       \\       \\       \\
"RTN","CIAUBIG",80,0)
 ;;        ================       =================
"RTN","CIAUBIG",81,0)
 ;;    ^      ^^^    ^^ ^^  ^^   ^^
"RTN","CIAUBIG",82,0)
 ;; &&&    &   &   &   &    &&&  &  &&& && &   &&  &   &&   &&&   &
"RTN","CIAUBIG",83,0)
 ;;  %    % % %  %   %  %      %      %      %  %   %  % % %     %
"RTN","CIAUDAT")
0^35^B13729833
"RTN","CIAUDAT",1,0)
CIAUDAT ;MSC/IND/DKM - Date range input;20-Jan-2015 13:23;DKM
"RTN","CIAUDAT",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUDAT",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUDAT",4,0)
 ;=================================================================
"RTN","CIAUDAT",5,0)
 ; Prompt for date range (normal format)
"RTN","CIAUDAT",6,0)
NORMAL D D1("P1"),D2("P2"):CIADAT1
"RTN","CIAUDAT",7,0)
 Q
"RTN","CIAUDAT",8,0)
 ; Prompt for date range (inverse format)
"RTN","CIAUDAT",9,0)
INVRSE D D1("PI1"),D2("PI2"):CIADAT1
"RTN","CIAUDAT",10,0)
 Q
"RTN","CIAUDAT",11,0)
 ; Prompt for starting date
"RTN","CIAUDAT",12,0)
D1(CIAOPT) ;
"RTN","CIAUDAT",13,0)
 S CIADAT1=$$ENTRY("Start date: ",.CIAOPT,"",0,$Y)
"RTN","CIAUDAT",14,0)
 Q
"RTN","CIAUDAT",15,0)
 ; Prompt for ending date
"RTN","CIAUDAT",16,0)
D2(CIAOPT) ;
"RTN","CIAUDAT",17,0)
 S CIADAT2=$$ENTRY("End date  : ",.CIAOPT,"",0,$Y+1)
"RTN","CIAUDAT",18,0)
 Q
"RTN","CIAUDAT",19,0)
 ; Prompt for a date
"RTN","CIAUDAT",20,0)
ENTRY(%CIAP,%CIAOPT,%CIADAT,%CIAX,%CIAY,%CIATRP,%CIAHLP) ;
"RTN","CIAUDAT",21,0)
 N %CIAD,%CIAI,%CIADT,%CIAZ,%CIADISV
"RTN","CIAUDAT",22,0)
 S %CIAX=$G(%CIAX,$X),%CIAY=$G(%CIAY,$Y),DUZ=+$G(DUZ),DTIME=$G(DTIME,999999),%CIAOPT=$$UP^XLFSTR($G(%CIAOPT)),%CIADISV=""
"RTN","CIAUDAT",23,0)
 S %CIATRP=$G(%CIATRP),%CIADAT=$G(%CIADAT)
"RTN","CIAUDAT",24,0)
 S:$G(%CIAHLP)="" %CIAHLP="HELP^CIAUDAT"
"RTN","CIAUDAT",25,0)
 S:$G(%CIAP)="" %CIAP="Enter date: "
"RTN","CIAUDAT",26,0)
 F %CIAZ=0:1:9 I %CIAOPT[%CIAZ S %CIADISV="CIADAT"_%CIAZ Q
"RTN","CIAUDAT",27,0)
DAT1 S %CIADT="",@$$TRAP^CIAUOS("DAT1^CIAUDAT")
"RTN","CIAUDAT",28,0)
 F %CIAZ="P","T","F","X" S:%CIAOPT[%CIAZ %CIADT=%CIADT_%CIAZ
"RTN","CIAUDAT",29,0)
 F  D  Q:$D(%CIAI)
"RTN","CIAUDAT",30,0)
 .W $$XY^CIAU(%CIAX,%CIAY)_%CIAP,*27,"[J"
"RTN","CIAUDAT",31,0)
 .S $X=%CIAX+$L(%CIAP)
"RTN","CIAUDAT",32,0)
 .I %CIAOPT["E" S %CIAI=$$ENTRY^CIAUEDT(%CIADAT,79-$X,$X,$Y,"","R")
"RTN","CIAUDAT",33,0)
 .E  I %CIADAT'="" S %CIAI=%CIADAT,%CIADAT=""
"RTN","CIAUDAT",34,0)
 .E  R %CIAI:DTIME
"RTN","CIAUDAT",35,0)
 .I $E(%CIAI)="?" D  Q
"RTN","CIAUDAT",36,0)
 ..W !
"RTN","CIAUDAT",37,0)
 ..I %CIAI["??" D HELP
"RTN","CIAUDAT",38,0)
 ..E  D @%CIAHLP
"RTN","CIAUDAT",39,0)
 ..D PAUSE()
"RTN","CIAUDAT",40,0)
 ..K %CIAI
"RTN","CIAUDAT",41,0)
 .I %CIAI=" " S %CIAI=$S(%CIADISV="":"",1:$G(^DISV(DUZ,%CIADISV))) K:%CIAI="" CIAZ1
"RTN","CIAUDAT",42,0)
 .W $$XY^CIAU(%CIAX+$L(%CIAP),%CIAY),*27,"[K"
"RTN","CIAUDAT",43,0)
 I %CIAI="",%CIATRP'="" S %CIAI=$G(@%CIATRP@(" "))
"RTN","CIAUDAT",44,0)
 S %CIAI=$$UP^XLFSTR(%CIAI),%CIAD=""
"RTN","CIAUDAT",45,0)
 Q:"^^"[%CIAI -$L(%CIAI)
"RTN","CIAUDAT",46,0)
 I %CIATRP'="" D  I %CIAD'="" S %CIAOPT=$TR(%CIAOPT,"I") G DAT2
"RTN","CIAUDAT",47,0)
 .I $D(@%CIATRP@(%CIAI)) S %CIAD=@%CIATRP@(%CIAI)
"RTN","CIAUDAT",48,0)
 .E  D
"RTN","CIAUDAT",49,0)
 ..N X
"RTN","CIAUDAT",50,0)
 ..S X=%CIAI,%CIAZ=""
"RTN","CIAUDAT",51,0)
 ..F  S %CIAZ=$O(@%CIATRP@("?",%CIAZ)) Q:%CIAZ=""  I %CIAI?@%CIAZ D  Q
"RTN","CIAUDAT",52,0)
 ...S %CIAD=$$MSG^CIAU($G(@%CIATRP@("?",%CIAZ)))
"RTN","CIAUDAT",53,0)
 S %CIAI=$$DT^CIAU(%CIAI,%CIADT)
"RTN","CIAUDAT",54,0)
 G:%CIAI=-1 DAT1
"RTN","CIAUDAT",55,0)
 I %CIAOPT["+",%CIAI<$S(%CIAI=%CIAI\1:$$DT^XLFDT,1:$$NOW^XLFDT) D  G DAT1
"RTN","CIAUDAT",56,0)
 .D PAUSE("Must be on or after current date.")
"RTN","CIAUDAT",57,0)
 I %CIAOPT["-",%CIAI>$S(%CIAI=%CIAI\1:$$DT^XLFDT,1:$$NOW^XLFDT) D  G DAT1
"RTN","CIAUDAT",58,0)
 .D PAUSE("Must be on or before current date.")
"RTN","CIAUDAT",59,0)
 S %CIAD=$$ENTRY^CIAUDT(%CIAI)
"RTN","CIAUDAT",60,0)
DAT2 W %CIAD
"RTN","CIAUDAT",61,0)
 S:%CIADISV'="" ^DISV(DUZ,%CIADISV)=%CIAI
"RTN","CIAUDAT",62,0)
 Q $S(%CIAOPT["I":9999999-%CIAI,1:%CIAI)
"RTN","CIAUDAT",63,0)
HELP W ?2,"Enter a valid ",$S(%CIAOPT["+":"future ",%CIAOPT["-":"past ",1:""),"date using one of the following formats:",!!
"RTN","CIAUDAT",64,0)
 W ?5,"Format",?20,"Example",?35,"Explanation",?60,"Comments",!
"RTN","CIAUDAT",65,0)
 W ?5,"------",?20,"-------",?35,"-----------",?60,"--------",!
"RTN","CIAUDAT",66,0)
 W ?5,"mm/dd/yy",?20,"6/20/93",?35,"June 20, 1993",?60,"If you omit the",!
"RTN","CIAUDAT",67,0)
 W ?5,"dd-mmm-yy",?20,"27-JUL-58",?35,"July 27, 1958",?60,"year, the "_$S(%CIAOPT["P":"most",%CIAOPT["F":"closest",1:"current"),!
"RTN","CIAUDAT",68,0)
 W ?5,"mmddyy",?20,"070457",?35,"July 4, 1957",?60,$S(%CIAOPT["P":"recent past date",%CIAOPT["F":"future date",1:"calendar year"),!
"RTN","CIAUDAT",69,0)
 W ?5,"mmm dd yyyy",?20,"JAN 5, 1984",?35,"January 5, 1984",?60,"is assumed.",!
"RTN","CIAUDAT",70,0)
 W ?5,"T-n",?20,"T-5",?35,"Today's date - 5 days.",!!
"RTN","CIAUDAT",71,0)
 Q
"RTN","CIAUDAT",72,0)
PAUSE(%CIAZ) ;
"RTN","CIAUDAT",73,0)
 W $$XY^CIAU(0,22),$G(%CIAZ)
"RTN","CIAUDAT",74,0)
 I $$PAUSE^CIAU
"RTN","CIAUDAT",75,0)
 Q
"RTN","CIAUDDR")
0^62^B59564846
"RTN","CIAUDDR",1,0)
CIAUDDR ;MSC/IND/DKM - FileMan RPC Extensions ;04-May-2006 08:19;DKM
"RTN","CIAUDDR",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUDDR",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUDDR",4,0)
 ;=================================================================
"RTN","CIAUDDR",5,0)
 ; RPC: Retrieve DD information about a file.
"RTN","CIAUDDR",6,0)
 ; FNUM = File # or name
"RTN","CIAUDDR",7,0)
 ; FLDS = Semi-colon delimited field list (optional)
"RTN","CIAUDDR",8,0)
 ; IENS = IENS (for subfile entries)
"RTN","CIAUDDR",9,0)
 ; FLGS = Control flags:
"RTN","CIAUDDR",10,0)
 ;   D = Fix duplicate field names
"RTN","CIAUDDR",11,0)
 ;   M = Retrieve multiples
"RTN","CIAUDDR",12,0)
 ; Return data:
"RTN","CIAUDDR",13,0)
 ;  DATA(0)   = -1^Error text or
"RTN","CIAUDDR",14,0)
 ;            = File #^File name^Rec count^Field count^Readonly^Parent File
"RTN","CIAUDDR",15,0)
 ;  DATA(n)   = Field #^Field name^Datatype^Size^Required^Readonly^Help lines^Xref^Calculated
"RTN","CIAUDDR",16,0)
 ;  DATA(n,0) = Supplemental data (set mappings)
"RTN","CIAUDDR",17,0)
 ;  DATA(n,1) = Prompt Text
"RTN","CIAUDDR",18,0)
 ;  DATA(n,2) = Help Text
"RTN","CIAUDDR",19,0)
GETDD(DATA,FNUM,FLDS,IENS,FLGS) ;
"RTN","CIAUDDR",20,0)
 N X,Y,Z,CNT,N0,FLD,PF,MULT,DUPS
"RTN","CIAUDDR",21,0)
 S DATA=$NA(^TMP("CIAUDDR",$J))
"RTN","CIAUDDR",22,0)
 K @DATA
"RTN","CIAUDDR",23,0)
 S FNUM=$G(FNUM),FLDS=$G(FLDS),FLGS=$G(FLGS),MULT=FLGS["M",DUPS=FLGS["D"
"RTN","CIAUDDR",24,0)
 I $L(FNUM),FNUM'=+FNUM D
"RTN","CIAUDDR",25,0)
 .S FNUM=$O(^DIC("B",FNUM,0))
"RTN","CIAUDDR",26,0)
 .I FNUM,$O(^(FNUM)) S FNUM=""
"RTN","CIAUDDR",27,0)
 S X=$$ROOT^DILFD(FNUM,$G(IENS),1),PF=$G(^DD(+FNUM,0,"UP"))
"RTN","CIAUDDR",28,0)
 S:$L(X) X=$G(@X@(0))
"RTN","CIAUDDR",29,0)
 S:PF $P(X,U)=$P($G(^DD(+FNUM,0)),U)
"RTN","CIAUDDR",30,0)
 I '$L(X) D SETERR("Table not found") Q
"RTN","CIAUDDR",31,0)
 S N0=FNUM_U_$P(X,U)_U_$P(X,U,4),CNT=0
"RTN","CIAUDDR",32,0)
 F X=1:1:$L(FLDS,";") D  Q:'X
"RTN","CIAUDDR",33,0)
 .S FLD=$P(FLDS,";",X)
"RTN","CIAUDDR",34,0)
 .Q:'$L(FLD)
"RTN","CIAUDDR",35,0)
 .S:FLD="*" FLD="0-9999999999999999"
"RTN","CIAUDDR",36,0)
 .I $TR(FLD,".")?1.N1"-"1.N D
"RTN","CIAUDDR",37,0)
 ..S Z=+$P(FLD,"-"),Y=+$P(FLD,"-",2)
"RTN","CIAUDDR",38,0)
 ..S:Z<0 Z=0
"RTN","CIAUDDR",39,0)
 ..I Z=0 S:'$$GETFL(0,0) X=0
"RTN","CIAUDDR",40,0)
 ..I Z>0,$D(^DD(FNUM,Z,0)) S:'$$GETFL(Z,MULT) X=0
"RTN","CIAUDDR",41,0)
 ..F  Q:'X  S Z=$O(^DD(FNUM,Z)) Q:'Z  Q:Z>Y  S:'$$GETFL(Z,MULT) X=0
"RTN","CIAUDDR",42,0)
 .E  I '$$GETFL(FLD,1) S X=0
"RTN","CIAUDDR",43,0)
 S:X @DATA@(0)=N0_U_CNT_U_($P($G(^DD(FNUM,0,"DI")),U,2)["Y")_U_PF
"RTN","CIAUDDR",44,0)
 Q
"RTN","CIAUDDR",45,0)
 ; Setup type info for field
"RTN","CIAUDDR",46,0)
 ;  FLDX = Field # or name
"RTN","CIAUDDR",47,0)
 ;  MULT = Allow multiples
"RTN","CIAUDDR",48,0)
 ; Note: Datatype (TP) maps to TFMFieldType enum:
"RTN","CIAUDDR",49,0)
 ;   0 = unknown, 1 = free text, 2 = numeric, 3 = boolean,
"RTN","CIAUDDR",50,0)
 ;   4 = date/time, 5 = wp, 6 = pointer, 7 = set, 8 = subfile
"RTN","CIAUDDR",51,0)
GETFL(FLDX,MULT) ;
"RTN","CIAUDDR",52,0)
 N X,Z,LN,TP,HC,DD,FLD,MLT,NAM
"RTN","CIAUDDR",53,0)
 S FLD=$$FLDNUM(FNUM,FLDX),MLT=0
"RTN","CIAUDDR",54,0)
 S DD=$S('$L(FLD):"",FLD:$G(^DD(FNUM,FLD,0)),1:"#^RICJ8,5"),X=$P(DD,U,2)
"RTN","CIAUDDR",55,0)
 I '$L(DD) D SETERR("Field not found: "_FLDX) Q 0
"RTN","CIAUDDR",56,0)
 I X,$P($G(^DD(X,.01,0)),U,2)'["W" S MLT=1
"RTN","CIAUDDR",57,0)
 I 'MULT,MLT Q 1
"RTN","CIAUDDR",58,0)
 S (LN,TP,HC,Z)=0,DX="",NAM=$P(DD,U),CNT=CNT+1
"RTN","CIAUDDR",59,0)
 I DUPS,$O(^(+$O(^DD(FNUM,"B",NAM,0)))) S NAM=NAM_"("_FLD_")"
"RTN","CIAUDDR",60,0)
 I MLT S TP=8,DX=+X
"RTN","CIAUDDR",61,0)
 E  I X["B" S TP=3
"RTN","CIAUDDR",62,0)
 E  I X["D" S TP=4,DX=$P($P($P(DD,U,5),"%DT=",2),"""",2)
"RTN","CIAUDDR",63,0)
 E  I X["F"!(X["K") S TP=1,LN=+$P($P(DD,U,5),"$L(X)>",2) S:'LN LN=30
"RTN","CIAUDDR",64,0)
 E  I X["J" S TP=2,DX=$P(X,"J",2) S:DX'["," LN=DX,DX="",TP=1
"RTN","CIAUDDR",65,0)
 E  I X["P"!(X["p") S TP=6,DX=+$P($TR(X,"p","P"),"P",2),LN=$$GETLN(DX)
"RTN","CIAUDDR",66,0)
 E  I X["S" S TP=7,DX=$P(DD,U,3)
"RTN","CIAUDDR",67,0)
 E  I X=+X S TP=5
"RTN","CIAUDDR",68,0)
 I 'FLD S HC=1,@DATA@(CNT,2,HC)="Internal record number."
"RTN","CIAUDDR",69,0)
 E  F  S Z=$O(^DD(FNUM,FLD,21,Z)) Q:'Z  S HC=HC+1,@DATA@(CNT,2,HC)=^(Z,0)
"RTN","CIAUDDR",70,0)
 S @DATA@(CNT)=FLD_U_NAM_U_TP_U_LN_U_(X["R")_U_(X["I")_U_HC_U_$$XREF(FNUM,FLD)_U_(X["C")
"RTN","CIAUDDR",71,0)
 S @DATA@(CNT,0)=DX,@DATA@(CNT,1)=$G(^DD(FNUM,FLD,3))
"RTN","CIAUDDR",72,0)
 Q 1
"RTN","CIAUDDR",73,0)
 ; Get length of .01 for file
"RTN","CIAUDDR",74,0)
GETLN(FNUM) ;
"RTN","CIAUDDR",75,0)
 N DD,X
"RTN","CIAUDDR",76,0)
 S DD=$G(^DD(FNUM,.01,0)),X=$P(DD,U,2)
"RTN","CIAUDDR",77,0)
 S X=+$S(X["P":$$GETLN(+$E(X,2,99)),X["F":$P($P(DD,U,5),"$L(X)>",2),1:0)
"RTN","CIAUDDR",78,0)
 Q $S(X:X,1:30)
"RTN","CIAUDDR",79,0)
SETERR(ERR) ;
"RTN","CIAUDDR",80,0)
 K @DATA
"RTN","CIAUDDR",81,0)
 S @DATA@(0)="-1^"_ERR
"RTN","CIAUDDR",82,0)
 Q
"RTN","CIAUDDR",83,0)
 ; RPC: CIAUDDR MOVETO
"RTN","CIAUDDR",84,0)
 ; Move to specified record (returns IEN only)
"RTN","CIAUDDR",85,0)
 ; FNUM: File #
"RTN","CIAUDDR",86,0)
 ; IEN : Current IEN
"RTN","CIAUDDR",87,0)
 ; DIR : 0 = current; 1 = next; 2 = prior
"RTN","CIAUDDR",88,0)
 ; IENS: Subfile IENS
"RTN","CIAUDDR",89,0)
 ; SCRN: Screens (optional)
"RTN","CIAUDDR",90,0)
 ; INDX: Index (optional)
"RTN","CIAUDDR",91,0)
 ; Returns IEN or <error code>^<error text>
"RTN","CIAUDDR",92,0)
MOVETO(DATA,FNUM,IEN,DIR,IENS,SCRN,INDX) ;
"RTN","CIAUDDR",93,0)
 N GBL,IDX,IDF,OK
"RTN","CIAUDDR",94,0)
 S GBL=$$ROOT^DILFD(FNUM,$G(IENS),1),DIR=+$G(DIR),INDX=$G(INDX)
"RTN","CIAUDDR",95,0)
 S DIR=$S(DIR=1:1,DIR=2:-1,1:0)
"RTN","CIAUDDR",96,0)
 S:$L($G(SCRN)) SCRN(-1)=SCRN
"RTN","CIAUDDR",97,0)
 I '$L(GBL) S DATA="-4^Table not found" Q
"RTN","CIAUDDR",98,0)
 I $L(INDX) D  Q:$G(DATA)
"RTN","CIAUDDR",99,0)
 .I '$O(^DD(FNUM,0,"IX",INDX,"")) S DATA="-5^Index "_INDX_" not found" Q
"RTN","CIAUDDR",100,0)
 .S IDF=$$XREFFLD(FNUM,INDX)
"RTN","CIAUDDR",101,0)
 .I 'IDF S DATA="-6^Index "_INDX_" is not a standard index" Q
"RTN","CIAUDDR",102,0)
 .S IDX=$S(IEN=-1:"",IEN=-2:$C(255),1:$E($$FLDVAL(FNUM,IDF,IEN,GBL),1,30))
"RTN","CIAUDDR",103,0)
 E  S IEN=$S(IEN=-1:0,IEN=-2:$O(@GBL@($C(1)),-1)+1,1:+IEN)
"RTN","CIAUDDR",104,0)
 F  D  Q:OK!'IEN
"RTN","CIAUDDR",105,0)
 .S IEN=+$$NXTIEN
"RTN","CIAUDDR",106,0)
 .;S OK=IEN&(IEN\1=IEN)&$D(@GBL@(IEN,0)),SCRN=""
"RTN","CIAUDDR",107,0)
 .S OK=IEN&$D(@GBL@(IEN,0)),SCRN=""
"RTN","CIAUDDR",108,0)
 .F  Q:'OK  S SCRN=$O(SCRN(SCRN)) Q:'$L(SCRN)  D
"RTN","CIAUDDR",109,0)
 ..N Y
"RTN","CIAUDDR",110,0)
 ..S Y=IEN
"RTN","CIAUDDR",111,0)
 ..I $D(@GBL@(Y,0))
"RTN","CIAUDDR",112,0)
 ..X SCRN(SCRN)
"RTN","CIAUDDR",113,0)
 ..S OK=$T
"RTN","CIAUDDR",114,0)
 .I 'OK,'DIR S IEN=0
"RTN","CIAUDDR",115,0)
 S DATA=$S(OK:IEN,'DIR:"-3^Record not found",DIR=1:"-2^End of file",1:"-1^Beginning of file")
"RTN","CIAUDDR",116,0)
 Q
"RTN","CIAUDDR",117,0)
 ; Return next IEN
"RTN","CIAUDDR",118,0)
NXTIEN() Q:'DIR IEN
"RTN","CIAUDDR",119,0)
 Q:'$L(INDX) $O(@GBL@(IEN),DIR)
"RTN","CIAUDDR",120,0)
 N OK
"RTN","CIAUDDR",121,0)
 F  D  Q:OK!'$L(IDX)
"RTN","CIAUDDR",122,0)
 .S:IEN'>0 IDX=$O(@GBL@(INDX,IDX),DIR),IEN=""
"RTN","CIAUDDR",123,0)
 .S IEN=$S($L(IDX):$O(@GBL@(INDX,IDX,IEN),DIR),1:0)
"RTN","CIAUDDR",124,0)
 .;S OK=$S('IEN:0,1:$E($$FLDVAL(FNUM,IDF,IEN,GBL),1,30)=IDX)
"RTN","CIAUDDR",125,0)
 .S OK=$S('IEN:0,1:$D(@GBL@(IEN,0)))
"RTN","CIAUDDR",126,0)
 Q IEN
"RTN","CIAUDDR",127,0)
 ; Return field value (internal)
"RTN","CIAUDDR",128,0)
 ;  FIL  = File or subfile #
"RTN","CIAUDDR",129,0)
 ;  FLD  = Field #
"RTN","CIAUDDR",130,0)
 ;  IEN  = Record #
"RTN","CIAUDDR",131,0)
 ;  ROOT = Global root of file or subfile, or IENS of subfile
"RTN","CIAUDDR",132,0)
FLDVAL(FIL,FLD,IEN,ROOT) ;
"RTN","CIAUDDR",133,0)
 I FLD=0!(FLD="#") Q IEN
"RTN","CIAUDDR",134,0)
 N PC,ND,DD
"RTN","CIAUDDR",135,0)
 S:FLD'=+FLD FLD=+$O(^DD(FIL,"B",FLD,0))
"RTN","CIAUDDR",136,0)
 S DD=$G(^DD(FIL,FLD,0))
"RTN","CIAUDDR",137,0)
 Q:$P(DD,U,2)["C" $$GET1^DIQ(FIL,IEN_","_$P(ROOT,",",2,999),FLD,"I")
"RTN","CIAUDDR",138,0)
 S ND=$P(DD,U,4),PC=$P(ND,";",2),ND=$P(ND,";")
"RTN","CIAUDDR",139,0)
 S:$E(ROOT)'=U ROOT=$$ROOT^DILFD(FIL,ROOT,1)
"RTN","CIAUDDR",140,0)
 Q $S('$L(ND):"",1:$P($G(@ROOT@(IEN,ND)),U,PC))
"RTN","CIAUDDR",141,0)
 ; RPC: Lock/unlock a record
"RTN","CIAUDDR",142,0)
 ;   FNUM = File #
"RTN","CIAUDDR",143,0)
 ;   IENS = Record # (IENS format)
"RTN","CIAUDDR",144,0)
 ;   WAIT = If >=0, seconds to wait for lock.
"RTN","CIAUDDR",145,0)
 ;          If missing or null, perform unlock operation.
"RTN","CIAUDDR",146,0)
 ;   DATA = Returns 0 if successful, -n^Error Text if not.
"RTN","CIAUDDR",147,0)
LOCK(DATA,FNUM,IENS,WAIT) ;
"RTN","CIAUDDR",148,0)
 N X,IEN,OK,$ET
"RTN","CIAUDDR",149,0)
 S @$$TRAP^CIAUOS("LOCKERR^CIAUDDR")
"RTN","CIAUDDR",150,0)
 S $ET="",X=$$ROOT^DILFD(FNUM,IENS,1),DATA=0,IEN=+IENS
"RTN","CIAUDDR",151,0)
 I '$L(X) S DATA="-1^Table not found"  Q
"RTN","CIAUDDR",152,0)
 K:$G(WAIT)="" WAIT
"RTN","CIAUDDR",153,0)
 D LOCK^CIANBRPC(.OK,$NA(@X@(IEN)),.WAIT)
"RTN","CIAUDDR",154,0)
 S:'OK DATA="-2^Record locked by another process"
"RTN","CIAUDDR",155,0)
 Q
"RTN","CIAUDDR",156,0)
LOCKERR S DATA="-3^Unexpected error"
"RTN","CIAUDDR",157,0)
 Q
"RTN","CIAUDDR",158,0)
 ; RPC: Convert pointer internal<->external
"RTN","CIAUDDR",159,0)
CVTPTR(DATA,FNUM,VAL,EXT) ;
"RTN","CIAUDDR",160,0)
 I EXT S DATA=$$GET1^DIQ(FNUM,VAL,.01)
"RTN","CIAUDDR",161,0)
 E  D
"RTN","CIAUDDR",162,0)
 .N ROOT
"RTN","CIAUDDR",163,0)
 .S ROOT=$$ROOT^DILFD(FNUM,,1)
"RTN","CIAUDDR",164,0)
 .I '$L(ROOT) S DATA=""
"RTN","CIAUDDR",165,0)
 .E  I VAL?1"`"1.N D
"RTN","CIAUDDR",166,0)
 ..S VAL=+$E(VAL,2,999),DATA=$S('VAL:"",$D(@ROOT@(VAL,0))#2:VAL,1:"")
"RTN","CIAUDDR",167,0)
 .E  D
"RTN","CIAUDDR",168,0)
 ..N LP
"RTN","CIAUDDR",169,0)
 ..F LP=0:1:3 S DATA=$$CP(LP) Q:DATA
"RTN","CIAUDDR",170,0)
 Q
"RTN","CIAUDDR",171,0)
 ; Lookup value in "B" xref
"RTN","CIAUDDR",172,0)
CP(XFM) N RTN,LKP
"RTN","CIAUDDR",173,0)
 S LKP=$S(XFM#2:$E(VAL,1,30),1:VAL),LKP=$S(XFM\2:$$UP^XLFSTR(LKP),1:LKP),RTN=0
"RTN","CIAUDDR",174,0)
 F  S RTN=$O(@ROOT@("B",LKP,RTN)) Q:'RTN  Q:$P($G(@ROOT@(RTN,0)),U)=VAL
"RTN","CIAUDDR",175,0)
 Q RTN
"RTN","CIAUDDR",176,0)
 ; RPC: Find an entry using specified fields and values
"RTN","CIAUDDR",177,0)
 ;   FNUM = File number to search
"RTN","CIAUDDR",178,0)
 ;   IENS = IENS for subfile
"RTN","CIAUDDR",179,0)
 ;   FLGS = Search flags.  Combination of:
"RTN","CIAUDDR",180,0)
 ;       P = partial match
"RTN","CIAUDDR",181,0)
 ;       I = case insensitive
"RTN","CIAUDDR",182,0)
 ;   FLDS = Field #'s or names to search.  Can be ;-delimited or list.
"RTN","CIAUDDR",183,0)
 ;   VALS = Values to search.  Can be single value or list.
"RTN","CIAUDDR",184,0)
 ;   MAX  = Maximum entries to return (default=all)
"RTN","CIAUDDR",185,0)
 ;   Returns list of one or all IENs matching criteria or
"RTN","CIAUDDR",186,0)
 ;     -n^error text if error.
"RTN","CIAUDDR",187,0)
FIND(DATA,FNUM,IENS,FLGS,FLDS,VALS,MAX) ;
"RTN","CIAUDDR",188,0)
 N ROOT,QUIT,XRF,XKY,CNT,X
"RTN","CIAUDDR",189,0)
 S IENS=$G(IENS)
"RTN","CIAUDDR",190,0)
 I $L(IENS),$E(IENS)'="," S IENS=","_IENS
"RTN","CIAUDDR",191,0)
 S ROOT=$$ROOT^DILFD(FNUM,IENS,1),QUIT=0,FLGS=$G(FLGS),MAX=+$G(MAX),CNT=0
"RTN","CIAUDDR",192,0)
 S:$D(VALS)=1 VALS(1)=VALS
"RTN","CIAUDDR",193,0)
 I $D(FLDS)=1 F X=1:1:$L(FLDS,";") S FLDS(X)=$P(FLDS,";",X)
"RTN","CIAUDDR",194,0)
 F FLDS=0:0 S FLDS=$O(FLDS(FLDS)) Q:'FLDS  D  Q:QUIT
"RTN","CIAUDDR",195,0)
 .I '$D(VALS(FLDS)) S QUIT="-1^Not enough lookup values." Q
"RTN","CIAUDDR",196,0)
 .S X=$$FLDNUM(FNUM,FLDS(FLDS))
"RTN","CIAUDDR",197,0)
 .I '$L(X) S QUIT="-2^Unknown field "_FLDS(FLDS)_"." Q
"RTN","CIAUDDR",198,0)
 .S FLDS(FLDS)=X
"RTN","CIAUDDR",199,0)
 .I '$D(XRF) D
"RTN","CIAUDDR",200,0)
 ..S X=$$XREF(FNUM,X)
"RTN","CIAUDDR",201,0)
 ..S:$L(X) XRF=X,XKY=$S(FLGS["I":$$UP^XLFSTR(VALS(FLDS)),1:VALS(FLDS))
"RTN","CIAUDDR",202,0)
 I 'QUIT,'$D(XRF) S QUIT="-3^At least one field must be a key field."
"RTN","CIAUDDR",203,0)
 D:'QUIT FINDX
"RTN","CIAUDDR",204,0)
 I QUIT<0 K @DATA S @DATA@(0)=QUIT
"RTN","CIAUDDR",205,0)
 Q
"RTN","CIAUDDR",206,0)
FINDX G FINDN:XRF="#",FINDP:FLGS["P",FINDE
"RTN","CIAUDDR",207,0)
 ; Find by IEN
"RTN","CIAUDDR",208,0)
FINDN D FINDF(XKY)
"RTN","CIAUDDR",209,0)
 Q
"RTN","CIAUDDR",210,0)
 ; Find exact match
"RTN","CIAUDDR",211,0)
FINDE N XKT,IEN
"RTN","CIAUDDR",212,0)
 S IEN=0,XKT=$E(XKY,1,30)
"RTN","CIAUDDR",213,0)
 F  S IEN=$O(@ROOT@(XRF,XKT,IEN)) Q:'IEN  D  Q:QUIT
"RTN","CIAUDDR",214,0)
 .D FINDF(IEN)
"RTN","CIAUDDR",215,0)
 Q
"RTN","CIAUDDR",216,0)
 ; Partial match
"RTN","CIAUDDR",217,0)
FINDP N XKT,VAL,IEN,LEN
"RTN","CIAUDDR",218,0)
 S XKT=$E(XKY,1,30),VAL=XKT,LEN=$L(XKT)
"RTN","CIAUDDR",219,0)
 F  D  S VAL=$O(@ROOT@(XRF,VAL)) Q:$E(VAL,1,LEN)'=XKT!QUIT
"RTN","CIAUDDR",220,0)
 .S IEN=0
"RTN","CIAUDDR",221,0)
 .F  S IEN=$O(@ROOT@(XRF,VAL,IEN)) Q:'IEN  D  Q:QUIT
"RTN","CIAUDDR",222,0)
 ..D FINDF(IEN)
"RTN","CIAUDDR",223,0)
 Q
"RTN","CIAUDDR",224,0)
 ; Check fields for match.  Add to output if all match
"RTN","CIAUDDR",225,0)
FINDF(IEN) ;
"RTN","CIAUDDR",226,0)
 N FND
"RTN","CIAUDDR",227,0)
 S FLDS=0,FND=1
"RTN","CIAUDDR",228,0)
 F  S FLDS=$O(FLDS(FLDS)) Q:'FLDS  D  Q:'FND
"RTN","CIAUDDR",229,0)
 .S FND=$$FINDM(FLDS(FLDS),VALS(FLDS),IEN)
"RTN","CIAUDDR",230,0)
 I FND D
"RTN","CIAUDDR",231,0)
 .S CNT=CNT+1,@DATA@(CNT)=IEN
"RTN","CIAUDDR",232,0)
 .I MAX,CNT'<MAX S QUIT=1
"RTN","CIAUDDR",233,0)
 Q
"RTN","CIAUDDR",234,0)
 ; Check for match
"RTN","CIAUDDR",235,0)
FINDM(FLD,VAL,IEN) ;
"RTN","CIAUDDR",236,0)
 N VALX
"RTN","CIAUDDR",237,0)
 S VALX=$$FLDVAL(FNUM,FLD,IEN,ROOT)
"RTN","CIAUDDR",238,0)
 S:FLGS["I" VAL=$$UP^XLFSTR(VAL),VALX=$$UP^XLFSTR(VALX)
"RTN","CIAUDDR",239,0)
 Q $S(FLGS["P":$E(VALX,1,$L(VAL))=VAL,1:VAL=VALX)
"RTN","CIAUDDR",240,0)
 ; Return field number from name
"RTN","CIAUDDR",241,0)
FLDNUM(FNUM,FLD) ;EP
"RTN","CIAUDDR",242,0)
 Q $S(FLD=+FLD:FLD,FLD="#":0,1:$O(^DD(FNUM,"B",FLD,0)))
"RTN","CIAUDDR",243,0)
 ; Returns the standard xref for the specified field.
"RTN","CIAUDDR",244,0)
XREF(FNUM,FLD,LAST) ;EP
"RTN","CIAUDDR",245,0)
 N XREF
"RTN","CIAUDDR",246,0)
 S LAST=+$G(LAST),XREF="",FLD=$$FLDNUM(FNUM,FLD)
"RTN","CIAUDDR",247,0)
 Q:'$L(FLD) ""
"RTN","CIAUDDR",248,0)
 Q:'FLD "#"
"RTN","CIAUDDR",249,0)
 F  S LAST=$O(^DD(FNUM,FLD,1,LAST)) Q:'LAST  I $D(^(LAST,0)),$P(^(0),U,3)="" S XREF=$P(^(0),U,2) Q
"RTN","CIAUDDR",250,0)
 Q XREF
"RTN","CIAUDDR",251,0)
 ; Returns field # if xref is a standard type, or 0 if not.
"RTN","CIAUDDR",252,0)
XREFFLD(FNUM,XREF) ;EP
"RTN","CIAUDDR",253,0)
 N FLD,LAST,X
"RTN","CIAUDDR",254,0)
 S FLD=$O(^DD(FNUM,0,"IX",XREF,FNUM,0))
"RTN","CIAUDDR",255,0)
 Q:'FLD 0
"RTN","CIAUDDR",256,0)
 F  S X=$$XREF(FNUM,FLD,.LAST) Q:'$L(X)!(X=XREF)
"RTN","CIAUDDR",257,0)
 Q $S($L(X):FLD,1:0)
"RTN","CIAUDIC")
0^36^B30301399
"RTN","CIAUDIC",1,0)
CIAUDIC ;MSC/IND/DKM - Encapsulated FileMan API;15-Feb-2007 10:32;DKM
"RTN","CIAUDIC",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUDIC",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUDIC",4,0)
 ;=================================================================
"RTN","CIAUDIC",5,0)
 ; Parameterized routine to add/edit/extract an entry in a
"RTN","CIAUDIC",6,0)
 ; FileMan file.  Encapsulates global structure info so no
"RTN","CIAUDIC",7,0)
 ; need to specify this directly.
"RTN","CIAUDIC",8,0)
 ; Inputs:
"RTN","CIAUDIC",9,0)
 ;    %CIADIC = Global root, file number, or bookmark
"RTN","CIAUDIC",10,0)
 ;    %CIACMD = n    : IEN of entry to process
"RTN","CIAUDIC",11,0)
 ;             0    : Process last IEN referenced
"RTN","CIAUDIC",12,0)
 ;             +n   : Move down to subfile n
"RTN","CIAUDIC",13,0)
 ;             -    : Move up to parent file
"RTN","CIAUDIC",14,0)
 ;             @n   : Delete IEN #n (or last referenced if missing)
"RTN","CIAUDIC",15,0)
 ;             =x;y : Lookup y at current level using options in x
"RTN","CIAUDIC",16,0)
 ;             ?x;y ; Lookup y using CIAULKP utility with options in x
"RTN","CIAUDIC",17,0)
 ;             >x;y : Read fields specified in y using options in x
"RTN","CIAUDIC",18,0)
 ;             <x;y : Write fields specified in y using options in x
"RTN","CIAUDIC",19,0)
 ;             ~x;y : Same as <, but creates new entry
"RTN","CIAUDIC",20,0)
 ;             %n   : Force DINUM to n
"RTN","CIAUDIC",21,0)
 ; Outputs:
"RTN","CIAUDIC",22,0)
 ;     Returns in the first piece the IEN of the entry or...
"RTN","CIAUDIC",23,0)
 ;      0 = Entry was deleted
"RTN","CIAUDIC",24,0)
 ;     -1 = Entry was rejected
"RTN","CIAUDIC",25,0)
 ;     -2 = Entry locked by another process
"RTN","CIAUDIC",26,0)
 ;     -3 = Unexpected error
"RTN","CIAUDIC",27,0)
 ;=================================================================
"RTN","CIAUDIC",28,0)
ENTRY(%CIADIC,%CIACMD) ;
"RTN","CIAUDIC",29,0)
 S %CIADIC(0)=+$G(DUZ)
"RTN","CIAUDIC",30,0)
 N DUZ,DIC,DINUM,DIE,DIQ,DIQUIET,DIK,%CIAX,%CIAIEN,%CIAARG,%CIAN1,%CIAN2,%CIAZ,X,Y
"RTN","CIAUDIC",31,0)
 N DA,DC,DD,DG,DH,DK,DL,DO,DQ,DR,DU,DV,DW,DY
"RTN","CIAUDIC",32,0)
 S DUZ=%CIADIC(0),DUZ(0)="@",@$$TRAP^CIAUOS("ERROR^CIAUDIC"),%CIACMD=$G(%CIACMD),%CIAIEN="",DIQUIET=1
"RTN","CIAUDIC",33,0)
 ; Build the bookmark if a global reference or file # passed
"RTN","CIAUDIC",34,0)
 I %CIADIC'[U D
"RTN","CIAUDIC",35,0)
 .S:%CIADIC'=+%CIADIC %CIADIC=+$O(^DIC("B",%CIADIC,0))
"RTN","CIAUDIC",36,0)
 .S %CIADIC=$$ROOT^DILFD(%CIADIC)_U_U_%CIADIC
"RTN","CIAUDIC",37,0)
 I $P(%CIADIC,U,4)="" D
"RTN","CIAUDIC",38,0)
 .S %CIAZ=U_$P(%CIADIC,U,2),%CIAZ=$E(%CIAZ,1,$L(%CIAZ)-1),%CIAZ=%CIAZ_$S(%CIAZ["(":")",1:"")
"RTN","CIAUDIC",39,0)
 .S $P(%CIADIC,U,4)=$P(@%CIAZ@(0),U,2)
"RTN","CIAUDIC",40,0)
 F %CIAN1=1:1:$L(%CIACMD,"|") S %CIAARG=$P(%CIACMD,"|",%CIAN1),%CIAZ=$E(%CIAARG) D  Q:%CIAIEN<0
"RTN","CIAUDIC",41,0)
 .S %CIAN2=$F("-+=@><~?%",%CIAZ)
"RTN","CIAUDIC",42,0)
 .S:%CIAN2 %CIAN2=%CIAN2-1,%CIAARG=$E(%CIAARG,2,999)
"RTN","CIAUDIC",43,0)
 .D DA,@%CIAN2
"RTN","CIAUDIC",44,0)
 .S:%CIAIEN>0 $P(%CIADIC,U,3)=%CIAIEN
"RTN","CIAUDIC",45,0)
 S $P(%CIADIC,U)=%CIAIEN
"RTN","CIAUDIC",46,0)
 Q %CIADIC
"RTN","CIAUDIC",47,0)
 ; Set IEN
"RTN","CIAUDIC",48,0)
0 S:%CIAARG'<0 %CIAIEN=$S($D(@%CIADIC(2)@(+%CIAARG)):+%CIAARG,1:0),$P(%CIADIC,U,3)=%CIAIEN
"RTN","CIAUDIC",49,0)
 Q
"RTN","CIAUDIC",50,0)
 ; Move up to parent file
"RTN","CIAUDIC",51,0)
1 N %CIAX,%CIAY
"RTN","CIAUDIC",52,0)
 S $P(%CIADIC,U,4)=$P($P(%CIADIC,U,4),"|",2,999)
"RTN","CIAUDIC",53,0)
 S %CIAY=$P(%CIADIC,U,2),%CIAX=$L(%CIAY,"|"),$P(%CIADIC,U,2)=$P(%CIAY,"|",1,%CIAX-1)
"RTN","CIAUDIC",54,0)
 S %CIAIEN=+$P(%CIAY,"|",%CIAX),$P(%CIADIC,U,3)=%CIAIEN
"RTN","CIAUDIC",55,0)
 D DA
"RTN","CIAUDIC",56,0)
 Q
"RTN","CIAUDIC",57,0)
 ; Move down to subfile
"RTN","CIAUDIC",58,0)
2 N %CIAX,%CIAY,%CIAZ
"RTN","CIAUDIC",59,0)
 I $P(%CIADIC,U,3)'>0 S %CIAIEN=-1 Q
"RTN","CIAUDIC",60,0)
 S %CIAY=+$P(%CIADIC,U,4)
"RTN","CIAUDIC",61,0)
 S:%CIAARG'=+%CIAARG %CIAARG=+$O(^DD(%CIAY,"B",%CIAARG,0)),%CIAARG=+$P($G(^DD(%CIAY,%CIAARG,0)),U,2)
"RTN","CIAUDIC",62,0)
 S %CIAX=+%CIAARG,%CIAZ=+$O(^DD(%CIAY,"SB",%CIAX,0)),%CIAZ=$P($P(^DD(%CIAY,%CIAZ,0),U,4),";"),%CIAX=$P(^(0),U,2)
"RTN","CIAUDIC",63,0)
 S:%CIAZ'=+%CIAZ %CIAZ=""""_%CIAZ_""""
"RTN","CIAUDIC",64,0)
 S $P(%CIADIC,U,4)=%CIAX_"|"_$P(%CIADIC,U,4),$P(%CIADIC,U,2)=$P(%CIADIC,U,2)_"|"_$P(%CIADIC,U,3)_","_%CIAZ_","
"RTN","CIAUDIC",65,0)
 S %CIAIEN="",$P(%CIADIC,U,3)=""
"RTN","CIAUDIC",66,0)
 D DA
"RTN","CIAUDIC",67,0)
 Q
"RTN","CIAUDIC",68,0)
 ; Lookup an entry
"RTN","CIAUDIC",69,0)
3 N X,Y
"RTN","CIAUDIC",70,0)
 I %CIAARG[";" S DIC(0)=$P(%CIAARG,";"),%CIAARG=$P(%CIAARG,";",2,999)
"RTN","CIAUDIC",71,0)
 E  S DIC(0)="XMF"
"RTN","CIAUDIC",72,0)
 S DIC=%CIADIC(1),X=%CIAARG
"RTN","CIAUDIC",73,0)
 D ^DIC
"RTN","CIAUDIC",74,0)
 S %CIAIEN=+Y
"RTN","CIAUDIC",75,0)
 Q
"RTN","CIAUDIC",76,0)
 ; Delete an entry
"RTN","CIAUDIC",77,0)
4 N X,Y
"RTN","CIAUDIC",78,0)
 S:%CIAARG DA=%CIAARG
"RTN","CIAUDIC",79,0)
 S DIK=%CIADIC(1),%CIAIEN=0
"RTN","CIAUDIC",80,0)
 D ^DIK
"RTN","CIAUDIC",81,0)
 Q
"RTN","CIAUDIC",82,0)
 ; Extract data
"RTN","CIAUDIC",83,0)
5 N %CIAZ,%CIAZ1,%CIAX,%CIAY
"RTN","CIAUDIC",84,0)
 I '%CIAIEN S %CIAIEN=-1 Q
"RTN","CIAUDIC",85,0)
 S DR=""
"RTN","CIAUDIC",86,0)
 F %CIAX=2:1:$L(%CIAARG,";") D
"RTN","CIAUDIC",87,0)
 .S %CIAY=$P(%CIAARG,";",%CIAX)
"RTN","CIAUDIC",88,0)
 .I %CIAY["=" S %CIAZ=$$FLD($P(%CIAY,"=",2)),%CIAZ1(%CIAZ,$P(%CIAY,"="))="",%CIAY=%CIAZ
"RTN","CIAUDIC",89,0)
 .S DR=DR_$S($L(DR):";",1:"")_%CIAY
"RTN","CIAUDIC",90,0)
 S DIC=%CIADIC(1),DIQ(0)=$P(%CIAARG,";")
"RTN","CIAUDIC",91,0)
 S:DIQ(0)="" DIQ(0)="E"
"RTN","CIAUDIC",92,0)
 K ^UTILITY("DIQ1",$J)
"RTN","CIAUDIC",93,0)
 D
"RTN","CIAUDIC",94,0)
 .N X,Y
"RTN","CIAUDIC",95,0)
 .D EN^DIQ1
"RTN","CIAUDIC",96,0)
 F %CIAX=0:0 S %CIAX=$O(%CIAZ1(%CIAX)),%CIAZ="" Q:'%CIAX  D
"RTN","CIAUDIC",97,0)
 .F  S %CIAZ=$O(%CIAZ1(%CIAX,%CIAZ)),%CIAZ1="" Q:%CIAZ=""  D
"RTN","CIAUDIC",98,0)
 ..F %CIAY="E","I" D
"RTN","CIAUDIC",99,0)
 ...S:$D(^UTILITY("DIQ1",$J,+$P(%CIADIC,U,4),%CIAIEN,%CIAX,%CIAY)) %CIAZ1=%CIAZ1_$S($L(%CIAZ1):U,1:"")_^(%CIAY)
"RTN","CIAUDIC",100,0)
 ..S @%CIAZ=%CIAZ1
"RTN","CIAUDIC",101,0)
 Q
"RTN","CIAUDIC",102,0)
 ; Edit existing entry
"RTN","CIAUDIC",103,0)
6 S DIC(0)=$P(%CIAARG,";"),DIC("P")=$P($P(%CIADIC,U,4),"|"),%CIAARG=$P(%CIAARG,";",2,999)
"RTN","CIAUDIC",104,0)
 I %CIAIEN'>0 S %CIAIEN=-1 Q
"RTN","CIAUDIC",105,0)
 S DIE=%CIADIC(1),DR=%CIAARG
"RTN","CIAUDIC",106,0)
 L +@%CIADIC(2)@(%CIAIEN):$S(DIC(0)["!":9999999,1:0)
"RTN","CIAUDIC",107,0)
 E  S %CIAIEN=-2 Q
"RTN","CIAUDIC",108,0)
 D ^DIE
"RTN","CIAUDIC",109,0)
 L -@%CIADIC(2)@(%CIAIEN)
"RTN","CIAUDIC",110,0)
 S %CIAIEN=+$G(DA)
"RTN","CIAUDIC",111,0)
 Q
"RTN","CIAUDIC",112,0)
 ; Create new entry
"RTN","CIAUDIC",113,0)
7 N X,Y,DD,DO,DLAYGO
"RTN","CIAUDIC",114,0)
 S DIC=%CIADIC(1),DIC(0)=$P(%CIAARG,";")_"L",DIC("P")=$P($P(%CIADIC,U,4),"|"),Y=$P(%CIAARG,";",2),%CIAARG=DIC(0)_";"_$P(%CIAARG,";",3,999),DLAYGO=DIC("P")\1
"RTN","CIAUDIC",115,0)
 I +Y'=.01 S %CIAIEN=-1 Q
"RTN","CIAUDIC",116,0)
 S X=$P(Y,"/",4)
"RTN","CIAUDIC",117,0)
 S:X="" X=$P(Y,"/",5)
"RTN","CIAUDIC",118,0)
 X:$E(X)=U $E(X,2,999)
"RTN","CIAUDIC",119,0)
 I $P(^DD(+DIC("P"),.01,0),U,2)["W" D
"RTN","CIAUDIC",120,0)
 .D WP
"RTN","CIAUDIC",121,0)
 E  D ^DIC:DIC(0)'["U",FILE^DICN:DIC(0)["U"
"RTN","CIAUDIC",122,0)
 S %CIAIEN=+Y
"RTN","CIAUDIC",123,0)
 I %CIAIEN>0,$P(%CIAARG,";",2,99)'="" D DA,6
"RTN","CIAUDIC",124,0)
 K DINUM
"RTN","CIAUDIC",125,0)
 Q
"RTN","CIAUDIC",126,0)
8 ; Lookup entry
"RTN","CIAUDIC",127,0)
 N %CIAOPT,%CIAP,CIAFN
"RTN","CIAUDIC",128,0)
 S %CIAOPT=$P(%CIAARG,";"),%CIAARG=$P(%CIAARG,";",2,999),CIAFN=+$P(%CIADIC,U,4)
"RTN","CIAUDIC",129,0)
 S %CIAP=+$P(%CIADIC,U,4),%CIAP=$P($G(^DD(%CIAP,.01,0)),U)
"RTN","CIAUDIC",130,0)
 S:$L(%CIAP) %CIAP=%CIAP_": "
"RTN","CIAUDIC",131,0)
 S %CIAIEN=$$ENTRY^CIAULKP(%CIADIC(2),%CIAOPT,%CIAP,"",%CIAARG,"","",$X,$Y,"","","HLP^CIAUDIC")
"RTN","CIAUDIC",132,0)
 Q
"RTN","CIAUDIC",133,0)
 ; Force DINUM
"RTN","CIAUDIC",134,0)
9 S DINUM=%CIAARG
"RTN","CIAUDIC",135,0)
 Q
"RTN","CIAUDIC",136,0)
HLP W $G(^DD(+CIAFN,.01,3)),!
"RTN","CIAUDIC",137,0)
 Q
"RTN","CIAUDIC",138,0)
 ; Word processing field (special case of #7)
"RTN","CIAUDIC",139,0)
WP N %CIAZ,%CIAZ1
"RTN","CIAUDIC",140,0)
 I X="@" D
"RTN","CIAUDIC",141,0)
 .K @%CIADIC(2)
"RTN","CIAUDIC",142,0)
 .S Y=0
"RTN","CIAUDIC",143,0)
 E  D
"RTN","CIAUDIC",144,0)
 .S %CIAZ=$G(@%CIADIC(2)@(0)),Y=$G(DINUM,1+$O(^($C(1)),-1))
"RTN","CIAUDIC",145,0)
 .S %CIAZ1=+$P(%CIAZ,U,4),%CIAZ=+$P(%CIAZ,U,3)
"RTN","CIAUDIC",146,0)
 .S:Y>%CIAZ %CIAZ=Y
"RTN","CIAUDIC",147,0)
 .S:'$D(^(Y)) %CIAZ1=%CIAZ1+1
"RTN","CIAUDIC",148,0)
 .S ^(0)=U_U_%CIAZ_U_%CIAZ1_U_$G(DT),^(Y,0)=X
"RTN","CIAUDIC",149,0)
 Q:$P(^DD(+DIC("P"),.01,0),U,2)'["a"
"RTN","CIAUDIC",150,0)
 S %CIAIEN=Y
"RTN","CIAUDIC",151,0)
 D DA,WPAUDIT^CCCODAUD(+DIC("P"),.DA,X,"")
"RTN","CIAUDIC",152,0)
 Q
"RTN","CIAUDIC",153,0)
 ; Trap unexpected error
"RTN","CIAUDIC",154,0)
ERROR S $P(%CIADIC,U)=-3
"RTN","CIAUDIC",155,0)
 Q %CIADIC
"RTN","CIAUDIC",156,0)
 ; Return field #
"RTN","CIAUDIC",157,0)
FLD(X) Q $S(X=+X:X,1:+$O(^DD(+$P(%CIADIC,U,4),"B",X,0)))
"RTN","CIAUDIC",158,0)
 ; Set up DA array
"RTN","CIAUDIC",159,0)
DA N %CIAZ,%CIAZ1,%CIAZ2
"RTN","CIAUDIC",160,0)
 K DA
"RTN","CIAUDIC",161,0)
 S:'$G(%CIAIEN) %CIAIEN=$P(%CIADIC,U,3)
"RTN","CIAUDIC",162,0)
 S %CIAZ=$P(%CIADIC,U,2),%CIAZ2=$L(%CIAZ,"|"),DA=%CIAIEN
"RTN","CIAUDIC",163,0)
 F %CIAZ1=2:1:%CIAZ2 S DA(%CIAZ2-%CIAZ1+1)=+$P(%CIAZ,"|",%CIAZ1)
"RTN","CIAUDIC",164,0)
 S %CIADIC(1)=U_$TR($P(%CIADIC,U,2),"|"),%CIADIC(2)=$E(%CIADIC(1),1,$L(%CIADIC(1))-1),%CIADIC(2)=%CIADIC(2)_$S(%CIADIC(2)["(":")",1:"")
"RTN","CIAUDIC",165,0)
 Q
"RTN","CIAUDT")
0^37^B5347313
"RTN","CIAUDT",1,0)
CIAUDT ;MSC/IND/DKM - FM date to formatted date;04-May-2006 08:19;DKM
"RTN","CIAUDT",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUDT",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUDT",4,0)
 ;=================================================================
"RTN","CIAUDT",5,0)
 ; Inputs:
"RTN","CIAUDT",6,0)
 ;   CIADAT = date to format (DHCP format or $H format)
"RTN","CIAUDT",7,0)
 ;   CIAFMT = date and time format control (optional)
"RTN","CIAUDT",8,0)
 ;      xxx0 = dd-mmm-yyyy
"RTN","CIAUDT",9,0)
 ;      xxx1 = mmm dd,yyyy
"RTN","CIAUDT",10,0)
 ;      xxx2 = mm/dd/yyyy
"RTN","CIAUDT",11,0)
 ;      xxx3 = mm-dd-yyyy
"RTN","CIAUDT",12,0)
 ;      xx0x = hh:mm
"RTN","CIAUDT",13,0)
 ;      xx1x = hh:mm xx
"RTN","CIAUDT",14,0)
 ;      x0xx = use space to separate date/time
"RTN","CIAUDT",15,0)
 ;      x1xx = use @ to separate date/time
"RTN","CIAUDT",16,0)
 ;      0xxx = allow leading zeros
"RTN","CIAUDT",17,0)
 ;      1xxx = remove leading zeros
"RTN","CIAUDT",18,0)
 ; Outputs:
"RTN","CIAUDT",19,0)
 ;   Returns formatted date
"RTN","CIAUDT",20,0)
 ;=================================================================
"RTN","CIAUDT",21,0)
ENTRY(CIADAT,CIAFMT) ; EP
"RTN","CIAUDT",22,0)
 S CIADAT=$G(CIADAT,$H)
"RTN","CIAUDT",23,0)
 Q:'CIADAT ""
"RTN","CIAUDT",24,0)
 N CIAZ1,CIAZ2,CIAZ3,CIAZ4,CIADLM,CIATM
"RTN","CIAUDT",25,0)
 S:CIADAT?1.N1",".N CIADAT=$$HTFM^XLFDT(CIADAT)
"RTN","CIAUDT",26,0)
 S CIAFMT=$G(CIAFMT)#100000,CIAFMT=CIAFMT#10000,CIAZ4=CIAFMT\1000,CIAFMT=CIAFMT#1000,CIADLM=$S(CIAFMT>99:"@",1:" "),CIAFMT=CIAFMT#100,CIATM=CIAFMT\10,CIAFMT=CIAFMT#10
"RTN","CIAUDT",27,0)
 I CIADAT\1 D
"RTN","CIAUDT",28,0)
 .S CIAZ3=CIADAT\1+17000000,CIAZ1=$E(CIAZ3,7,8),CIAZ2=$E(CIAZ3,5,6),CIAZ3=$E(CIAZ3,1,4)
"RTN","CIAUDT",29,0)
 .S:CIAZ4 CIAZ1=+CIAZ1,CIAZ2=+CIAZ2
"RTN","CIAUDT",30,0)
 .S:CIAFMT<2 CIAZ2=$P("Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec",",",CIAZ2)
"RTN","CIAUDT",31,0)
 .S CIAZ1=$S('CIAFMT:CIAZ1_"-"_CIAZ2_"-"_CIAZ3,CIAFMT=1:CIAZ2_" "_CIAZ1_","_CIAZ3,CIAFMT=2:CIAZ2_"/"_CIAZ1_"/"_CIAZ3,1:CIAZ2_"-"_CIAZ1_"-"_CIAZ3)
"RTN","CIAUDT",32,0)
 E  S CIAZ1=""
"RTN","CIAUDT",33,0)
 S CIAZ2=CIADAT#1*10000+10000\1
"RTN","CIAUDT",34,0)
 I CIAZ2=10000!(CIAZ2>12400) S CIAZ2=""
"RTN","CIAUDT",35,0)
 E  D
"RTN","CIAUDT",36,0)
 .S:CIATM CIAZ2=$S(CIAZ2=12400:CIAZ2-1200_" am",CIAZ2>11299:CIAZ2-1200_" pm",CIAZ2>11199:CIAZ2_" pm",CIAZ2<10099:CIAZ2+1200_" am",1:CIAZ2_" am")
"RTN","CIAUDT",37,0)
 .S CIAZ3=$S(CIAZ4:+$E(CIAZ2,2,3),1:$E(CIAZ2,2,3)),CIAZ2=CIAZ3_":"_$E(CIAZ2,4,8)
"RTN","CIAUDT",38,0)
 Q CIAZ1_$S('$L(CIAZ2):"",$L(CIAZ1):CIADLM,1:"")_CIAZ2
"RTN","CIAUEDT")
0^38^B50153090
"RTN","CIAUEDT",1,0)
CIAUEDT ;MSC/IND/DKM - Screen-oriented line editor;20-Jan-2015 13:23;DKM
"RTN","CIAUEDT",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUEDT",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUEDT",4,0)
 ;=================================================================
"RTN","CIAUEDT",5,0)
 ; Inputs:
"RTN","CIAUEDT",6,0)
 ;   CIADATA  = Data to edit
"RTN","CIAUEDT",7,0)
 ;   CIALEN   = Maximum length of data
"RTN","CIAUEDT",8,0)
 ;   CIAX     = Starting column position
"RTN","CIAUEDT",9,0)
 ;   CIAY     = Starting row position
"RTN","CIAUEDT",10,0)
 ;   CIAVALD  = List of valid inputs (optional)
"RTN","CIAUEDT",11,0)
 ;   CIADISV  = DISV node to save under (optional)
"RTN","CIAUEDT",12,0)
 ;   CIATERM  = Valid input terminators (default=<CR>)
"RTN","CIAUEDT",13,0)
 ;   CIAABRT  = Valid input abort characters (default=none)
"RTN","CIAUEDT",14,0)
 ;   CIARM    = Right margin setting (default=IOM or 80)
"RTN","CIAUEDT",15,0)
 ;   CIAQUIT  = Exit code (returned)
"RTN","CIAUEDT",16,0)
 ;   CIAOPT   = Input options
"RTN","CIAUEDT",17,0)
 ;      C = Mark <CR> with ~
"RTN","CIAUEDT",18,0)
 ;      E = Echo off
"RTN","CIAUEDT",19,0)
 ;      H = Horizontal scroll
"RTN","CIAUEDT",20,0)
 ;      I = No timeout
"RTN","CIAUEDT",21,0)
 ;      L = Lowercase only
"RTN","CIAUEDT",22,0)
 ;      O = Overwrite mode
"RTN","CIAUEDT",23,0)
 ;      Q = Quiet mode
"RTN","CIAUEDT",24,0)
 ;      R = Reverse video
"RTN","CIAUEDT",25,0)
 ;      T = Auto-terminate
"RTN","CIAUEDT",26,0)
 ;      U = Uppercase only
"RTN","CIAUEDT",27,0)
 ;      V = Up/down cursor keys terminate input
"RTN","CIAUEDT",28,0)
 ;      X = Suppress auto-erase
"RTN","CIAUEDT",29,0)
 ; Outputs:
"RTN","CIAUEDT",30,0)
 ;   Return value = Edited data
"RTN","CIAUEDT",31,0)
 ;=================================================================
"RTN","CIAUEDT",32,0)
ENTRY(CIADATA,CIALEN,CIAX,CIAY,CIAVALD,CIAOPT,CIADISV,CIATERM,CIAABRT,CIARM,CIAQUIT) ;
"RTN","CIAUEDT",33,0)
 N CIAZ,CIAZ1,CIAZ2,CIASAVE,CIAINS,CIAAE,CIABUF,CIATAB,CIAPOS,CIAEON,CIALEFT,CIABEL,CIAMAX,CIARVON,CIARVOFF,CIAC,CIAW
"RTN","CIAUEDT",34,0)
 S CIAVALD=$G(CIAVALD),CIAOPT=$$UP^XLFSTR($G(CIAOPT)),CIABEL=$S(CIAOPT'["Q":$C(7),1:""),CIADISV=$G(CIADISV)
"RTN","CIAUEDT",35,0)
 S:$G(CIATERM)="" CIATERM=$C(13)                                         ; Valid line terminators
"RTN","CIAUEDT",36,0)
 S CIAABRT=$G(CIAABRT)                                                   ; Valid input abort keys
"RTN","CIAUEDT",37,0)
 S CIARVON=$C(27,91,55,109),CIARVOFF=$C(27,91,109)                       ; Reverse video control
"RTN","CIAUEDT",38,0)
 S CIAINS=CIAOPT'["O"                                                    ; Default mode = insert
"RTN","CIAUEDT",39,0)
 S CIAAE=CIAOPT'["X"                                                     ; Auto-erase option
"RTN","CIAUEDT",40,0)
 S CIAEON=CIAOPT'["E"                                                    ; No echo option
"RTN","CIAUEDT",41,0)
 I CIAOPT["I"!'$D(DTIME) N DTIME S DTIME=999999                          ; Suppress timeout option
"RTN","CIAUEDT",42,0)
 S CIABUF=""
"RTN","CIAUEDT",43,0)
 S CIARM=$G(CIARM,$G(IOM,80))                                            ; Display width
"RTN","CIAUEDT",44,0)
 S CIATAB=$C(9)                                                         ; Tab character
"RTN","CIAUEDT",45,0)
 S CIAX=$G(CIAX,$X),CIAY=$G(CIAY,$Y),CIAW=CIARM-CIAX
"RTN","CIAUEDT",46,0)
 S:CIAW'>0 CIAW=1
"RTN","CIAUEDT",47,0)
 S:'$G(CIALEN) CIALEN=CIAW                                                ; Default field width
"RTN","CIAUEDT",48,0)
 S CIAMAX=$S(CIAOPT["H":250,1:CIALEN)                                     ; Maximum data length
"RTN","CIAUEDT",49,0)
 S (CIASAVE,CIADATA)=$E($G(CIADATA),1,CIAMAX)                              ; Truncate data if too long
"RTN","CIAUEDT",50,0)
 I $$NEWERR^%ZTER N $ET S $ET=""
"RTN","CIAUEDT",51,0)
 S @$$TRAP^CIAUOS("ERROR^CIAUEDT")
"RTN","CIAUEDT",52,0)
 D RM^CIAUOS(0)
"RTN","CIAUEDT",53,0)
 X ^%ZOSF("EOFF")
"RTN","CIAUEDT",54,0)
 F  Q:CIADATA'[CIATAB  S CIAZ=$P(CIADATA,CIATAB),CIADATA=CIAZ_$J("",8-($L(CIAZ)#8))_$P(CIADATA,CIATAB,2,999)
"RTN","CIAUEDT",55,0)
RESTART D RESET
"RTN","CIAUEDT",56,0)
AGAIN F CIAQUIT=0:0 Q:CIAQUIT  D NXT S CIAAE=0
"RTN","CIAUEDT",57,0)
 X ^%ZOSF("EON")
"RTN","CIAUEDT",58,0)
 W $$XY^CIAU(CIAX,CIAY),$S(CIAOPT["R":CIARVOFF,1:"")
"RTN","CIAUEDT",59,0)
 I CIADISV'="" Q:"^^"[CIADATA CIADATA S:CIADATA=" " CIADATA=$G(^DISV(DUZ,CIADISV))
"RTN","CIAUEDT",60,0)
 S:CIADISV'="" ^DISV(DUZ,CIADISV)=CIADATA
"RTN","CIAUEDT",61,0)
 Q CIADATA                                                              ; Return to calling routine
"RTN","CIAUEDT",62,0)
NXT D POSCUR()                                                            ; Position cursor
"RTN","CIAUEDT",63,0)
 R *CIAC:DTIME                                                          ; Next character typed
"RTN","CIAUEDT",64,0)
 I CIAC=27 D ESC Q:'CIAC
"RTN","CIAUEDT",65,0)
 I CIAC<1!(CIAABRT[$C(CIAC)) S CIADATA=U,CIAQUIT=1 Q
"RTN","CIAUEDT",66,0)
 I CIATERM[$C(CIAC) D TERM Q
"RTN","CIAUEDT",67,0)
 I CIAC<28 D:CIAC'=27 @("CTL"_$C(CIAC+64)) Q
"RTN","CIAUEDT",68,0)
 I CIAC=127!(CIAC=240) D CTLH Q
"RTN","CIAUEDT",69,0)
 I CIAC>64,CIAC<91,CIAOPT["L" S CIAC=CIAC+32
"RTN","CIAUEDT",70,0)
 E  I CIAC>96,CIAC<123,CIAOPT["U" S CIAC=CIAC-32
"RTN","CIAUEDT",71,0)
 I $L(CIAVALD),CIAVALD'[$C(CIAC) D RAISE^CIAUOS()
"RTN","CIAUEDT",72,0)
 D:CIAAE CTLK,POSCUR()                                                  ; Erase buffer if auto erase on
"RTN","CIAUEDT",73,0)
 D INSW($C(CIAC))
"RTN","CIAUEDT",74,0)
 S CIAQUIT=CIAPOS=CIALEN&(CIAOPT["T")
"RTN","CIAUEDT",75,0)
 Q
"RTN","CIAUEDT",76,0)
CTLA S CIAINS='CIAINS                                                        ; Toggle insert mode
"RTN","CIAUEDT",77,0)
 Q
"RTN","CIAUEDT",78,0)
CTLB D MOVETO(0)                                                           ; Move cursor to beginning
"RTN","CIAUEDT",79,0)
 Q
"RTN","CIAUEDT",80,0)
CTLX S CIADATA=CIASAVE                                                       ; Restore buffer to original
"RTN","CIAUEDT",81,0)
 G RESET
"RTN","CIAUEDT",82,0)
CTLE D MOVETO($L(CIADATA))                                                  ; Move cursor to end
"RTN","CIAUEDT",83,0)
 Q
"RTN","CIAUEDT",84,0)
CTLI D INSW($J("",8-(CIAPOS#8)))                                            ; Insert expanded tab
"RTN","CIAUEDT",85,0)
 Q
"RTN","CIAUEDT",86,0)
CTLJ F CIAZ=CIAPOS:-1:1 Q:$A(CIADATA,CIAZ)'=32                                     ; Find previous nonspace
"RTN","CIAUEDT",87,0)
 F CIAZ=CIAZ:-1:1 Q:$A(CIADATA,CIAZ)=32                                          ; Find previous space
"RTN","CIAUEDT",88,0)
 S CIABUF=$E(CIADATA,CIAZ,CIAPOS)                                            ; Save deleted portion
"RTN","CIAUEDT",89,0)
 S CIADATA=$E(CIADATA,1,CIAZ-1)_$E(CIADATA,CIAPOS+1,CIALEN)                    ; Remove word
"RTN","CIAUEDT",90,0)
 D MOVETO(CIAZ-1)
"RTN","CIAUEDT",91,0)
 Q
"RTN","CIAUEDT",92,0)
CTLK S CIABUF=CIADATA                                                        ; Save buffer
"RTN","CIAUEDT",93,0)
 S CIADATA=""                                                           ; Erase buffer
"RTN","CIAUEDT",94,0)
 D RESET
"RTN","CIAUEDT",95,0)
 Q
"RTN","CIAUEDT",96,0)
CTLL S CIABUF=$E(CIADATA,CIAPOS+1,CIALEN)                                      ; Save deleted portion
"RTN","CIAUEDT",97,0)
 S CIADATA=$E(CIADATA,1,CIAPOS)                                           ; Truncate at current position
"RTN","CIAUEDT",98,0)
 D DSPLY(CIAPOS)
"RTN","CIAUEDT",99,0)
 Q
"RTN","CIAUEDT",100,0)
CTLM D POSCUR(CIAPOS),INSW("~"):CIAOPT["C",MOVETO(CIAPOS-$X+CIAX+CIAW)
"RTN","CIAUEDT",101,0)
 Q
"RTN","CIAUEDT",102,0)
CTLR D INSW(CIABUF)                                                         ; Insert at current position
"RTN","CIAUEDT",103,0)
 Q
"RTN","CIAUEDT",104,0)
CTLT D CTLL
"RTN","CIAUEDT",105,0)
 Q
"RTN","CIAUEDT",106,0)
CTLU S CIABUF=$E(CIADATA,1,CIAPOS)                                            ; Save deleted portion
"RTN","CIAUEDT",107,0)
 S CIADATA=$E(CIADATA,CIAPOS+1,CIALEN)                                     ; Remove to left of cursor
"RTN","CIAUEDT",108,0)
 D RESET
"RTN","CIAUEDT",109,0)
 Q
"RTN","CIAUEDT",110,0)
CTLH I 'CIAPOS W CIABEL Q
"RTN","CIAUEDT",111,0)
 D LEFT
"RTN","CIAUEDT",112,0)
CTLD S CIADATA=$E(CIADATA,1,CIAPOS)_$E(CIADATA,CIAPOS+2,CIAMAX)                  ; Delete character to left
"RTN","CIAUEDT",113,0)
 D DSPLY(CIAPOS,1)
"RTN","CIAUEDT",114,0)
 Q
"RTN","CIAUEDT",115,0)
TERM S CIAQUIT=2
"RTN","CIAUEDT",116,0)
 Q
"RTN","CIAUEDT",117,0)
ESC R *CIAZ:1
"RTN","CIAUEDT",118,0)
 R:CIAZ>0 *CIAZ:1
"RTN","CIAUEDT",119,0)
 S CIAC=0
"RTN","CIAUEDT",120,0)
 G UP:CIAZ=65,DOWN:CIAZ=66,RIGHT:CIAZ=67,LEFT:CIAZ=68                              ;Execute code
"RTN","CIAUEDT",121,0)
 S CIAC=27
"RTN","CIAUEDT",122,0)
 Q
"RTN","CIAUEDT",123,0)
DSPLY(CIAP1,CIAP2) ;
"RTN","CIAUEDT",124,0)
 Q:'CIAEON                                                              ; Refresh buffer display starting at position CIAP1
"RTN","CIAUEDT",125,0)
 N CIAZ,CIAZ1
"RTN","CIAUEDT",126,0)
 S CIAP1=+$G(CIAP1,CIALEFT),CIAZ=$E(CIADATA,CIAP1+1,CIALEFT+CIALEN),CIAP2=$S($D(CIAP2):CIAP2+$L(CIAZ),1:CIALEN-CIAP1+CIALEFT)
"RTN","CIAUEDT",127,0)
 S:CIAP2>CIALEN CIAP2=CIALEN
"RTN","CIAUEDT",128,0)
 S CIAZ=CIAZ_$J("",CIAP2-$L(CIAZ))
"RTN","CIAUEDT",129,0)
 F  D  Q:CIAZ=""
"RTN","CIAUEDT",130,0)
 .D POSCUR(CIAP1)
"RTN","CIAUEDT",131,0)
 .S CIAZ1=CIARM-$X
"RTN","CIAUEDT",132,0)
 .S:CIAZ1<1 CIAZ1=1
"RTN","CIAUEDT",133,0)
 .W $E(CIAZ,1,CIAZ1)
"RTN","CIAUEDT",134,0)
 .S CIAZ=$E(CIAZ,CIAZ1+1,999),CIAP1=CIAP1+CIAZ1
"RTN","CIAUEDT",135,0)
 Q
"RTN","CIAUEDT",136,0)
INSW(CIATXT) ;
"RTN","CIAUEDT",137,0)
 S:CIAPOS>$L(CIADATA) CIADATA=CIADATA_$J("",CIAPOS-$L(CIADATA))              ; Pad if past end of buffer
"RTN","CIAUEDT",138,0)
 S CIADATA=$E($E(CIADATA,1,CIAPOS)_CIATXT_$E(CIADATA,CIAPOS+2-CIAINS,CIAMAX),1,CIAMAX)
"RTN","CIAUEDT",139,0)
 D DSPLY(CIAPOS,0),MOVETO(CIAPOS+$L(CIATXT))
"RTN","CIAUEDT",140,0)
 Q
"RTN","CIAUEDT",141,0)
POSCUR(CIAP) ;
"RTN","CIAUEDT",142,0)
 N CIAZX,CIAZY
"RTN","CIAUEDT",143,0)
 S CIAP=+$G(CIAP,CIAPOS),CIAZX=CIAP-CIALEFT,CIAZY=CIAZX\CIAW+CIAY,CIAZX=CIAZX#CIAW+CIAX
"RTN","CIAUEDT",144,0)
 W $$XY^CIAU(CIAZX,CIAZY)
"RTN","CIAUEDT",145,0)
 Q
"RTN","CIAUEDT",146,0)
MOVETO(CIAP) ;
"RTN","CIAUEDT",147,0)
 I CIAP>CIAMAX!(CIAP<0) W CIABEL Q
"RTN","CIAUEDT",148,0)
 S CIAPOS=CIAP,CIAP=CIALEFT
"RTN","CIAUEDT",149,0)
 S:CIAPOS<CIALEFT CIALEFT=CIAPOS-CIAW-1
"RTN","CIAUEDT",150,0)
 S:CIALEFT+CIALEN<CIAPOS CIALEFT=CIAPOS-CIAW+1
"RTN","CIAUEDT",151,0)
 S:CIALEFT'<CIAMAX CIALEFT=CIAMAX-CIAW
"RTN","CIAUEDT",152,0)
 S:CIALEFT<0 CIALEFT=0
"RTN","CIAUEDT",153,0)
 D DSPLY():CIALEFT'=CIAP,POSCUR()
"RTN","CIAUEDT",154,0)
 Q
"RTN","CIAUEDT",155,0)
UP I CIAOPT["V" S CIAQUIT=3
"RTN","CIAUEDT",156,0)
 E  D MOVETO(CIAPOS-CIAW)
"RTN","CIAUEDT",157,0)
 Q
"RTN","CIAUEDT",158,0)
DOWN I CIAOPT["V" S CIAQUIT=4
"RTN","CIAUEDT",159,0)
 E  D MOVETO(CIAPOS+CIAW)
"RTN","CIAUEDT",160,0)
 Q
"RTN","CIAUEDT",161,0)
RIGHT D MOVETO(CIAPOS+1)
"RTN","CIAUEDT",162,0)
 Q
"RTN","CIAUEDT",163,0)
LEFT D MOVETO(CIAPOS-1)
"RTN","CIAUEDT",164,0)
 Q
"RTN","CIAUEDT",165,0)
RESET W $S(CIAOPT["R":CIARVON,1:CIARVOFF)
"RTN","CIAUEDT",166,0)
 S (CIAPOS,CIALEFT)=0                                                    ; Current edit offset
"RTN","CIAUEDT",167,0)
 D DSPLY()                                                             ; Refresh display
"RTN","CIAUEDT",168,0)
 Q
"RTN","CIAUEDT",169,0)
ERROR W CIABEL                                                               ; Sound bell
"RTN","CIAUEDT",170,0)
 S @$$TRAP^CIAUOS("ERROR^CIAUEDT")
"RTN","CIAUEDT",171,0)
 G AGAIN
"RTN","CIAUHFS")
0^61^B5207554
"RTN","CIAUHFS",1,0)
CIAUHFS ;MSC/IND/DKM - Host IO Support ;04-May-2006 08:19;DKM
"RTN","CIAUHFS",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUHFS",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUHFS",4,0)
 ;=================================================================
"RTN","CIAUHFS",5,0)
 ; Capture output to HFS and optionally redirect to global
"RTN","CIAUHFS",6,0)
 ;   EXEC = Code to execute
"RTN","CIAUHFS",7,0)
 ;   ROOT = Global root to receive output (or null to leave in HFS)
"RTN","CIAUHFS",8,0)
 ;   RM   = Right margin setting (defaults to 80)
"RTN","CIAUHFS",9,0)
CAPTURE(EXEC,ROOT,RM) ;EP
"RTN","CIAUHFS",10,0)
 N UFN,HNDL,TMP,IOM,IOSL,IOST,IOF,IOT,IOS,$ET
"RTN","CIAUHFS",11,0)
 S $ET="",UFN=$$UFN^CIAU,TMP=$$DEFDIR^CIAUOS,HNDL="CIAUHFS",@$$TRAP^CIAUOS("ERR^CIAUHFS")
"RTN","CIAUHFS",12,0)
 S:$L($G(ROOT)) ROOT=$NA(@ROOT)
"RTN","CIAUHFS",13,0)
 D OPEN^%ZISH(HNDL,TMP,UFN,"W")
"RTN","CIAUHFS",14,0)
 D:'POP IOVAR(.RM),EXEC,HFSCLOSE(HNDL,UFN)
"RTN","CIAUHFS",15,0)
 Q:$Q TMP_UFN
"RTN","CIAUHFS",16,0)
 Q
"RTN","CIAUHFS",17,0)
EXEC X EXEC
"RTN","CIAUHFS",18,0)
 Q
"RTN","CIAUHFS",19,0)
 ; Error trap
"RTN","CIAUHFS",20,0)
ERR D @^%ZOSF("ERRTN"),HFSCLOSE(HNDL,UFN,1)
"RTN","CIAUHFS",21,0)
 Q:$Q ""
"RTN","CIAUHFS",22,0)
 Q
"RTN","CIAUHFS",23,0)
 ; Setup IO variables based on IO Device
"RTN","CIAUHFS",24,0)
IOVAR(XIOM,XIO,XIOSL,XIOST,XIOF,XIOT) ;
"RTN","CIAUHFS",25,0)
 N X
"RTN","CIAUHFS",26,0)
 S ION=$G(XIO,"CIAU HFS DEVICE"),IOS=+$O(^%ZIS(1,"B",ION,0)),IOM=80,IOSL=62,IOST=$G(XIOST,"P-OTHER"),IOF=$G(XIOF,""""""),IOT=$G(XIOT,"HFS")
"RTN","CIAUHFS",27,0)
 S:$D(^%ZIS(1,IOS,0)) IOST(0)=+$G(^("SUBTYPE")),IOT=$G(^("TYPE"),IOT),IOST=$P($G(^%ZIS(2,IOST(0),0),IOST),U)
"RTN","CIAUHFS",28,0)
 S X=$O(^%ZIS(2,"B",IOST,0))
"RTN","CIAUHFS",29,0)
 S:X IOST(0)=X,X=$G(^%ZIS(2,X,1)),IOM=$P(X,U),IOF=$P(X,U,2),IOSL=$P(X,U,3)
"RTN","CIAUHFS",30,0)
 S:$G(XIOM) IOM=XIOM
"RTN","CIAUHFS",31,0)
 S:$G(XIOSL) IOSL=XIOSL
"RTN","CIAUHFS",32,0)
 U IO
"RTN","CIAUHFS",33,0)
 Q
"RTN","CIAUHFS",34,0)
 ; Move HFS data to global (if ROOT specified) and cleanup
"RTN","CIAUHFS",35,0)
HFSCLOSE(HNDL,UFN,BAD) ;
"RTN","CIAUHFS",36,0)
 N DEL
"RTN","CIAUHFS",37,0)
 D GETDEV^%ZISUTL(HNDL)
"RTN","CIAUHFS",38,0)
 I IOT="HFS" D
"RTN","CIAUHFS",39,0)
 .D CLOSE^%ZISH(HNDL)
"RTN","CIAUHFS",40,0)
 E  D RMDEV^%ZISUTL(HNDL)
"RTN","CIAUHFS",41,0)
 Q:'$L($G(ROOT))
"RTN","CIAUHFS",42,0)
 K @ROOT
"RTN","CIAUHFS",43,0)
 I '$G(BAD),$$FTG^%ZISH($$DEFDIR^CIAUOS,UFN,$NA(@ROOT@(1)),$QL(ROOT)+1) D STRIP
"RTN","CIAUHFS",44,0)
 S DEL(UFN)=""
"RTN","CIAUHFS",45,0)
 I $$DEL^%ZISH($$DEFDIR^CIAUOS,"DEL")
"RTN","CIAUHFS",46,0)
 Q
"RTN","CIAUHFS",47,0)
 ; Strip off control chars and remove leading/trailing blank lines
"RTN","CIAUHFS",48,0)
STRIP N I,J,K,X
"RTN","CIAUHFS",49,0)
 S (I,J)=0
"RTN","CIAUHFS",50,0)
 F  S I=$O(@ROOT@(I)) Q:'I  S X=@ROOT@(I) D  S @ROOT@(I)=X
"RTN","CIAUHFS",51,0)
 .I X[$C(8),$L(X,$C(8))=$L(X,$C(95)) S X=$TR(X,$C(7,8,12,95))
"RTN","CIAUHFS",52,0)
 .E  S X=$TR(X,$C(7,8,12))
"RTN","CIAUHFS",53,0)
 .S:$L(X) J=I,K=$G(K,J)
"RTN","CIAUHFS",54,0)
 I $D(K) F  S I=$O(@ROOT@(I)) Q:I=K  K @ROOT@(I)
"RTN","CIAUHFS",55,0)
 F  S J=$O(@ROOT@(J)) Q:'J  K @ROOT@(J)
"RTN","CIAUHFS",56,0)
 Q
"RTN","CIAUIMP")
0^44^B12183185
"RTN","CIAUIMP",1,0)
CIAUIMP ;MSC/IND/DKM - Import text into FileMan file;04-May-2006 08:19;DKM
"RTN","CIAUIMP",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUIMP",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUIMP",4,0)
 ;=================================================================
"RTN","CIAUIMP",5,0)
 ; Imports data from a specially formatted text file into a
"RTN","CIAUIMP",6,0)
 ; FileMan file.
"RTN","CIAUIMP",7,0)
 ; Inputs:
"RTN","CIAUIMP",8,0)
 ;   CIAINP  = Full input file or global specification.
"RTN","CIAUIMP",9,0)
 ;   CIATRACE= If nonzero, generates a debug trace.
"RTN","CIAUIMP",10,0)
 ; Outputs:
"RTN","CIAUIMP",11,0)
 ;   Returns status code^status message.  Status code of 0 means
"RTN","CIAUIMP",12,0)
 ;   successful completion.
"RTN","CIAUIMP",13,0)
 ;=================================================================
"RTN","CIAUIMP",14,0)
ENTRY(CIAINP,CIATRACE) ;
"RTN","CIAUIMP",15,0)
 N CIALN,CIAFN,CIALVL,CIABM,CIAC,CIALBL,CIAQT,CIAST,CIAIO,CIAGBL
"RTN","CIAUIMP",16,0)
 S @$$TRAP^CIAUOS("ERROR^CIAUIMP")
"RTN","CIAUIMP",17,0)
 S CIAFN=0,CIALVL=-1,CIATRACE=+$G(CIATRACE),CIAST=0,CIAIO=$I,U="^",CIAC=0,CIAGBL=$E(CIAINP)=U
"RTN","CIAUIMP",18,0)
 I CIAGBL S CIAINP=$$CREF^DILF(CIAINP)
"RTN","CIAUIMP",19,0)
 E  D OPEN^CIAUOS(.CIAINP,"R")
"RTN","CIAUIMP",20,0)
 F  Q:$$READ  D  Q:CIAST
"RTN","CIAUIMP",21,0)
 .U CIAIO
"RTN","CIAUIMP",22,0)
 .W:CIATRACE=1 CIAC,*13
"RTN","CIAUIMP",23,0)
 .W:CIATRACE=2 CIAC_": ",$$TRUNC^CIAU(CIALN,$G(IOM,80)-$X-2),!
"RTN","CIAUIMP",24,0)
 .D DOIT(CIALN)
"RTN","CIAUIMP",25,0)
 D:'CIAGBL CLOSE^CIAUOS(.CIAINP)
"RTN","CIAUIMP",26,0)
 Q CIAST
"RTN","CIAUIMP",27,0)
READ() I 'CIAGBL S CIAC=CIAC+1 Q $$READ^CIAUOS(.CIALN,CIAINP)
"RTN","CIAUIMP",28,0)
 S CIAC=$O(@CIAINP@(CIAC))
"RTN","CIAUIMP",29,0)
 Q:'CIAC 1
"RTN","CIAUIMP",30,0)
 I $D(@CIAINP@(CIAC))#2 S CIALN=@CIAINP@(CIAC) Q 0
"RTN","CIAUIMP",31,0)
 I $D(@CIAINP@(CIAC,0))#2 S CIALN=@CIAINP@(CIAC,0) Q 0
"RTN","CIAUIMP",32,0)
 Q 1
"RTN","CIAUIMP",33,0)
ERROR D ERR("Fatal error",$$EC^%ZOSV)
"RTN","CIAUIMP",34,0)
 Q CIAST
"RTN","CIAUIMP",35,0)
DOIT(CIALN) ;
"RTN","CIAUIMP",36,0)
 N CIAZ,CIAL,CIAFLD,CIAWP
"RTN","CIAUIMP",37,0)
 S CIALN=$$TRIM^CIAU(CIALN)
"RTN","CIAUIMP",38,0)
 I ";"[$E(CIALN) W:CIATRACE=3 $P(CIALN,";",2,999),! Q
"RTN","CIAUIMP",39,0)
 F CIAL=0:1 Q:$E(CIALN,CIAL+1)'="."
"RTN","CIAUIMP",40,0)
 S CIALN=$E(CIALN,CIAL+1,999)
"RTN","CIAUIMP",41,0)
 I CIALN'[":" D ERR("Missing label",CIALN) Q
"RTN","CIAUIMP",42,0)
 S CIALBL=$$TRIM^CIAU($P(CIALN,":")),CIALN=$$TRIM^CIAU($P(CIALN,":",2,999))
"RTN","CIAUIMP",43,0)
 I 'CIAL S CIAFN=$$FILE(CIALN) Q
"RTN","CIAUIMP",44,0)
 I CIAL>CIALVL D ERR("Invalid nesting",CIALN) Q
"RTN","CIAUIMP",45,0)
 S CIALVL=CIAL,CIAFN=+$P(CIABM(CIALVL),U,4)
"RTN","CIAUIMP",46,0)
 S CIAFLD=$$FLD(CIALBL,CIAFN)
"RTN","CIAUIMP",47,0)
 S CIAZ=+$P($G(^DD(CIAFN,CIAFLD,0)),U,2)
"RTN","CIAUIMP",48,0)
 I CIAZ D  Q:CIAST
"RTN","CIAUIMP",49,0)
 .S CIALVL=CIALVL+1,CIAFN=CIAZ,CIABM(CIALVL)=$$ENTRY^CIAUDIC(CIABM(CIALVL-1),"+"_CIAFN)
"RTN","CIAUIMP",50,0)
 .I +CIABM(CIALVL)<0 D ERR("Error access subfile entry",CIALBL) Q
"RTN","CIAUIMP",51,0)
 .S CIAFLD=$$FLD(.01,CIAFN)
"RTN","CIAUIMP",52,0)
 I 'CIAFLD D ERR("Unknown field",CIALBL) Q
"RTN","CIAUIMP",53,0)
 I 'CIAWP,CIALN="" Q
"RTN","CIAUIMP",54,0)
 ;S:CIALN="+" CIALN=U_$TR($P(CIABM(CIALVL),U,2),"|",",")_"$C(1))",CIALN=1+$O(@CIALN,-1)\1
"RTN","CIAUIMP",55,0)
 I CIAFLD=.01!'CIABM(CIALVL)!CIAWP D  Q
"RTN","CIAUIMP",56,0)
 .I 'CIAWP,CIAFLD'=.01 D ERR("First field is not primary index",CIALBL) Q
"RTN","CIAUIMP",57,0)
 .I 'CIAWP D
"RTN","CIAUIMP",58,0)
 ..S CIABM(CIALVL)=$$ENTRY^CIAUDIC(CIABM(CIALVL),"="_CIALN)
"RTN","CIAUIMP",59,0)
 ..S:+CIABM(CIALVL)'>0 CIABM(CIALVL)=$$ENTRY^CIAUDIC(CIABM(CIALVL),"="_$$UP^XLFSTR(CIALN))
"RTN","CIAUIMP",60,0)
 .S:+CIABM(CIALVL)'>0!CIAWP CIABM(CIALVL)=$$ENTRY^CIAUDIC(CIABM(CIALVL),$S(CIALN="@"&'CIAWP:CIALN,1:"~LX;.01///^S X=CIALN"))
"RTN","CIAUIMP",61,0)
 .I +CIABM(CIALVL)'>0,CIALN'="@" D ERR("Error adding entry",CIALN)
"RTN","CIAUIMP",62,0)
 S CIABM(CIALVL)=$$ENTRY^CIAUDIC(CIABM(CIALVL),"<;"_CIAFLD_"///^S X=CIALN")
"RTN","CIAUIMP",63,0)
 D:+CIABM(CIALVL)'>0 ERR("Error writing to field",CIALBL)
"RTN","CIAUIMP",64,0)
 Q
"RTN","CIAUIMP",65,0)
FILE(CIAFN) ;
"RTN","CIAUIMP",66,0)
 K CIABM
"RTN","CIAUIMP",67,0)
 S CIABM(1)=$$ENTRY^CIAUDIC(CIAFN),CIALVL=1
"RTN","CIAUIMP",68,0)
 I +CIABM(1)'<0 S CIAFN=+$P(CIABM(1),U,4)
"RTN","CIAUIMP",69,0)
 E  D ERR("Error accessing database",CIAFN)
"RTN","CIAUIMP",70,0)
 Q CIAFN
"RTN","CIAUIMP",71,0)
FLD(CIANM,CIAFN) ;
"RTN","CIAUIMP",72,0)
 N CIAZ
"RTN","CIAUIMP",73,0)
 S CIAZ=$S(CIANM="":.01,CIANM=+CIANM:CIANM,1:+$O(^DD(CIAFN,"B",CIANM,0)))
"RTN","CIAUIMP",74,0)
 I '$D(^DD(CIAFN,CIAZ,0)) S CIAZ=0
"RTN","CIAUIMP",75,0)
 E  S CIAWP=$P(^(0),U,2)["W"
"RTN","CIAUIMP",76,0)
 Q CIAZ
"RTN","CIAUIMP",77,0)
ERR(CIAMSG,CIAX) ;
"RTN","CIAUIMP",78,0)
 S CIAST=CIAC_U_CIAMSG_$S($D(CIAX):": "_CIAX,1:"")
"RTN","CIAUIMP",79,0)
 W:CIATRACE=2 CIAC_": "_$P(CIAST,U,2,999),!
"RTN","CIAUIMP",80,0)
 Q
"RTN","CIAUIN")
1^45
"RTN","CIAUIN0")
0^46^B1602000
"RTN","CIAUIN0",1,0)
CIAUIN0 ;MSC/IND/DKM - Platform-dependent operations;04-May-2006 08:19;DKM
"RTN","CIAUIN0",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUIN0",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUIN0",4,0)
 ;=================================================================
"RTN","CIAUIN0",5,0)
 ; Return version #
"RTN","CIAUIN0",6,0)
VER() Q $P($T(+2),";",3)
"RTN","CIAUIN0",7,0)
CVTFN(CIAFIL,CIAROOT) ;
"RTN","CIAUIN0",8,0)
 N CIAZ,CIAZ1,CIAD
"RTN","CIAUIN0",9,0)
 S CIAD=$$DIRDLM,CIAROOT=$G(CIAROOT)
"RTN","CIAUIN0",10,0)
 S:$E(CIAROOT,$L(CIAROOT))=$E(CIAD,3) CIAROOT=$E(CIAROOT,1,$L(CIAROOT)-1)
"RTN","CIAUIN0",11,0)
 S CIAZ=$L(CIAFIL,"/"),CIAZ1=$P(CIAFIL,"/",1,CIAZ-1),CIAFIL=$P(CIAFIL,"/",CIAZ)
"RTN","CIAUIN0",12,0)
 S:$L(CIAZ1) CIAROOT=CIAROOT_$E(CIAD,$S($L(CIAROOT):2,1:1))_$TR(CIAZ1,"/.-",$E(CIAD,2))
"RTN","CIAUIN0",13,0)
 Q CIAROOT_$S($L(CIAROOT):$E(CIAD,3),1:"")_CIAFIL
"RTN","CIAUIN0",14,0)
 ; Set right margin
"RTN","CIAUIN0",15,0)
RM(X) ;EP
"RTN","CIAUIN0",16,0)
 X ^%ZOSF("RM")
"RTN","CIAUIN0",17,0)
 Q
"RTN","CIAUIN0",18,0)
 ; Test for tag/routine
"RTN","CIAUIN0",19,0)
TEST(X) ;EP
"RTN","CIAUIN0",20,0)
 N Z
"RTN","CIAUIN0",21,0)
 S:X[U Z=$P(X,U),X=$P(X,U,2)
"RTN","CIAUIN0",22,0)
 Q:'$L(X)!(X'?.1"%"1.AN) 0
"RTN","CIAUIN0",23,0)
 X ^%ZOSF("TEST")
"RTN","CIAUIN0",24,0)
 Q $S('$T:0,$G(Z)="":1,Z'?.1"%"1.AN:0,1:$T(@Z^@X)'="")
"RTN","CIAUIN0",25,0)
ETRAP() Q $$NEWERR^%ZTER
"RTN","CIAUIN0",26,0)
 ; Open a host file
"RTN","CIAUIN0",27,0)
OPENX(X1,X2) ;EP
"RTN","CIAUIN0",28,0)
 D OPEN(.X1,.X2)
"RTN","CIAUIN0",29,0)
 Q X1
"RTN","CIAUIN16")
0^47^B4464566
"RTN","CIAUIN16",1,0)
CIAUIN16 ;MSC/IND/DKM - Inits for VMS;04-May-2006 08:19;DKM
"RTN","CIAUIN16",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUIN16",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUIN16",4,0)
 ;=================================================================
"RTN","CIAUIN16",5,0)
 ; Open a host file
"RTN","CIAUIN16",6,0)
OPEN(X1,X2) ;EP
"RTN","CIAUIN16",7,0)
 N Z
"RTN","CIAUIN16",8,0)
 S Z="X1"_$S("Rr"[$G(X2):":READONLY:0","Ww"[X2:":(NEWVERSION,RECORDSIZE=65535)","Bb"[X2:":(READONLY,BLOCKSIZE=0)",1:"")
"RTN","CIAUIN16",9,0)
 O @Z
"RTN","CIAUIN16",10,0)
 U X1
"RTN","CIAUIN16",11,0)
 S ^TMP("CIAUHFS",$J,X1)=""
"RTN","CIAUIN16",12,0)
 Q
"RTN","CIAUIN16",13,0)
 ; Close a host file
"RTN","CIAUIN16",14,0)
CLOSE(X) ;EP
"RTN","CIAUIN16",15,0)
 C X
"RTN","CIAUIN16",16,0)
 K ^TMP("CIAUHFS",$J,X)
"RTN","CIAUIN16",17,0)
 Q
"RTN","CIAUIN16",18,0)
 ; Close all open host files
"RTN","CIAUIN16",19,0)
CLOSEALL ;EP
"RTN","CIAUIN16",20,0)
 N Z
"RTN","CIAUIN16",21,0)
 S Z=""
"RTN","CIAUIN16",22,0)
 F  S Z=$O(^TMP("CIAUHFS",$J,Z)) Q:Z=""  C Z
"RTN","CIAUIN16",23,0)
 K ^TMP("CIAUHFS",$J)
"RTN","CIAUIN16",24,0)
 Q
"RTN","CIAUIN16",25,0)
EOF U $I:TRAP
"RTN","CIAUIN16",26,0)
 Q
"RTN","CIAUIN16",27,0)
EOFERR() Q $ZE["ENDOFILE"
"RTN","CIAUIN16",28,0)
 ; Read a line of data
"RTN","CIAUIN16",29,0)
READ(X,Y) ;EP
"RTN","CIAUIN16",30,0)
 U $G(Y,$I):NOTRAP
"RTN","CIAUIN16",31,0)
 R X:5
"RTN","CIAUIN16",32,0)
 Q $S($T:$ZA=-1,1:1)
"RTN","CIAUIN16",33,0)
 ; Delete a host file
"RTN","CIAUIN16",34,0)
DELETE(X) ;EP
"RTN","CIAUIN16",35,0)
 O X::0
"RTN","CIAUIN16",36,0)
 C X:DELETE
"RTN","CIAUIN16",37,0)
 Q
"RTN","CIAUIN16",38,0)
 ; Rename a host file
"RTN","CIAUIN16",39,0)
RENAME(X1,X2) ;EP
"RTN","CIAUIN16",40,0)
 O X1:READONLY:0
"RTN","CIAUIN16",41,0)
 C X1:RENAME=X2
"RTN","CIAUIN16",42,0)
 Q
"RTN","CIAUIN16",43,0)
 ; Return directory of files
"RTN","CIAUIN16",44,0)
DIR(X1,X2,X3) ;EP
"RTN","CIAUIN16",45,0)
 N Z,Z1
"RTN","CIAUIN16",46,0)
 S $ZT="DIRX^CIAUOS",X3=$G(X3,"^UTILITY(""DIR"",$J)")
"RTN","CIAUIN16",47,0)
 K @X3
"RTN","CIAUIN16",48,0)
 S:'$G(X2) X2=9999999999
"RTN","CIAUIN16",49,0)
 F Z=1:1:X2 S Z1=$ZSEARCH(X1),X1="" Q:Z1=""  S @X3@($P(Z1,"]",2))=""
"RTN","CIAUIN16",50,0)
DIRX Q
"RTN","CIAUIN16",51,0)
 ; Return default working directory
"RTN","CIAUIN16",52,0)
DEFDIR(X) ;EP
"RTN","CIAUIN16",53,0)
 Q $G(X,$P($G(^XTV(8989.3,1,"DEV")),U))
"RTN","CIAUIN16",54,0)
 ; Return path delimiters
"RTN","CIAUIN16",55,0)
DIRDLM() ;EP
"RTN","CIAUIN16",56,0)
 Q "[.]"
"RTN","CIAUIN16",57,0)
 ; Parse current error
"RTN","CIAUIN16",58,0)
ERR(X1,X2,X3) ;EP
"RTN","CIAUIN16",59,0)
 S X1=$P($P($ZE,", ",2),"-",3),X2=$P($P($ZE,", "),":"),X3=$P($ZE,", ",$S(X1="ZTRAP":4,1:3))
"RTN","CIAUIN16",60,0)
 Q
"RTN","CIAUIN16",61,0)
 ; Raise an exception
"RTN","CIAUIN16",62,0)
RAISE(X) ;EP
"RTN","CIAUIN16",63,0)
 ZT $G(X)
"RTN","CIAUIN16",64,0)
 ; Set error trap
"RTN","CIAUIN16",65,0)
TRAP(X) ;EP
"RTN","CIAUIN16",66,0)
 Q $S($D(X):"$ZT="""_X_"""",1:"$ZT")
"RTN","CIAUIN16",67,0)
 ; Return size of a file
"RTN","CIAUIN16",68,0)
SIZE(X) ;EP
"RTN","CIAUIN16",69,0)
 Q $ZC(%GETFILE,X,"BLS")*$ZC(%GETFILE,X,"EOF")
"RTN","CIAUIN16",70,0)
 ; Return free disk space
"RTN","CIAUIN16",71,0)
FREE(X) ;EP
"RTN","CIAUIN16",72,0)
 Q $ZC(%GETDVI,X,"FREEBLOCKS")/2048
"RTN","CIAUIN16",73,0)
 ; Return host ip address
"RTN","CIAUIN16",74,0)
HOSTIP() ;EP
"RTN","CIAUIN16",75,0)
 Q ""
"RTN","CIAUIN16",76,0)
 ; Return host name
"RTN","CIAUIN16",77,0)
HOSTNAME() ;EP
"RTN","CIAUIN16",78,0)
 Q ""
"RTN","CIAUIN16",79,0)
 ; Return client ip address
"RTN","CIAUIN16",80,0)
CLIENTIP() ;EP
"RTN","CIAUIN16",81,0)
 N IP,$ET
"RTN","CIAUIN16",82,0)
 S $ET="S $EC=""""",IP=$&%UCXGETPEER
"RTN","CIAUIN16",83,0)
 Q $A(IP,1)_"."_$A(IP,2)_"."_$A(IP,3)_"."_$A(IP,4)
"RTN","CIAUIN18")
0^48^B4685326
"RTN","CIAUIN18",1,0)
CIAUIN18 ;MSC/IND/DKM - Inits for Cache (Windows);04-May-2006 08:19;DKM
"RTN","CIAUIN18",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUIN18",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUIN18",4,0)
 ;=================================================================
"RTN","CIAUIN18",5,0)
 ; Open a host file
"RTN","CIAUIN18",6,0)
OPEN(X1,X2) ;EP
"RTN","CIAUIN18",7,0)
 O X1:$S("Rr"[$G(X2):"RS","Ww"[X2:"WNS","Bb"[X2:"RF",1:""):0
"RTN","CIAUIN18",8,0)
 E  ZT "NOPEN"
"RTN","CIAUIN18",9,0)
 U X1
"RTN","CIAUIN18",10,0)
 S ^TMP("CIAUHFS",$J,X1)=""
"RTN","CIAUIN18",11,0)
 Q
"RTN","CIAUIN18",12,0)
 ; Close a host file
"RTN","CIAUIN18",13,0)
CLOSE(X) ;EP
"RTN","CIAUIN18",14,0)
 C X
"RTN","CIAUIN18",15,0)
 K ^TMP("CIAUHFS",$J,X)
"RTN","CIAUIN18",16,0)
 Q
"RTN","CIAUIN18",17,0)
 ; Close all host files
"RTN","CIAUIN18",18,0)
CLOSEALL ;EP
"RTN","CIAUIN18",19,0)
 N Z
"RTN","CIAUIN18",20,0)
 S Z=""
"RTN","CIAUIN18",21,0)
 F  S Z=$O(^TMP("CIAUHFS",$J,Z)) Q:Z=""  C Z
"RTN","CIAUIN18",22,0)
 K ^TMP("CIAUHFS",$J)
"RTN","CIAUIN18",23,0)
 Q
"RTN","CIAUIN18",24,0)
EOF ZT:$ZA=-1 "ENDOFFILE"
"RTN","CIAUIN18",25,0)
 Q
"RTN","CIAUIN18",26,0)
EOFERR() Q:$ZE["ENDOFFILE"
"RTN","CIAUIN18",27,0)
 ; Read line of data
"RTN","CIAUIN18",28,0)
READ(X,Y) ;EP
"RTN","CIAUIN18",29,0)
 N $ET
"RTN","CIAUIN18",30,0)
 S $ET="",$ZT="READX^CIAUOS"
"RTN","CIAUIN18",31,0)
 U $G(Y,$I)
"RTN","CIAUIN18",32,0)
 Q:$ZEOF 1
"RTN","CIAUIN18",33,0)
 R X:5
"RTN","CIAUIN18",34,0)
 Q:$T 0
"RTN","CIAUIN18",35,0)
READX Q 1
"RTN","CIAUIN18",36,0)
 ; Delete a host file
"RTN","CIAUIN18",37,0)
DELETE(X) ;EP
"RTN","CIAUIN18",38,0)
 S X=$ZF(-1,"del """_X_"""")
"RTN","CIAUIN18",39,0)
 Q
"RTN","CIAUIN18",40,0)
 ; Rename a host file
"RTN","CIAUIN18",41,0)
RENAME(X1,X2) ;EP
"RTN","CIAUIN18",42,0)
 S X1=$ZF(-1,"ren """_X1_""" """_X2_"""")
"RTN","CIAUIN18",43,0)
 Q
"RTN","CIAUIN18",44,0)
 ; Return directory of files
"RTN","CIAUIN18",45,0)
DIR(X1,X2,X3) ;EP
"RTN","CIAUIN18",46,0)
 N Z,Z1,FDLM
"RTN","CIAUIN18",47,0)
 S FDLM=$E($$DIRDLM,1)
"RTN","CIAUIN18",48,0)
 S X3=$G(X3,$NA(^UTILITY("DIR",$J)))
"RTN","CIAUIN18",49,0)
 K @X3
"RTN","CIAUIN18",50,0)
 S:'$G(X2) X2=9999999999
"RTN","CIAUIN18",51,0)
 F Z=1:1:X2 S Z1=$ZSEARCH(X1),X1="" Q:Z1=""  D
"RTN","CIAUIN18",52,0)
 .S Z1=$P(Z1,FDLM,$L(Z1,FDLM))
"RTN","CIAUIN18",53,0)
 .S:$TR(Z1,".")'="" @X3@(Z1)=""
"RTN","CIAUIN18",54,0)
 Q
"RTN","CIAUIN18",55,0)
 ; Return path delimiters
"RTN","CIAUIN18",56,0)
DIRDLM() ;EP
"RTN","CIAUIN18",57,0)
 Q "\\\"
"RTN","CIAUIN18",58,0)
 ; Return default working directory
"RTN","CIAUIN18",59,0)
DEFDIR(X) ;EP
"RTN","CIAUIN18",60,0)
 N FDLM
"RTN","CIAUIN18",61,0)
 S FDLM=$E($$DIRDLM,1)
"RTN","CIAUIN18",62,0)
 S X=$G(X,$P($G(^XTV(8989.3,1,"DEV")),U))
"RTN","CIAUIN18",63,0)
 S:$E(X,$L(X))'=FDLM X=X_FDLM
"RTN","CIAUIN18",64,0)
 Q X
"RTN","CIAUIN18",65,0)
 ; Parse current error
"RTN","CIAUIN18",66,0)
ERR(X1,X2,X3) ;EP
"RTN","CIAUIN18",67,0)
 S X1=$E($P($ZE,">"),2,99),X2=$P($P($ZE,">",2),":"),X3=X1
"RTN","CIAUIN18",68,0)
 S:X2["*" X2=""
"RTN","CIAUIN18",69,0)
 S:$E(X1)="Z" X3=$E(X1,2,99),X1="ZTRAP"
"RTN","CIAUIN18",70,0)
 Q
"RTN","CIAUIN18",71,0)
 ; Raise an exception
"RTN","CIAUIN18",72,0)
RAISE(X) ;EP
"RTN","CIAUIN18",73,0)
 ZT $G(X)
"RTN","CIAUIN18",74,0)
 ; Set error trap
"RTN","CIAUIN18",75,0)
TRAP(X) ;EP
"RTN","CIAUIN18",76,0)
 Q $S($D(X):"$ZT="""_X_"""",1:"$ZT")
"RTN","CIAUIN18",77,0)
 ; Return size of file
"RTN","CIAUIN18",78,0)
SIZE(X) ;EP
"RTN","CIAUIN18",79,0)
 Q 0
"RTN","CIAUIN18",80,0)
 ; Return free disk space
"RTN","CIAUIN18",81,0)
FREE(X) ;EP
"RTN","CIAUIN18",82,0)
 Q 0
"RTN","CIAUIN18",83,0)
 ; Return host ip address
"RTN","CIAUIN18",84,0)
HOSTIP() ;EP
"RTN","CIAUIN18",85,0)
 Q $P($P($ZU(131,1),","),":",2)
"RTN","CIAUIN18",86,0)
 ; Return host name
"RTN","CIAUIN18",87,0)
HOSTNAME() ;EP
"RTN","CIAUIN18",88,0)
 Q $P($P($ZU(131,1),","),":")
"RTN","CIAUIN18",89,0)
 ; Return client ip address
"RTN","CIAUIN18",90,0)
CLIENTIP() ;EP
"RTN","CIAUIN18",91,0)
 N IP,$ET
"RTN","CIAUIN18",92,0)
 S $ET="S $EC=""""",IP=$ZU(111,0)
"RTN","CIAUIN18",93,0)
 Q $A(IP,1)_"."_$A(IP,2)_"."_$A(IP,3)_"."_$A(IP,4)
"RTN","CIAUIN58")
0^70^B5738292
"RTN","CIAUIN58",1,0)
CIAUIN58 ;MSC/IND/DKM/PLS - Inits for MSM-UNIX;04-May-2006 08:19;DKM
"RTN","CIAUIN58",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUIN58",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUIN58",4,0)
 ;=================================================================
"RTN","CIAUIN58",5,0)
 ; Open a host file
"RTN","CIAUIN58",6,0)
OPEN(X1,X2) ;EP
"RTN","CIAUIN58",7,0)
 N Z
"RTN","CIAUIN58",8,0)
 S X2=$G(X2,"R")
"RTN","CIAUIN58",9,0)
 F Z=51:1:55 I '$D(^TMP("CIAUHFS",$J,Z)) D  Q
"RTN","CIAUIN58",10,0)
 .ZT:Z=55 "TMOF"
"RTN","CIAUIN58",11,0)
 .O Z:(X1:$S("RrWw"[X2:X2,1:"R")::::$S("Bb"[X2:"",1:$C(10)))
"RTN","CIAUIN58",12,0)
 .U Z
"RTN","CIAUIN58",13,0)
 .ZT:$ZA "OPEN"
"RTN","CIAUIN58",14,0)
 .S ^TMP("CIAUHFS",$J,Z)=X1,X1=Z
"RTN","CIAUIN58",15,0)
 Q
"RTN","CIAUIN58",16,0)
 ; Close a host file
"RTN","CIAUIN58",17,0)
CLOSE(X) ;EP
"RTN","CIAUIN58",18,0)
 N Z
"RTN","CIAUIN58",19,0)
 S Z=X,X=$G(^TMP("CIAUHFS",$J,X))
"RTN","CIAUIN58",20,0)
 K ^(Z)
"RTN","CIAUIN58",21,0)
 C Z
"RTN","CIAUIN58",22,0)
 Q
"RTN","CIAUIN58",23,0)
 ; Close all open host files
"RTN","CIAUIN58",24,0)
CLOSEALL ;EP
"RTN","CIAUIN58",25,0)
 N Z
"RTN","CIAUIN58",26,0)
 F Z=0:0 S Z=$O(^TMP("CIAUHFS",$J,Z)) Q:'Z  C Z
"RTN","CIAUIN58",27,0)
 K ^TMP("CIAUHFS",$J)
"RTN","CIAUIN58",28,0)
 Q
"RTN","CIAUIN58",29,0)
EOF ZT:$ZC "EOF"
"RTN","CIAUIN58",30,0)
 Q
"RTN","CIAUIN58",31,0)
EOFERR() Q $ZE["ZEOF"
"RTN","CIAUIN58",32,0)
 ; Read a line of data
"RTN","CIAUIN58",33,0)
READ(X,Y) ;EP
"RTN","CIAUIN58",34,0)
 U:$G(Y)'="" Y
"RTN","CIAUIN58",35,0)
 R X:5
"RTN","CIAUIN58",36,0)
 Q $S($T:$ZC&'$L(X),1:1)
"RTN","CIAUIN58",37,0)
 ; Delete a host file
"RTN","CIAUIN58",38,0)
DELETE(X) ;EP
"RTN","CIAUIN58",39,0)
 D JW("rm "_X)
"RTN","CIAUIN58",40,0)
 Q
"RTN","CIAUIN58",41,0)
 ; Rename a host file
"RTN","CIAUIN58",42,0)
RENAME(X1,X2) ;EP
"RTN","CIAUIN58",43,0)
 D JW("mv "_X1_" "_X2)
"RTN","CIAUIN58",44,0)
 Q
"RTN","CIAUIN58",45,0)
 ; Generate a directory listing
"RTN","CIAUIN58",46,0)
DIR(X1,X2,X3) ;EP
"RTN","CIAUIN58",47,0)
 N TFN,X,Z
"RTN","CIAUIN58",48,0)
 N $ET
"RTN","CIAUIN58",49,0)
 S $ET="",@$$TRAP("DIRERR^CIAUOS")
"RTN","CIAUIN58",50,0)
 S X1=$G(X1),X2=+$G(X2),X3=$G(X3,"^UTILITY(""DIR"",$J)")
"RTN","CIAUIN58",51,0)
 S TFN=$$DEFDIR_"CIAUAUTO."_$J
"RTN","CIAUIN58",52,0)
 K @X3
"RTN","CIAUIN58",53,0)
 ;
"RTN","CIAUIN58",54,0)
 D DELETE(TFN)
"RTN","CIAUIN58",55,0)
 D JW("ls -d "_X1_" >> "_TFN)
"RTN","CIAUIN58",56,0)
 D OPEN(.TFN,"R")
"RTN","CIAUIN58",57,0)
 F Z=1:1 Q:(X2&(Z>X2))  Q:$$READ(.X,TFN)  D
"RTN","CIAUIN58",58,0)
 .S X=$TR($P(X,"/",$L(X,"/")),$C(10),"")
"RTN","CIAUIN58",59,0)
 .I X]"" S @X3@(X)=""
"RTN","CIAUIN58",60,0)
DIRERR D CLOSE(.TFN)
"RTN","CIAUIN58",61,0)
 D DELETE(TFN)
"RTN","CIAUIN58",62,0)
 Q
"RTN","CIAUIN58",63,0)
 ; Return default working directory
"RTN","CIAUIN58",64,0)
DEFDIR(X) ;EP
"RTN","CIAUIN58",65,0)
 S X=$G(X,$P($G(^XTV(8989.3,1,"DEV")),U))
"RTN","CIAUIN58",66,0)
 S:$E(X,$L(X))'="/" X=X_"/"
"RTN","CIAUIN58",67,0)
 Q X
"RTN","CIAUIN58",68,0)
 ; Return path delimiters
"RTN","CIAUIN58",69,0)
DIRDLM() ;EP
"RTN","CIAUIN58",70,0)
 Q "///"
"RTN","CIAUIN58",71,0)
 ; Return free disk space
"RTN","CIAUIN58",72,0)
FREE(X) ;EP
"RTN","CIAUIN58",73,0)
 S X=$ZOS(9,$E(X))
"RTN","CIAUIN58",74,0)
 Q X*$P(X,"^",2)*$P(X,"^",3)/1048576
"RTN","CIAUIN58",75,0)
 ; Parse current error
"RTN","CIAUIN58",76,0)
ERR(X1,X2,X3) ;EP
"RTN","CIAUIN58",77,0)
 S X1=$E($P($ZE,">"),2,99),X2=$P($P($ZE,">",2),":"),X3=X1
"RTN","CIAUIN58",78,0)
 S:X2["*" X2=""
"RTN","CIAUIN58",79,0)
 S:$E(X1)="Z" X3=$E(X1,2,99),X1="ZTRAP"
"RTN","CIAUIN58",80,0)
 Q
"RTN","CIAUIN58",81,0)
 ; Raise an exception
"RTN","CIAUIN58",82,0)
RAISE(X) ;EP
"RTN","CIAUIN58",83,0)
 ZT $G(X)
"RTN","CIAUIN58",84,0)
 ; Set error trap
"RTN","CIAUIN58",85,0)
TRAP(X) ;EP
"RTN","CIAUIN58",86,0)
 Q $S($D(X):"$ZT="""_X_"""",1:"$ZT")
"RTN","CIAUIN58",87,0)
 ; Return size of a file
"RTN","CIAUIN58",88,0)
SIZE(X) ;EP
"RTN","CIAUIN58",89,0)
 N I,Y,Z
"RTN","CIAUIN58",90,0)
 S Z=$ZOS(12,X,0),Z=$P(Z,"^",2,999),Y=0
"RTN","CIAUIN58",91,0)
 I Z'="" F I=30:-1:27 S Y=Y*256+$A(Z,I)
"RTN","CIAUIN58",92,0)
 Q Y
"RTN","CIAUIN58",93,0)
 ; Return host ip address
"RTN","CIAUIN58",94,0)
HOSTIP() ;EP
"RTN","CIAUIN58",95,0)
 Q ""
"RTN","CIAUIN58",96,0)
 ; Return host name
"RTN","CIAUIN58",97,0)
HOSTNAME() ;EP
"RTN","CIAUIN58",98,0)
 Q ""
"RTN","CIAUIN58",99,0)
 ; Return client ip address
"RTN","CIAUIN58",100,0)
CLIENTIP() ;EP
"RTN","CIAUIN58",101,0)
 Q ""
"RTN","CIAUIN58",102,0)
 ; Issue host command and wait
"RTN","CIAUIN58",103,0)
JW(ZOSHC) ;msm extrinsic
"RTN","CIAUIN58",104,0)
 N ZOSHX
"RTN","CIAUIN58",105,0)
 S ZOSHX=$$JOBWAIT^%HOSTCMD(ZOSHC)
"RTN","CIAUIN58",106,0)
 Q
"RTN","CIAUIN68")
0^69^B4634876
"RTN","CIAUIN68",1,0)
CIAUIN68 ;MSC/IND/DKM - Inits for Cache (Unix);04-May-2006 08:19;DKM
"RTN","CIAUIN68",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUIN68",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUIN68",4,0)
 ;=================================================================
"RTN","CIAUIN68",5,0)
 ; Open a host file
"RTN","CIAUIN68",6,0)
OPEN(X1,X2) ;EP
"RTN","CIAUIN68",7,0)
 O X1:$S("Rr"[$G(X2):"RS","Ww"[X2:"WNS","Bb"[X2:"RF",1:""):0
"RTN","CIAUIN68",8,0)
 E  ZT "NOPEN"
"RTN","CIAUIN68",9,0)
 U X1
"RTN","CIAUIN68",10,0)
 S ^TMP("CIAUHFS",$J,X1)=""
"RTN","CIAUIN68",11,0)
 Q
"RTN","CIAUIN68",12,0)
 ; Close a host file
"RTN","CIAUIN68",13,0)
CLOSE(X) ;EP
"RTN","CIAUIN68",14,0)
 C X
"RTN","CIAUIN68",15,0)
 K ^TMP("CIAUHFS",$J,X)
"RTN","CIAUIN68",16,0)
 Q
"RTN","CIAUIN68",17,0)
 ; Close all open host files
"RTN","CIAUIN68",18,0)
CLOSEALL ;EP
"RTN","CIAUIN68",19,0)
 N Z
"RTN","CIAUIN68",20,0)
 S Z=""
"RTN","CIAUIN68",21,0)
 F  S Z=$O(^TMP("CIAUHFS",$J,Z)) Q:Z=""  C Z
"RTN","CIAUIN68",22,0)
 K ^TMP("CIAUHFS",$J)
"RTN","CIAUIN68",23,0)
 Q
"RTN","CIAUIN68",24,0)
EOF ZT:$ZA=-1 "ENDOFFILE"
"RTN","CIAUIN68",25,0)
 Q
"RTN","CIAUIN68",26,0)
EOFERR() Q:$ZE["ENDOFFILE"
"RTN","CIAUIN68",27,0)
 ; Read a line of data
"RTN","CIAUIN68",28,0)
READ(X,Y) ;EP
"RTN","CIAUIN68",29,0)
 N $ET
"RTN","CIAUIN68",30,0)
 S $ET="",$ZT="READX"
"RTN","CIAUIN68",31,0)
 U $G(Y,$I)
"RTN","CIAUIN68",32,0)
 Q:$ZEOF 1
"RTN","CIAUIN68",33,0)
 R X:5
"RTN","CIAUIN68",34,0)
 Q:$T 0
"RTN","CIAUIN68",35,0)
READX Q 1
"RTN","CIAUIN68",36,0)
 ; Delete a host file
"RTN","CIAUIN68",37,0)
DELETE(X) ;EP
"RTN","CIAUIN68",38,0)
 S X=$ZF(-1,"rm """_X_"""")
"RTN","CIAUIN68",39,0)
 Q
"RTN","CIAUIN68",40,0)
 ; Rename a host file
"RTN","CIAUIN68",41,0)
RENAME(X1,X2) ;EP
"RTN","CIAUIN68",42,0)
 S X1=$ZF(-1,"mv """_X1_""" """_X2_"""")
"RTN","CIAUIN68",43,0)
 Q
"RTN","CIAUIN68",44,0)
 ; Generate directory listing
"RTN","CIAUIN68",45,0)
DIR(X1,X2,X3) ;EP
"RTN","CIAUIN68",46,0)
 N Z,Z1,FDLM
"RTN","CIAUIN68",47,0)
 S FDLM=$E($$DIRDLM,1)
"RTN","CIAUIN68",48,0)
 S X3=$G(X3,$NA(^UTILITY("DIR",$J)))
"RTN","CIAUIN68",49,0)
 K @X3
"RTN","CIAUIN68",50,0)
 S:'$G(X2) X2=9999999999
"RTN","CIAUIN68",51,0)
 F Z=1:1:X2 S Z1=$ZSEARCH(X1),X1="" Q:Z1=""  D
"RTN","CIAUIN68",52,0)
 .S Z1=$P(Z1,FDLM,$L(Z1,FDLM))
"RTN","CIAUIN68",53,0)
 .S:$TR(Z1,".")'="" @X3@(Z1)=""
"RTN","CIAUIN68",54,0)
 Q
"RTN","CIAUIN68",55,0)
 ; Return path delimiters
"RTN","CIAUIN68",56,0)
DIRDLM() ;EP
"RTN","CIAUIN68",57,0)
 Q "///"
"RTN","CIAUIN68",58,0)
 ; Return default working directory
"RTN","CIAUIN68",59,0)
DEFDIR(X) ;EP
"RTN","CIAUIN68",60,0)
 N FDLM
"RTN","CIAUIN68",61,0)
 S FDLM=$E($$DIRDLM,1)
"RTN","CIAUIN68",62,0)
 S X=$G(X,$P($G(^XTV(8989.3,1,"DEV")),U))
"RTN","CIAUIN68",63,0)
 S:$E(X,$L(X))'=FDLM X=X_FDLM
"RTN","CIAUIN68",64,0)
 Q X
"RTN","CIAUIN68",65,0)
 ; Parse current error
"RTN","CIAUIN68",66,0)
ERR(X1,X2,X3) ;EP
"RTN","CIAUIN68",67,0)
 S X1=$E($P($ZE,">"),2,99),X2=$P($P($ZE,">",2),":"),X3=X1
"RTN","CIAUIN68",68,0)
 S:X2["*" X2=""
"RTN","CIAUIN68",69,0)
 S:$E(X1)="Z" X3=$E(X1,2,99),X1="ZTRAP"
"RTN","CIAUIN68",70,0)
 Q
"RTN","CIAUIN68",71,0)
 ; Raise an exception
"RTN","CIAUIN68",72,0)
RAISE(X) ;EP
"RTN","CIAUIN68",73,0)
 ZT $G(X)
"RTN","CIAUIN68",74,0)
 ; Set error trap
"RTN","CIAUIN68",75,0)
TRAP(X) ;EP
"RTN","CIAUIN68",76,0)
 Q $S($D(X):"$ZT="""_X_"""",1:"$ZT")
"RTN","CIAUIN68",77,0)
 ; Return size of a file
"RTN","CIAUIN68",78,0)
SIZE(X) ;EP
"RTN","CIAUIN68",79,0)
 Q 0
"RTN","CIAUIN68",80,0)
 ; Return free disk space
"RTN","CIAUIN68",81,0)
FREE(X) ;EP
"RTN","CIAUIN68",82,0)
 Q 0
"RTN","CIAUIN68",83,0)
 ; Return host ip address
"RTN","CIAUIN68",84,0)
HOSTIP() ;EP
"RTN","CIAUIN68",85,0)
 Q $P($P($ZU(131,1),","),":",2)
"RTN","CIAUIN68",86,0)
 ; Return host name
"RTN","CIAUIN68",87,0)
HOSTNAME() ;EP
"RTN","CIAUIN68",88,0)
 Q $P($P($ZU(131,1),","),":")
"RTN","CIAUIN68",89,0)
 ; Return client ip address
"RTN","CIAUIN68",90,0)
CLIENTIP() ;EP
"RTN","CIAUIN68",91,0)
 N IP,$ET
"RTN","CIAUIN68",92,0)
 S $ET="S $EC=""""",IP=$ZU(111,0)
"RTN","CIAUIN68",93,0)
 Q $A(IP,1)_"."_$A(IP,2)_"."_$A(IP,3)_"."_$A(IP,4)
"RTN","CIAUIN8")
0^49^B4326711
"RTN","CIAUIN8",1,0)
CIAUIN8 ;MSC/IND/DKM - Inits for MSM;04-May-2006 08:19;DKM
"RTN","CIAUIN8",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUIN8",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUIN8",4,0)
 ;=================================================================
"RTN","CIAUIN8",5,0)
 ; Open a host file
"RTN","CIAUIN8",6,0)
OPEN(X1,X2) ;EP
"RTN","CIAUIN8",7,0)
 N Z
"RTN","CIAUIN8",8,0)
 S X2=$G(X2,"R")
"RTN","CIAUIN8",9,0)
 F Z=51:1:55 I '$D(^TMP("CIAUHFS",$J,Z)) D  Q
"RTN","CIAUIN8",10,0)
 .ZT:Z=55 "TMOF"
"RTN","CIAUIN8",11,0)
 .O Z:(X1:$S("RrWw"[X2:X2,1:"R")::::$S("Bb"[X2:"",1:$C(13,10)))
"RTN","CIAUIN8",12,0)
 .U Z
"RTN","CIAUIN8",13,0)
 .ZT:$ZA "OPEN"
"RTN","CIAUIN8",14,0)
 .S ^TMP("CIAUHFS",$J,Z)=X1,X1=Z
"RTN","CIAUIN8",15,0)
 Q
"RTN","CIAUIN8",16,0)
 ; Close a host file
"RTN","CIAUIN8",17,0)
CLOSE(X) ;EP
"RTN","CIAUIN8",18,0)
 N Z
"RTN","CIAUIN8",19,0)
 S Z=X,X=$G(^TMP("CIAUHFS",$J,X))
"RTN","CIAUIN8",20,0)
 K ^(Z)
"RTN","CIAUIN8",21,0)
 C Z
"RTN","CIAUIN8",22,0)
 Q
"RTN","CIAUIN8",23,0)
 ; Close all open host files
"RTN","CIAUIN8",24,0)
CLOSEALL ;EP
"RTN","CIAUIN8",25,0)
 N Z
"RTN","CIAUIN8",26,0)
 F Z=0:0 S Z=$O(^TMP("CIAUHFS",$J,Z)) Q:'Z  C Z
"RTN","CIAUIN8",27,0)
 K ^TMP("CIAUHFS",$J)
"RTN","CIAUIN8",28,0)
 Q
"RTN","CIAUIN8",29,0)
EOF ZT:$ZC "EOF"
"RTN","CIAUIN8",30,0)
 Q
"RTN","CIAUIN8",31,0)
EOFERR() Q $ZE["ZEOF"
"RTN","CIAUIN8",32,0)
 ; Read a line of data
"RTN","CIAUIN8",33,0)
READ(X,Y) ;EP
"RTN","CIAUIN8",34,0)
 U:$G(Y)'="" Y
"RTN","CIAUIN8",35,0)
 R X:5
"RTN","CIAUIN8",36,0)
 Q $S($T:$ZC&'$L(X),1:1)
"RTN","CIAUIN8",37,0)
 ; Delete a host file
"RTN","CIAUIN8",38,0)
DELETE(X) ;EP
"RTN","CIAUIN8",39,0)
 S X=$ZOS(2,X)
"RTN","CIAUIN8",40,0)
 Q
"RTN","CIAUIN8",41,0)
 ; Rename a host file
"RTN","CIAUIN8",42,0)
RENAME(X1,X2) ;EP
"RTN","CIAUIN8",43,0)
 N Z
"RTN","CIAUIN8",44,0)
 S Z=$ZOS(3,X1,X2)
"RTN","CIAUIN8",45,0)
 Q
"RTN","CIAUIN8",46,0)
 ; Generate a directory listing
"RTN","CIAUIN8",47,0)
DIR(X1,X2,X3) ;EP
"RTN","CIAUIN8",48,0)
 N Z
"RTN","CIAUIN8",49,0)
 S X1=$ZOS(12,X1,0),X2=+$G(X2),X3=$G(X3,"^UTILITY(""DIR"",$J)")
"RTN","CIAUIN8",50,0)
 K @X3
"RTN","CIAUIN8",51,0)
 F Z=1:1 Q:(X2&(Z>X2))!($P(X1,"^")="")  S @X3@($P(X1,"^"))="",X1=$ZOS(13,X1)
"RTN","CIAUIN8",52,0)
 Q
"RTN","CIAUIN8",53,0)
 ; Return default working directory
"RTN","CIAUIN8",54,0)
DEFDIR(X) ;EP
"RTN","CIAUIN8",55,0)
 S X=$G(X,$P($G(^XTV(8989.3,1,"DEV")),U))
"RTN","CIAUIN8",56,0)
 S:$E(X,$L(X))'="\" X=X_"\"
"RTN","CIAUIN8",57,0)
 Q X
"RTN","CIAUIN8",58,0)
 ; Return path delimiters
"RTN","CIAUIN8",59,0)
DIRDLM() ;EP
"RTN","CIAUIN8",60,0)
 Q "\\\"
"RTN","CIAUIN8",61,0)
 ; Return free disk space
"RTN","CIAUIN8",62,0)
FREE(X) ;EP
"RTN","CIAUIN8",63,0)
 S X=$ZOS(9,$E(X))
"RTN","CIAUIN8",64,0)
 Q X*$P(X,"^",2)*$P(X,"^",3)/1048576
"RTN","CIAUIN8",65,0)
 ; Parse current error
"RTN","CIAUIN8",66,0)
ERR(X1,X2,X3) ;EP
"RTN","CIAUIN8",67,0)
 S X1=$E($P($ZE,">"),2,99),X2=$P($P($ZE,">",2),":"),X3=X1
"RTN","CIAUIN8",68,0)
 S:X2["*" X2=""
"RTN","CIAUIN8",69,0)
 S:$E(X1)="Z" X3=$E(X1,2,99),X1="ZTRAP"
"RTN","CIAUIN8",70,0)
 Q
"RTN","CIAUIN8",71,0)
 ; Raise an exception
"RTN","CIAUIN8",72,0)
RAISE(X) ;EP
"RTN","CIAUIN8",73,0)
 ZT $G(X)
"RTN","CIAUIN8",74,0)
 ; Set error trap
"RTN","CIAUIN8",75,0)
TRAP(X) ;EP
"RTN","CIAUIN8",76,0)
 Q $S($D(X):"$ZT="""_X_"""",1:"$ZT")
"RTN","CIAUIN8",77,0)
 ; Return size of a file
"RTN","CIAUIN8",78,0)
SIZE(X) ;EP
"RTN","CIAUIN8",79,0)
 N I,Y,Z
"RTN","CIAUIN8",80,0)
 S Z=$ZOS(12,X,0),Z=$P(Z,"^",2,999),Y=0
"RTN","CIAUIN8",81,0)
 I Z'="" F I=30:-1:27 S Y=Y*256+$A(Z,I)
"RTN","CIAUIN8",82,0)
 Q Y
"RTN","CIAUIN8",83,0)
 ; Return host ip address
"RTN","CIAUIN8",84,0)
HOSTIP() ;EP
"RTN","CIAUIN8",85,0)
 Q ""
"RTN","CIAUIN8",86,0)
 ; Return host name
"RTN","CIAUIN8",87,0)
HOSTNAME() ;EP
"RTN","CIAUIN8",88,0)
 Q ""
"RTN","CIAUIN8",89,0)
 ; Return client ip address
"RTN","CIAUIN8",90,0)
CLIENTIP() ;EP
"RTN","CIAUIN8",91,0)
 Q ""
"RTN","CIAUIN8U")
1^68
"RTN","CIAUINIT")
0^60^B6143020
"RTN","CIAUINIT",1,0)
CIAUINIT ;MSC/IND/DKM - Platform specific inits;04-May-2006 08:19;DKM
"RTN","CIAUINIT",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUINIT",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUINIT",4,0)
 ;=================================================================
"RTN","CIAUINIT",5,0)
POST N CIAOS,CIAH,X
"RTN","CIAUINIT",6,0)
 S U="^",X="ERROR^CIAUINIT",@^%ZOSF("TRAP"),CIAOS=$P(^%ZOSF("OS"),U,2)
"RTN","CIAUINIT",7,0)
 I 'CIAOS D
"RTN","CIAUINIT",8,0)
 .D HOME^%ZIS,TITLE^CIAU("Platform-Specific Inits",1.6)
"RTN","CIAUINIT",9,0)
 .S CIAH(1)="Enter the name of this MUMPS environment for the CIA-namespace"
"RTN","CIAUINIT",10,0)
 .S CIAH(2)="platform-specific initialization process."
"RTN","CIAUINIT",11,0)
 .S CIAOS=$$ENTRY^CIAULKP("^DD(""OS"")","UX","Operating System: ","B","*","","",0,5,"","","HELP(.CIAH)")
"RTN","CIAUINIT",12,0)
 .W !!
"RTN","CIAUINIT",13,0)
 D:CIAOS>0 INIT(CIAOS)
"RTN","CIAUINIT",14,0)
 Q
"RTN","CIAUINIT",15,0)
INIT(CIAOS) ;
"RTN","CIAUINIT",16,0)
 N I,X,Y,Z,N,CIAOSZ
"RTN","CIAUINIT",17,0)
 S CIAOSZ=$$OSRTN($G(CIAOS))
"RTN","CIAUINIT",18,0)
 S:$L(CIAOSZ) @("CIAOSZ="_CIAOSZ)
"RTN","CIAUINIT",19,0)
 I '$L(CIAOSZ) D  Q
"RTN","CIAUINIT",20,0)
 .X "ZL CIAUOS1 ZS CIAUOS"
"RTN","CIAUINIT",21,0)
 .D MES("Init not found for specified OS. Will use generic init.")
"RTN","CIAUINIT",22,0)
 S I=0,N="CIAU"
"RTN","CIAUINIT",23,0)
 K ^TMP(N,$J)
"RTN","CIAUINIT",24,0)
 F Z=0,1 F X=$S(Z:3,1:1):1 S Y=$T(+X^@$S(Z:CIAOSZ,1:"CIAUIN0")) Q:Y=""  S I=I+1,^TMP(N,$J,I)=Y
"RTN","CIAUINIT",25,0)
 S $P(^TMP(N,$J,1),";")="CIAUOS "
"RTN","CIAUINIT",26,0)
 X "ZR  F Z=1:1:I ZI ^TMP(N,$J,Z) ZS:Z=I CIAUOS"
"RTN","CIAUINIT",27,0)
 K ^TMP(N,$J)
"RTN","CIAUINIT",28,0)
 F Z=1:1 S X=$P($T(DEVICE+Z),";;",2,99) Q:X=""  S ^TMP(N,$J,Z)=$$MSG^CIAU(X,"|")
"RTN","CIAUINIT",29,0)
 I $$ENTRY^CIAUIMP($NA(^TMP(N,$J))) D
"RTN","CIAUINIT",30,0)
 .D MES("Unable to install CIAU HFS DEVICE.")
"RTN","CIAUINIT",31,0)
 W !!,"Initialization completed for "_$P(^DD("OS",CIAOS,0),"^")_" operating system.",!!
"RTN","CIAUINIT",32,0)
 K ^TMP(N,$J)
"RTN","CIAUINIT",33,0)
 Q
"RTN","CIAUINIT",34,0)
OSRTN(X) Q $P($T(@("OS"_X)),";",4,99)
"RTN","CIAUINIT",35,0)
OS8 ;;MSM;$S($ZV["UNIX":"CIAUIN58",1:"CIAUIN8")
"RTN","CIAUINIT",36,0)
OS16 ;;DSM;CIAUIN16
"RTN","CIAUINIT",37,0)
OS18 ;;Cache;$S($ZV["UNIX":"CIAUIN68",1:"CIAUIN18")
"RTN","CIAUINIT",38,0)
MES(X) D BMES^XPDUTL(X)
"RTN","CIAUINIT",39,0)
 Q
"RTN","CIAUINIT",40,0)
ERROR D MES("An error has occurred during initialization.")
"RTN","CIAUINIT",41,0)
 Q
"RTN","CIAUINIT",42,0)
 ; Return $I for HFS device
"RTN","CIAUINIT",43,0)
HFS() Q $S(CIAOS=16:"TEMP.TMP",CIAOS=8:51,CIAOS=18:"NUL",1:"@")
"RTN","CIAUINIT",44,0)
DEVICE ; Device setup
"RTN","CIAUINIT",45,0)
 ;;:3.5
"RTN","CIAUINIT",46,0)
 ;;.NAME: CIAU HFS DEVICE
"RTN","CIAUINIT",47,0)
 ;;.LOCATION OF TERMINAL: HFS
"RTN","CIAUINIT",48,0)
 ;;.$I: |$$HFS^CIAUINIT|
"RTN","CIAUINIT",49,0)
 ;;.SIGN-ON/SYSTEM DEVICE: N
"RTN","CIAUINIT",50,0)
 ;;.TYPE: HFS
"RTN","CIAUINIT",51,0)
 ;;.SUBTYPE: P-OTHER
"RTN","CIAUINIT",52,0)
 ;;.ASK DEVICE: N
"RTN","CIAUINIT",53,0)
 ;;.ASK PARAMETERS: N
"RTN","CIAUINIT",54,0)
 ;;.ASK HOST FILE: N
"RTN","CIAUINIT",55,0)
 ;;.ASK HFS I/O OPERATION: N
"RTN","CIAUINIT",56,0)
 ;;
"RTN","CIAULK2")
0^50^B51861902
"RTN","CIAULK2",1,0)
CIAULK2 ;MSC/IND/DKM - Continuation of CIAULKP;20-Jan-2015 13:23;DKM
"RTN","CIAULK2",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAULK2",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAULK2",4,0)
 ;=================================================================
"RTN","CIAULK2",5,0)
LKP(%CIADX) ;
"RTN","CIAULK2",6,0)
 N %CIAD,%CIAZ,%CIAN
"RTN","CIAULK2",7,0)
 S %CIAXRN=0,%CIATRNC=0,%CIAIEN="",%CIASCT=0,%CIAD=%CIADX
"RTN","CIAULK2",8,0)
 W:'%CIAHTML $$XY(%CIAX+$L(%CIAPRMP),%CIAY),$S(%CIAOPT["X":"",1:%CIAD),%CIAEOS,!,"Searching"_$S(%CIAOPT[U:" (press ^ to abort)",1:"")_"...",*13
"RTN","CIAULK2",9,0)
 I $E(%CIAD)="`" S %CIASLCT=%CIAD G:'%CIAHTML NR5 D SHOW($E(%CIAD,2,999)) Q 1
"RTN","CIAULK2",10,0)
NXTREF S %CIAXRN=%CIAXRN+1,%CIAXRF=$P(%CIAXRFS,U,%CIAXRN),%CIAD=%CIADX
"RTN","CIAULK2",11,0)
 I %CIAXRF="" G:%CIASCT NR3 W:'%CIAHTML *7,*13,%CIAEOL,"Not found"_$S(%CIAD="":".",1:": ")_$S(%CIAD'=+%CIAD:%CIAD,%CIAOPT["D":$$ENTRY^CIAUDT(%CIAD),1:%CIAD) S %CIAD1=$S(%CIAOPT["X":U,1:"") Q ""
"RTN","CIAULK2",12,0)
 S %CIAOPT(0)=%CIAOPT_%CIAXRFS(%CIAXRF)
"RTN","CIAULK2",13,0)
 I %CIAOPT(0)["D",$L(%CIADX) D  G:%CIAD<1 NXTREF
"RTN","CIAULK2",14,0)
 .S %CIAD=$$DT^CIAU(%CIADX)
"RTN","CIAULK2",15,0)
 I %CIAOPT(0)["W" D MTL G NXTREF
"RTN","CIAULK2",16,0)
 S %CIAKEY=$S(%CIAOPT(0)["P":$P(%CIAD," "),1:%CIAD)_$S(%CIADIR<0:$C(255),1:""),%CIANUM=$S(%CIAKEY=+%CIAKEY:%CIAKEY,1:"")
"RTN","CIAULK2",17,0)
 I %CIAD'="",$D(@%CIADIC@(%CIAXRF,%CIAD)) S %=%CIASCT+1 D ADD(%CIAD) I %CIASCT=%,%CIAOPT(0)["A" D SLCT(%CIASCT) Q %CIAIEN
"RTN","CIAULK2",18,0)
NR2 I %CIAOPT(0)[U R %#1:0 I %=U S %CIATRNC=1 G NR3:%CIASCT Q ""
"RTN","CIAULK2",19,0)
 S %CIAKEY=$O(@%CIADIC@(%CIAXRF,%CIAKEY),%CIADIR)
"RTN","CIAULK2",20,0)
 I (%CIANUM="")=(%CIAKEY=+%CIAKEY),%CIAD'="" S %CIAKEY=""
"RTN","CIAULK2",21,0)
 I %CIAKEY'="",%CIAOPT(0)["P",%CIAKEY'=%CIAD S %=$$PARTIAL(%CIAD,%CIAKEY) D ADD(%CIAKEY):%>0 G:%'<0 NR2:%CIASCT<100
"RTN","CIAULK2",22,0)
 I %CIAKEY'="",%CIAOPT(0)'["P",$E(%CIAKEY,1,$L(%CIAD))=%CIAD D ADD(%CIAKEY) G:%CIASCT<100 NR2
"RTN","CIAULK2",23,0)
 I %CIANUM'="" S %CIAKEY=%CIANUM_$C($S(%CIADIR<0:255,1:1)),%CIANUM="" G NR2
"RTN","CIAULK2",24,0)
 I %CIASCT'<100 W:'%CIAHTML *7 S %CIAXALL=0,%CIATRNC=1
"RTN","CIAULK2",25,0)
 G:'%CIASCT!%CIAXALL NXTREF
"RTN","CIAULK2",26,0)
NR3 I %CIASCT=1,%CIAOPT(0)[1,'%CIATRNC D SLCT(1) Q %CIAIEN
"RTN","CIAULK2",27,0)
 S %CIAKEY=%CIASLT,%CIASLT=1,%CIASMAX=$S(%CIAHTML!%CIARS:99999,1:17-%CIAY)
"RTN","CIAULK2",28,0)
NR4 W:'%CIAHTML $$XY(0,%CIAY+1),%CIAEOS,!
"RTN","CIAULK2",29,0)
 F %CIAN=%CIAKEY:1:%CIAKEY+%CIASMAX-1 D  Q:%CIAN=%CIASCT
"RTN","CIAULK2",30,0)
 .F %CIAZ=0:1:%CIACOL-1 D
"RTN","CIAULK2",31,0)
 ..S %1=IOM/%CIACOL*%CIAZ\1,%CIALAST=%CIAZ*%CIASMAX+%CIAN
"RTN","CIAULK2",32,0)
 ..Q:%CIALAST>%CIASCT
"RTN","CIAULK2",33,0)
 ..W:'%CIAHTML $$XY(%1,$Y),%CIAEOL,%CIALAST,?5
"RTN","CIAULK2",34,0)
 ..D SHOW(^TMP(%CIAPID,%CIALAST),%1+4)
"RTN","CIAULK2",35,0)
 .W:'%CIAQT !
"RTN","CIAULK2",36,0)
 Q:%CIAHTML $S(%CIATRNC:-%CIASCT,1:%CIASCT)
"RTN","CIAULK2",37,0)
 W:%CIALAST<%CIASCT !,%CIASCT-%CIALAST," more choice(s)..."
"RTN","CIAULK2",38,0)
 W:%CIATRNC "  (list was truncated)",!
"RTN","CIAULK2",39,0)
 W %CIAEOS_%CIABEL,!!
"RTN","CIAULK2",40,0)
 R "Enter selection: ",%CIASLCT:DTIME
"RTN","CIAULK2",41,0)
 S:'$T %CIASLCT=U
"RTN","CIAULK2",42,0)
 W *13
"RTN","CIAULK2",43,0)
 I %CIAOPT["K",%CIASLCT="" Q -1
"RTN","CIAULK2",44,0)
 I "Nn"[%CIASLCT S %CIAKEY=$S(%CIALAST<%CIASCT:%CIALAST+1,1:1) G NR4
"RTN","CIAULK2",45,0)
 I "Bb"[%CIASLCT S %CIAKEY=$S(%CIAKEY=1:%CIASCT-%CIASMAX+1,%CIAKEY'>%CIASMAX:1,1:%CIAKEY-%CIASMAX) S:%CIAKEY<1 %CIAKEY=1 G NR4
"RTN","CIAULK2",46,0)
 I "?"[%CIASLCT D HELP2 G NR4
"RTN","CIAULK2",47,0)
 I "^^"[%CIASLCT S %CIAD2="",%CIAD1=$S(%CIAOPT(0)["X":%CIASLCT,%CIASLCT="^^":%CIASLCT,1:"") Q ""
"RTN","CIAULK2",48,0)
NR5 F  D  Q:%CIASLCT=""
"RTN","CIAULK2",49,0)
 .I %CIAOPT(0)["M" S %CIAD=$P(%CIASLCT,";"),%CIASLCT=$P(%CIASLCT,";",2,999)
"RTN","CIAULK2",50,0)
 .E  S %CIAD=%CIASLCT,%CIASLCT=""
"RTN","CIAULK2",51,0)
 .Q:'$L(%CIAD)
"RTN","CIAULK2",52,0)
 .I %CIAD?1.N D SLCT(%CIAD) Q
"RTN","CIAULK2",53,0)
 .I %CIAOPT(0)["M",%CIAD?1.N1"-".N D  Q
"RTN","CIAULK2",54,0)
 ..N %1,%2
"RTN","CIAULK2",55,0)
 ..S %1=+%CIAD,%2=+$P(%CIAD,"-",2)
"RTN","CIAULK2",56,0)
 ..S:'%2 %2=%CIASCT
"RTN","CIAULK2",57,0)
 ..S:%1>%2 %CIAD=%1,%1=%2,%2=%CIAD
"RTN","CIAULK2",58,0)
 ..S:%2>%CIASCT %2=%CIASCT
"RTN","CIAULK2",59,0)
 ..F %=%1:1:%2 D SLCT(%)
"RTN","CIAULK2",60,0)
 .I %CIAOPT["X",%CIAOPT'["L" S (%CIASLCT,%CIAD1,%CIAIEN)="" Q
"RTN","CIAULK2",61,0)
 .I $E(%CIAD)="`" D  Q
"RTN","CIAULK2",62,0)
 ..S %CIAD=+$E(%CIAD,2,999)
"RTN","CIAULK2",63,0)
 ..I $$VALD(%CIAD) D DISV(%CIAD) S %CIAIEN=%CIAD
"RTN","CIAULK2",64,0)
 .S %CIAD1=%CIAD1_";"_%CIAD
"RTN","CIAULK2",65,0)
 W $$XY(0,%CIAY+1),%CIAEOS,!
"RTN","CIAULK2",66,0)
 Q %CIAIEN
"RTN","CIAULK2",67,0)
 ; Add list selection to output
"RTN","CIAULK2",68,0)
SLCT(%CIASLCT) ;
"RTN","CIAULK2",69,0)
 I %CIASLCT>0,%CIASLCT'>%CIASCT D
"RTN","CIAULK2",70,0)
 .S %CIAIEN=+^TMP(%CIAPID,+%CIASLCT)
"RTN","CIAULK2",71,0)
 .D DISV(%CIAIEN)
"RTN","CIAULK2",72,0)
 Q
"RTN","CIAULK2",73,0)
 ; Add IEN to output
"RTN","CIAULK2",74,0)
DISV(%CIAIEN) ;
"RTN","CIAULK2",75,0)
 Q:%CIAIEN=""
"RTN","CIAULK2",76,0)
 I %CIAMUL'="",'$D(@%CIAMUL@(%CIAIEN)) S @%CIAMUL@(%CIAIEN)="" D:'%CIAQT APP(%CIAIEN)
"RTN","CIAULK2",77,0)
 D:%CIAMUL="" APP(%CIAIEN)
"RTN","CIAULK2",78,0)
 Q:%CIAOPT(0)["F"
"RTN","CIAULK2",79,0)
 K:%CIASAME ^DISV(DUZ,%CIADISV)
"RTN","CIAULK2",80,0)
 S %CIASAME=0,^DISV(DUZ,%CIADISV)=%CIAIEN,^(%CIADISV,%CIAIEN)=""
"RTN","CIAULK2",81,0)
 Q
"RTN","CIAULK2",82,0)
 ; Append primary key to key list
"RTN","CIAULK2",83,0)
APP(%CIAIEN) ;
"RTN","CIAULK2",84,0)
 N %CIAKEY
"RTN","CIAULK2",85,0)
 S %CIAKEY=$S(%CIAIEN=+%CIAIEN:$P($G(@%CIADIC@(%CIAIEN,0)),U),1:%CIAIEN)
"RTN","CIAULK2",86,0)
 S %CIAKEY=$$FMT(%CIAIEN,%CIAKEY)
"RTN","CIAULK2",87,0)
 Q:'$L(%CIAKEY)!($L(%CIAKEY)+$L(%CIAD2)'<250)
"RTN","CIAULK2",88,0)
 S %CIAD2=%CIAD2_$S($L(%CIAD2):";",1:"")_%CIAKEY
"RTN","CIAULK2",89,0)
 I %CIAOPT(0)'["J",%CIAOPT(0)'["M" S %CIAD2=%CIAD2_"  "_$$SID(%CIAIEN)
"RTN","CIAULK2",90,0)
 Q
"RTN","CIAULK2",91,0)
 ; Multi-term lookup
"RTN","CIAULK2",92,0)
MTL N %
"RTN","CIAULK2",93,0)
 S %=$S(%CIADIC[")":$TR(%CIADIC,")",","),1:%CIADIC_"(")_"%CIAXRF)"
"RTN","CIAULK2",94,0)
 S %=$$LKP^CIAUMTL(%,%CIAD,"^TMP(""MTL"",%CIAPID)",%CIAOPT(0)[U)
"RTN","CIAULK2",95,0)
 S:%<0 %CIATRNC=1
"RTN","CIAULK2",96,0)
 D:% ADD(%CIAPID,"^TMP","MTL")
"RTN","CIAULK2",97,0)
 K ^TMP("MTL",%CIAPID)
"RTN","CIAULK2",98,0)
 Q
"RTN","CIAULK2",99,0)
 ; Add key to selection list
"RTN","CIAULK2",100,0)
ADD(%CIAKEY,%CIAIDX,%CIASUB) ;
"RTN","CIAULK2",101,0)
 N %S
"RTN","CIAULK2",102,0)
 S:'$D(%CIAIDX) %CIAIDX=%CIADIC,%CIASUB=%CIAXRF
"RTN","CIAULK2",103,0)
 F %S=0:0 S %S=$O(@%CIAIDX@(%CIASUB,%CIAKEY,%S)) Q:'%S  D
"RTN","CIAULK2",104,0)
 .I %CIAOPT(0)["O",$D(^TMP(%CIAPID,0,%S)) Q
"RTN","CIAULK2",105,0)
 .I $$VALD(%S) D
"RTN","CIAULK2",106,0)
 ..S %CIASCT=%CIASCT+1,^TMP(%CIAPID,%CIASCT)=%S_U_$S(%CIAOPT(0)["W":"",1:%CIAKEY),^(0,%S)=""
"RTN","CIAULK2",107,0)
 ..I %CIAOPT(0)["S",$G(^DISV(DUZ,%CIADISV))=%S S %CIASLT=%CIASCT
"RTN","CIAULK2",108,0)
 Q
"RTN","CIAULK2",109,0)
 ; Check entry against screening criteria
"RTN","CIAULK2",110,0)
VALD(%S) Q:'$D(@%CIADIC@(%S))!'%S 0
"RTN","CIAULK2",111,0)
 Q:%CIASCN="" 1
"RTN","CIAULK2",112,0)
 N %,%1
"RTN","CIAULK2",113,0)
 S %1=1,@$$TRAP^CIAUOS("V3^CIAULK2")
"RTN","CIAULK2",114,0)
 F %=0:0 S %=$O(@%CIASCN@(%)) Q:'%  D  Q:%1
"RTN","CIAULK2",115,0)
 .S %1=0,@$$TRAP^CIAUOS("V2^CIAULK2")
"RTN","CIAULK2",116,0)
 .X "S %1="_@%CIASCN@(%)
"RTN","CIAULK2",117,0)
V2 .Q
"RTN","CIAULK2",118,0)
 Q %1
"RTN","CIAULK2",119,0)
V3 Q 0
"RTN","CIAULK2",120,0)
 ; Show the specified selection
"RTN","CIAULK2",121,0)
SHOW(%CIASLCT,%CIACOL1,%CIACOL2) ;
"RTN","CIAULK2",122,0)
 N %S,%Z,%P,%I
"RTN","CIAULK2",123,0)
 S %S=+%CIASLCT,%Z=$G(@%CIADIC@(%S,0)),%P=$$FMT(%S,$S(%CIAOPT["I":$P(%CIASLCT,U,2),1:$P(%Z,U)))
"RTN","CIAULK2",124,0)
 ;S %I=$$SID(%S,$P(%CIASLCT,U,2)),%I=$S(%I="":%P,1:%I)
"RTN","CIAULK2",125,0)
 S %I=$$SID(%S,%P),%I=$S(%I="":%P,1:%I)
"RTN","CIAULK2",126,0)
 I %CIAHTML D  Q
"RTN","CIAULK2",127,0)
 .I '%CIAQT W $$MSG^CIAU(%CIAPRMP,"|"),!
"RTN","CIAULK2",128,0)
 .E  D DISV(%S)
"RTN","CIAULK2",129,0)
 S %CIACOL1=+$G(%CIACOL1,$X)
"RTN","CIAULK2",130,0)
 I %CIAOPT(0)["Y" S %CIACOL2=+$G(%CIACOL2,IOM\%CIACOL+%CIACOL1-8-$L(%I))
"RTN","CIAULK2",131,0)
 E  S %CIACOL2=+$G(%CIACOL2,IOM\%CIACOL\$S(%CIAOPT(0)["D":3,1:2)-3+%CIACOL1)
"RTN","CIAULK2",132,0)
 W $$XY(%CIACOL1,$Y)
"RTN","CIAULK2",133,0)
 I %CIAOPT(0)'["J",%I'=%P W $$TRUNC^CIAU(%P,IOM\%CIACOL-6),?%CIACOL2," "_$$TRUNC^CIAU(%I,IOM-%CIACOL2-2)
"RTN","CIAULK2",134,0)
 E  W $$TRUNC^CIAU(%I,IOM\%CIACOL-6)
"RTN","CIAULK2",135,0)
 Q
"RTN","CIAULK2",136,0)
 ; Return external form of result
"RTN","CIAULK2",137,0)
FMT(%S,%CIAKEY) ;
"RTN","CIAULK2",138,0)
 Q:%CIAKEY="" %CIAKEY
"RTN","CIAULK2",139,0)
 I %CIATRP'="",$D(@%CIATRP@(%CIAKEY)) Q @%CIATRP@(%CIAKEY)
"RTN","CIAULK2",140,0)
 S:%CIAOPT(0)["D" %CIAKEY=$$ENTRY^CIAUDT(%CIAKEY)
"RTN","CIAULK2",141,0)
 I %CIAOPT(0)["Z",%CIASCN'="",$G(@%CIASCN)'="" S @("%CIAKEY="_@%CIASCN)
"RTN","CIAULK2",142,0)
 S:%CIAOPT["J" %CIAKEY=$$SID(%S,%CIAKEY)
"RTN","CIAULK2",143,0)
 Q %CIAKEY
"RTN","CIAULK2",144,0)
 ; Return secondary identifier
"RTN","CIAULK2",145,0)
SID(%S,%CIAKEY) ;
"RTN","CIAULK2",146,0)
 S %CIAKEY=$G(%CIAKEY)
"RTN","CIAULK2",147,0)
 N %Z
"RTN","CIAULK2",148,0)
 S %Z=$G(@%CIADIC@(%S,0)),@("%Z="_$S(%CIASID<0:$S(%CIAKEY=$$UP^XLFSTR($P(%Z,U)):"""""",1:"%CIAKEY"),%CIASID="":"%CIASID",1:%CIASID))
"RTN","CIAULK2",149,0)
 Q %Z
"RTN","CIAULK2",150,0)
 ; Partial key lookup
"RTN","CIAULK2",151,0)
PARTIAL(%CIAD,%CIAKEY) ;
"RTN","CIAULK2",152,0)
 N %,%1,%2
"RTN","CIAULK2",153,0)
 S (%(1),%(2))=0,%1(1)=%CIAD,%1(2)=%CIAKEY
"RTN","CIAULK2",154,0)
 F %=1,2 S %1(%)=$TR(%1(%),".,;:?/!-","        ")
"RTN","CIAULK2",155,0)
P1 S (%2(1),%2(2))=""
"RTN","CIAULK2",156,0)
 F %=1,2 D
"RTN","CIAULK2",157,0)
 .F %(%)=%(%)+1:1:$L(%1(%)," ") S %2(%)=$P(%1(%)," ",%(%)) Q:%2(%)'=""
"RTN","CIAULK2",158,0)
 Q:%2(1)="" 1
"RTN","CIAULK2",159,0)
 Q:%2(1)'=$E(%2(2),1,$L(%2(1))) -(%(1)=1)
"RTN","CIAULK2",160,0)
 G P1
"RTN","CIAULK2",161,0)
HELP(X) ; Application-specific help
"RTN","CIAULK2",162,0)
 N %
"RTN","CIAULK2",163,0)
 S %=""
"RTN","CIAULK2",164,0)
 F  S %=$O(X(%)) Q:%=""  D:$Y>20 PAUSE W $G(X(%)),!
"RTN","CIAULK2",165,0)
 Q
"RTN","CIAULK2",166,0)
 ; Generic help
"RTN","CIAULK2",167,0)
HELP1 N %
"RTN","CIAULK2",168,0)
 W !!
"RTN","CIAULK2",169,0)
 D:%CIAHLP'="" @%CIAHLP
"RTN","CIAULK2",170,0)
 W !,"Enter a blank line for default action.",!
"RTN","CIAULK2",171,0)
 D:$Y>20 PAUSE
"RTN","CIAULK2",172,0)
 W:%CIAOPT'["W" "Enter ?? to see all possible selections.",!
"RTN","CIAULK2",173,0)
 D:$Y>20 PAUSE
"RTN","CIAULK2",174,0)
 W "Enter a space to retrieve previous selection.",!
"RTN","CIAULK2",175,0)
 D:$Y>20 PAUSE
"RTN","CIAULK2",176,0)
 W "Enter a valid identifier for lookup."
"RTN","CIAULK2",177,0)
 W:(%CIAOPT'["*")&(%CIAXRFS[U) "  Append a * to include all indices."
"RTN","CIAULK2",178,0)
 W !
"RTN","CIAULK2",179,0)
 I %CIAOPT["M" D
"RTN","CIAULK2",180,0)
 .D:$Y>20 PAUSE
"RTN","CIAULK2",181,0)
 .W "Separate multiple selections by semicolons."
"RTN","CIAULK2",182,0)
 R !!,"Press any key to continue...",*%:DTIME
"RTN","CIAULK2",183,0)
 Q
"RTN","CIAULK2",184,0)
 ; Help at choice prompt
"RTN","CIAULK2",185,0)
HELP2 N %
"RTN","CIAULK2",186,0)
 W $$XY(0,16),%CIAEOS,!
"RTN","CIAULK2",187,0)
 W $S(%CIAOPT(0)["K":"Enter N for next choices.",1:"Press RETURN for more choices.")
"RTN","CIAULK2",188,0)
 W ?35,"Enter B for previous choices.",!
"RTN","CIAULK2",189,0)
 W "Enter ^ to abort lookup.",?35,"Enter choice number to select.",!
"RTN","CIAULK2",190,0)
 W "Any other entry = new lookup."
"RTN","CIAULK2",191,0)
 W:%CIAOPT(0)["M" ?35,"Separate multiple selections by semicolons."
"RTN","CIAULK2",192,0)
 R !!,"Press any key to continue...",*%:DTIME
"RTN","CIAULK2",193,0)
 Q
"RTN","CIAULK2",194,0)
PAUSE Q:%CIARS
"RTN","CIAULK2",195,0)
 N %
"RTN","CIAULK2",196,0)
 R !,"Press any key for more...",*%:DTIME
"RTN","CIAULK2",197,0)
 W $$XY(0,%CIAY+2),%CIAEOS
"RTN","CIAULK2",198,0)
 Q
"RTN","CIAULK2",199,0)
XY(X,Y) ;I %CIARS W:'X *13 S $X=X,$Y=Y Q ""
"RTN","CIAULK2",200,0)
 S:%CIARS Y=$Y
"RTN","CIAULK2",201,0)
 Q $$XY^CIAU(X,Y)
"RTN","CIAULKP")
0^51^B29201195
"RTN","CIAULKP",1,0)
CIAULKP ;MSC/IND/DKM - File lookup utility;20-Jan-2015 13:23;DKM
"RTN","CIAULKP",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAULKP",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAULKP",4,0)
 ;=================================================================
"RTN","CIAULKP",5,0)
 ; Inputs:
"RTN","CIAULKP",6,0)
 ;   %CIADIC  = Global root or file #
"RTN","CIAULKP",7,0)
 ;   %CIAOPT  = Options
"RTN","CIAULKP",8,0)
 ;      A allow automatic selection of exact match
"RTN","CIAULKP",9,0)
 ;      B sound bell with selection prompt
"RTN","CIAULKP",10,0)
 ;      C use roll & scroll mode
"RTN","CIAULKP",11,0)
 ;      D index is in date/time format
"RTN","CIAULKP",12,0)
 ;      E use line editor
"RTN","CIAULKP",13,0)
 ;      F forget the entry (i.e., ^DISV not updated)
"RTN","CIAULKP",14,0)
 ;      G start with prior entry
"RTN","CIAULKP",15,0)
 ;      H HTML-formatted output
"RTN","CIAULKP",16,0)
 ;      I show only lookup identifiers
"RTN","CIAULKP",17,0)
 ;      J show only secondary identifiers
"RTN","CIAULKP",18,0)
 ;      K null entry at select prompt exits
"RTN","CIAULKP",19,0)
 ;      L like X, but allows lookup at select prompt
"RTN","CIAULKP",20,0)
 ;      M allow multiple selection
"RTN","CIAULKP",21,0)
 ;      O show entry only once
"RTN","CIAULKP",22,0)
 ;      P partial lookup
"RTN","CIAULKP",23,0)
 ;      Q silent lookup
"RTN","CIAULKP",24,0)
 ;      R reverse search through indices
"RTN","CIAULKP",25,0)
 ;      S start selection list at last selection
"RTN","CIAULKP",26,0)
 ;      T forget trapped inputs
"RTN","CIAULKP",27,0)
 ;      U force uppercase translation
"RTN","CIAULKP",28,0)
 ;      V extended DISV recall (prompt-specific)
"RTN","CIAULKP",29,0)
 ;      W use multi-term lookup algorithm
"RTN","CIAULKP",30,0)
 ;      X do not prompt for input
"RTN","CIAULKP",31,0)
 ;      Y right justify secondary identifiers
"RTN","CIAULKP",32,0)
 ;      Z perform special formatting of output
"RTN","CIAULKP",33,0)
 ;      1 automatic selection if one match only
"RTN","CIAULKP",34,0)
 ;      2-9 # of columns for selection display (default=1)
"RTN","CIAULKP",35,0)
 ;      * force all indices to be searched
"RTN","CIAULKP",36,0)
 ;      ^ allow search to be aborted
"RTN","CIAULKP",37,0)
 ;   %CIAPRMP = Prompt (optional)
"RTN","CIAULKP",38,0)
 ;   %CIAXRFS  = Cross-references to examine (all "B"'s by default)
"RTN","CIAULKP",39,0)
 ;   %CIADATA  = Data to lookup (optional)
"RTN","CIAULKP",40,0)
 ;   %CIASCN   = Screening criteria (optional)
"RTN","CIAULKP",41,0)
 ;   %CIAMUL   = Local variable or global reference to
"RTN","CIAULKP",42,0)
 ;              store multiple hits
"RTN","CIAULKP",43,0)
 ;   %CIAX     = Column position for prompt (optional)
"RTN","CIAULKP",44,0)
 ;   %CIAY     = Row position for prompt (optional)
"RTN","CIAULKP",45,0)
 ;   %CIASID   = Piece # of secondary identifier (optional)
"RTN","CIAULKP",46,0)
 ;              or executable M code to display same
"RTN","CIAULKP",47,0)
 ;   %CIATRP   = Special inputs to trap (optional)
"RTN","CIAULKP",48,0)
 ;   %CIAHLP   = Entry point to invoke help
"RTN","CIAULKP",49,0)
 ; Outputs:
"RTN","CIAULKP",50,0)
 ;    Return value = index of selected entry or:
"RTN","CIAULKP",51,0)
 ;      -1 for forced exit by ^
"RTN","CIAULKP",52,0)
 ;      -2 for forced exit by ^^
"RTN","CIAULKP",53,0)
 ;       0 for null entry
"RTN","CIAULKP",54,0)
 ;=================================================================
"RTN","CIAULKP",55,0)
ENTRY(%CIADIC,%CIAOPT,%CIAPRMP,%CIAXRFS,%CIADATA,%CIASCN,%CIAMUL,%CIAX,%CIAY,%CIASID,%CIATRP,%CIAHLP) ;
"RTN","CIAULKP",56,0)
 N %,%1,%N,%S,%Z,%CIAPID,%CIAXRF,%CIASCT,%CIAKEY,%CIAKEY1,%CIADISV,%CIASLCT
"RTN","CIAULKP",57,0)
 N %CIAXALL,%CIAXRN,%CIASMAX,%CIATRNC,%CIAD,%CIAD1,%CIAD2,%CIABEL,%CIANUM
"RTN","CIAULKP",58,0)
 N %CIADIR,%CIASLT,%CIACOL,%CIALAST,%CIASAME,%CIAEOS,%CIAEOL,%CIAHTML,%CIARS,%CIAQT
"RTN","CIAULKP",59,0)
 I $$NEWERR^%ZTER N $ET S $ET=""
"RTN","CIAULKP",60,0)
 S (%CIAOPT,%CIAOPT(0))=$$UP^XLFSTR($G(%CIAOPT)),%CIAPID="%CIALKP"_$J
"RTN","CIAULKP",61,0)
 S %CIABEL=$S(%CIAOPT["B":$C(7),1:""),%CIADIR=$S(%CIAOPT["R":-1,1:1)
"RTN","CIAULKP",62,0)
 S %CIASLT=1,%CIACOL=1,%CIAEOS=$C(27,91,74),%CIAEOL=$C(27,91,75),%CIAHTML=0
"RTN","CIAULKP",63,0)
 S %CIAX=$G(%CIAX,0),%CIAY=$G(%CIAY,3),DTIME=$G(DTIME,999999)
"RTN","CIAULKP",64,0)
 S %CIALAST=0,%CIARS=%CIAOPT["C",%CIAQT=%CIAOPT["Q"
"RTN","CIAULKP",65,0)
 S:%CIARS %CIAEOS="",%CIAY=$Y
"RTN","CIAULKP",66,0)
 S:%CIAQT %CIAOPT=%CIAOPT_"XHM"
"RTN","CIAULKP",67,0)
 S:%CIAOPT["H" (%CIABEL,%CIAEOL,%CIAEOS)="",%CIAOPT=%CIAOPT_"X",%CIAHTML=1
"RTN","CIAULKP",68,0)
 S:%CIAOPT["L" %CIAOPT=%CIAOPT_"X"
"RTN","CIAULKP",69,0)
 S U="^",DUZ=$G(DUZ,0),IO=$G(IO,$I),IOM=$G(IOM,80),%CIAMUL=$G(%CIAMUL),%CIAHLP=$G(%CIAHLP),%CIATRP=$G(%CIATRP),%CIASCN=$G(%CIASCN),%CIASAME=%CIAOPT["M"&(%CIAMUL'="")
"RTN","CIAULKP",70,0)
 F %=2:1:9 S:%CIAOPT[% %CIACOL=%
"RTN","CIAULKP",71,0)
 S:%CIAOPT'["M" %CIAMUL=""
"RTN","CIAULKP",72,0)
 K:%CIAMUL'="" @%CIAMUL
"RTN","CIAULKP",73,0)
 S:%CIADIC=+%CIADIC %CIADIC=$$ROOT^DILFD(%CIADIC)
"RTN","CIAULKP",74,0)
 S:$E(%CIADIC,$L(%CIADIC))="(" %CIADIC=$E(%CIADIC,1,$L(%CIADIC)-1)
"RTN","CIAULKP",75,0)
 S:$E(%CIADIC,$L(%CIADIC))="," %CIADIC=$E(%CIADIC,1,$L(%CIADIC)-1)
"RTN","CIAULKP",76,0)
 I %CIADIC["(",$E(%CIADIC,$L(%CIADIC))'=")" S %CIADIC=%CIADIC_")"
"RTN","CIAULKP",77,0)
 S %CIAPRMP=$G(%CIAPRMP,$S(%CIAOPT["X":"",1:"Enter identifier: "))
"RTN","CIAULKP",78,0)
 S %CIADISV=$S(%CIADIC[")":$TR(%CIADIC,")",","),1:%CIADIC_"(")_$S(%CIAOPT["V":";"_%CIAPRMP,1:"")
"RTN","CIAULKP",79,0)
 S %CIASID=$G(%CIASID),%CIAXRFS=$G(%CIAXRFS),%CIADATA=$G(%CIADATA)
"RTN","CIAULKP",80,0)
 S:%CIASID=+%CIASID %CIASID=$S(%CIASID<0:%CIASID,1:"$P(%Z,U,"_%CIASID_")")
"RTN","CIAULKP",81,0)
 W:'%CIAHTML $$XY(%CIAX,%CIAY),%CIAEOS,!
"RTN","CIAULKP",82,0)
 I %CIAOPT["G",$G(^DISV(DUZ,%CIADISV))'="" D
"RTN","CIAULKP",83,0)
 .S %CIADATA=^(%CIADISV)
"RTN","CIAULKP",84,0)
 .S:+%CIADATA=%CIADATA %CIADATA=$P($G(@%CIADIC@(%CIADATA,0)),U)
"RTN","CIAULKP",85,0)
 I %CIAXRFS="" D
"RTN","CIAULKP",86,0)
 .S (%,%CIAXRFS)="B"
"RTN","CIAULKP",87,0)
 .F  S %=$O(@%CIADIC@(%)) Q:$E(%)'="B"  S %CIAXRFS=%CIAXRFS_U_%
"RTN","CIAULKP",88,0)
 F %=1:1:$L(%CIAXRFS,U) S %1=$P(%CIAXRFS,U,%) S:%1'="" %CIAXRFS($P(%1,":"))=$P(%1,":",2),$P(%CIAXRFS,U,%)=$P(%1,":")
"RTN","CIAULKP",89,0)
 S (%CIAD1,%CIAD2)=""
"RTN","CIAULKP",90,0)
 D RM(0)
"RTN","CIAULKP",91,0)
 S %CIAIEN=$$INPUT
"RTN","CIAULKP",92,0)
 W:'%CIAHTML $$XY(%CIAX+$L(%CIAPRMP),%CIAY),$$TRUNC^CIAU(%CIAD2,IOM-$X),%CIAEOS
"RTN","CIAULKP",93,0)
 D RM(IOM)
"RTN","CIAULKP",94,0)
 K ^TMP(%CIAPID)
"RTN","CIAULKP",95,0)
 Q %CIAIEN
"RTN","CIAULKP",96,0)
INPUT() ;
"RTN","CIAULKP",97,0)
INP K ^TMP(%CIAPID)
"RTN","CIAULKP",98,0)
 D READ
"RTN","CIAULKP",99,0)
 S:%CIAOPT["U" %CIAD=$$UP^XLFSTR(%CIAD)
"RTN","CIAULKP",100,0)
 S @$$TRAP^CIAUOS("ERROR^CIAULKP")
"RTN","CIAULKP",101,0)
 I %CIAD="",%CIATRP'="" S %CIAD=$G(@%CIATRP@(" "))
"RTN","CIAULKP",102,0)
 Q:"^^"[%CIAD -$L(%CIAD)
"RTN","CIAULKP",103,0)
 I "?"[%CIAD D HELP1^CIAULK2 G INP
"RTN","CIAULKP",104,0)
 I %CIAD=" " D SAME G:%CIAD="" INP2
"RTN","CIAULKP",105,0)
 I %CIATRP'="",$D(@%CIATRP@(%CIAD)) D  Q %CIAD
"RTN","CIAULKP",106,0)
 .S %CIASAME=1
"RTN","CIAULKP",107,0)
 .D:%CIAOPT'["T" DISV^CIAULK2(%CIAD)
"RTN","CIAULKP",108,0)
 .S %CIAD2=$G(@%CIATRP@(%CIAD))
"RTN","CIAULKP",109,0)
 .S:%CIAD2="" %CIAD2=%CIAD
"RTN","CIAULKP",110,0)
 S:%CIAD="??" %CIAD=""
"RTN","CIAULKP",111,0)
 I $E(%CIAD,$L(%CIAD))="*" S %CIAXALL=1,%CIAD=$E(%CIAD,1,$L(%CIAD)-1)
"RTN","CIAULKP",112,0)
 E  S %CIAXALL=%CIAOPT["*"
"RTN","CIAULKP",113,0)
 S %CIAIEN=$$LKP^CIAULK2(%CIAD)
"RTN","CIAULKP",114,0)
INP2 G INP:%CIAIEN=""!$L(%CIAD1)
"RTN","CIAULKP",115,0)
 Q %CIAIEN
"RTN","CIAULKP",116,0)
READ S %CIAD=""
"RTN","CIAULKP",117,0)
 F  Q:%CIAD'=""!(%CIAD1="")  S %CIAD=$P(%CIAD1,";"),%CIAD1=$P(%CIAD1,";",2,999)
"RTN","CIAULKP",118,0)
 Q:$L(%CIAD)
"RTN","CIAULKP",119,0)
 S %CIAD=%CIADATA,%CIADATA=""
"RTN","CIAULKP",120,0)
 W:'%CIAHTML $$XY(0,%CIAY+2),%CIAEOS,$$XY(%CIAX,%CIAY),%CIAPRMP_%CIAEOL
"RTN","CIAULKP",121,0)
 I %CIAOPT["X" S:%CIAOPT["E" %CIAOPT=$TR(%CIAOPT,"X"),%CIADATA=%CIAD Q
"RTN","CIAULKP",122,0)
 I %CIAOPT["E" D
"RTN","CIAULKP",123,0)
 .N %,%1
"RTN","CIAULKP",124,0)
 .S:%CIAD?1"`"1.N %CIAD=+$E(%CIAD,2,99),%CIAD=$$FMT^CIAULK2(%CIAD,$P($G(@%CIADIC@(%CIAD,0)),U))
"RTN","CIAULKP",125,0)
 .S %1=0,%=%CIAX+$L(%CIAPRMP),%=$$ENTRY^CIAUEDT(%CIAD,IOM-%-1,%,%CIAY,"","RHV",,,,,.%1)
"RTN","CIAULKP",126,0)
 .S:%1=3 %=U
"RTN","CIAULKP",127,0)
 .S:%="?" %CIADATA=%CIAD
"RTN","CIAULKP",128,0)
 .S %CIAD=%
"RTN","CIAULKP",129,0)
 E  I '$L(%CIAD) R %CIAD:DTIME S:'$T %CIAD=U
"RTN","CIAULKP",130,0)
 I %CIAOPT["M",%CIAD[";" S %CIAD1=%CIAD G READ
"RTN","CIAULKP",131,0)
 Q
"RTN","CIAULKP",132,0)
SAME S %CIASAME=0,%CIAIEN="",%CIAD="",%CIASCT=0
"RTN","CIAULKP",133,0)
 I %CIAMUL'="" D
"RTN","CIAULKP",134,0)
 .S %=""
"RTN","CIAULKP",135,0)
 .F  S %=$O(^DISV(DUZ,%CIADISV,%)) Q:%=""  D SM1
"RTN","CIAULKP",136,0)
 E  S %=$G(^DISV(DUZ,%CIADISV)) D:%'="" SM1
"RTN","CIAULKP",137,0)
 S:%CIAHTML %CIAIEN=%CIASCT
"RTN","CIAULKP",138,0)
 Q
"RTN","CIAULKP",139,0)
SM1 I %CIATRP'="",$D(@%CIATRP@(%)) S %CIAIEN=%,%CIAD=%
"RTN","CIAULKP",140,0)
 E  I $$VALD^CIAULK2(%) S %CIAIEN=%
"RTN","CIAULKP",141,0)
 I  D DISV^CIAULK2(%CIAIEN) S %CIASCT=%CIASCT+1
"RTN","CIAULKP",142,0)
 Q
"RTN","CIAULKP",143,0)
XY(X,Y) Q $$XY^CIAULK2(.X,.Y)
"RTN","CIAULKP",144,0)
RM(X) X ^%ZOSF("RM")
"RTN","CIAULKP",145,0)
 Q
"RTN","CIAULKP",146,0)
ERROR W:'%CIAHTML $$XY(0,%CIAY+1),*7,%CIAEOL,$$EC^%ZOSV
"RTN","CIAULKP",147,0)
 S (%CIADATA,%CIAD1,%CIAD2)=""
"RTN","CIAULKP",148,0)
 G INP
"RTN","CIAUMTL")
0^52^B15227067
"RTN","CIAUMTL",1,0)
CIAUMTL ;MSC/IND/DKM - Multi-term lookup support ;04-May-2006 08:19;DKM
"RTN","CIAUMTL",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUMTL",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUMTL",4,0)
 ;=================================================================
"RTN","CIAUMTL",5,0)
 ; Parse term into component words (KWIC)
"RTN","CIAUMTL",6,0)
PARSE2(CIATRM,CIARTN,CIAMIN) ;
"RTN","CIAUMTL",7,0)
 N X,L,C,%
"RTN","CIAUMTL",8,0)
 K CIARTN
"RTN","CIAUMTL",9,0)
 S %="CIARTN(I)",X=$$UP^XLFSTR(CIATRM),CIAMIN=+$G(CIAMIN)
"RTN","CIAUMTL",10,0)
 D S^XTLKWIC
"RTN","CIAUMTL",11,0)
 S L="",C=0
"RTN","CIAUMTL",12,0)
 F  S L=$O(CIARTN(L)) Q:L=""  D
"RTN","CIAUMTL",13,0)
 .I $L(L)<CIAMIN K CIARTN(L)
"RTN","CIAUMTL",14,0)
 .E  S C=C+1
"RTN","CIAUMTL",15,0)
 Q C
"RTN","CIAUMTL",16,0)
 ; Parse term into component words
"RTN","CIAUMTL",17,0)
PARSE(CIATRM,CIARTN,CIAMIN) ;
"RTN","CIAUMTL",18,0)
 N X,Y,Z,L,C
"RTN","CIAUMTL",19,0)
 K CIARTN
"RTN","CIAUMTL",20,0)
 S CIATRM=$$UP^XLFSTR(CIATRM),C=0,CIAMIN=+$G(CIAMIN,1),Z=""
"RTN","CIAUMTL",21,0)
 F X=1:1 Q:'$L(CIATRM)  D:$E(CIATRM,X)'?1AN
"RTN","CIAUMTL",22,0)
 .S Y=Z,Z=$E(CIATRM,X),L=$E(CIATRM,1,X-1),CIATRM=$E(CIATRM,X+1,999),X=0
"RTN","CIAUMTL",23,0)
 .I $L(L)'<CIAMIN,L'=+L,'$D(CIARTN(L)) S CIARTN(L)=Y,C=C+1,Y=""
"RTN","CIAUMTL",24,0)
 Q C
"RTN","CIAUMTL",25,0)
 ; Create/delete an MTL cross reference for term
"RTN","CIAUMTL",26,0)
XREF(CIART,CIATRM,CIADA,CIADEL) ;
"RTN","CIAUMTL",27,0)
 N CIAZ,CIAG
"RTN","CIAUMTL",28,0)
 S CIAZ=$L(CIART),CIAG=$S($E(CIART,CIAZ)=")":$E(CIART,1,CIAZ-1)_",",1:CIART_"(")_"CIAZ,",CIAZ=$C(1)
"RTN","CIAUMTL",29,0)
 F  S CIAZ=$O(CIADA(CIAZ),-1) Q:'CIAZ  S CIAG=CIAG_""""_CIADA(CIAZ)_""","
"RTN","CIAUMTL",30,0)
 S CIAG=CIAG_""""_CIADA_""")"
"RTN","CIAUMTL",31,0)
 Q:'$$PARSE(CIATRM,.CIAZ)
"RTN","CIAUMTL",32,0)
 S CIAZ="",CIADEL=''$G(CIADEL)
"RTN","CIAUMTL",33,0)
 L +@CIART:30
"RTN","CIAUMTL",34,0)
 F  S CIAZ=$O(CIAZ(CIAZ)) Q:CIAZ=""  D
"RTN","CIAUMTL",35,0)
 .I ''$D(@CIAG)=CIADEL D
"RTN","CIAUMTL",36,0)
 ..I CIADEL K @CIAG  K:$D(@CIART@(CIAZ))<10 @CIART@(CIAZ)
"RTN","CIAUMTL",37,0)
 ..E  D:'$D(@CIART@(CIAZ)) REFNEW(CIAZ) S @CIAG=""
"RTN","CIAUMTL",38,0)
 ..D REFCNT(CIAZ,$S(CIADEL:-1,1:1))
"RTN","CIAUMTL",39,0)
 L -@CIART
"RTN","CIAUMTL",40,0)
 Q
"RTN","CIAUMTL",41,0)
 ; Increment/decrement reference count for term and its stems
"RTN","CIAUMTL",42,0)
REFCNT(CIAX,CIAI) ;
"RTN","CIAUMTL",43,0)
 Q:'$L(CIAX)
"RTN","CIAUMTL",44,0)
 I $D(@CIART@(CIAX)) D
"RTN","CIAUMTL",45,0)
 .N CIAZ
"RTN","CIAUMTL",46,0)
 .S CIAZ=$G(@CIART@(CIAX))+CIAI
"RTN","CIAUMTL",47,0)
 .I CIAZ<1 K @CIART@(CIAX)
"RTN","CIAUMTL",48,0)
 .E  S @CIART@(CIAX)=CIAZ
"RTN","CIAUMTL",49,0)
 D REFCNT($E(CIAX,1,$L(CIAX)-1),CIAI)
"RTN","CIAUMTL",50,0)
 Q
"RTN","CIAUMTL",51,0)
 ; Create new term reference
"RTN","CIAUMTL",52,0)
REFNEW(CIAX) ;
"RTN","CIAUMTL",53,0)
 N CIAZ,CIAC,CIAABR
"RTN","CIAUMTL",54,0)
 S CIAZ=CIAX,CIAC=0,CIAABR=0
"RTN","CIAUMTL",55,0)
 F  S CIAZ=$$STEM(CIAZ,CIAX) Q:'$L(CIAZ)  S CIAC=CIAC+$G(@CIART@(CIAZ)),CIAZ=CIAZ_$C(255)
"RTN","CIAUMTL",56,0)
 S @CIART@(CIAX)=CIAC
"RTN","CIAUMTL",57,0)
 Q
"RTN","CIAUMTL",58,0)
 ; Lookup a term in an MTL index
"RTN","CIAUMTL",59,0)
 ; CIART  = Root of index (e.g., ^CIACOD(990.9,"AD"))
"RTN","CIAUMTL",60,0)
 ; CIATRM = Term to lookup
"RTN","CIAUMTL",61,0)
 ; CIARTN = Root of returned array (note: killed before populated)
"RTN","CIAUMTL",62,0)
 ; CIAABR = If nonzero, user can abort lookup with ^
"RTN","CIAUMTL",63,0)
LKP(CIART,CIATRM,CIARTN,CIAABR) ;
"RTN","CIAUMTL",64,0)
 N CIAX,CIAY,CIAW,CIAF,CIAIEN,CIAL,CIAM,CIATRM1
"RTN","CIAUMTL",65,0)
 I $$NEWERR^%ZTER N $ET S $ET=""
"RTN","CIAUMTL",66,0)
 K @CIARTN
"RTN","CIAUMTL",67,0)
 S CIAABR=+$G(CIAABR),@$$TRAP^CIAUOS("LKP2^CIAUMTL")
"RTN","CIAUMTL",68,0)
 I $$PARSE(CIATRM,.CIATRM)=1 S CIAW(1,$O(CIATRM("")))=""
"RTN","CIAUMTL",69,0)
 E  D
"RTN","CIAUMTL",70,0)
 .S CIATRM="",CIAM=9999999999
"RTN","CIAUMTL",71,0)
 .F  S CIATRM=$O(CIATRM(CIATRM)) Q:CIATRM=""  D  Q:CIAL<0
"RTN","CIAUMTL",72,0)
 ..S CIAX=CIATRM(CIATRM)["=",CIAY=CIATRM(CIATRM)["~",CIATRM1="",CIAL=$S(CIAY:9999999999,1:-1)
"RTN","CIAUMTL",73,0)
 ..I 'CIAY F  S CIATRM1=$$STEM(CIATRM1,CIATRM,CIAX) Q:CIATRM1=""  D:$D(^(CIATRM1))>1  Q:CIAL>CIAM
"RTN","CIAUMTL",74,0)
 ...S:CIAL=-1 CIAL=0
"RTN","CIAUMTL",75,0)
 ...S CIAL=CIAL+$G(^(CIATRM1))
"RTN","CIAUMTL",76,0)
 ...S CIATRM1=CIATRM1_$C(255)
"RTN","CIAUMTL",77,0)
 ..S CIAW(CIAL,CIATRM)=""
"RTN","CIAUMTL",78,0)
 ..I CIAL>0,CIAL<CIAM S CIAM=CIAL
"RTN","CIAUMTL",79,0)
 ..D:CIAABR ABORT
"RTN","CIAUMTL",80,0)
 Q:$D(CIAW(-1)) 0
"RTN","CIAUMTL",81,0)
 S CIAW="",CIAF=0
"RTN","CIAUMTL",82,0)
 F  S CIAW=$O(CIAW(CIAW)),CIATRM="" Q:CIAW=""  D  Q:CIAF=-1
"RTN","CIAUMTL",83,0)
 .F  S CIATRM=$O(CIAW(CIAW,CIATRM)) Q:CIATRM=""  D  Q:CIAF=-1
"RTN","CIAUMTL",84,0)
 ..S CIAX=CIATRM(CIATRM)["=",CIAY=CIATRM(CIATRM)["~"
"RTN","CIAUMTL",85,0)
 ..I CIAF D
"RTN","CIAUMTL",86,0)
 ...S CIAIEN=0
"RTN","CIAUMTL",87,0)
 ...F  S CIAIEN=$O(@CIARTN@(CIAIEN)),CIATRM1="" Q:'CIAIEN  D  Q:CIAF=-1
"RTN","CIAUMTL",88,0)
 ....F  S CIATRM1=$$STEM(CIATRM1,CIATRM,CIAX) Q:CIATRM1=""  Q:$D(^(CIATRM1,CIAIEN))
"RTN","CIAUMTL",89,0)
 ....I CIAY-(CIATRM1="") K @CIARTN@(CIAIEN) S:$D(@CIARTN)'>1 CIAF=-1
"RTN","CIAUMTL",90,0)
 ..E  D
"RTN","CIAUMTL",91,0)
 ...S CIATRM1="",CIAF=1
"RTN","CIAUMTL",92,0)
 ...F  S CIATRM1=$$STEM(CIATRM1,CIATRM,CIAX) Q:CIATRM1=""  M @CIARTN=^(CIATRM1)
"RTN","CIAUMTL",93,0)
 ...S:$D(@CIARTN)'>1 CIAF=-1
"RTN","CIAUMTL",94,0)
 Q $D(@CIARTN)>1
"RTN","CIAUMTL",95,0)
LKP2 K @CIARTN
"RTN","CIAUMTL",96,0)
 Q -1
"RTN","CIAUMTL",97,0)
 ; Check for user abort
"RTN","CIAUMTL",98,0)
ABORT N CIAZ
"RTN","CIAUMTL",99,0)
 R CIAZ#1:0
"RTN","CIAUMTL",100,0)
 D:CIAZ=U RAISE^CIAUOS()
"RTN","CIAUMTL",101,0)
 Q
"RTN","CIAUMTL",102,0)
 ; Return in successive calls all terms sharing common stem
"RTN","CIAUMTL",103,0)
 ; (sets naked reference)
"RTN","CIAUMTL",104,0)
STEM(CIALAST,CIASTEM,CIAF) ;
"RTN","CIAUMTL",105,0)
 D:CIAABR ABORT
"RTN","CIAUMTL",106,0)
 I CIALAST="" S CIALAST=CIASTEM Q:$D(@CIART@(CIALAST)) CIALAST
"RTN","CIAUMTL",107,0)
 Q:$G(CIAF) ""
"RTN","CIAUMTL",108,0)
 S CIALAST=$O(@CIART@(CIALAST))
"RTN","CIAUMTL",109,0)
 Q $S($E(CIALAST,1,$L(CIASTEM))=CIASTEM:CIALAST,1:"")
"RTN","CIAUNTEG")
0^72^B4422720
"RTN","CIAUNTEG",1,0)
CIAUNTEG ;ISC/XTSUMBLD KERNEL - Package checksum checker ;3070531.172703
"RTN","CIAUNTEG",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20,2007;Build 129
"RTN","CIAUNTEG",3,0)
 ;;7.3;3070531.172703
"RTN","CIAUNTEG",4,0)
 S XT4="I 1",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
"RTN","CIAUNTEG",5,0)
CONT F XT1=1:1 S XT2=$T(ROU+XT1) Q:XT2=""  S X=$P(XT2," ",1),XT3=$P(XT2,";",3) X XT4 I $T W !,X X ^%ZOSF("TEST") S:'$T XT3=0 X:XT3 ^%ZOSF("RSUM") W ?10,$S('XT3:"Routine not in UCI",XT3'=Y:"Calculated "_$C(7)_Y_", off by "_(Y-XT3),1:"ok")
"RTN","CIAUNTEG",6,0)
 ;
"RTN","CIAUNTEG",7,0)
 K %1,%2,%3,X,Y,XT1,XT2,XT3,XT4 Q
"RTN","CIAUNTEG",8,0)
ONE S XT4="I $D(^UTILITY($J,X))",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
"RTN","CIAUNTEG",9,0)
 W !,"Check a subset of routines:" K ^UTILITY($J) X ^%ZOSF("RSEL")
"RTN","CIAUNTEG",10,0)
 W ! G CONT
"RTN","CIAUNTEG",11,0)
ROU ;;
"RTN","CIAUNTEG",12,0)
CIAU ;;7860723
"RTN","CIAUNTEG",13,0)
CIAUSTX ;;4121035
"RTN","CIAUNTEG",14,0)
CIAUSTX0 ;;3170389
"RTN","CIAUNTEG",15,0)
CIAUSTX1 ;;5106879
"RTN","CIAUNTEG",16,0)
CIAUALR ;;928023
"RTN","CIAUNTEG",17,0)
CIAUBIG ;;6024487
"RTN","CIAUNTEG",18,0)
CIAUDAT ;;5928509
"RTN","CIAUNTEG",19,0)
CIAUDIC ;;7938841
"RTN","CIAUNTEG",20,0)
CIAUDT ;;3374353
"RTN","CIAUNTEG",21,0)
CIAUEDT ;;16189636
"RTN","CIAUNTEG",22,0)
CIAUIMP ;;4666764
"RTN","CIAUNTEG",23,0)
CIAUIN0 ;;1050344
"RTN","CIAUNTEG",24,0)
CIAUIN16 ;;1582494
"RTN","CIAUNTEG",25,0)
CIAUIN18 ;;1178580
"RTN","CIAUNTEG",26,0)
CIAUIN8 ;;1256732
"RTN","CIAUNTEG",27,0)
CIAULK2 ;;13861180
"RTN","CIAUNTEG",28,0)
CIAULKP ;;7525106
"RTN","CIAUNTEG",29,0)
CIAUMTL ;;4714339
"RTN","CIAUNTEG",30,0)
CIAUOS ;;2258460
"RTN","CIAUNTEG",31,0)
CIAUOS1 ;;2630722
"RTN","CIAUNTEG",32,0)
CIAURPC ;;4585641
"RTN","CIAUNTEG",33,0)
CIAUTSK ;;891526
"RTN","CIAUNTEG",34,0)
CIAUUSR ;;1781283
"RTN","CIAUNTEG",35,0)
CIAUUU ;;1311666
"RTN","CIAUNTEG",36,0)
CIAUINIT ;;3174314
"RTN","CIAUNTEG",37,0)
CIAUHFS ;;2629858
"RTN","CIAUNTEG",38,0)
CIAUDDR ;;9459760
"RTN","CIAUNTEG",39,0)
CIAURPRT ;;1778623
"RTN","CIAUNTEG",40,0)
CIAUREG ;;578780
"RTN","CIAUNTEG",41,0)
CIAUBC28 ;;2148213
"RTN","CIAUNTEG",42,0)
CIAUBC39 ;;2796261
"RTN","CIAUNTEG",43,0)
CIAUBCDA ;;3981182
"RTN","CIAUNTEG",44,0)
CIAUIN68 ;;1159584
"RTN","CIAUNTEG",45,0)
CIAUIN58 ;;1357669
"RTN","CIAUNTEG",46,0)
CIAU1 ;;508281
"RTN","CIAUOS")
0^53^B8244808
"RTN","CIAUOS",1,0)
CIAUOS ;MSC/IND/DKM - Platform-dependent operations;04-May-2006 08:19;DKM
"RTN","CIAUOS",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUOS",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUOS",4,0)
 ;=================================================================
"RTN","CIAUOS",5,0)
 ; Return version #
"RTN","CIAUOS",6,0)
VER() Q $P($T(+2),";",3)
"RTN","CIAUOS",7,0)
CVTFN(CIAFIL,CIAROOT) ;
"RTN","CIAUOS",8,0)
 N CIAZ,CIAZ1,CIAD
"RTN","CIAUOS",9,0)
 S CIAD=$$DIRDLM,CIAROOT=$G(CIAROOT)
"RTN","CIAUOS",10,0)
 S:$E(CIAROOT,$L(CIAROOT))=$E(CIAD,3) CIAROOT=$E(CIAROOT,1,$L(CIAROOT)-1)
"RTN","CIAUOS",11,0)
 S CIAZ=$L(CIAFIL,"/"),CIAZ1=$P(CIAFIL,"/",1,CIAZ-1),CIAFIL=$P(CIAFIL,"/",CIAZ)
"RTN","CIAUOS",12,0)
 S:$L(CIAZ1) CIAROOT=CIAROOT_$E(CIAD,$S($L(CIAROOT):2,1:1))_$TR(CIAZ1,"/.-",$E(CIAD,2))
"RTN","CIAUOS",13,0)
 Q CIAROOT_$S($L(CIAROOT):$E(CIAD,3),1:"")_CIAFIL
"RTN","CIAUOS",14,0)
 ; Set right margin
"RTN","CIAUOS",15,0)
RM(X) ;EP
"RTN","CIAUOS",16,0)
 X ^%ZOSF("RM")
"RTN","CIAUOS",17,0)
 Q
"RTN","CIAUOS",18,0)
 ; Test for tag/routine
"RTN","CIAUOS",19,0)
TEST(X) ;EP
"RTN","CIAUOS",20,0)
 N Z
"RTN","CIAUOS",21,0)
 S:X[U Z=$P(X,U),X=$P(X,U,2)
"RTN","CIAUOS",22,0)
 Q:'$L(X)!(X'?.1"%"1.AN) 0
"RTN","CIAUOS",23,0)
 X ^%ZOSF("TEST")
"RTN","CIAUOS",24,0)
 Q $S('$T:0,$G(Z)="":1,Z'?.1"%"1.AN:0,1:$T(@Z^@X)'="")
"RTN","CIAUOS",25,0)
ETRAP() Q $$NEWERR^%ZTER
"RTN","CIAUOS",26,0)
 ; Open a host file
"RTN","CIAUOS",27,0)
OPENX(X1,X2) ;EP
"RTN","CIAUOS",28,0)
 D OPEN(.X1,.X2)
"RTN","CIAUOS",29,0)
 Q X1
"RTN","CIAUOS",30,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUOS",31,0)
 ;=================================================================
"RTN","CIAUOS",32,0)
 ; Open a host file
"RTN","CIAUOS",33,0)
OPEN(X1,X2) ;EP
"RTN","CIAUOS",34,0)
 O X1:$S("Rr"[$G(X2):"RS","Ww"[X2:"WNS","Bb"[X2:"RF",1:""):0
"RTN","CIAUOS",35,0)
 E  ZT "NOPEN"
"RTN","CIAUOS",36,0)
 U X1
"RTN","CIAUOS",37,0)
 S ^TMP("CIAUHFS",$J,X1)=""
"RTN","CIAUOS",38,0)
 Q
"RTN","CIAUOS",39,0)
 ; Close a host file
"RTN","CIAUOS",40,0)
CLOSE(X) ;EP
"RTN","CIAUOS",41,0)
 C X
"RTN","CIAUOS",42,0)
 K ^TMP("CIAUHFS",$J,X)
"RTN","CIAUOS",43,0)
 Q
"RTN","CIAUOS",44,0)
 ; Close all open host files
"RTN","CIAUOS",45,0)
CLOSEALL ;EP
"RTN","CIAUOS",46,0)
 N Z
"RTN","CIAUOS",47,0)
 S Z=""
"RTN","CIAUOS",48,0)
 F  S Z=$O(^TMP("CIAUHFS",$J,Z)) Q:Z=""  C Z
"RTN","CIAUOS",49,0)
 K ^TMP("CIAUHFS",$J)
"RTN","CIAUOS",50,0)
 Q
"RTN","CIAUOS",51,0)
EOF ZT:$ZA=-1 "ENDOFFILE"
"RTN","CIAUOS",52,0)
 Q
"RTN","CIAUOS",53,0)
EOFERR() Q:$ZE["ENDOFFILE"
"RTN","CIAUOS",54,0)
 ; Read a line of data
"RTN","CIAUOS",55,0)
READ(X,Y) ;EP
"RTN","CIAUOS",56,0)
 N $ET
"RTN","CIAUOS",57,0)
 S $ET="",$ZT="READX"
"RTN","CIAUOS",58,0)
 U $G(Y,$I)
"RTN","CIAUOS",59,0)
 Q:$ZEOF 1
"RTN","CIAUOS",60,0)
 R X:5
"RTN","CIAUOS",61,0)
 Q:$T 0
"RTN","CIAUOS",62,0)
READX Q 1
"RTN","CIAUOS",63,0)
 ; Delete a host file
"RTN","CIAUOS",64,0)
DELETE(X) ;EP
"RTN","CIAUOS",65,0)
 S X=$ZF(-1,"rm """_X_"""")
"RTN","CIAUOS",66,0)
 Q
"RTN","CIAUOS",67,0)
 ; Rename a host file
"RTN","CIAUOS",68,0)
RENAME(X1,X2) ;EP
"RTN","CIAUOS",69,0)
 S X1=$ZF(-1,"mv """_X1_""" """_X2_"""")
"RTN","CIAUOS",70,0)
 Q
"RTN","CIAUOS",71,0)
 ; Generate directory listing
"RTN","CIAUOS",72,0)
DIR(X1,X2,X3) ;EP
"RTN","CIAUOS",73,0)
 N Z,Z1,FDLM
"RTN","CIAUOS",74,0)
 S FDLM=$E($$DIRDLM,1)
"RTN","CIAUOS",75,0)
 S X3=$G(X3,$NA(^UTILITY("DIR",$J)))
"RTN","CIAUOS",76,0)
 K @X3
"RTN","CIAUOS",77,0)
 S:'$G(X2) X2=9999999999
"RTN","CIAUOS",78,0)
 F Z=1:1:X2 S Z1=$ZSEARCH(X1),X1="" Q:Z1=""  D
"RTN","CIAUOS",79,0)
 .S Z1=$P(Z1,FDLM,$L(Z1,FDLM))
"RTN","CIAUOS",80,0)
 .S:$TR(Z1,".")'="" @X3@(Z1)=""
"RTN","CIAUOS",81,0)
 Q
"RTN","CIAUOS",82,0)
 ; Return path delimiters
"RTN","CIAUOS",83,0)
DIRDLM() ;EP
"RTN","CIAUOS",84,0)
 Q "///"
"RTN","CIAUOS",85,0)
 ; Return default working directory
"RTN","CIAUOS",86,0)
DEFDIR(X) ;EP
"RTN","CIAUOS",87,0)
 N FDLM
"RTN","CIAUOS",88,0)
 S FDLM=$E($$DIRDLM,1)
"RTN","CIAUOS",89,0)
 S X=$G(X,$P($G(^XTV(8989.3,1,"DEV")),U))
"RTN","CIAUOS",90,0)
 S:$E(X,$L(X))'=FDLM X=X_FDLM
"RTN","CIAUOS",91,0)
 Q X
"RTN","CIAUOS",92,0)
 ; Parse current error
"RTN","CIAUOS",93,0)
ERR(X1,X2,X3) ;EP
"RTN","CIAUOS",94,0)
 S X1=$E($P($ZE,">"),2,99),X2=$P($P($ZE,">",2),":"),X3=X1
"RTN","CIAUOS",95,0)
 S:X2["*" X2=""
"RTN","CIAUOS",96,0)
 S:$E(X1)="Z" X3=$E(X1,2,99),X1="ZTRAP"
"RTN","CIAUOS",97,0)
 Q
"RTN","CIAUOS",98,0)
 ; Raise an exception
"RTN","CIAUOS",99,0)
RAISE(X) ;EP
"RTN","CIAUOS",100,0)
 ZT $G(X)
"RTN","CIAUOS",101,0)
 ; Set error trap
"RTN","CIAUOS",102,0)
TRAP(X) ;EP
"RTN","CIAUOS",103,0)
 Q $S($D(X):"$ZT="""_X_"""",1:"$ZT")
"RTN","CIAUOS",104,0)
 ; Return size of a file
"RTN","CIAUOS",105,0)
SIZE(X) ;EP
"RTN","CIAUOS",106,0)
 Q 0
"RTN","CIAUOS",107,0)
 ; Return free disk space
"RTN","CIAUOS",108,0)
FREE(X) ;EP
"RTN","CIAUOS",109,0)
 Q 0
"RTN","CIAUOS",110,0)
 ; Return host ip address
"RTN","CIAUOS",111,0)
HOSTIP() ;EP
"RTN","CIAUOS",112,0)
 Q $P($P($ZU(131,1),","),":",2)
"RTN","CIAUOS",113,0)
 ; Return host name
"RTN","CIAUOS",114,0)
HOSTNAME() ;EP
"RTN","CIAUOS",115,0)
 Q $P($P($ZU(131,1),","),":")
"RTN","CIAUOS",116,0)
 ; Return client ip address
"RTN","CIAUOS",117,0)
CLIENTIP() ;EP
"RTN","CIAUOS",118,0)
 N IP,$ET
"RTN","CIAUOS",119,0)
 S $ET="S $EC=""""",IP=$ZU(111,0)
"RTN","CIAUOS",120,0)
 Q $A(IP,1)_"."_$A(IP,2)_"."_$A(IP,3)_"."_$A(IP,4)
"RTN","CIAUOS1")
0^54^B10543276
"RTN","CIAUOS1",1,0)
CIAUOS ;MSC/IND/DKM - Platform-dependent operations;04-May-2006 08:19;DKM
"RTN","CIAUOS1",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUOS1",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUOS1",4,0)
 ;=================================================================
"RTN","CIAUOS1",5,0)
 ; Return version # of RTL
"RTN","CIAUOS1",6,0)
VER() ;EP
"RTN","CIAUOS1",7,0)
 Q +$P($T(CIAUOS+1),";",3)
"RTN","CIAUOS1",8,0)
 ; Set right margin
"RTN","CIAUOS1",9,0)
RM(X) ;EP
"RTN","CIAUOS1",10,0)
 X ^%ZOSF("RM")
"RTN","CIAUOS1",11,0)
 Q
"RTN","CIAUOS1",12,0)
 ; Test for routine/tag
"RTN","CIAUOS1",13,0)
TEST(X) ;EP
"RTN","CIAUOS1",14,0)
 N Z
"RTN","CIAUOS1",15,0)
 S:X[U Z=$P(X,U),X=$P(X,U,2)
"RTN","CIAUOS1",16,0)
 Q:'$L(X)!(X'?.1"%"1.AN) 0
"RTN","CIAUOS1",17,0)
 X ^%ZOSF("TEST")
"RTN","CIAUOS1",18,0)
 Q $S('$T:0,$G(Z)="":1,Z'?.1"%"1.AN:0,1:$T(@Z^@X)'="")
"RTN","CIAUOS1",19,0)
 ; Raise an exception
"RTN","CIAUOS1",20,0)
RAISE(X) ;EP
"RTN","CIAUOS1",21,0)
 ZT $G(X)
"RTN","CIAUOS1",22,0)
 ; Return code to set error trap
"RTN","CIAUOS1",23,0)
TRAP(X) ;EP
"RTN","CIAUOS1",24,0)
 Q $$SUBST^CIAU(^%ZOSF("TRAP"),"X",""""_X_"""")
"RTN","CIAUOS1",25,0)
 ; Check for $ET capability
"RTN","CIAUOS1",26,0)
ETRAP() ;EP
"RTN","CIAUOS1",27,0)
 Q $$NEWERR^%ZTER
"RTN","CIAUOS1",28,0)
 ; Open a file (extrinsic)
"RTN","CIAUOS1",29,0)
OPENX(X1,X2) ;EP
"RTN","CIAUOS1",30,0)
 D OPEN(.X1,.X2)
"RTN","CIAUOS1",31,0)
 Q X1
"RTN","CIAUOS1",32,0)
 ; Open a file
"RTN","CIAUOS1",33,0)
OPEN(X1,X2) ;EP
"RTN","CIAUOS1",34,0)
 N IO,POP,X3
"RTN","CIAUOS1",35,0)
 D PARSE(.X1,.X3),OPEN^%ZISH(X3_X1,X3,X1,$G(X2,"R"),32767)
"RTN","CIAUOS1",36,0)
 I POP ZT "OPEN"
"RTN","CIAUOS1",37,0)
 S ^XTMP("CIAUHFS",$J,IO)=X3_X1,X1=IO
"RTN","CIAUOS1",38,0)
 Q
"RTN","CIAUOS1",39,0)
 ; Close a file
"RTN","CIAUOS1",40,0)
CLOSE(X) ;EP
"RTN","CIAUOS1",41,0)
 N Y
"RTN","CIAUOS1",42,0)
 S Y=$G(^XTMP("CIAUHFS",$J,X)),IO=X
"RTN","CIAUOS1",43,0)
 K ^(X)
"RTN","CIAUOS1",44,0)
 D CLOSE^%ZISH(Y)
"RTN","CIAUOS1",45,0)
 Q
"RTN","CIAUOS1",46,0)
 ; Close all open HFS
"RTN","CIAUOS1",47,0)
CLOSEALL ;EP
"RTN","CIAUOS1",48,0)
 N Z
"RTN","CIAUOS1",49,0)
 S Z=""
"RTN","CIAUOS1",50,0)
 F  S Z=$O(^XTMP("CIAUHFS",$J,Z)) Q:Z=""  D CLOSE(Z)
"RTN","CIAUOS1",51,0)
 Q
"RTN","CIAUOS1",52,0)
 ; Parse out directory from filename
"RTN","CIAUOS1",53,0)
PARSE(X,Y) ;EP
"RTN","CIAUOS1",54,0)
 N D,Z
"RTN","CIAUOS1",55,0)
 S D=$E($$DIRDLM,3),Z=$L(X,D),Y=$P(X,D,1,Z-1),Y=$S($L(Y):Y,1:$$PWD^%ZISH)_$S(Z>1:D,1:""),X=$P(X,D,Z)
"RTN","CIAUOS1",56,0)
 Q
"RTN","CIAUOS1",57,0)
 ; Read a line
"RTN","CIAUOS1",58,0)
READ(X,Y) ;EP
"RTN","CIAUOS1",59,0)
 N IO,%ZA,%ZB,%ZC,%ZL
"RTN","CIAUOS1",60,0)
 S IO=$G(Y,$I)
"RTN","CIAUOS1",61,0)
 D READNXT^%ZISH(.X)
"RTN","CIAUOS1",62,0)
 U IO
"RTN","CIAUOS1",63,0)
 Q $$STATUS^%ZISH&'$L(X)
"RTN","CIAUOS1",64,0)
 ; Delete a file
"RTN","CIAUOS1",65,0)
DELETE(X) ;EP
"RTN","CIAUOS1",66,0)
 N Z
"RTN","CIAUOS1",67,0)
 D PARSE(.X,.Z)
"RTN","CIAUOS1",68,0)
 S:$L(X) Z(X)="",Z=$$DEL^%ZISH(Z,"Z")
"RTN","CIAUOS1",69,0)
 Q
"RTN","CIAUOS1",70,0)
 ; Rename a file
"RTN","CIAUOS1",71,0)
RENAME(X1,X2) ;EP
"RTN","CIAUOS1",72,0)
 N X3,X4
"RTN","CIAUOS1",73,0)
 D PARSE(.X1,.X3),PARSE(.X2,.X4)
"RTN","CIAUOS1",74,0)
 I $$MV^%ZISH(X3,X1,X4,X2)
"RTN","CIAUOS1",75,0)
 Q
"RTN","CIAUOS1",76,0)
 ; List files
"RTN","CIAUOS1",77,0)
DIR(X1,X2,X3) ;EP
"RTN","CIAUOS1",78,0)
 N Z
"RTN","CIAUOS1",79,0)
 D PARSE(.X1,.Z)
"RTN","CIAUOS1",80,0)
 S Z(X1)="",X3=$G(X3,"^UTILITY(""DIR"",$J)")
"RTN","CIAUOS1",81,0)
 K @X3
"RTN","CIAUOS1",82,0)
 I $$LIST^%ZISH(Z,"Z",X3)
"RTN","CIAUOS1",83,0)
 Q
"RTN","CIAUOS1",84,0)
 ; Force error if at EOF
"RTN","CIAUOS1",85,0)
EOF I $$STATUS^%ZISH ZT "EOF"
"RTN","CIAUOS1",86,0)
 Q
"RTN","CIAUOS1",87,0)
 ; Returns true if current error is EOF
"RTN","CIAUOS1",88,0)
EOFERR() ;EP
"RTN","CIAUOS1",89,0)
 Q $$EC^%ZOSV["EOF"
"RTN","CIAUOS1",90,0)
 ; URL format filename-->HFS format
"RTN","CIAUOS1",91,0)
CVTFN(CIAFIL,CIAROOT) ;EP
"RTN","CIAUOS1",92,0)
 N CIAZ,CIAZ1,CIAD
"RTN","CIAUOS1",93,0)
 S CIAD=$$DIRDLM,CIAROOT=$G(CIAROOT)
"RTN","CIAUOS1",94,0)
 S:$E(CIAROOT,$L(CIAROOT))=$E(CIAD,3) CIAROOT=$E(CIAROOT,1,$L(CIAROOT)-1)
"RTN","CIAUOS1",95,0)
 S CIAZ=$L(CIAFIL,"/"),CIAZ1=$P(CIAFIL,"/",1,CIAZ-1),CIAFIL=$P(CIAFIL,"/",CIAZ)
"RTN","CIAUOS1",96,0)
 S:$L(CIAZ1) CIAROOT=CIAROOT_$E(CIAD,$S($L(CIAROOT):2,1:1))_$TR(CIAZ1,"/.-",$E(CIAD,2))
"RTN","CIAUOS1",97,0)
 Q CIAROOT_$S($L(CIAROOT):$E(CIAD,3),1:"")_CIAFIL
"RTN","CIAUOS1",98,0)
 ; Return directory delimiters
"RTN","CIAUOS1",99,0)
DIRDLM() ;EP
"RTN","CIAUOS1",100,0)
 N X
"RTN","CIAUOS1",101,0)
 S X=$$PWD^%ZISH
"RTN","CIAUOS1",102,0)
 Q $S(X["[":"[.]",X["\":"\\\",1:"///")
"RTN","CIAUOS1",103,0)
 ; Parse error data
"RTN","CIAUOS1",104,0)
ERR(X1,X2,X3) ;EP
"RTN","CIAUOS1",105,0)
 N X
"RTN","CIAUOS1",106,0)
 S X=$$EC^%ZOSV,X1=$$VERSION^%ZOSV(1)
"RTN","CIAUOS1",107,0)
 G ERRMSM:X1["MSM",ERRDSM:X1["DSM"
"RTN","CIAUOS1",108,0)
 S (X1,X2,X3)=""
"RTN","CIAUOS1",109,0)
 Q
"RTN","CIAUOS1",110,0)
ERRMSM S X1=$E($P(X,">"),2,99),X2=$P($P(X,">",2),":"),X3=X1
"RTN","CIAUOS1",111,0)
 S:X2["*" X2=""
"RTN","CIAUOS1",112,0)
 S:$E(X1)="Z" X3=$E(X1,2,99),X1="ZTRAP"
"RTN","CIAUOS1",113,0)
 Q
"RTN","CIAUOS1",114,0)
ERRDSM S X1=$P($P(X,", ",2),"-",3),X2=$P($P(X,", "),":"),X3=$$TRIM^CIAU($P(X,", ",$S(X1="ZTRAP":4,1:3)))
"RTN","CIAUOS1",115,0)
 Q
"RTN","CIAUREG")
0^64^B855036
"RTN","CIAUREG",1,0)
CIAUREG ;MSC/IND/DKM - Various registration actions ;04-May-2006 08:19;DKM
"RTN","CIAUREG",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUREG",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUREG",4,0)
 ;=================================================================
"RTN","CIAUREG",5,0)
 ; Register a protocol to an extended action protocol
"RTN","CIAUREG",6,0)
 ; Input: P-Parent protocol
"RTN","CIAUREG",7,0)
 ;        C-Child protocol
"RTN","CIAUREG",8,0)
REGPROT(P,C,ERR) ;
"RTN","CIAUREG",9,0)
 N IENARY,PIEN,AIEN,FDA
"RTN","CIAUREG",10,0)
 D
"RTN","CIAUREG",11,0)
 .I '$L(P)!('$L(C)) S ERR="Missing input parameter" Q
"RTN","CIAUREG",12,0)
 .S IENARY(1)=$$FIND1^DIC(101,"","",P)
"RTN","CIAUREG",13,0)
 .S AIEN=$$FIND1^DIC(101,"","",C)
"RTN","CIAUREG",14,0)
 .I 'IENARY(1)!'AIEN S ERR="Unknown protocol name" Q
"RTN","CIAUREG",15,0)
 .S FDA(101.01,"?+2,"_IENARY(1)_",",.01)=AIEN
"RTN","CIAUREG",16,0)
 .D UPDATE^DIE("S","FDA","IENARY","ERR")
"RTN","CIAUREG",17,0)
 Q:$Q $G(ERR)=""
"RTN","CIAUREG",18,0)
 Q
"RTN","CIAURPC")
0^56^B16953602
"RTN","CIAURPC",1,0)
CIAURPC ;MSC/IND/DKM - RPC Encapsulations for CIAU routines ;04-May-2006 08:19;DKM
"RTN","CIAURPC",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAURPC",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAURPC",4,0)
 ;=================================================================
"RTN","CIAURPC",5,0)
 ; RPC: CIAUDIC
"RTN","CIAURPC",6,0)
DIC(CIADATA,CIABM,CIACMD,CIAARG) ;
"RTN","CIAURPC",7,0)
 S CIADATA(0)=$$ENTRY^CIAUDIC(CIABM,CIACMD)
"RTN","CIAURPC",8,0)
 Q
"RTN","CIAURPC",9,0)
 ; RPC: CIAUSTX
"RTN","CIAURPC",10,0)
MSYNTAX(CIADATA,CIACODE,CIAOPT) ;
"RTN","CIAURPC",11,0)
 S CIADATA=$$ENTRY^CIAUSTX(CIACODE,.CIAOPT)
"RTN","CIAURPC",12,0)
 Q
"RTN","CIAURPC",13,0)
 ; RPC: Return a group of entries from a file
"RTN","CIAURPC",14,0)
 ; CIAFN   = File #
"RTN","CIAURPC",15,0)
 ; CIAFROM = Starting entry (default is null)
"RTN","CIAURPC",16,0)
 ; CIADIR  = Direction (default = 1)
"RTN","CIAURPC",17,0)
 ; CIASCN  = Screening logic (optional)
"RTN","CIAURPC",18,0)
 ; CIAMAX  = Maximum entries (default = 20)
"RTN","CIAURPC",19,0)
 ; CIAXRF  = Cross reference (default = B)
"RTN","CIAURPC",20,0)
FILGET(CIADATA,CIAFN,CIAFROM,CIADIR,CIASCN,CIAMAX,CIAXRF) ;
"RTN","CIAURPC",21,0)
 N CIAIEN,CIAGBL,CIATOT,Y
"RTN","CIAURPC",22,0)
 S CIAFROM=$G(CIAFROM),CIADIR=$S($G(CIADIR)<0:-1,1:1),CIAMAX=$G(CIAMAX,20),CIAXRF=$G(CIAXRF,"B"),CIASCN=$G(CIASCN),CIAGBL=$$ROOT^DILFD(CIAFN,,1),CIATOT=0
"RTN","CIAURPC",23,0)
 Q:'$L(CIAGBL)
"RTN","CIAURPC",24,0)
 F  Q:CIATOT'<CIAMAX  S CIAFROM=$O(@CIAGBL@(CIAXRF,CIAFROM),CIADIR),CIAIEN=0 Q:'$L(CIAFROM)  D
"RTN","CIAURPC",25,0)
 .F  S CIAIEN=$O(@CIAGBL@(CIAXRF,CIAFROM,CIAIEN)) Q:'CIAIEN  D
"RTN","CIAURPC",26,0)
 ..Q:'$D(@CIAGBL@(CIAIEN,0))
"RTN","CIAURPC",27,0)
 ..I $L(CIASCN) S Y=CIAIEN X CIASCN E  Q
"RTN","CIAURPC",28,0)
 ..S CIATOT=CIATOT+1,@CIADATA@(CIATOT)=CIAIEN_U_CIAFROM
"RTN","CIAURPC",29,0)
 Q
"RTN","CIAURPC",30,0)
 ; RPC: Show all or selected entries for a file
"RTN","CIAURPC",31,0)
 ; CIAGBL = File # or closed global reference
"RTN","CIAURPC",32,0)
 ; CIAIEN = Optional list of IENs to retrieve (default=ALL)
"RTN","CIAURPC",33,0)
 ;          May be passed as single IEN or array with IENs as subscripts
"RTN","CIAURPC",34,0)
FILENT(CIADATA,CIAGBL,CIAIEN) ;
"RTN","CIAURPC",35,0)
 N CIAG,CIAX
"RTN","CIAURPC",36,0)
 S:CIAGBL=+CIAGBL CIAGBL=$$ROOT^DILFD(CIAGBL,,1)
"RTN","CIAURPC",37,0)
 S CIADATA=$$TMPGBL
"RTN","CIAURPC",38,0)
 Q:'$L(CIAGBL)
"RTN","CIAURPC",39,0)
 S:$G(CIAIEN) CIAIEN(+CIAIEN)=""
"RTN","CIAURPC",40,0)
 S CIAG=$S($D(CIAIEN):"CIAIEN",1:CIAGBL),CIAIEN=0
"RTN","CIAURPC",41,0)
 F  S CIAIEN=$O(@CIAG@(CIAIEN)) Q:'CIAIEN  D
"RTN","CIAURPC",42,0)
 .S CIAX=$P($G(@CIAGBL@(CIAIEN,0)),U)
"RTN","CIAURPC",43,0)
 .S:$L(CIAX) @CIADATA@(CIAIEN)=CIAIEN_U_CIAX
"RTN","CIAURPC",44,0)
 Q
"RTN","CIAURPC",45,0)
 ; RPC: Show IEN of next/previous entry in a file
"RTN","CIAURPC",46,0)
FILNXT(CIADATA,CIAGBL,CIAIEN) ;
"RTN","CIAURPC",47,0)
 N CIAD
"RTN","CIAURPC",48,0)
 S:CIAGBL=+CIAGBL CIAGBL=$$ROOT^DILFD(CIAGBL,,1)
"RTN","CIAURPC",49,0)
 I CIAIEN<0 S CIAIEN=-CIAIEN,CIAD=-1
"RTN","CIAURPC",50,0)
 E  S CIAD=1
"RTN","CIAURPC",51,0)
 S CIADATA=+$O(@CIAGBL@(CIAIEN),CIAD)
"RTN","CIAURPC",52,0)
 Q
"RTN","CIAURPC",53,0)
 ; RPC: Convert date input to FM format
"RTN","CIAURPC",54,0)
STRTODAT(DATA,VAL,FMT) ;
"RTN","CIAURPC",55,0)
 N %DT,X,Y
"RTN","CIAURPC",56,0)
 I VAL'["@",VAL[" " S VAL=$TR(VAL," ","@")
"RTN","CIAURPC",57,0)
 I VAL["@",$TR($P(VAL,"@",2),":0")="" S $P(VAL,"@",2)="00:00:01"
"RTN","CIAURPC",58,0)
 S %DT=$G(FMT,"TS"),X=VAL
"RTN","CIAURPC",59,0)
 D ^%DT
"RTN","CIAURPC",60,0)
 S DATA=$S(Y>0:Y,1:"")
"RTN","CIAURPC",61,0)
 Q
"RTN","CIAURPC",62,0)
 ; Return reference to temp global
"RTN","CIAURPC",63,0)
TMPGBL(X) ;EP
"RTN","CIAURPC",64,0)
 K ^TMP("CIAURPC"_$G(X),$J) Q $NA(^($J))
"RTN","CIAURPC",65,0)
 ; Register/unregister RPCs within a given namespace to a context
"RTN","CIAURPC",66,0)
REGNMSP(NMSP,CTX,DEL) ;EP
"RTN","CIAURPC",67,0)
 N RPC,IEN,LEN
"RTN","CIAURPC",68,0)
 S LEN=$L(NMSP),CTX=+$$GETOPT(CTX)
"RTN","CIAURPC",69,0)
 I $G(DEL) D
"RTN","CIAURPC",70,0)
 .S IEN=0
"RTN","CIAURPC",71,0)
 .F  S IEN=$O(^DIC(19,CTX,"RPC","B",IEN)) Q:'IEN  D
"RTN","CIAURPC",72,0)
 ..I $E($G(^XWB(8994,IEN,0)),1,LEN)=NMSP,$$REGRPC(IEN,CTX,1)
"RTN","CIAURPC",73,0)
 E  D
"RTN","CIAURPC",74,0)
 .Q:LEN<2
"RTN","CIAURPC",75,0)
 .S RPC=NMSP
"RTN","CIAURPC",76,0)
 .F  D:$L(RPC)  S RPC=$O(^XWB(8994,"B",RPC)) Q:NMSP'=$E(RPC,1,LEN)
"RTN","CIAURPC",77,0)
 ..F IEN=0:0 S IEN=$O(^XWB(8994,"B",RPC,IEN)) Q:'IEN  I $$REGRPC(IEN,.CTX)
"RTN","CIAURPC",78,0)
 Q
"RTN","CIAURPC",79,0)
 ; Register/unregister an RPC to/from a context
"RTN","CIAURPC",80,0)
 ; RPC = IEN or name of RPC
"RTN","CIAURPC",81,0)
 ; CTX = IEN or name of context
"RTN","CIAURPC",82,0)
 ; DEL = If nonzero, the RPC is unregistered (defaults to 0)
"RTN","CIAURPC",83,0)
 ; Returns -1 if already registered; 0 if failed; 1 if succeeded
"RTN","CIAURPC",84,0)
REGRPC(RPC,CTX,DEL) ;EP
"RTN","CIAURPC",85,0)
 S RPC=+$$GETRPC(RPC)
"RTN","CIAURPC",86,0)
 Q $S(RPC<1:0,1:$$REGMULT(19.05,"RPC",RPC,.CTX,.DEL))
"RTN","CIAURPC",87,0)
 ; Add/remove a context to/from the ITEM multiple of another context.
"RTN","CIAURPC",88,0)
REGCTX(SRC,DST,DEL) ;EP
"RTN","CIAURPC",89,0)
 S SRC=+$$GETOPT(SRC)
"RTN","CIAURPC",90,0)
 Q $S('SRC:0,1:$$REGMULT(19.01,10,SRC,.DST,.DEL))
"RTN","CIAURPC",91,0)
 ; Add/delete an entry to/from a specified OPTION multiple.
"RTN","CIAURPC",92,0)
 ; SFN = Subfile #
"RTN","CIAURPC",93,0)
 ; NOD = Subnode for multiple
"RTN","CIAURPC",94,0)
 ; ITM = Item IEN to add
"RTN","CIAURPC",95,0)
 ; CTX = Option to add to
"RTN","CIAURPC",96,0)
 ; DEL = Delete flag (optional)
"RTN","CIAURPC",97,0)
REGMULT(SFN,NOD,ITM,CTX,DEL) ;
"RTN","CIAURPC",98,0)
 N FDA,IEN
"RTN","CIAURPC",99,0)
 S CTX=+$$GETOPT(CTX)
"RTN","CIAURPC",100,0)
 S DEL=+$G(DEL)
"RTN","CIAURPC",101,0)
 S IEN=+$O(^DIC(19,CTX,NOD,"B",ITM,0))
"RTN","CIAURPC",102,0)
 Q:'IEN=DEL -1
"RTN","CIAURPC",103,0)
 K ^TMP("DIERR",$J)
"RTN","CIAURPC",104,0)
 I DEL S FDA(SFN,IEN_","_CTX_",",.01)="@"
"RTN","CIAURPC",105,0)
 E  S FDA(SFN,"+1,"_CTX_",",.01)=ITM
"RTN","CIAURPC",106,0)
 D UPDATE^DIE("","FDA")
"RTN","CIAURPC",107,0)
 S FDA='$D(^TMP("DIERR",$J)) K ^($J)
"RTN","CIAURPC",108,0)
 Q FDA
"RTN","CIAURPC",109,0)
 ; Register a protocol to an extended action protocol
"RTN","CIAURPC",110,0)
 ; Input: P-Parent protocol
"RTN","CIAURPC",111,0)
 ;        C-Child protocol
"RTN","CIAURPC",112,0)
REGPROT(P,C,ERR) ;EP
"RTN","CIAURPC",113,0)
 N IENARY,PIEN,AIEN,FDA
"RTN","CIAURPC",114,0)
 D
"RTN","CIAURPC",115,0)
 .I '$L(P)!('$L(C)) S ERR="Missing input parameter" Q
"RTN","CIAURPC",116,0)
 .S IENARY(1)=$$FIND1^DIC(101,"","",P)
"RTN","CIAURPC",117,0)
 .S AIEN=$$FIND1^DIC(101,"","",C)
"RTN","CIAURPC",118,0)
 .I 'IENARY(1)!'AIEN S ERR="Unknown protocol name" Q
"RTN","CIAURPC",119,0)
 .S FDA(101.01,"?+2,"_IENARY(1)_",",.01)=AIEN
"RTN","CIAURPC",120,0)
 .D UPDATE^DIE("S","FDA","IENARY","ERR")
"RTN","CIAURPC",121,0)
 Q:$Q $G(ERR)=""
"RTN","CIAURPC",122,0)
 Q
"RTN","CIAURPC",123,0)
 ; Remove nonexistent RPCs from context
"RTN","CIAURPC",124,0)
CLNRPC(CTX) ;EP
"RTN","CIAURPC",125,0)
 N IEN
"RTN","CIAURPC",126,0)
 S CTX=+$$GETOPT(CTX)
"RTN","CIAURPC",127,0)
 F IEN=0:0 S IEN=$O(^DIC(19,CTX,"RPC","B",IEN)) Q:'IEN  D:'$D(^XWB(8994,IEN)) REGRPC(IEN,CTX,1)
"RTN","CIAURPC",128,0)
 Q
"RTN","CIAURPC",129,0)
 ; Return IEN of option
"RTN","CIAURPC",130,0)
GETOPT(X) ;EP
"RTN","CIAURPC",131,0)
 N Y
"RTN","CIAURPC",132,0)
 Q:X=+X X
"RTN","CIAURPC",133,0)
 S Y=$$FIND1^DIC(19,"","X",X)
"RTN","CIAURPC",134,0)
 W:'Y "Cannot find option "_X,!!
"RTN","CIAURPC",135,0)
 Q Y
"RTN","CIAURPC",136,0)
 ; Return IEN of RPC
"RTN","CIAURPC",137,0)
GETRPC(X) ;EP
"RTN","CIAURPC",138,0)
 N Y
"RTN","CIAURPC",139,0)
 Q:X=+X X
"RTN","CIAURPC",140,0)
 S Y=$$FIND1^DIC(8994,"","X",X)
"RTN","CIAURPC",141,0)
 W:'Y "Cannot find RPC "_X,!!
"RTN","CIAURPC",142,0)
 Q Y
"RTN","CIAURPRT")
0^63^B2992421
"RTN","CIAURPRT",1,0)
CIAURPRT ;MSC/IND/DKM - Routine Pretty Print Program ;20-Jan-2015 13:23;DKM
"RTN","CIAURPRT",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAURPRT",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAURPRT",4,0)
 ;=================================================================
"RTN","CIAURPRT",5,0)
 N R,C,D,P,N,M,L,X,Y,B,W,Z,S,A,F,T,Q
"RTN","CIAURPRT",6,0)
 D HOME^%ZIS,TITLE^CIAU("Routine Pretty Print")
"RTN","CIAURPRT",7,0)
 X ^%ZOSF("RSEL")
"RTN","CIAURPRT",8,0)
 I $O(^UTILITY($J,0))="" W "No routines selected.",!! K ^UTILITY($J) Q
"RTN","CIAURPRT",9,0)
 D ^%ZIS
"RTN","CIAURPRT",10,0)
 Q:POP
"RTN","CIAURPRT",11,0)
 X ^%ZOSF("UCI")
"RTN","CIAURPRT",12,0)
 S A=Y,R=0,C="     >>> ",W=IOM-$L(C)-1,M=$L(C)+1,B=$$UND^CIAU(W),T=$E(IOST,1,2)="C-",F=$S(T:IOF,1:""""""),Q=0
"RTN","CIAURPRT",13,0)
 F  S R=$O(^UTILITY($J,R)) Q:R=""  D
"RTN","CIAURPRT",14,0)
 .I IO'=IO(0) U IO(0) W !,"Printing "_R_"..."
"RTN","CIAURPRT",15,0)
 .U IO
"RTN","CIAURPRT",16,0)
 .S D=$$ENTRY^CIAUDT($H),P=0,$Y=IOSL,S=0
"RTN","CIAURPRT",17,0)
 .X "ZL @R F N=1:1 S L=$T(+N) Q:'$L(L)  S ^UTILITY($J,R,N)=L,S=S+$L(L)+2"
"RTN","CIAURPRT",18,0)
 .S S="("_$$FMTNUM^CIAU(S)_" bytes)"
"RTN","CIAURPRT",19,0)
 .F N=0:0 S N=$O(^UTILITY($J,R,N)) Q:'N  D  Q:Q
"RTN","CIAURPRT",20,0)
 ..S L=^(N),X=$P(L," "),L=X_$E("        ",$L(X)+1,8)_" "_$P(L," ",2,999),Z=""
"RTN","CIAURPRT",21,0)
 ..F  Q:L=""!Q  D
"RTN","CIAURPRT",22,0)
 ...S X=$E(L,1,W),L=$E(L,W+1,999)
"RTN","CIAURPRT",23,0)
 ...D:IOSL-2<$Y HDR
"RTN","CIAURPRT",24,0)
 ...Q:Q
"RTN","CIAURPRT",25,0)
 ...W Z,?M,X,!
"RTN","CIAURPRT",26,0)
 ...S Z=C
"RTN","CIAURPRT",27,0)
 K ^UTILITY($J)
"RTN","CIAURPRT",28,0)
 D ^%ZISC
"RTN","CIAURPRT",29,0)
 Q
"RTN","CIAURPRT",30,0)
HDR I P,T R "Press enter to continue...",Q:$G(DTIME,300) S Q=Q["^"!'$T Q:Q
"RTN","CIAURPRT",31,0)
 S P=P+1,$Y=0
"RTN","CIAURPRT",32,0)
 W @F,!?M,A,$$CTR(R),$$RJ("Page "_P),!
"RTN","CIAURPRT",33,0)
 W ?M,$G(^DD("SITE")),$$CTR(S),$$RJ(D),!
"RTN","CIAURPRT",34,0)
 W ?M,B,!!
"RTN","CIAURPRT",35,0)
 S:P=1 F=IOF
"RTN","CIAURPRT",36,0)
 Q
"RTN","CIAURPRT",37,0)
CTR(X) W ?(IOM-$L(X)\2+M),X
"RTN","CIAURPRT",38,0)
 Q ""
"RTN","CIAURPRT",39,0)
RJ(X) W ?(IOM-$L(X)),X
"RTN","CIAURPRT",40,0)
 Q ""
"RTN","CIAUSTX")
0^27^B18161897
"RTN","CIAUSTX",1,0)
CIAUSTX ;MSC/IND/DKM - M syntax analyzer;04-May-2006 08:19;DKM
"RTN","CIAUSTX",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUSTX",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUSTX",4,0)
 ;=================================================================
"RTN","CIAUSTX",5,0)
 ; Perform syntactic analysis of a line of M code.
"RTN","CIAUSTX",6,0)
 ; Inputs:
"RTN","CIAUSTX",7,0)
 ;   CIAM = M statement(s)
"RTN","CIAUSTX",8,0)
 ;   CIAO = Options:
"RTN","CIAUSTX",9,0)
 ;      L = Line label allowed
"RTN","CIAUSTX",10,0)
 ;      . = Dotted syntax allowed
"RTN","CIAUSTX",11,0)
 ;      N = Do not init parsing tables
"RTN","CIAUSTX",12,0)
 ;      D = Do not delete parsing tables
"RTN","CIAUSTX",13,0)
 ;      Z = Process all Z-extensions as valid
"RTN","CIAUSTX",14,0)
 ; Outputs:
"RTN","CIAUSTX",15,0)
 ;   Returns 0 if successfully parsed.  Otherwise returns E^P^M
"RTN","CIAUSTX",16,0)
 ;   where E is an error code (see ERRORS label), P is the
"RTN","CIAUSTX",17,0)
 ;   character position where the error occurred, and M is the
"RTN","CIAUSTX",18,0)
 ;   error message.
"RTN","CIAUSTX",19,0)
 ;=================================================================
"RTN","CIAUSTX",20,0)
ENTRY(CIAM,CIAO) ;
"RTN","CIAUSTX",21,0)
 N CIAPSN,CIALEN,CIAERR,CIARN,CIAQT,CIAF,CIAPID,CIACMD
"RTN","CIAUSTX",22,0)
 S CIAM=$$UP^XLFSTR(CIAM),CIAO=$$UP^XLFSTR($G(CIAO)),CIAPSN=1,CIALEN=$L(CIAM),CIAERR=0,CIAQT="""",CIAF=0,CIAPID="CIAUSTX",U="^"
"RTN","CIAUSTX",23,0)
 D LOAD:CIAO'["N",PARSE:CIALEN
"RTN","CIAUSTX",24,0)
 K:CIAO'["D" ^TMP(CIAPID,$J)
"RTN","CIAUSTX",25,0)
 Q $S(CIAERR:CIAERR_U_$S(CIAPSN>CIALEN:CIALEN,1:CIAPSN)_U_$S(CIAERR<0:$$EC^%ZOSV,1:$P($T(ERRORS+CIAERR),";;",2)),1:0)
"RTN","CIAUSTX",26,0)
PARSE N CIAZ,CIAZ1
"RTN","CIAUSTX",27,0)
 S @$$TRAP^CIAUOS("ERROR^CIAUSTX")
"RTN","CIAUSTX",28,0)
 I CIAO["L" D  Q:CIAERR
"RTN","CIAUSTX",29,0)
 .S:$E(CIAM)'=" " CIAPSN=$$LABEL^CIAUSTX0
"RTN","CIAUSTX",30,0)
 .I $$NEXT^CIAUSTX0("("),'$$NEXT^CIAUSTX0(")") D
"RTN","CIAUSTX",31,0)
 ..F CIAPSN=CIAPSN:1 D  Q:$E(CIAM,CIAPSN)'=","!CIAERR
"RTN","CIAUSTX",32,0)
 ...S CIAPSN=$$NAME^CIAUSTX0(CIAPSN,"L%")
"RTN","CIAUSTX",33,0)
 ..Q:CIAERR
"RTN","CIAUSTX",34,0)
 ..S:'$$NEXT^CIAUSTX0(")") CIAERR=3
"RTN","CIAUSTX",35,0)
 .S:" "'[$E(CIAM,CIAPSN) CIAERR=2
"RTN","CIAUSTX",36,0)
 I CIAO["." F CIAPSN=CIAPSN:1:CIALEN+1 Q:". "'[$E(CIAM,CIAPSN)
"RTN","CIAUSTX",37,0)
 F  Q:CIAERR  D SKPSPC Q:";"[$E(CIAM,CIAPSN)  D
"RTN","CIAUSTX",38,0)
 .S CIACMD=""
"RTN","CIAUSTX",39,0)
 .F CIAPSN=CIAPSN:1 S CIAZ=$E(CIAM,CIAPSN) Q:CIAZ'?1A  S CIACMD=CIACMD_CIAZ
"RTN","CIAUSTX",40,0)
 .I CIACMD="" S CIAERR=4 Q
"RTN","CIAUSTX",41,0)
 .I $D(^TMP(CIAPID,$J,"CMD",CIACMD)) S CIACMD=^(CIACMD)
"RTN","CIAUSTX",42,0)
 .E  I CIAO["Z" S CIACMD="PC;OPT;ARGS("":M"")"
"RTN","CIAUSTX",43,0)
 .E  S CIAERR=4 Q
"RTN","CIAUSTX",44,0)
 .F CIARN=1:1:$L(CIACMD,";") D CMD^CIAUSTX0($P(CIACMD,";",CIARN)) Q:CIAERR!'CIARN
"RTN","CIAUSTX",45,0)
 .I 'CIAERR," "'[$E(CIAM,CIAPSN) S CIAERR=2
"RTN","CIAUSTX",46,0)
 .E  S CIAPSN=CIAPSN+1
"RTN","CIAUSTX",47,0)
 Q
"RTN","CIAUSTX",48,0)
 ; Skip over blanks
"RTN","CIAUSTX",49,0)
SKPSPC F  Q:'$$NEXT^CIAUSTX0(" ")
"RTN","CIAUSTX",50,0)
 Q
"RTN","CIAUSTX",51,0)
 ; Load tables
"RTN","CIAUSTX",52,0)
LOAD N CIAZ,CIAZ1,CIAZ2,CIAL
"RTN","CIAUSTX",53,0)
 K ^TMP(CIAPID,$J)
"RTN","CIAUSTX",54,0)
 F CIAL="CMD","FCN","SYS" D
"RTN","CIAUSTX",55,0)
 .F CIAZ=1:1 S CIAZ1=$P($T(@CIAL+CIAZ),";;",2,999) Q:CIAZ1=""  D
"RTN","CIAUSTX",56,0)
 ..S CIAZ2=$P(CIAZ1,";"),CIAZ1=$P(CIAZ1,";",2,999)
"RTN","CIAUSTX",57,0)
 ..F  Q:CIAZ2=""  D
"RTN","CIAUSTX",58,0)
 ...S ^TMP(CIAPID,$J,CIAL,$P(CIAZ2,","))=CIAZ1,CIAZ2=$P(CIAZ2,",",2,999)
"RTN","CIAUSTX",59,0)
 Q
"RTN","CIAUSTX",60,0)
ERROR S CIAERR=-1
"RTN","CIAUSTX",61,0)
 Q
"RTN","CIAUSTX",62,0)
CMD ;;*Commands*
"RTN","CIAUSTX",63,0)
 ;;B,BREAK;PC;OPT;ARGS()
"RTN","CIAUSTX",64,0)
 ;;C,CLOSE;PC;ARGS(":M")
"RTN","CIAUSTX",65,0)
 ;;D,DO;PC;OPT;LBL(2)
"RTN","CIAUSTX",66,0)
 ;;E,ELSE;NPC;OPT;ARGS()
"RTN","CIAUSTX",67,0)
 ;;F,FOR;NPC;OPT;FOR
"RTN","CIAUSTX",68,0)
 ;;G,GOTO;PC;LBL(1)
"RTN","CIAUSTX",69,0)
 ;;H,HALT,HANG;PC;OPT;EXP()
"RTN","CIAUSTX",70,0)
 ;;I,IF;NPC;OPT;ARGS()
"RTN","CIAUSTX",71,0)
 ;;J,JOB;PC;LBL(2)
"RTN","CIAUSTX",72,0)
 ;;K,KILL;PC;OPT;KILL
"RTN","CIAUSTX",73,0)
 ;;L,LOCK;PC;OPT;LOCK
"RTN","CIAUSTX",74,0)
 ;;M,MERGE;PC;MERGE
"RTN","CIAUSTX",75,0)
 ;;N,NEW;PC;OPT;NEW
"RTN","CIAUSTX",76,0)
 ;;O,OPEN;PC;ARGS(":M")
"RTN","CIAUSTX",77,0)
 ;;Q,QUIT;PC;OPT;EXP()
"RTN","CIAUSTX",78,0)
 ;;R,READ;PC;READ
"RTN","CIAUSTX",79,0)
 ;;S,SET;PC;SET
"RTN","CIAUSTX",80,0)
 ;;U,USE;PC;ARGS(":M")
"RTN","CIAUSTX",81,0)
 ;;V,VIEW;PC;ARGS(":M")
"RTN","CIAUSTX",82,0)
 ;;W,WRITE;PC;WRITE
"RTN","CIAUSTX",83,0)
 ;;X,XECUTE;PC;ARGS(":")
"RTN","CIAUSTX",84,0)
 ;;ZT,ZTRAP;PC;OPT;EXP()
"RTN","CIAUSTX",85,0)
 ;;ZS,ZSAVE;PC;OPT;EXP()
"RTN","CIAUSTX",86,0)
 ;;ZR,ZREMOVE;PC;OPT;LBL(1)
"RTN","CIAUSTX",87,0)
 ;;ZP,ZPRINT
"RTN","CIAUSTX",88,0)
 ;;
"RTN","CIAUSTX",89,0)
FCN ;;*Intrinsic functions*
"RTN","CIAUSTX",90,0)
 ;;A,ASCII;;1-2
"RTN","CIAUSTX",91,0)
 ;;C,CHAR;;1-999
"RTN","CIAUSTX",92,0)
 ;;D,DATA;;1-1;V
"RTN","CIAUSTX",93,0)
 ;;E,EXTRACT;S;1-3
"RTN","CIAUSTX",94,0)
 ;;F,FIND;;2-3
"RTN","CIAUSTX",95,0)
 ;;FN,FNUMBER;;2-3
"RTN","CIAUSTX",96,0)
 ;;G,GET;;1-2;V
"RTN","CIAUSTX",97,0)
 ;;J,JUSTIFY;;1-3
"RTN","CIAUSTX",98,0)
 ;;L,LENGTH;;1-2
"RTN","CIAUSTX",99,0)
 ;;N,NEXT;;1-2
"RTN","CIAUSTX",100,0)
 ;;NA,NAME;;1-2;V
"RTN","CIAUSTX",101,0)
 ;;O,ORDER;;1-2;V
"RTN","CIAUSTX",102,0)
 ;;P,PIECE;S;2-4
"RTN","CIAUSTX",103,0)
 ;;Q,QUERY;;1-2;V
"RTN","CIAUSTX",104,0)
 ;;R,RANDOM;;1-1
"RTN","CIAUSTX",105,0)
 ;;S,SELECT;:;1-999
"RTN","CIAUSTX",106,0)
 ;;T,TEXT;;1-1;L
"RTN","CIAUSTX",107,0)
 ;;TR,TRANSLATE;;2-3
"RTN","CIAUSTX",108,0)
 ;;V,VIEW;;1-999
"RTN","CIAUSTX",109,0)
 ;;
"RTN","CIAUSTX",110,0)
SYS ;;*System variables*
"RTN","CIAUSTX",111,0)
 ;;D,DEVICE
"RTN","CIAUSTX",112,0)
 ;;ET,ETRAP;SN
"RTN","CIAUSTX",113,0)
 ;;H,HOROLOG
"RTN","CIAUSTX",114,0)
 ;;I,IO
"RTN","CIAUSTX",115,0)
 ;;J,JOB
"RTN","CIAUSTX",116,0)
 ;;K,KEY
"RTN","CIAUSTX",117,0)
 ;;P,PRINCIPAL
"RTN","CIAUSTX",118,0)
 ;;S,STORAGE
"RTN","CIAUSTX",119,0)
 ;;SY,SYSTEM
"RTN","CIAUSTX",120,0)
 ;;T,TEST
"RTN","CIAUSTX",121,0)
 ;;TL,TLEVEL
"RTN","CIAUSTX",122,0)
 ;;TR,TRESTART
"RTN","CIAUSTX",123,0)
 ;;X;S
"RTN","CIAUSTX",124,0)
 ;;Y;S
"RTN","CIAUSTX",125,0)
 ;;ZT,ZTRAP;S
"RTN","CIAUSTX",126,0)
 ;;ZE,ZERROR;S
"RTN","CIAUSTX",127,0)
 ;;ES,ESTACK;N
"RTN","CIAUSTX",128,0)
 ;;EC,ECODE;S
"RTN","CIAUSTX",129,0)
ERRORS ;;*Error messages*
"RTN","CIAUSTX",130,0)
 ;;Bad variable name
"RTN","CIAUSTX",131,0)
 ;;Syntax error
"RTN","CIAUSTX",132,0)
 ;;Unbalanced parentheses
"RTN","CIAUSTX",133,0)
 ;;Unrecognized command
"RTN","CIAUSTX",134,0)
 ;;Postconditional not allowed
"RTN","CIAUSTX",135,0)
 ;;Missing operand
"RTN","CIAUSTX",136,0)
 ;;Unrecognized intrinsic function/variable
"RTN","CIAUSTX",137,0)
 ;;Incorrect number of arguments
"RTN","CIAUSTX",138,0)
 ;;Missing closing quote
"RTN","CIAUSTX",139,0)
 ;;Illegal pattern
"RTN","CIAUSTX",140,0)
 ;;Bad label name
"RTN","CIAUSTX",141,0)
 ;;Name too long
"RTN","CIAUSTX",142,0)
 ;;13
"RTN","CIAUSTX0")
0^28^B19890648
"RTN","CIAUSTX0",1,0)
CIAUSTX0 ;MSC/IND/DKM - Continuation of CIAUSTX;04-May-2006 08:19;DKM
"RTN","CIAUSTX0",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUSTX0",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUSTX0",4,0)
 ;=================================================================
"RTN","CIAUSTX0",5,0)
CMD(CIALBL) ;
"RTN","CIAUSTX0",6,0)
 D:CIALBL'="" @CIALBL
"RTN","CIAUSTX0",7,0)
 Q
"RTN","CIAUSTX0",8,0)
 ; Postconditional
"RTN","CIAUSTX0",9,0)
PC D:$$NEXT(":") EXP()
"RTN","CIAUSTX0",10,0)
 Q:CIAERR
"RTN","CIAUSTX0",11,0)
 I " "'[$E(CIAM,CIAPSN) S CIAERR=2
"RTN","CIAUSTX0",12,0)
 E  S CIAPSN=CIAPSN+1
"RTN","CIAUSTX0",13,0)
 Q
"RTN","CIAUSTX0",14,0)
 ; No postconditional
"RTN","CIAUSTX0",15,0)
NPC I $$NEXT(":") S CIAERR=5
"RTN","CIAUSTX0",16,0)
 E  I " "'[$E(CIAM,CIAPSN) S CIAERR=2
"RTN","CIAUSTX0",17,0)
 E  S CIAPSN=CIAPSN+1
"RTN","CIAUSTX0",18,0)
 Q
"RTN","CIAUSTX0",19,0)
 ; Arguments optional
"RTN","CIAUSTX0",20,0)
OPT S:" "[$E(CIAM,CIAPSN) CIARN=0
"RTN","CIAUSTX0",21,0)
 Q
"RTN","CIAUSTX0",22,0)
 ; Multiple arguments
"RTN","CIAUSTX0",23,0)
ARGS(CIAEX) ;
"RTN","CIAUSTX0",24,0)
 S CIAEX=$G(CIAEX)
"RTN","CIAUSTX0",25,0)
 F  D EXP(CIAEX) Q:CIAERR!'$$NEXT(",")
"RTN","CIAUSTX0",26,0)
 Q
"RTN","CIAUSTX0",27,0)
 ; Expression
"RTN","CIAUSTX0",28,0)
EXP(CIAEX) ;
"RTN","CIAUSTX0",29,0)
 D EXP^CIAUSTX1(.CIAEX)
"RTN","CIAUSTX0",30,0)
 Q
"RTN","CIAUSTX0",31,0)
 ; Label reference
"RTN","CIAUSTX0",32,0)
LBL(CIAA) F  D LBL1(.CIAA) Q:CIAERR!'$$NEXT(",")
"RTN","CIAUSTX0",33,0)
 Q
"RTN","CIAUSTX0",34,0)
LBL1(CIAA) ;
"RTN","CIAUSTX0",35,0)
 S CIAA=+$G(CIAA)
"RTN","CIAUSTX0",36,0)
 D LBL2
"RTN","CIAUSTX0",37,0)
 Q:CIAERR
"RTN","CIAUSTX0",38,0)
 D:$$NEXT("+") EXP(")")
"RTN","CIAUSTX0",39,0)
 Q:CIAERR
"RTN","CIAUSTX0",40,0)
 D:$$NEXT(U) LBL2
"RTN","CIAUSTX0",41,0)
 I 'CIAERR,CIAA=2 D PARAMS(".;0-999")
"RTN","CIAUSTX0",42,0)
 I 'CIAERR,CIAA D EXP(")"):$$NEXT(":")
"RTN","CIAUSTX0",43,0)
 Q
"RTN","CIAUSTX0",44,0)
LBL2 I $$NEXT("@") D
"RTN","CIAUSTX0",45,0)
 .D EXP("=")
"RTN","CIAUSTX0",46,0)
 E  S:$E(CIAM,CIAPSN)?.1AN.1"%" CIAPSN=$$LABEL
"RTN","CIAUSTX0",47,0)
 Q
"RTN","CIAUSTX0",48,0)
 ; Write command
"RTN","CIAUSTX0",49,0)
WRITE F  D  Q:CIAERR!'$$NEXT(",")
"RTN","CIAUSTX0",50,0)
 .I $$NEXT("!#") D  Q:'$$NEXT("?",0)
"RTN","CIAUSTX0",51,0)
 ..F  Q:'$$NEXT("!#")
"RTN","CIAUSTX0",52,0)
 .I $$NEXT("?*")
"RTN","CIAUSTX0",53,0)
 .D EXP()
"RTN","CIAUSTX0",54,0)
 Q
"RTN","CIAUSTX0",55,0)
 ; Read command
"RTN","CIAUSTX0",56,0)
READ N CIAZ
"RTN","CIAUSTX0",57,0)
 F  D  Q:CIAERR!'$$NEXT(",")
"RTN","CIAUSTX0",58,0)
 .I $$NEXT("!#") D  Q:'$$NEXT("?",0)
"RTN","CIAUSTX0",59,0)
 ..F  Q:'$$NEXT("!#")
"RTN","CIAUSTX0",60,0)
 .I $$NEXT("?") D EXP() Q
"RTN","CIAUSTX0",61,0)
 .I $$NEXT(CIAQT) D QT2^CIAUSTX1 Q
"RTN","CIAUSTX0",62,0)
 .S CIAZ=$$NEXT("*")
"RTN","CIAUSTX0",63,0)
 .D LVAL("LGS")
"RTN","CIAUSTX0",64,0)
 .I 'CIAERR,'CIAZ,$$NEXT("#") D EXP()
"RTN","CIAUSTX0",65,0)
 .I 'CIAERR,$$NEXT(":") D EXP()
"RTN","CIAUSTX0",66,0)
 Q
"RTN","CIAUSTX0",67,0)
 ; Lock command
"RTN","CIAUSTX0",68,0)
LOCK D LIST("LG+:","LG")
"RTN","CIAUSTX0",69,0)
 Q
"RTN","CIAUSTX0",70,0)
 ; Set command
"RTN","CIAUSTX0",71,0)
SET D LIST("LGS=","LGS")
"RTN","CIAUSTX0",72,0)
 Q
"RTN","CIAUSTX0",73,0)
 ; New command
"RTN","CIAUSTX0",74,0)
NEW D LIST("N","")
"RTN","CIAUSTX0",75,0)
 Q
"RTN","CIAUSTX0",76,0)
 ; Kill command
"RTN","CIAUSTX0",77,0)
KILL D LIST("KGL","")
"RTN","CIAUSTX0",78,0)
 Q
"RTN","CIAUSTX0",79,0)
 ; Merge command
"RTN","CIAUSTX0",80,0)
MERGE D LIST("LG=")
"RTN","CIAUSTX0",81,0)
 Q
"RTN","CIAUSTX0",82,0)
 ; For command
"RTN","CIAUSTX0",83,0)
FOR D LVAL("LGS")
"RTN","CIAUSTX0",84,0)
 I '$$NEXT("=") S CIAERR=2 Q
"RTN","CIAUSTX0",85,0)
 F  D  Q:" "[$E(CIAM,CIAPSN)  I '$$NEXT(",") S CIAERR=2 Q
"RTN","CIAUSTX0",86,0)
 .D EXP(),EXP():$$NEXT(":"),EXP():$$NEXT(":")
"RTN","CIAUSTX0",87,0)
 Q
"RTN","CIAUSTX0",88,0)
 ; Evaluate L-value
"RTN","CIAUSTX0",89,0)
 ; CIAL: Allowed types:
"RTN","CIAUSTX0",90,0)
 ;     L=Local array
"RTN","CIAUSTX0",91,0)
 ;     G=Global arrays
"RTN","CIAUSTX0",92,0)
 ;     S=Settable intrinsics/system variables
"RTN","CIAUSTX0",93,0)
 ;     N=Newable system variables
"RTN","CIAUSTX0",94,0)
 ;     K=Killable system variables
"RTN","CIAUSTX0",95,0)
LVAL(CIAL) ;
"RTN","CIAUSTX0",96,0)
 I $$NEXT("@",0) D  Q
"RTN","CIAUSTX0",97,0)
 .S CIAL="="
"RTN","CIAUSTX0",98,0)
 .D EXP(.CIAL)
"RTN","CIAUSTX0",99,0)
 S CIAL=$G(CIAL)
"RTN","CIAUSTX0",100,0)
 I CIAL["G",$$NEXT(U) D  Q
"RTN","CIAUSTX0",101,0)
 .N CIAF
"RTN","CIAUSTX0",102,0)
 .D GLBL^CIAUSTX1
"RTN","CIAUSTX0",103,0)
 I $TR(CIAL,"SNK")'=CIAL,$$NEXT("$") D  Q
"RTN","CIAUSTX0",104,0)
 .N CIAZ
"RTN","CIAUSTX0",105,0)
 .S CIAZ=$$INT(.CIAPSN,CIAL)
"RTN","CIAUSTX0",106,0)
 .D:'CIAERR PARAMS(CIAZ)
"RTN","CIAUSTX0",107,0)
 S CIAPSN=$$NAME(CIAPSN,"%")
"RTN","CIAUSTX0",108,0)
 I 'CIAERR,CIAL["L" D PARAMS()
"RTN","CIAUSTX0",109,0)
 Q
"RTN","CIAUSTX0",110,0)
 ; Evaluate parameters/subscripts
"RTN","CIAUSTX0",111,0)
PARAMS(CIAX) ;
"RTN","CIAUSTX0",112,0)
 D:$$NEXT("(") PLIST^CIAUSTX1(.CIAX)
"RTN","CIAUSTX0",113,0)
 Q
"RTN","CIAUSTX0",114,0)
 ; New/Kill/Set/Lock argument list
"RTN","CIAUSTX0",115,0)
LIST(CIAL1,CIAL2) ;
"RTN","CIAUSTX0",116,0)
 N CIAP,CIAI
"RTN","CIAUSTX0",117,0)
 S CIAP=0
"RTN","CIAUSTX0",118,0)
 F  D  Q:CIAERR!'$$NEXT(",")
"RTN","CIAUSTX0",119,0)
 .I 'CIAP,CIAL1["+",$$NEXT("+-")
"RTN","CIAUSTX0",120,0)
 .I $D(CIAL2),$$NEXT("(") D  Q:CIAERR
"RTN","CIAUSTX0",121,0)
 ..I CIAP S CIAERR=2 Q
"RTN","CIAUSTX0",122,0)
 ..E  S CIAP=1
"RTN","CIAUSTX0",123,0)
 .S CIAI=$S(CIAP:CIAL2,1:CIAL1)
"RTN","CIAUSTX0",124,0)
 .D LVAL(.CIAI)
"RTN","CIAUSTX0",125,0)
 .Q:CIAERR
"RTN","CIAUSTX0",126,0)
 .I $$NEXT(")") D  Q:CIAERR
"RTN","CIAUSTX0",127,0)
 ..I CIAP S CIAP=0
"RTN","CIAUSTX0",128,0)
 ..E  S CIAERR=2
"RTN","CIAUSTX0",129,0)
 .I 'CIAP,CIAL1[":",$$NEXT(":") D EXP()
"RTN","CIAUSTX0",130,0)
 .I 'CIAP,CIAL1["=" D
"RTN","CIAUSTX0",131,0)
 ..I '$$NEXT("=") S:CIAI'["@" CIAERR=2
"RTN","CIAUSTX0",132,0)
 ..E  D EXP():$D(CIAL2),LVAL(CIAL1):'$D(CIAL2)
"RTN","CIAUSTX0",133,0)
 I 'CIAERR,CIAP S CIAERR=3
"RTN","CIAUSTX0",134,0)
 Q
"RTN","CIAUSTX0",135,0)
 ; Check for validity of label name
"RTN","CIAUSTX0",136,0)
LABEL(CIAP) ;
"RTN","CIAUSTX0",137,0)
 Q $$NAME(.CIAP,"L%")
"RTN","CIAUSTX0",138,0)
 ; Check for validity of variable/label name
"RTN","CIAUSTX0",139,0)
NAME(CIAP,CIAF) ;
"RTN","CIAUSTX0",140,0)
 N CIAP1
"RTN","CIAUSTX0",141,0)
 S (CIAP,CIAP1)=$G(CIAP,CIAPSN),CIAF=$G(CIAF)
"RTN","CIAUSTX0",142,0)
 I CIAF["$",$E(CIAM,CIAP)="$" S CIAP=CIAP+1,CIAP1=CIAP
"RTN","CIAUSTX0",143,0)
 I CIAF["%",$E(CIAM,CIAP)="%" S CIAP=CIAP+1
"RTN","CIAUSTX0",144,0)
 F CIAP=CIAP:1 Q:$E(CIAM,CIAP)'?@$S(CIAF["L":"1AN",CIAP=CIAP1:"1A",1:"1AN")
"RTN","CIAUSTX0",145,0)
 I CIAP=CIAP1 S CIAERR=$S(CIAF["L":11,1:1)
"RTN","CIAUSTX0",146,0)
 E  S:CIAP-CIAP1>8 CIAERR=12
"RTN","CIAUSTX0",147,0)
 Q CIAP
"RTN","CIAUSTX0",148,0)
 ; Instrinsic function/system variable
"RTN","CIAUSTX0",149,0)
INT(CIAP,CIAL) ;
"RTN","CIAUSTX0",150,0)
 N CIAP2,CIAINT,CIANM
"RTN","CIAUSTX0",151,0)
 S CIAP=$G(CIAP,CIAPSN),CIAP2=$$NAME(CIAP),CIAL=$G(CIAL)
"RTN","CIAUSTX0",152,0)
 Q:CIAERR ""
"RTN","CIAUSTX0",153,0)
 S CIANM=$E(CIAM,CIAP,CIAP2-1)
"RTN","CIAUSTX0",154,0)
 I $E(CIAM,CIAP2)="(" S:$D(^TMP(CIAPID,$J,"FCN",CIANM)) CIAINT=^(CIANM)
"RTN","CIAUSTX0",155,0)
 E  S:$D(^TMP(CIAPID,$J,"SYS",CIANM)) CIAINT=^(CIANM)
"RTN","CIAUSTX0",156,0)
 I '$D(CIAINT),CIAO["Z" S CIAINT=";0-999"
"RTN","CIAUSTX0",157,0)
 I '$D(CIAINT) S CIAERR=7
"RTN","CIAUSTX0",158,0)
 E  I CIAL'="",$TR(CIAL,$P(CIAINT,";"))=CIAL S CIAERR=2,CIAINT=""
"RTN","CIAUSTX0",159,0)
 E  S CIAP=CIAP2
"RTN","CIAUSTX0",160,0)
 Q $G(CIAINT)
"RTN","CIAUSTX0",161,0)
 ; Check next character
"RTN","CIAUSTX0",162,0)
NEXT(CIAC,CIAI) ;
"RTN","CIAUSTX0",163,0)
 I CIAPSN'>CIALEN,CIAC[$E(CIAM,CIAPSN) S CIAPSN=CIAPSN+$G(CIAI,1)
"RTN","CIAUSTX0",164,0)
 Q $T
"RTN","CIAUSTX1")
0^29^B22089177
"RTN","CIAUSTX1",1,0)
CIAUSTX1 ;MSC/IND/DKM - Continuation of CIAUSTX;04-May-2006 08:19;DKM
"RTN","CIAUSTX1",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUSTX1",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUSTX1",4,0)
 ;=================================================================
"RTN","CIAUSTX1",5,0)
 ; Parse an expression
"RTN","CIAUSTX1",6,0)
EXP(CIAEX) ;
"RTN","CIAUSTX1",7,0)
 N CIAF,CIAC,CIAPN
"RTN","CIAUSTX1",8,0)
 S (CIAF,CIAPN)=0,CIAEX=$G(CIAEX)
"RTN","CIAUSTX1",9,0)
 F  D  Q:CIAF<0!CIAERR
"RTN","CIAUSTX1",10,0)
 .S CIAC=$E(CIAM,CIAPSN),CIAPSN=CIAPSN+1
"RTN","CIAUSTX1",11,0)
 .D @("OP"_CIAF)
"RTN","CIAUSTX1",12,0)
 I 'CIAERR,CIAPN S CIAERR=3
"RTN","CIAUSTX1",13,0)
 S CIAEX=$S($G(CIAPN(CIAPN,"@")):"@",1:"")_CIAEX
"RTN","CIAUSTX1",14,0)
 Q
"RTN","CIAUSTX1",15,0)
 ; Operands
"RTN","CIAUSTX1",16,0)
OP0 I CIAC'=".",CIAEX["." S CIAEX=$TR(CIAEX,".")
"RTN","CIAUSTX1",17,0)
 G:CIAC'="" COLON2:CIAC=":",GLBL:CIAC=U,DOT:CIAC=".",INDIR:CIAC="@",FCN:CIAC="$",UNARY:"'+-"[CIAC,QT:CIAC=CIAQT,NUM:CIAC?1N,OPNPAR:CIAC="(",VAR:CIAC?1A,VAR:CIAC="%"
"RTN","CIAUSTX1",18,0)
 S CIAERR=6
"RTN","CIAUSTX1",19,0)
 Q
"RTN","CIAUSTX1",20,0)
 ; Operators
"RTN","CIAUSTX1",21,0)
OP1 G END:CIAC="",INDIR2:CIAC="@",DONE:CIAEX["="&'CIAPN!(CIAC=" ")
"RTN","CIAUSTX1",22,0)
 K CIAPN(CIAPN,"@")
"RTN","CIAUSTX1",23,0)
 I CIAC="*",$$NEXT(CIAC)
"RTN","CIAUSTX1",24,0)
 G COLON:CIAC=":",CLSPAR:CIAC=")",RBRKT:CIAC="]",BINARY:"!#&*-_+=\/<>["[CIAC,NOT:CIAC="'",PTRN:CIAC="?"
"RTN","CIAUSTX1",25,0)
DONE S CIAPSN=CIAPSN-1
"RTN","CIAUSTX1",26,0)
END S CIAF=-1
"RTN","CIAUSTX1",27,0)
 Q
"RTN","CIAUSTX1",28,0)
 ; Negated operator
"RTN","CIAUSTX1",29,0)
NOT S:'$$NEXT("=<>[]?&!",0) CIAERR=2
"RTN","CIAUSTX1",30,0)
 Q
"RTN","CIAUSTX1",31,0)
 ; Parse a global reference
"RTN","CIAUSTX1",32,0)
GLBL D:$$NEXT("[") PLIST(";1-2","]")
"RTN","CIAUSTX1",33,0)
 Q:CIAERR
"RTN","CIAUSTX1",34,0)
 S:'$$NEXT("(",0) CIAPSN=$$NAME^CIAUSTX0(CIAPSN,"$%")
"RTN","CIAUSTX1",35,0)
 I 'CIAERR,$$NEXT("(") D PLIST(";1-999")
"RTN","CIAUSTX1",36,0)
 S CIAF=1
"RTN","CIAUSTX1",37,0)
 Q
"RTN","CIAUSTX1",38,0)
 ; Indirection (prefix)
"RTN","CIAUSTX1",39,0)
INDIR S CIAPN(CIAPN,"@")=$G(CIAPN(CIAPN,"@"))+1
"RTN","CIAUSTX1",40,0)
 Q
"RTN","CIAUSTX1",41,0)
 ; Indirection (suffix)
"RTN","CIAUSTX1",42,0)
INDIR2 I +$G(CIAPN(CIAPN,"@"))'>0 S CIAERR=2
"RTN","CIAUSTX1",43,0)
 E  I '$$NEXT("(") S CIAERR=2
"RTN","CIAUSTX1",44,0)
 E  D
"RTN","CIAUSTX1",45,0)
 .S CIAPN(CIAPN,"@")=-(CIAPN(CIAPN,"@")>1)
"RTN","CIAUSTX1",46,0)
 .D PLIST()
"RTN","CIAUSTX1",47,0)
 Q
"RTN","CIAUSTX1",48,0)
 ; Intrinsic function/system variable
"RTN","CIAUSTX1",49,0)
FCN G:$$NEXT("$") EXT
"RTN","CIAUSTX1",50,0)
INT N CIAZ,CIAZ1
"RTN","CIAUSTX1",51,0)
 S CIAZ1=$E(CIAM,CIAPSN),CIAZ=$$INT^CIAUSTX0(.CIAPSN),CIAF=1
"RTN","CIAUSTX1",52,0)
 I 'CIAERR,$$NEXT("(") D PLIST(CIAZ)
"RTN","CIAUSTX1",53,0)
 Q
"RTN","CIAUSTX1",54,0)
 ; Extrinsic function
"RTN","CIAUSTX1",55,0)
EXT S:'$$NEXT(U,0) CIAPSN=$$LABEL^CIAUSTX0
"RTN","CIAUSTX1",56,0)
 Q:CIAERR
"RTN","CIAUSTX1",57,0)
 S:$$NEXT(U) CIAPSN=$$LABEL^CIAUSTX0
"RTN","CIAUSTX1",58,0)
 Q:CIAERR
"RTN","CIAUSTX1",59,0)
 D:$$NEXT("(") PLIST(".;0-999")
"RTN","CIAUSTX1",60,0)
 S CIAF=1
"RTN","CIAUSTX1",61,0)
 Q
"RTN","CIAUSTX1",62,0)
 ; Unary operator
"RTN","CIAUSTX1",63,0)
UNARY Q
"RTN","CIAUSTX1",64,0)
 ; String literal
"RTN","CIAUSTX1",65,0)
QT D QT2
"RTN","CIAUSTX1",66,0)
 S CIAF=1
"RTN","CIAUSTX1",67,0)
 Q
"RTN","CIAUSTX1",68,0)
 ; Find matching quote
"RTN","CIAUSTX1",69,0)
QT2 F CIAPSN=CIAPSN:1:CIALEN I $$NEXT(CIAQT),'$$NEXT(CIAQT,0) Q
"RTN","CIAUSTX1",70,0)
 S:$E(CIAM,CIAPSN-1)'=CIAQT CIAERR=9
"RTN","CIAUSTX1",71,0)
 Q
"RTN","CIAUSTX1",72,0)
 ; Numeric constant
"RTN","CIAUSTX1",73,0)
NUM N CIAZ,CIAZ1
"RTN","CIAUSTX1",74,0)
 S CIAZ=0,CIAF=1
"RTN","CIAUSTX1",75,0)
 F CIAPSN=CIAPSN-1:1 S CIAZ1=$E(CIAM,CIAPSN) D @("NUM"_CIAZ) Q:CIAZ<0
"RTN","CIAUSTX1",76,0)
 S:CIAZ=-2 CIAERR=2
"RTN","CIAUSTX1",77,0)
 Q
"RTN","CIAUSTX1",78,0)
NUM0 S CIAZ=$S(CIAZ1?1N:1,CIAZ1=".":2,1:-2)
"RTN","CIAUSTX1",79,0)
 Q
"RTN","CIAUSTX1",80,0)
NUM1 S CIAZ=$S(CIAZ1?1N:1,CIAZ1=".":3,1:-1)
"RTN","CIAUSTX1",81,0)
 Q
"RTN","CIAUSTX1",82,0)
NUM2 S CIAZ=$S(CIAZ1?1N:3,1:-2)
"RTN","CIAUSTX1",83,0)
 Q
"RTN","CIAUSTX1",84,0)
NUM3 S CIAZ=$S(CIAZ1?1N:3,CIAZ1="E":4,1:-1)
"RTN","CIAUSTX1",85,0)
 Q
"RTN","CIAUSTX1",86,0)
NUM4 S CIAZ=$S(CIAZ1="+":5,CIAZ1="-":5,CIAZ1=".":7,CIAZ1?1N:6,1:-2)
"RTN","CIAUSTX1",87,0)
 Q
"RTN","CIAUSTX1",88,0)
NUM5 S CIAZ=$S(CIAZ1?1N:6,CIAZ1=".":7,1:-2)
"RTN","CIAUSTX1",89,0)
 Q
"RTN","CIAUSTX1",90,0)
NUM6 S CIAZ=$S(CIAZ1?1N:6,CIAZ1=".":8,1:-1)
"RTN","CIAUSTX1",91,0)
 Q
"RTN","CIAUSTX1",92,0)
NUM7 S CIAZ=$S(CIAZ1?1N:8,1:-2)
"RTN","CIAUSTX1",93,0)
 Q
"RTN","CIAUSTX1",94,0)
NUM8 S CIAZ=$S(CIAZ1?1N:8,1:-1)
"RTN","CIAUSTX1",95,0)
 Q
"RTN","CIAUSTX1",96,0)
 ; Open parenthesis
"RTN","CIAUSTX1",97,0)
OPNPAR S CIAPN=CIAPN+1
"RTN","CIAUSTX1",98,0)
 K CIAPN(CIAPN)
"RTN","CIAUSTX1",99,0)
 Q
"RTN","CIAUSTX1",100,0)
 ; Period (variable by reference or FP number)
"RTN","CIAUSTX1",101,0)
DOT I CIAEX[".",$E(CIAM,CIAPSN)'?1N D
"RTN","CIAUSTX1",102,0)
 .I '$$NEXT("@") S CIAPSN=$$NAME^CIAUSTX0(CIAPSN,"%"),CIAF=-1
"RTN","CIAUSTX1",103,0)
 .E  D INDIR
"RTN","CIAUSTX1",104,0)
 E  D NUM
"RTN","CIAUSTX1",105,0)
 Q
"RTN","CIAUSTX1",106,0)
 ; Variable name
"RTN","CIAUSTX1",107,0)
VAR S CIAPSN=$$NAME^CIAUSTX0(CIAPSN-1,"%"),CIAF=1
"RTN","CIAUSTX1",108,0)
 D:$$NEXT("(") PLIST()
"RTN","CIAUSTX1",109,0)
 Q
"RTN","CIAUSTX1",110,0)
 ; Closing parenthesis
"RTN","CIAUSTX1",111,0)
CLSPAR I 'CIAPN,CIAEX[")" G DONE
"RTN","CIAUSTX1",112,0)
 I CIAPN S CIAPN=CIAPN-1
"RTN","CIAUSTX1",113,0)
 E  S CIAERR=3
"RTN","CIAUSTX1",114,0)
 Q
"RTN","CIAUSTX1",115,0)
 ; Right bracket (] or ]])
"RTN","CIAUSTX1",116,0)
RBRKT I 'CIAPN,CIAEX["]" G DONE
"RTN","CIAUSTX1",117,0)
 I $$NEXT(CIAC)
"RTN","CIAUSTX1",118,0)
 ; Binary operator
"RTN","CIAUSTX1",119,0)
BINARY S CIAF=0
"RTN","CIAUSTX1",120,0)
 Q
"RTN","CIAUSTX1",121,0)
 ; Colon operand
"RTN","CIAUSTX1",122,0)
COLON2 S:CIAEX'["M" CIAERR=6
"RTN","CIAUSTX1",123,0)
 Q
"RTN","CIAUSTX1",124,0)
 ; Colon operator
"RTN","CIAUSTX1",125,0)
COLON G:CIAEX'[":" DONE
"RTN","CIAUSTX1",126,0)
 S CIAF=0
"RTN","CIAUSTX1",127,0)
 S:CIAEX'["M" CIAEX=$TR(CIAEX,":")
"RTN","CIAUSTX1",128,0)
 Q
"RTN","CIAUSTX1",129,0)
 ; Pattern match
"RTN","CIAUSTX1",130,0)
PTRN N CIAZ,CIAZ1
"RTN","CIAUSTX1",131,0)
 I $$NEXT("@") S CIAF=0 Q
"RTN","CIAUSTX1",132,0)
 S CIAZ=CIAPSN,@$$TRAP^CIAUOS("PERR^CIAUSTX1"),CIAZ1=0
"RTN","CIAUSTX1",133,0)
 F  D  Q:CIAZ1<0!CIAERR
"RTN","CIAUSTX1",134,0)
 .D QT2:$$NEXT(CIAQT),PTRN1:$$NEXT("("),PTRN2:$$NEXT(")")
"RTN","CIAUSTX1",135,0)
 .I CIAZ1,$$NEXT(",")
"RTN","CIAUSTX1",136,0)
 .S:'$$NEXT("ACELNPU.0123456789") CIAZ1=-1
"RTN","CIAUSTX1",137,0)
 S:'CIAERR CIAZ=CIAZ?@$E(CIAM,CIAZ,CIAPSN-1)
"RTN","CIAUSTX1",138,0)
 Q
"RTN","CIAUSTX1",139,0)
PTRN1 S CIAZ1=CIAZ1+1
"RTN","CIAUSTX1",140,0)
 Q
"RTN","CIAUSTX1",141,0)
PTRN2 S CIAZ1=CIAZ1-1
"RTN","CIAUSTX1",142,0)
 S:CIAZ1<0 CIAPSN=CIAPSN-1
"RTN","CIAUSTX1",143,0)
 Q
"RTN","CIAUSTX1",144,0)
PERR S CIAERR=10
"RTN","CIAUSTX1",145,0)
 Q
"RTN","CIAUSTX1",146,0)
 ; Process a parameter list
"RTN","CIAUSTX1",147,0)
PLIST(CIAP,CIAT) ;
"RTN","CIAUSTX1",148,0)
 N CIAC,CIAP1,CIAP2,CIAZ
"RTN","CIAUSTX1",149,0)
 S CIAT=$G(CIAT,")"),CIAP=$G(CIAP,";0-999"),CIAP2=$P(CIAP,";",2),CIAP1=+CIAP2,CIAP2=+$P(CIAP2,"-",2),CIAC=0,CIAZ=$P(CIAP,";")
"RTN","CIAUSTX1",150,0)
 I '$$NEXT(CIAT,0) D
"RTN","CIAUSTX1",151,0)
 .F CIAC=1:1 D  Q:CIAERR!'$$NEXT(",")
"RTN","CIAUSTX1",152,0)
 ..D @("PL"_$P(CIAP,";",CIAC+2))
"RTN","CIAUSTX1",153,0)
 I 'CIAERR,CIAC<CIAP1!(CIAC>CIAP2) S CIAERR=8
"RTN","CIAUSTX1",154,0)
 I 'CIAERR,'$$NEXT(CIAT) S CIAERR=3
"RTN","CIAUSTX1",155,0)
 Q
"RTN","CIAUSTX1",156,0)
PL N CIAEX
"RTN","CIAUSTX1",157,0)
 I CIAZ=".",$$NEXT(",",0) Q
"RTN","CIAUSTX1",158,0)
 S CIAEX=CIAT_CIAZ
"RTN","CIAUSTX1",159,0)
 D EXP(.CIAEX)
"RTN","CIAUSTX1",160,0)
 I CIAZ[":",CIAEX[":" S CIAERR=2
"RTN","CIAUSTX1",161,0)
 Q
"RTN","CIAUSTX1",162,0)
PLV D LVAL^CIAUSTX0("LG")
"RTN","CIAUSTX1",163,0)
 Q
"RTN","CIAUSTX1",164,0)
PLL D LBL1^CIAUSTX0()
"RTN","CIAUSTX1",165,0)
 Q
"RTN","CIAUSTX1",166,0)
 ; Get next character
"RTN","CIAUSTX1",167,0)
NEXT(CIAC,CIAI) ;
"RTN","CIAUSTX1",168,0)
 Q $$NEXT^CIAUSTX0(CIAC,.CIAI)
"RTN","CIAUTSK")
0^57^B1191791
"RTN","CIAUTSK",1,0)
CIAUTSK ;MSC/IND/DKM - Encapsulates TaskMan API ;04-May-2006 08:19;DKM
"RTN","CIAUTSK",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUTSK",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUTSK",4,0)
 ;=================================================================
"RTN","CIAUTSK",5,0)
QUEUE(ZTRTN,ZTDESC,ZTDTH,ZTSAVE,ZTIO,ZTUCI,ZTPRI) ;
"RTN","CIAUTSK",6,0)
 N %CIAZ,%CIAZ1,%CIAZ2,ZTKIL,ZTSK,ZTCPU
"RTN","CIAUTSK",7,0)
 S:'$G(ZTDTH) ZTDTH=$H
"RTN","CIAUTSK",8,0)
 S:ZTDTH'?1.N1","1.N ZTDTH=$$FMTH^XLFDT(ZTDTH)
"RTN","CIAUTSK",9,0)
 Q:ZTDTH<0 0
"RTN","CIAUTSK",10,0)
 S:$G(ZTUCI)'="" ZTUCI=$TR(ZTUCI,":",","),ZTCPU=$P(ZTUCI,",",2),ZTUCI=$P(ZTUCI,",")
"RTN","CIAUTSK",11,0)
 S ZTSAVE=$G(ZTSAVE),ZTIO=$G(ZTIO),U="^"
"RTN","CIAUTSK",12,0)
 F %CIAZ=1:1:$L(ZTSAVE,U) D
"RTN","CIAUTSK",13,0)
 .S %CIAZ1=$P(ZTSAVE,U,%CIAZ),%CIAZ2=$P(%CIAZ1,"=",2,999),%CIAZ1=$P(%CIAZ1,"=")
"RTN","CIAUTSK",14,0)
 .S:%CIAZ1'="" ZTSAVE(%CIAZ1)=%CIAZ2
"RTN","CIAUTSK",15,0)
 D ^%ZTLOAD
"RTN","CIAUTSK",16,0)
 Q +$G(ZTSK)
"RTN","CIAUUSR")
0^58^B4318479
"RTN","CIAUUSR",1,0)
CIAUUSR ;MSC/IND/DKM - Parse recipient list;04-May-2006 08:19;DKM
"RTN","CIAUUSR",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUUSR",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUUSR",4,0)
 ;=================================================================
"RTN","CIAUUSR",5,0)
 ; Takes a list of recipients (which may be DUZ #'s, names,
"RTN","CIAUUSR",6,0)
 ; mail groups, or special tokens) as input and produces an
"RTN","CIAUUSR",7,0)
 ; array of DUZ's as output.  If a list element is found in
"RTN","CIAUUSR",8,0)
 ; in the token list CIALST, the value of the token entry will
"RTN","CIAUUSR",9,0)
 ; be substituted.
"RTN","CIAUUSR",10,0)
 ; Inputs:
"RTN","CIAUUSR",11,0)
 ;     CIAUSR = Semicolon-delimited list of recipients
"RTN","CIAUUSR",12,0)
 ;     CIALST = Special token list
"RTN","CIAUUSR",13,0)
 ; Outputs:
"RTN","CIAUUSR",14,0)
 ;     CIAOUT = Local array to receive DUZ list
"RTN","CIAUUSR",15,0)
 ;=================================================================
"RTN","CIAUUSR",16,0)
ENTRY(CIAUSR,CIAOUT,CIALST) ;
"RTN","CIAUUSR",17,0)
 N CIAZ,CIAZ1,CIAZ2
"RTN","CIAUUSR",18,0)
 K CIAOUT
"RTN","CIAUUSR",19,0)
 F CIAZ=1:1:$L(CIAUSR,";") S CIAZ1=$P(CIAUSR,";",CIAZ) D:CIAZ1'=""  S:CIAZ1 CIAOUT(+CIAZ1)=""
"RTN","CIAUUSR",20,0)
 .S:$D(CIALST(CIAZ1)) CIAZ1=CIALST(CIAZ1)
"RTN","CIAUUSR",21,0)
 .Q:CIAZ1?.N
"RTN","CIAUUSR",22,0)
 .I CIAZ1?1"-"1.N D MGRP(-CIAZ1) S CIAZ1=0 Q
"RTN","CIAUUSR",23,0)
 .S CIAZ2=$E(CIAZ1,1,2)
"RTN","CIAUUSR",24,0)
 .I CIAZ2="G." D MGRP($E(CIAZ1,3,999)) Q
"RTN","CIAUUSR",25,0)
 .I CIAZ2="L." D LIST($E(CIAZ1,3,999)) Q
"RTN","CIAUUSR",26,0)
 .S CIAZ1=$$LKP(CIAZ1)
"RTN","CIAUUSR",27,0)
 Q
"RTN","CIAUUSR",28,0)
LKP(CIANAME) ;
"RTN","CIAUUSR",29,0)
 N CIAZ,CIAZ1
"RTN","CIAUUSR",30,0)
 I $D(^VA(200,"B",CIANAME)) S CIAZ=CIANAME G L1
"RTN","CIAUUSR",31,0)
 S CIAZ=$O(^(CIANAME)),CIAZ1=$O(^(CIAZ))
"RTN","CIAUUSR",32,0)
 Q:(CIAZ="")!(CIANAME'=$E(CIAZ,1,$L(CIANAME))) 0
"RTN","CIAUUSR",33,0)
 Q:(CIAZ1'="")&(CIANAME=$E(CIAZ1,1,$L(CIANAME))) 0
"RTN","CIAUUSR",34,0)
L1 S CIAZ1=$O(^(CIAZ,0)),CIAZ=$O(^(CIAZ1))
"RTN","CIAUUSR",35,0)
 Q:'CIAZ1!CIAZ 0
"RTN","CIAUUSR",36,0)
 Q CIAZ1
"RTN","CIAUUSR",37,0)
LIST(CIALIST) ;
"RTN","CIAUUSR",38,0)
 Q:CIALIST=""
"RTN","CIAUUSR",39,0)
 S:CIALIST'=+CIALIST CIALIST=+$O(^CCCDSS(25193.6,"B",CIALIST,0))
"RTN","CIAUUSR",40,0)
 S @$$TRAP^CIAUOS("LERR^CIAUUSR")
"RTN","CIAUUSR",41,0)
 X:$D(^CCCDSS(25193.6,CIALIST,1)) ^(1)
"RTN","CIAUUSR",42,0)
LERR Q
"RTN","CIAUUSR",43,0)
MGRP(CIAMGRP) ;
"RTN","CIAUUSR",44,0)
 N CIAX
"RTN","CIAUUSR",45,0)
 S CIAX(0)=""
"RTN","CIAUUSR",46,0)
 D MGRP2(CIAMGRP)
"RTN","CIAUUSR",47,0)
 Q
"RTN","CIAUUSR",48,0)
MGRP2(CIAMGRP) ;
"RTN","CIAUUSR",49,0)
 N CIAZ,CIAZ1
"RTN","CIAUUSR",50,0)
 Q:CIAMGRP=""
"RTN","CIAUUSR",51,0)
 S:CIAMGRP'=+CIAMGRP CIAMGRP=+$O(^XMB(3.8,"B",CIAMGRP,0))
"RTN","CIAUUSR",52,0)
 Q:$D(CIAX(CIAMGRP))
"RTN","CIAUUSR",53,0)
 S CIAX(CIAMGRP)=""
"RTN","CIAUUSR",54,0)
 F CIAZ=0:0 S CIAZ=+$O(^XMB(3.8,CIAMGRP,1,CIAZ)) Q:'CIAZ  S CIAOUT(+^(CIAZ,0))=""
"RTN","CIAUUSR",55,0)
 F CIAZ=0:0 S CIAZ=+$O(^XMB(3.8,CIAMGRP,5,CIAZ)) Q:'CIAZ  D MGRP2(^(CIAZ,0))
"RTN","CIAUUSR",56,0)
 Q
"RTN","CIAUUU")
0^59^B2196200
"RTN","CIAUUU",1,0)
CIAUUU ;MSC/IND/DKM - UUEncode and UUDecode functions.;04-May-2006 08:19;DKM
"RTN","CIAUUU",2,0)
 ;;1.2;CIA UTILITIES;;Mar 20, 2007;Build 129
"RTN","CIAUUU",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAUUU",4,0)
 ;=================================================================
"RTN","CIAUUU",5,0)
ENCODE(X) ;
"RTN","CIAUUU",6,0)
 N CIAZ,CIAZ1,CIAZ2,CIAZ3,CIAZ4,CIAZ5,CIAZ6
"RTN","CIAUUU",7,0)
 S CIAZ=$$INIT,CIAZ1=""
"RTN","CIAUUU",8,0)
 F CIAZ2=1:3:$L(X) D
"RTN","CIAUUU",9,0)
 .S CIAZ3=0,CIAZ6=""
"RTN","CIAUUU",10,0)
 .F CIAZ4=0:1:2 D
"RTN","CIAUUU",11,0)
 ..S CIAZ5=$A(X,CIAZ2+CIAZ4),CIAZ3=CIAZ3*256+$S(CIAZ5<0:0,1:CIAZ5)
"RTN","CIAUUU",12,0)
 .F CIAZ4=1:1:4 S CIAZ6=$E(CIAZ,CIAZ3#64+2)_CIAZ6,CIAZ3=CIAZ3\64
"RTN","CIAUUU",13,0)
 .S CIAZ1=CIAZ1_CIAZ6
"RTN","CIAUUU",14,0)
 S CIAZ2=$L(X)#3
"RTN","CIAUUU",15,0)
 S:CIAZ2 CIAZ3=$L(CIAZ1),$E(CIAZ1,CIAZ3-2+CIAZ2,CIAZ3)=$E("==",CIAZ2,2)
"RTN","CIAUUU",16,0)
 Q CIAZ1
"RTN","CIAUUU",17,0)
DECODE(X) ;
"RTN","CIAUUU",18,0)
 N CIAZ,CIAZ1,CIAZ2,CIAZ3,CIAZ4,CIAZ5,CIAZ6
"RTN","CIAUUU",19,0)
 S CIAZ=$$INIT,CIAZ1=""
"RTN","CIAUUU",20,0)
 F CIAZ2=1:4:$L(X) D
"RTN","CIAUUU",21,0)
 .S CIAZ3=0,CIAZ6=""
"RTN","CIAUUU",22,0)
 .F CIAZ4=0:1:3 D
"RTN","CIAUUU",23,0)
 ..S CIAZ5=$F(CIAZ,$E(X,CIAZ2+CIAZ4))-3
"RTN","CIAUUU",24,0)
 ..S CIAZ3=CIAZ3*64+$S(CIAZ5<0:0,1:CIAZ5)
"RTN","CIAUUU",25,0)
 .F CIAZ4=0:1:2 S CIAZ6=$C(CIAZ3#256)_CIAZ6,CIAZ3=CIAZ3\256
"RTN","CIAUUU",26,0)
 .S CIAZ1=CIAZ1_CIAZ6
"RTN","CIAUUU",27,0)
 Q $E(CIAZ1,1,$L(CIAZ1)-$L(X,"=")+1)
"RTN","CIAUUU",28,0)
INIT() Q "=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
"VER")
8.0^22.0
**INSTALL NAME**
RG UTILITIES 3.0
"BLD",8503,0)
RG UTILITIES 3.0^RUN TIME LIBRARY^0^3150226^n
"BLD",8503,1,0)
^^3^3^3150202^^^
"BLD",8503,1,1,0)
This is the set of routines common to all modules occupying the RG namespace.  
"BLD",8503,1,2,0)
They perform generic functions.  
"BLD",8503,1,3,0)
 
"BLD",8503,4,0)
^9.64PA^^
"BLD",8503,6.3)
124
"BLD",8503,"ABNS",0)
^9.66A^1^1
"BLD",8503,"ABNS",1,0)
RG
"BLD",8503,"ABNS",1,1,0)
^9.661A^^
"BLD",8503,"ABNS","B","RG",1)

"BLD",8503,"ABPKG")
n^n
"BLD",8503,"INI")

"BLD",8503,"INIT")
POST^RGUTINIT
"BLD",8503,"KRN",0)
^9.67PA^771^18
"BLD",8503,"KRN",.4,0)
.4
"BLD",8503,"KRN",.4,"NM",0)
^9.68A^^
"BLD",8503,"KRN",.401,0)
.401
"BLD",8503,"KRN",.402,0)
.402
"BLD",8503,"KRN",.403,0)
.403
"BLD",8503,"KRN",.5,0)
.5
"BLD",8503,"KRN",.84,0)
.84
"BLD",8503,"KRN",3.6,0)
3.6
"BLD",8503,"KRN",3.8,0)
3.8
"BLD",8503,"KRN",9.2,0)
9.2
"BLD",8503,"KRN",9.8,0)
9.8
"BLD",8503,"KRN",9.8,"NM",0)
^9.68A^86^52
"BLD",8503,"KRN",9.8,"NM",18,0)
RGUT^^0^B38148711
"BLD",8503,"KRN",9.8,"NM",27,0)
RGUTSTX^^0^B18037383
"BLD",8503,"KRN",9.8,"NM",28,0)
RGUTSTX0^^0^B19756996
"BLD",8503,"KRN",9.8,"NM",29,0)
RGUTSTX1^^0^B21990330
"BLD",8503,"KRN",9.8,"NM",33,0)
RGUTALR^^0^B1394189
"BLD",8503,"KRN",9.8,"NM",34,0)
RGUTBIG^^0^B14928339
"BLD",8503,"KRN",9.8,"NM",35,0)
RGUTDAT^^0^B13607562
"BLD",8503,"KRN",9.8,"NM",36,0)
RGUTDIC^^0^B30172675
"BLD",8503,"KRN",9.8,"NM",37,0)
RGUTDT^^0^B5201713
"BLD",8503,"KRN",9.8,"NM",38,0)
RGUTEDT^^0^B50036890
"BLD",8503,"KRN",9.8,"NM",44,0)
RGUTIMP^^0^B12071934
"BLD",8503,"KRN",9.8,"NM",45,0)
RGUTIN^^1^
"BLD",8503,"KRN",9.8,"NM",46,0)
RGUTIN0^^0^B1456400
"BLD",8503,"KRN",9.8,"NM",47,0)
RGUTIN16^^0^B4324901
"BLD",8503,"KRN",9.8,"NM",48,0)
RGUTIN18^^0^B4545277
"BLD",8503,"KRN",9.8,"NM",49,0)
RGUTIN8^^0^B4187174
"BLD",8503,"KRN",9.8,"NM",50,0)
RGUTLK2^^0^B51777461
"BLD",8503,"KRN",9.8,"NM",51,0)
RGUTLKP^^0^B29106476
"BLD",8503,"KRN",9.8,"NM",52,0)
RGUTMTL^^0^B15092004
"BLD",8503,"KRN",9.8,"NM",53,0)
RGUTOS^^0^B7841558
"BLD",8503,"KRN",9.8,"NM",54,0)
RGUTOS1^^0^B10411038
"BLD",8503,"KRN",9.8,"NM",56,0)
RGUTRPC^^0^B16812427
"BLD",8503,"KRN",9.8,"NM",57,0)
RGUTTSK^^0^B1046191
"BLD",8503,"KRN",9.8,"NM",58,0)
RGUTUSR^^0^B4180510
"BLD",8503,"KRN",9.8,"NM",59,0)
RGUTUU^^0^B2050600
"BLD",8503,"KRN",9.8,"NM",60,0)
RGUTINIT^^0^B6026117
"BLD",8503,"KRN",9.8,"NM",61,0)
RGUTHFS^^0^B5078426
"BLD",8503,"KRN",9.8,"NM",62,0)
RGUTDDR^^0^B59431447
"BLD",8503,"KRN",9.8,"NM",63,0)
RGUTRPRT^^0^B2852241
"BLD",8503,"KRN",9.8,"NM",64,0)
RGUTREG^^0^B709436
"BLD",8503,"KRN",9.8,"NM",65,0)
RGUTBC28^^0^B10811663
"BLD",8503,"KRN",9.8,"NM",66,0)
RGUTBC39^^0^B7717700
"BLD",8503,"KRN",9.8,"NM",67,0)
RGUTBCDA^^0^B8230455
"BLD",8503,"KRN",9.8,"NM",68,0)
RGUTIN8U^^1^
"BLD",8503,"KRN",9.8,"NM",69,0)
RGUTIN68^^0^B4493128
"BLD",8503,"KRN",9.8,"NM",70,0)
RGUTIN58^^0^B5603465
"BLD",8503,"KRN",9.8,"NM",71,0)
RGUT1^^0^B812698
"BLD",8503,"KRN",9.8,"NM",72,0)
RGUTNTEG^^0^B4457644
"BLD",8503,"KRN",9.8,"NM",73,0)
RGXY^^1^
"BLD",8503,"KRN",9.8,"NM",74,0)
RGZOSF^^1^
"BLD",8503,"KRN",9.8,"NM",75,0)
RGCVTDT^^1^
"BLD",8503,"KRN",9.8,"NM",76,0)
RGCVTUU^^1^
"BLD",8503,"KRN",9.8,"NM",77,0)
RGINIT^^1^
"BLD",8503,"KRN",9.8,"NM",78,0)
RGMSCALR^^1^
"BLD",8503,"KRN",9.8,"NM",79,0)
RGMSCDAT^^1^
"BLD",8503,"KRN",9.8,"NM",80,0)
RGMSCDIC^^1^
"BLD",8503,"KRN",9.8,"NM",81,0)
RGMSCEDT^^1^
"BLD",8503,"KRN",9.8,"NM",82,0)
RGMSCIMP^^1^
"BLD",8503,"KRN",9.8,"NM",83,0)
RGMSCLKP^^1^
"BLD",8503,"KRN",9.8,"NM",84,0)
RGMSCMTL^^1^
"BLD",8503,"KRN",9.8,"NM",85,0)
RGMSCTSK^^1^
"BLD",8503,"KRN",9.8,"NM",86,0)
RGMSCUSR^^1^
"BLD",8503,"KRN",9.8,"NM","B","RGCVTDT",75)

"BLD",8503,"KRN",9.8,"NM","B","RGCVTUU",76)

"BLD",8503,"KRN",9.8,"NM","B","RGINIT",77)

"BLD",8503,"KRN",9.8,"NM","B","RGMSCALR",78)

"BLD",8503,"KRN",9.8,"NM","B","RGMSCDAT",79)

"BLD",8503,"KRN",9.8,"NM","B","RGMSCDIC",80)

"BLD",8503,"KRN",9.8,"NM","B","RGMSCEDT",81)

"BLD",8503,"KRN",9.8,"NM","B","RGMSCIMP",82)

"BLD",8503,"KRN",9.8,"NM","B","RGMSCLKP",83)

"BLD",8503,"KRN",9.8,"NM","B","RGMSCMTL",84)

"BLD",8503,"KRN",9.8,"NM","B","RGMSCTSK",85)

"BLD",8503,"KRN",9.8,"NM","B","RGMSCUSR",86)

"BLD",8503,"KRN",9.8,"NM","B","RGUT",18)

"BLD",8503,"KRN",9.8,"NM","B","RGUT1",71)

"BLD",8503,"KRN",9.8,"NM","B","RGUTALR",33)

"BLD",8503,"KRN",9.8,"NM","B","RGUTBC28",65)

"BLD",8503,"KRN",9.8,"NM","B","RGUTBC39",66)

"BLD",8503,"KRN",9.8,"NM","B","RGUTBCDA",67)

"BLD",8503,"KRN",9.8,"NM","B","RGUTBIG",34)

"BLD",8503,"KRN",9.8,"NM","B","RGUTDAT",35)

"BLD",8503,"KRN",9.8,"NM","B","RGUTDDR",62)

"BLD",8503,"KRN",9.8,"NM","B","RGUTDIC",36)

"BLD",8503,"KRN",9.8,"NM","B","RGUTDT",37)

"BLD",8503,"KRN",9.8,"NM","B","RGUTEDT",38)

"BLD",8503,"KRN",9.8,"NM","B","RGUTHFS",61)

"BLD",8503,"KRN",9.8,"NM","B","RGUTIMP",44)

"BLD",8503,"KRN",9.8,"NM","B","RGUTIN",45)

"BLD",8503,"KRN",9.8,"NM","B","RGUTIN0",46)

"BLD",8503,"KRN",9.8,"NM","B","RGUTIN16",47)

"BLD",8503,"KRN",9.8,"NM","B","RGUTIN18",48)

"BLD",8503,"KRN",9.8,"NM","B","RGUTIN58",70)

"BLD",8503,"KRN",9.8,"NM","B","RGUTIN68",69)

"BLD",8503,"KRN",9.8,"NM","B","RGUTIN8",49)

"BLD",8503,"KRN",9.8,"NM","B","RGUTIN8U",68)

"BLD",8503,"KRN",9.8,"NM","B","RGUTINIT",60)

"BLD",8503,"KRN",9.8,"NM","B","RGUTLK2",50)

"BLD",8503,"KRN",9.8,"NM","B","RGUTLKP",51)

"BLD",8503,"KRN",9.8,"NM","B","RGUTMTL",52)

"BLD",8503,"KRN",9.8,"NM","B","RGUTNTEG",72)

"BLD",8503,"KRN",9.8,"NM","B","RGUTOS",53)

"BLD",8503,"KRN",9.8,"NM","B","RGUTOS1",54)

"BLD",8503,"KRN",9.8,"NM","B","RGUTREG",64)

"BLD",8503,"KRN",9.8,"NM","B","RGUTRPC",56)

"BLD",8503,"KRN",9.8,"NM","B","RGUTRPRT",63)

"BLD",8503,"KRN",9.8,"NM","B","RGUTSTX",27)

"BLD",8503,"KRN",9.8,"NM","B","RGUTSTX0",28)

"BLD",8503,"KRN",9.8,"NM","B","RGUTSTX1",29)

"BLD",8503,"KRN",9.8,"NM","B","RGUTTSK",57)

"BLD",8503,"KRN",9.8,"NM","B","RGUTUSR",58)

"BLD",8503,"KRN",9.8,"NM","B","RGUTUU",59)

"BLD",8503,"KRN",9.8,"NM","B","RGXY",73)

"BLD",8503,"KRN",9.8,"NM","B","RGZOSF",74)

"BLD",8503,"KRN",19,0)
19
"BLD",8503,"KRN",19,"NM",0)
^9.68A^^0
"BLD",8503,"KRN",19.1,0)
19.1
"BLD",8503,"KRN",101,0)
101
"BLD",8503,"KRN",409.61,0)
409.61
"BLD",8503,"KRN",771,0)
771
"BLD",8503,"KRN",869.2,0)
869.2
"BLD",8503,"KRN",870,0)
870
"BLD",8503,"KRN",8994,0)
8994
"BLD",8503,"KRN",8994,"NM",0)
^9.68A^11^11
"BLD",8503,"KRN",8994,"NM",1,0)
RGUTRPC DIC^^0
"BLD",8503,"KRN",8994,"NM",2,0)
RGUTRPC FILENT^^0
"BLD",8503,"KRN",8994,"NM",3,0)
RGUTRPC FILNXT^^0
"BLD",8503,"KRN",8994,"NM",4,0)
RGUTRPC MSYNTAX^^0
"BLD",8503,"KRN",8994,"NM",5,0)
RGUTDDR GETDD^^0
"BLD",8503,"KRN",8994,"NM",6,0)
RGUTDDR LOCK^^0
"BLD",8503,"KRN",8994,"NM",7,0)
RGUTDDR MOVETO^^0
"BLD",8503,"KRN",8994,"NM",8,0)
RGUTRPC FILGET^^0
"BLD",8503,"KRN",8994,"NM",9,0)
RGUTDDR CVTPTR^^0
"BLD",8503,"KRN",8994,"NM",10,0)
RGUTRPC STRTODAT^^0
"BLD",8503,"KRN",8994,"NM",11,0)
RGUTDDR FIND^^0
"BLD",8503,"KRN",8994,"NM","B","RGUTDDR CVTPTR",9)

"BLD",8503,"KRN",8994,"NM","B","RGUTDDR FIND",11)

"BLD",8503,"KRN",8994,"NM","B","RGUTDDR GETDD",5)

"BLD",8503,"KRN",8994,"NM","B","RGUTDDR LOCK",6)

"BLD",8503,"KRN",8994,"NM","B","RGUTDDR MOVETO",7)

"BLD",8503,"KRN",8994,"NM","B","RGUTRPC DIC",1)

"BLD",8503,"KRN",8994,"NM","B","RGUTRPC FILENT",2)

"BLD",8503,"KRN",8994,"NM","B","RGUTRPC FILGET",8)

"BLD",8503,"KRN",8994,"NM","B","RGUTRPC FILNXT",3)

"BLD",8503,"KRN",8994,"NM","B","RGUTRPC MSYNTAX",4)

"BLD",8503,"KRN",8994,"NM","B","RGUTRPC STRTODAT",10)

"BLD",8503,"KRN","B",.4,.4)

"BLD",8503,"KRN","B",.401,.401)

"BLD",8503,"KRN","B",.402,.402)

"BLD",8503,"KRN","B",.403,.403)

"BLD",8503,"KRN","B",.5,.5)

"BLD",8503,"KRN","B",.84,.84)

"BLD",8503,"KRN","B",3.6,3.6)

"BLD",8503,"KRN","B",3.8,3.8)

"BLD",8503,"KRN","B",9.2,9.2)

"BLD",8503,"KRN","B",9.8,9.8)

"BLD",8503,"KRN","B",19,19)

"BLD",8503,"KRN","B",19.1,19.1)

"BLD",8503,"KRN","B",101,101)

"BLD",8503,"KRN","B",409.61,409.61)

"BLD",8503,"KRN","B",771,771)

"BLD",8503,"KRN","B",869.2,869.2)

"BLD",8503,"KRN","B",870,870)

"BLD",8503,"KRN","B",8994,8994)

"BLD",8503,"QUES",0)
^9.62^^
"BLD",8503,"REQB",0)
^9.611^^
"INIT")
POST^RGUTINIT
"KRN",8994,2708,-1)
0^1
"KRN",8994,2708,0)
RGUTRPC DIC^DIC^RGUTRPC^2
"KRN",8994,2708,1,0)
^^1^1^3050820.204817
"KRN",8994,2708,1,1,0)
Encapsulates RGUTDIC call for broker.
"KRN",8994,2708,2,0)
^8994.02A^3^3
"KRN",8994,2708,2,1,0)
BOOKMARK^1^255^1^1
"KRN",8994,2708,2,2,0)
COMMAND^1^255^1^2
"KRN",8994,2708,2,3,0)
ARG^1^255^0^3
"KRN",8994,2708,2,"B","ARG",3)

"KRN",8994,2708,2,"B","BOOKMARK",1)

"KRN",8994,2708,2,"B","COMMAND",2)

"KRN",8994,2708,2,"PARAMSEQ",1,1)

"KRN",8994,2708,2,"PARAMSEQ",2,2)

"KRN",8994,2708,2,"PARAMSEQ",3,3)

"KRN",8994,2709,-1)
0^2
"KRN",8994,2709,0)
RGUTRPC FILENT^FILENT^RGUTRPC^4^^^^1
"KRN",8994,2709,1,0)
^8994.01^1^1^3000107^^^^
"KRN",8994,2709,1,1,0)
Returns list of entries in a file.
"KRN",8994,2709,2,0)
^8994.02A^1^1
"KRN",8994,2709,2,1,0)
FILE NUMBER^1^250^1^1
"KRN",8994,2709,2,"B","FILE NUMBER",1)

"KRN",8994,2709,2,"PARAMSEQ",1,1)

"KRN",8994,2710,-1)
0^4
"KRN",8994,2710,0)
RGUTRPC MSYNTAX^MSYNTAX^RGUTRPC^1
"KRN",8994,2710,1,0)
^8994.01^1^1^2970922.224252
"KRN",8994,2710,1,1,0)
Performs syntax check on line of M code.
"KRN",8994,2710,2,0)
^8994.02A^2^2
"KRN",8994,2710,2,1,0)
CODE^1^255^1^1
"KRN",8994,2710,2,2,0)
OPTION^1^255^0^2
"KRN",8994,2710,2,"B","CODE",1)

"KRN",8994,2710,2,"B","OPTION",2)

"KRN",8994,2710,2,"PARAMSEQ",1,1)

"KRN",8994,2710,2,"PARAMSEQ",2,2)

"KRN",8994,2711,-1)
0^3
"KRN",8994,2711,0)
RGUTRPC FILNXT^FILNXT^RGUTRPC^1
"KRN",8994,2711,2,0)
^8994.02A^2^2
"KRN",8994,2711,2,1,0)
FILE NUMBER^1^100^1^1
"KRN",8994,2711,2,2,0)
IEN^1^100^1^2
"KRN",8994,2711,2,"B","FILE NUMBER",1)

"KRN",8994,2711,2,"B","IEN",2)

"KRN",8994,2711,2,"PARAMSEQ",1,1)

"KRN",8994,2711,2,"PARAMSEQ",2,2)

"KRN",8994,2712,-1)
0^5
"KRN",8994,2712,0)
RGUTDDR GETDD^GETDD^RGUTDDR^4^^^^1
"KRN",8994,2713,-1)
0^6
"KRN",8994,2713,0)
RGUTDDR LOCK^LOCK^RGUTDDR^1
"KRN",8994,2714,-1)
0^7
"KRN",8994,2714,0)
RGUTDDR MOVETO^MOVETO^RGUTDDR^1
"KRN",8994,2715,-1)
0^8
"KRN",8994,2715,0)
RGUTRPC FILGET^FILGET^RGUTRPC^4^^^^1
"KRN",8994,2716,-1)
0^9
"KRN",8994,2716,0)
RGUTDDR CVTPTR^CVTPTR^RGUTDDR^1
"KRN",8994,2717,-1)
0^10
"KRN",8994,2717,0)
RGUTRPC STRTODAT^STRTODAT^RGUTRPC^1
"KRN",8994,2717,1,0)
^^1^1^3040313.081942
"KRN",8994,2717,1,1,0)
Converts a date in external format to internal FileMan date format.
"KRN",8994,2718,-1)
0^11
"KRN",8994,2718,0)
RGUTDDR FIND^FIND^RGUTDDR^4^^^^1
"MBREQ")
1
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",172,-1)
1^1
"PKG",172,0)
RUN TIME LIBRARY^RGUT^RUN TIME LIBRARY
"PKG",172,20,0)
^9.402P^^
"PKG",172,22,0)
^9.49I^1^1
"PKG",172,22,1,0)
3.0^3150226^3150202^1
"PKG",172,22,1,1,0)
^^3^3^3150226
"PKG",172,22,1,1,1,0)
This is the set of routines common to all modules occupying the RG namespace.  
"PKG",172,22,1,1,2,0)
They perform generic functions.  
"PKG",172,22,1,1,3,0)
 
"PKG",172,"VERSION")
3.0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
52
"RTN","RGCVTDT")
1^75
"RTN","RGCVTUU")
1^76
"RTN","RGINIT")
1^77
"RTN","RGMSCALR")
1^78
"RTN","RGMSCDAT")
1^79
"RTN","RGMSCDIC")
1^80
"RTN","RGMSCEDT")
1^81
"RTN","RGMSCIMP")
1^82
"RTN","RGMSCLKP")
1^83
"RTN","RGMSCMTL")
1^84
"RTN","RGMSCTSK")
1^85
"RTN","RGMSCUSR")
1^86
"RTN","RGUT")
0^18^B38148711
"RTN","RGUT",1,0)
RGUT ;RG/IND/DKM - General purpose utilities;20-Jan-2015 13:23;DKM
"RTN","RGUT",2,0)
 ;;3.0;RG UTILITIES;**1**;Mar 20, 2007;Build 124
"RTN","RGUT",3,0)
 ;;
"RTN","RGUT",4,0)
 ;=================================================================
"RTN","RGUT",5,0)
 ; Replaces delimited arguments in string, returning result
"RTN","RGUT",6,0)
MSG(%CIATXT,%CIADLM,%CIARPL) ;EP
"RTN","RGUT",7,0)
 N %CIAZ1,%CIAZ2
"RTN","RGUT",8,0)
 I $$NEWERR^%ZTER N $ET S $ET=""
"RTN","RGUT",9,0)
 S:$G(%CIADLM)="" %CIADLM="%"
"RTN","RGUT",10,0)
 S %CIAZ2="",@$$TRAP^RGUTOS("M1^RGUT")
"RTN","RGUT",11,0)
 S:$G(%CIARPL,1) %CIATXT=$TR(%CIATXT,"~","^")
"RTN","RGUT",12,0)
 F  Q:%CIATXT=""  D
"RTN","RGUT",13,0)
 .S %CIAZ2=%CIAZ2_$P(%CIATXT,%CIADLM),%CIAZ1=$P(%CIATXT,%CIADLM,2),%CIATXT=$P(%CIATXT,%CIADLM,3,999)
"RTN","RGUT",14,0)
 .I %CIAZ1="" S:%CIATXT'="" %CIAZ2=%CIAZ2_%CIADLM
"RTN","RGUT",15,0)
 .E  X "S %CIAZ2=%CIAZ2_("_%CIAZ1_")"
"RTN","RGUT",16,0)
M1 Q %CIAZ2
"RTN","RGUT",17,0)
 ; Case-insensitive string comparison
"RTN","RGUT",18,0)
 ; Returns 0: X=Y, 1: X>Y, -1: X<Y
"RTN","RGUT",19,0)
STRICMP(X,Y) ;EP
"RTN","RGUT",20,0)
 S X=$$UP^XLFSTR(X),Y=$$UP^XLFSTR(Y)
"RTN","RGUT",21,0)
 Q $S(X=Y:0,X]]Y:1,1:-1)
"RTN","RGUT",22,0)
 ; Output an underline X bytes long
"RTN","RGUT",23,0)
UND(X) ;EP
"RTN","RGUT",24,0)
 Q $$REPEAT^XLFSTR("-",$G(X,$G(IOM,80)))
"RTN","RGUT",25,0)
 ; Truncate a string if > Y bytes long
"RTN","RGUT",26,0)
TRUNC(X,Y) ;EP
"RTN","RGUT",27,0)
 Q $S($L(X)'>Y:X,1:$E(X,1,Y-3)_"...")
"RTN","RGUT",28,0)
 ; Formatting for singular/plural
"RTN","RGUT",29,0)
SNGPLR(CIANUM,CIASNG,CIAPLR) ;EP
"RTN","RGUT",30,0)
 N CIAZ
"RTN","RGUT",31,0)
 S CIAZ=CIASNG?.E1L.E,CIAPLR=$G(CIAPLR,CIASNG_$S(CIAZ:"s",1:"S"))
"RTN","RGUT",32,0)
 Q $S('CIANUM:$S(CIAZ:"no ",1:"NO ")_CIAPLR,CIANUM=1:"1 "_CIASNG,1:CIANUM_" "_CIAPLR)
"RTN","RGUT",33,0)
 ; Convert code to external form from set of codes
"RTN","RGUT",34,0)
SET(CIACODE,CIASET) ;EP
"RTN","RGUT",35,0)
 N CIAZ,CIAZ1
"RTN","RGUT",36,0)
 F CIAZ=1:1:$L(CIASET,";") D  Q:CIAZ1'=""
"RTN","RGUT",37,0)
 .S CIAZ1=$P(CIASET,";",CIAZ),CIAZ1=$S($P(CIAZ1,":")=CIACODE:$P(CIAZ1,":",2),1:"")
"RTN","RGUT",38,0)
 Q CIAZ1
"RTN","RGUT",39,0)
 ; Replace each occurrence of CIAOLD in CIASTR with CIANEW
"RTN","RGUT",40,0)
SUBST(CIASTR,CIAOLD,CIANEW) ;EP
"RTN","RGUT",41,0)
 N CIAP,CIAL1,CIAL2
"RTN","RGUT",42,0)
 S CIANEW=$G(CIANEW),CIAP=0,CIAL1=$L(CIAOLD),CIAL2=$L(CIANEW)
"RTN","RGUT",43,0)
 F  S CIAP=$F(CIASTR,CIAOLD,CIAP) Q:'CIAP  D
"RTN","RGUT",44,0)
 .S CIASTR=$E(CIASTR,1,CIAP-CIAL1-1)_CIANEW_$E(CIASTR,CIAP,9999)
"RTN","RGUT",45,0)
 .S CIAP=CIAP-CIAL1+CIAL2
"RTN","RGUT",46,0)
 Q CIASTR
"RTN","RGUT",47,0)
 ; Trim leading (Y=-1)/trailing (Y=1)/leading & trailing (Y=0) spaces
"RTN","RGUT",48,0)
TRIM(X,Y) ;EP
"RTN","RGUT",49,0)
 N CIAZ1,CIAZ2
"RTN","RGUT",50,0)
 S Y=+$G(Y),CIAZ1=1,CIAZ2=$L(X)
"RTN","RGUT",51,0)
 I Y'>0 F CIAZ1=1:1 Q:$A(X,CIAZ1)'=32
"RTN","RGUT",52,0)
 I Y'<0 F CIAZ2=CIAZ2:-1 Q:$A(X,CIAZ2)'=32
"RTN","RGUT",53,0)
 Q $E(X,CIAZ1,CIAZ2)
"RTN","RGUT",54,0)
 ; Format a number with commas
"RTN","RGUT",55,0)
FMTNUM(CIANUM) ;EP
"RTN","RGUT",56,0)
 N CIAZ,CIAZ1,CIAZ2,CIAZ3
"RTN","RGUT",57,0)
 S:CIANUM<0 CIANUM=-CIANUM,CIAZ2="-"
"RTN","RGUT",58,0)
 S CIAZ3=CIANUM#1,CIANUM=CIANUM\1
"RTN","RGUT",59,0)
 F CIAZ=$L(CIANUM):-3:1 S CIAZ1=$E(CIANUM,CIAZ-2,CIAZ)_$S($D(CIAZ1):","_CIAZ1,1:"")
"RTN","RGUT",60,0)
 Q $G(CIAZ2)_$G(CIAZ1)_$S(CIAZ3:CIAZ3,1:"")
"RTN","RGUT",61,0)
 ; Convert X to base Y padded to length L
"RTN","RGUT",62,0)
BASE(X,Y,L) ;EP
"RTN","RGUT",63,0)
 Q:(Y<2)!(Y>62) ""
"RTN","RGUT",64,0)
 N CIAZ,CIAZ1
"RTN","RGUT",65,0)
 S CIAZ1="",X=$S(X<0:-X,1:X)
"RTN","RGUT",66,0)
 F  S CIAZ=X#Y,X=X\Y,CIAZ1=$C($S(CIAZ<10:CIAZ+48,CIAZ<36:CIAZ+55,1:CIAZ+61))_CIAZ1 Q:'X
"RTN","RGUT",67,0)
 Q $S('$G(L):CIAZ1,1:$$REPEAT^XLFSTR(0,L-$L(CIAZ1))_$E(CIAZ1,1,L))
"RTN","RGUT",68,0)
 ; Convert a string to its SOUNDEX equivalent
"RTN","RGUT",69,0)
SOUNDEX(CIAVALUE) ;EP
"RTN","RGUT",70,0)
 N CIACODE,CIASOUND,CIAPREV,CIACHAR,CIAPOS,CIATRANS
"RTN","RGUT",71,0)
 S CIACODE="01230129022455012623019202"
"RTN","RGUT",72,0)
 S CIASOUND=$C($A(CIAVALUE)-(CIAVALUE?1L.E*32))
"RTN","RGUT",73,0)
 S CIAPREV=$E(CIACODE,$A(CIAVALUE)-64)
"RTN","RGUT",74,0)
 F CIAPOS=2:1 S CIACHAR=$E(CIAVALUE,CIAPOS) Q:","[CIACHAR  D  Q:$L(CIASOUND)=4
"RTN","RGUT",75,0)
 .Q:CIACHAR'?1A
"RTN","RGUT",76,0)
 .S CIATRANS=$E(CIACODE,$A(CIACHAR)-$S(CIACHAR?1U:64,1:96))
"RTN","RGUT",77,0)
 .Q:CIATRANS=CIAPREV!(CIATRANS=9)
"RTN","RGUT",78,0)
 .S CIAPREV=CIATRANS
"RTN","RGUT",79,0)
 .S:CIATRANS'=0 CIASOUND=CIASOUND_CIATRANS
"RTN","RGUT",80,0)
 Q $E(CIASOUND_"000",1,4)
"RTN","RGUT",81,0)
 ; Display formatted title
"RTN","RGUT",82,0)
TITLE(CIATTL,CIAVER,CIAFN) ;EP
"RTN","RGUT",83,0)
 I '$D(IOM) N IOM,IOF S IOM=80,IOF="#"
"RTN","RGUT",84,0)
 S CIAVER=$G(CIAVER,"1.0")
"RTN","RGUT",85,0)
 S:CIAVER CIAVER="Version "_CIAVER
"RTN","RGUT",86,0)
 U $G(IO,$I)
"RTN","RGUT",87,0)
 W @IOF,$S(IO=IO(0):$C(27,91,55,109),1:""),*13,$$ENTRY^RGUTDT(+$H_","),?(IOM-$L(CIATTL)\2),CIATTL,?(IOM-$L(CIAVER)),CIAVER,!,$S(IO=IO(0):$C(27,91,109),1:$$UND),!
"RTN","RGUT",88,0)
 W:$D(CIAFN) ?(IOM-$L(CIAFN)\2),CIAFN,!
"RTN","RGUT",89,0)
 Q
"RTN","RGUT",90,0)
 ; Display required header for menus
"RTN","RGUT",91,0)
MNUHDR(PKG,VER) ;EP
"RTN","RGUT",92,0)
 Q:$D(ZTQUEUED)
"RTN","RGUT",93,0)
 Q:$E($G(IOST),1,2)'="C-"
"RTN","RGUT",94,0)
 N X,%ZIS,IORVON,IORVOFF,MNU
"RTN","RGUT",95,0)
 S MNU=$P($G(XQY0),U,2),MNU(0)=$P($G(XQY0),U),VER=$G(VER)
"RTN","RGUT",96,0)
 S X=$$GETPKG($S($L($G(PKG)):PKG,1:MNU(0)))
"RTN","RGUT",97,0)
 I $L(X) D
"RTN","RGUT",98,0)
 .S PKG=$P(X,U,2),X=$P(X,U,3)
"RTN","RGUT",99,0)
 .I $L(X),'$L(VER) S VER=$$VERSION^XPDUTL(X)
"RTN","RGUT",100,0)
 S:VER VER="Version "_VER
"RTN","RGUT",101,0)
 S X="IORVON;IORVOFF"
"RTN","RGUT",102,0)
 D ENDR^%ZISS
"RTN","RGUT",103,0)
 U IO
"RTN","RGUT",104,0)
 W @IOF,IORVON,$$GET1^DIQ(4,DUZ(2),.01),?(IOM-$L(PKG)\2),PKG,?(IOM-$L(VER)),VER,!,IORVOFF,!?(IOM-$L(MNU)\2),MNU,!
"RTN","RGUT",105,0)
 Q
"RTN","RGUT",106,0)
 ; Execute menu action, preserving menu headers
"RTN","RGUT",107,0)
MNUEXEC(EXEC,PAUSE) ;EP
"RTN","RGUT",108,0)
 D MNUHDR()
"RTN","RGUT",109,0)
 X EXEC
"RTN","RGUT",110,0)
 R:$G(PAUSE)&'$D(ZTQUEUED) !,"Press ENTER or RETURN to continue...",PAUSE:$G(DTIME,300),!
"RTN","RGUT",111,0)
 Q
"RTN","RGUT",112,0)
 ; Action for editing parameters from menu
"RTN","RGUT",113,0)
MNUPARAM(PARAM) ;EP
"RTN","RGUT",114,0)
 D MNUEXEC("D EDITPAR^XPAREDIT($G(PARAM,$P(XQY0,U)))")
"RTN","RGUT",115,0)
 Q
"RTN","RGUT",116,0)
 ; Action for editing parameter template from menu
"RTN","RGUT",117,0)
MNUTEMPL(TMPL) ;EP
"RTN","RGUT",118,0)
 D MNUEXEC("D TEDH^XPAREDIT($G(TMPL,$P(XQY0,U)),""BA"")")
"RTN","RGUT",119,0)
 Q
"RTN","RGUT",120,0)
 ; Return package reference from namespace
"RTN","RGUT",121,0)
 ; Returns ien^pkg name^pkg namespace
"RTN","RGUT",122,0)
GETPKG(NAME) ;EP
"RTN","RGUT",123,0)
 N PKG,IEN
"RTN","RGUT",124,0)
 S PKG=NAME
"RTN","RGUT",125,0)
 F  S PKG=$O(^DIC(9.4,"C",PKG),-1) Q:$E(NAME,1,$L(PKG))=PKG
"RTN","RGUT",126,0)
 S IEN=$S($L(PKG):+$O(^DIC(9.4,"C",PKG,0)),1:0)
"RTN","RGUT",127,0)
 Q $S(IEN:IEN_U_$P(^DIC(9.4,IEN,0),U)_U_PKG,1:"")
"RTN","RGUT",128,0)
 ; Create a unique 8.3 filename
"RTN","RGUT",129,0)
UFN(Y) ;EP
"RTN","RGUT",130,0)
 N X
"RTN","RGUT",131,0)
 S Y=$E($G(Y),1,3),X=$$BASE($R(100)_$J_$TR($H,","),36,$S($L(Y):8,1:11))_Y
"RTN","RGUT",132,0)
 Q $E(X,1,8)_"."_$E(X,9,11)
"RTN","RGUT",133,0)
 ; Return formatted SSN
"RTN","RGUT",134,0)
SSN(X) ;EP
"RTN","RGUT",135,0)
 Q $S(X="":X,1:$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,12))
"RTN","RGUT",136,0)
 ; Performs security check on patient access
"RTN","RGUT",137,0)
DGSEC(Y) ;EP
"RTN","RGUT",138,0)
 N DIC
"RTN","RGUT",139,0)
 S DIC(0)="E"
"RTN","RGUT",140,0)
 D ^DGSEC
"RTN","RGUT",141,0)
 Q $S(Y<1:0,1:Y)
"RTN","RGUT",142,0)
 ; Displays spinning icon to indicate progress
"RTN","RGUT",143,0)
WORKING(CIAST,CIAP,CIAS) ;EP
"RTN","RGUT",144,0)
 Q:'$D(IO(0))!$D(ZTQUEUED) 0
"RTN","RGUT",145,0)
 N CIAZ
"RTN","RGUT",146,0)
 S CIAZ(0)=$I,CIAS=$G(CIAS,"|/-\"),CIAST=+$G(CIAST)
"RTN","RGUT",147,0)
 S CIAST=$S(CIAST<0:0,1:CIAST#$L(CIAS)+1)
"RTN","RGUT",148,0)
 U IO(0)
"RTN","RGUT",149,0)
 W:'$G(CIAP) *8,*$S(CIAST:$A(CIAS,CIAST),1:32)
"RTN","RGUT",150,0)
 R *CIAZ:0
"RTN","RGUT",151,0)
 U CIAZ(0)
"RTN","RGUT",152,0)
 Q CIAZ=94
"RTN","RGUT",153,0)
 ; Ask for Y/N response
"RTN","RGUT",154,0)
ASK(CIAP,CIAD,CIAZ) ;EP
"RTN","RGUT",155,0)
 S CIAD=$G(CIAD,"N")
"RTN","RGUT",156,0)
 S CIAZ=$$GETCH(CIAP_"? ","YN",,,,CIAD)
"RTN","RGUT",157,0)
 S:CIAZ="" CIAZ=$E(CIAD)
"RTN","RGUT",158,0)
 W !
"RTN","RGUT",159,0)
 Q $S(CIAZ[U:"",1:CIAZ="Y")
"RTN","RGUT",160,0)
 ; Pause for user response
"RTN","RGUT",161,0)
PAUSE(CIAP,CIAX,CIAY) ;EP
"RTN","RGUT",162,0)
 Q $$GETCH($G(CIAP,"Press RETURN or ENTER to continue..."),U,.CIAX,.CIAY)
"RTN","RGUT",163,0)
 ; Single character read
"RTN","RGUT",164,0)
GETCH(CIAP,CIAV,CIAX,CIAY,CIAT,CIAD) ;EP
"RTN","RGUT",165,0)
 N CIAZ,CIAC
"RTN","RGUT",166,0)
 W:$D(CIAX)!$D(CIAY) $$XY($G(CIAX,$X),$G(CIAY,$Y))
"RTN","RGUT",167,0)
 W $G(CIAP),$E($G(CIAD)_" "),*8
"RTN","RGUT",168,0)
 S CIAT=$G(CIAT,$G(DTIME,999999)),CIAD=$G(CIAD,U),CIAC=""
"RTN","RGUT",169,0)
 S:$D(CIAV) CIAV=$$UP^XLFSTR(CIAV)_U
"RTN","RGUT",170,0)
 F  D  Q:'$L(CIAZ)
"RTN","RGUT",171,0)
 .R CIAZ#1:CIAT
"RTN","RGUT",172,0)
 .E  S CIAC=CIAD Q
"RTN","RGUT",173,0)
 .W *8
"RTN","RGUT",174,0)
 .Q:'$L(CIAZ)
"RTN","RGUT",175,0)
 .S CIAZ=$$UP^XLFSTR(CIAZ)
"RTN","RGUT",176,0)
 .I $D(CIAV) D
"RTN","RGUT",177,0)
 ..I CIAV[CIAZ S CIAC=CIAZ
"RTN","RGUT",178,0)
 ..E  W *7,*32,*8 S CIAC=""
"RTN","RGUT",179,0)
 .E  S CIAC=CIAZ
"RTN","RGUT",180,0)
 W !
"RTN","RGUT",181,0)
 Q CIAC
"RTN","RGUT",182,0)
 ; Position cursor
"RTN","RGUT",183,0)
XY(DX,DY) ;EP
"RTN","RGUT",184,0)
 D:$G(IOXY)="" HOME^%ZIS
"RTN","RGUT",185,0)
 S DX=$S(+$G(DX)>0:+DX,1:0),DY=$S(+$G(DY)>0:+DY,1:0),$X=0
"RTN","RGUT",186,0)
 X IOXY
"RTN","RGUT",187,0)
 S $X=DX,$Y=DY
"RTN","RGUT",188,0)
 Q ""
"RTN","RGUT",189,0)
 ; Parameterized calls to date routines
"RTN","RGUT",190,0)
DT(CIAD,CIAX) ;EP
"RTN","RGUT",191,0)
 N %D,%P,%C,%H,%I,%X,%Y,CIAZ
"RTN","RGUT",192,0)
 D DT^DILF($G(CIAX),CIAD,.CIAZ)
"RTN","RGUT",193,0)
 W:$D(CIAZ(0)) CIAZ(0),!
"RTN","RGUT",194,0)
 Q $G(CIAZ,-1)
"RTN","RGUT",195,0)
DTC(X1,X2) ;EP
"RTN","RGUT",196,0)
 N X3
"RTN","RGUT",197,0)
 S X2=$$DTF(X1)+X2,X1=X1\1,X3=X2\1,X2=X2-X3
"RTN","RGUT",198,0)
 S:X2<0 X3=X3-1,X2=X2+1
"RTN","RGUT",199,0)
 Q $$FMADD^XLFDT(X1,X3)+$J($$DTT(X2),0,6)
"RTN","RGUT",200,0)
DTD(X1,X2) ;EP
"RTN","RGUT",201,0)
 Q $$FMDIFF^XLFDT(X1\1,X2\1)+($$DTF(X1)-$$DTF(X2))
"RTN","RGUT",202,0)
DTF(X) S X=X#1*100
"RTN","RGUT",203,0)
 Q X\1*3600+(X*100#100\1*60)+(X*10000#100)/86400
"RTN","RGUT",204,0)
DTT(X) S X=X*86400
"RTN","RGUT",205,0)
 Q X\3600*100+(X#3600/3600*60)/10000
"RTN","RGUT1")
0^71^B812698
"RTN","RGUT1",1,0)
RGUT1 ;RG/IND/PLS - General Purpose Utilites - Con't ;04-May-2006 08:19;DKM
"RTN","RGUT1",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUT1",3,0)
 ;;
"RTN","RGUT1",4,0)
 ;=================================================================
"RTN","RGUT1",5,0)
 ; Parameterized call to ScreenMan interface
"RTN","RGUT1",6,0)
DDS(DDSFILE,DR,DA,DDSPARM,DDSCHANG,CIAERR) ;
"RTN","RGUT1",7,0)
 S CIAERR=0
"RTN","RGUT1",8,0)
 D:'$D(IOST(0)) HOME^%ZIS
"RTN","RGUT1",9,0)
 D ENS^%ZISS
"RTN","RGUT1",10,0)
 D ^DDS
"RTN","RGUT1",11,0)
 S:$D(DTOUT) CIAERR=1
"RTN","RGUT1",12,0)
 I $D(DIMSG)!($D(DIERR)) D
"RTN","RGUT1",13,0)
 .S CIAERR=1
"RTN","RGUT1",14,0)
 .;D SHOWDLG(23)
"RTN","RGUT1",15,0)
 .W !,?5,"The Screen Manager could not edit this record."
"RTN","RGUT1",16,0)
 .H 5
"RTN","RGUT1",17,0)
 Q
"RTN","RGUT1",18,0)
 ; Prompt for single date date
"RTN","RGUT1",19,0)
 ; PMT = Prompt
"RTN","RGUT1",20,0)
 ; DFL = Default value (optional)
"RTN","RGUT1",21,0)
 ; MIN = Minimum value (optional)
"RTN","RGUT1",22,0)
 ; OPT = Additional options (optional)
"RTN","RGUT1",23,0)
ASKDATE(PMT,DFL,MIN,OPT) ;
"RTN","RGUT1",24,0)
 N %DT,Y
"RTN","RGUT1",25,0)
 S %DT="APEX"_$G(OPT)
"RTN","RGUT1",26,0)
 S %DT("A")=PMT
"RTN","RGUT1",27,0)
 S:$G(MIN) %DT(0)=MIN
"RTN","RGUT1",28,0)
 I $G(DFL) D
"RTN","RGUT1",29,0)
 .S Y=DFL
"RTN","RGUT1",30,0)
 .D DD^%DT
"RTN","RGUT1",31,0)
 .S %DT("B")=Y
"RTN","RGUT1",32,0)
 D ^%DT
"RTN","RGUT1",33,0)
 S:Y<0 POP=1
"RTN","RGUT1",34,0)
 Q Y
"RTN","RGUTALR")
0^33^B1394189
"RTN","RGUTALR",1,0)
RGUTALR ;RG/IND/DKM - Send alert to user(s) via kernel or mail;04-May-2006 08:19;DKM
"RTN","RGUTALR",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTALR",3,0)
 ;;
"RTN","RGUTALR",4,0)
 ;=================================================================
"RTN","RGUTALR",5,0)
 ; Send an alert.
"RTN","RGUTALR",6,0)
 ;   XQAMSG = Message to send
"RTN","RGUTALR",7,0)
 ;   RGUTSR  = A semicolon-delimited list of users to receive alert.
"RTN","RGUTALR",8,0)
 ;=================================================================
"RTN","RGUTALR",9,0)
ALERT(XQAMSG,RGUTSR) ;
"RTN","RGUTALR",10,0)
 N XQA,XQAOPT,XQAFLG,XQAROU,XQADATA,XQAID
"RTN","RGUTALR",11,0)
 S @$$TRAP^RGUTOS("EXIT^RGUTALR"),RGUTSR=$G(RGUTSR,"*"),XQAMSG=$TR(XQAMSG,U,"~")
"RTN","RGUTALR",12,0)
 D ENTRY^RGUTUSR(RGUTSR,.XQA),SETUP^XQALERT:$D(XQA)
"RTN","RGUTALR",13,0)
EXIT Q
"RTN","RGUTALR",14,0)
 ;=================================================================
"RTN","RGUTALR",15,0)
 ; Send a mail message
"RTN","RGUTALR",16,0)
 ;   CIAMSG  = Message to send (single node or array)
"RTN","RGUTALR",17,0)
 ;   XMY    = A semicolon-delimited list (or array) of users
"RTN","RGUTALR",18,0)
 ;   XMSUB  = Subject line (optional)
"RTN","RGUTALR",19,0)
 ;   XMDUZ  = DUZ of sender (optional)
"RTN","RGUTALR",20,0)
 ;=================================================================
"RTN","RGUTALR",21,0)
MAIL(CIAMSG,XMY,XMSUB,XMDUZ) ;
"RTN","RGUTALR",22,0)
 N XMTEXT
"RTN","RGUTALR",23,0)
 S:$D(CIAMSG)=1 CIAMSG(1)=CIAMSG
"RTN","RGUTALR",24,0)
 S XMTEXT="CIAMSG(",@$$TRAP^RGUTOS("EXIT^RGUTALR"),XMY=$G(XMY)
"RTN","RGUTALR",25,0)
 S:$G(XMSUB)="" XMSUB=CIAMSG
"RTN","RGUTALR",26,0)
 S:$G(XMDUZ)="" XMDUZ=$G(DUZ)
"RTN","RGUTALR",27,0)
 F  Q:'$L(XMY)  S X=$P(XMY,";"),XMY=$P(XMY,";",2,999) S:$L(X) XMY(X)=""
"RTN","RGUTALR",28,0)
 D ^XMD:$D(XMY)>9
"RTN","RGUTALR",29,0)
 Q
"RTN","RGUTBC28")
0^65^B10811663
"RTN","RGUTBC28",1,0)
RGUTBC28 ;RG/IND/DKM/PLS - Convert 128 barcode to HPCL-compatible form ;04-May-2006 08:19;DKM
"RTN","RGUTBC28",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTBC28",3,0)
 ;;
"RTN","RGUTBC28",4,0)
 ;=================================================================
"RTN","RGUTBC28",5,0)
 ; Inputs:
"RTN","RGUTBC28",6,0)
 ;     TX = Text to encode.
"RTN","RGUTBC28",7,0)
 ; Outputs:
"RTN","RGUTBC28",8,0)
 ;     Returns encoded text.
"RTN","RGUTBC28",9,0)
 ; Purpose:
"RTN","RGUTBC28",10,0)
 ;     Performs bar code 128 encoding on a text string.
"RTN","RGUTBC28",11,0)
 ;=================================================================
"RTN","RGUTBC28",12,0)
EN(TX) Q:TX="" ""
"RTN","RGUTBC28",13,0)
 N CD,TP,TP1,EN,Z1,Z2
"RTN","RGUTBC28",14,0)
 S TP=0,TP=$$TP(TX),CD=TP,EN=$C(TP+8)
"RTN","RGUTBC28",15,0)
 F  Q:TX=""  D
"RTN","RGUTBC28",16,0)
 .S TP1=$$TP(TX)
"RTN","RGUTBC28",17,0)
 .I TP1'=TP D CD(6-TP1) S TP=TP1
"RTN","RGUTBC28",18,0)
 .S Z1=$E(TX,1,TP=2+1),TX=$E(TX,TP=2+2,255),Z2=$A(Z1)
"RTN","RGUTBC28",19,0)
 .I TP=2 D CD($S(Z1>95:Z1-95,Z1:Z1+32,1:31))
"RTN","RGUTBC28",20,0)
 .E  D CD($S(Z2<32:Z2+96,Z2=32:31,1:Z2))
"RTN","RGUTBC28",21,0)
 S CD=CD#103,CD=$S('CD:31,CD>95:CD-95,1:CD+32)
"RTN","RGUTBC28",22,0)
 Q EN_$C(CD,11)
"RTN","RGUTBC28",23,0)
TP(X) Q $S(X?2N.E:2,$A(X)<32:0,$A(X)>95:1,TP=2:0,1:TP)
"RTN","RGUTBC28",24,0)
CD(X) S CD=$S(X=31:0,X<11:X+95,1:X-32)*$L(EN)+$G(CD),EN=EN_$C(X)
"RTN","RGUTBC28",25,0)
 Q
"RTN","RGUTBC28",26,0)
 ;=================================================================
"RTN","RGUTBC28",27,0)
 ; Inputs:
"RTN","RGUTBC28",28,0)
 ;   TXT = Data string to print in bar code
"RTN","RGUTBC28",29,0)
 ;   ORN = Orientation of bar code
"RTN","RGUTBC28",30,0)
 ;         0 = portrait (default)
"RTN","RGUTBC28",31,0)
 ;         1 = landscape
"RTN","RGUTBC28",32,0)
 ;   HGT = Height of bar code in dots (1/300 inch)
"RTN","RGUTBC28",33,0)
 ;   HOR = Horizontal position on page in dots
"RTN","RGUTBC28",34,0)
 ;   VER = Vertical position on page in dots
"RTN","RGUTBC28",35,0)
 ;   WID = Width of bar in dots (3=default)
"RTN","RGUTBC28",36,0)
 ; Purpose:
"RTN","RGUTBC28",37,0)
 ;   Accepts a barcode 128 string and writes an HPCL-compatible
"RTN","RGUTBC28",38,0)
 ;   string that will display the barcode on an HP laser printer.
"RTN","RGUTBC28",39,0)
 ;   A barcode font cartridge is not required.  The print position
"RTN","RGUTBC28",40,0)
 ;   on entry is restored on exit.
"RTN","RGUTBC28",41,0)
 ;=================================================================
"RTN","RGUTBC28",42,0)
BC(TXT,ORN,HGT,HOR,VER,WID) ;
"RTN","RGUTBC28",43,0)
 N Z,Z1,Z2,Z3,Z4,Z5,C,P,X
"RTN","RGUTBC28",44,0)
 S X=0 X ^%ZOSF("RM")
"RTN","RGUTBC28",45,0)
 S TXT=$$EN(TXT),C=$C(27)_"*c",P=$C(27)_"*p+",WID=$G(WID,3.5),HGT=$G(HGT,60),ORN=''$G(ORN)+1
"RTN","RGUTBC28",46,0)
 W $C(27),"&f0S"                                                       ;Push cursor position
"RTN","RGUTBC28",47,0)
 W:$D(HOR) $C(27)_"*p"_+HOR_"X"
"RTN","RGUTBC28",48,0)
 W:$D(VER) $C(27)_"*p"_+VER_"Y"
"RTN","RGUTBC28",49,0)
 W C_HGT_$E("BA",ORN)
"RTN","RGUTBC28",50,0)
 F Z=1:1:$L(TXT) D
"RTN","RGUTBC28",51,0)
 .S Z1=$P($T(@$A(TXT,Z)),";;",2),Z4=11,Z5=0
"RTN","RGUTBC28",52,0)
 .F Z2=1:1:$L(Z1) D
"RTN","RGUTBC28",53,0)
 ..S Z3=+$E(Z1,Z2),Z4=Z4-Z3,Z3=Z3*WID
"RTN","RGUTBC28",54,0)
 ..Q:'Z3
"RTN","RGUTBC28",55,0)
 ..I Z2#2 W C_Z3_$E("ab",ORN)_"0P" S Z5=Z3
"RTN","RGUTBC28",56,0)
 ..E  W P_(Z3+Z5)_$E("XY",ORN) S Z5=0
"RTN","RGUTBC28",57,0)
 .S Z4=Z4*WID+Z5
"RTN","RGUTBC28",58,0)
 .W:Z4>0 P_Z4_$E("XY",ORN)
"RTN","RGUTBC28",59,0)
 W $C(27),"&f1S"                                                       ;Pop cursor position
"RTN","RGUTBC28",60,0)
 Q ""
"RTN","RGUTBC28",61,0)
1 ;;11431
"RTN","RGUTBC28",62,0)
2 ;;41111
"RTN","RGUTBC28",63,0)
3 ;;41131
"RTN","RGUTBC28",64,0)
4 ;;11314
"RTN","RGUTBC28",65,0)
5 ;;11413
"RTN","RGUTBC28",66,0)
6 ;;31114
"RTN","RGUTBC28",67,0)
7 ;;41113
"RTN","RGUTBC28",68,0)
8 ;;21141
"RTN","RGUTBC28",69,0)
9 ;;21121
"RTN","RGUTBC28",70,0)
10 ;;21123
"RTN","RGUTBC28",71,0)
11 ;;2331112
"RTN","RGUTBC28",72,0)
31 ;;21222
"RTN","RGUTBC28",73,0)
33 ;;22212
"RTN","RGUTBC28",74,0)
34 ;;22222
"RTN","RGUTBC28",75,0)
35 ;;12122
"RTN","RGUTBC28",76,0)
36 ;;12132
"RTN","RGUTBC28",77,0)
37 ;;13122
"RTN","RGUTBC28",78,0)
38 ;;12221
"RTN","RGUTBC28",79,0)
39 ;;12231
"RTN","RGUTBC28",80,0)
40 ;;13221
"RTN","RGUTBC28",81,0)
41 ;;22121
"RTN","RGUTBC28",82,0)
42 ;;22131
"RTN","RGUTBC28",83,0)
43 ;;23121
"RTN","RGUTBC28",84,0)
44 ;;11223
"RTN","RGUTBC28",85,0)
45 ;;12213
"RTN","RGUTBC28",86,0)
46 ;;12223
"RTN","RGUTBC28",87,0)
47 ;;11322
"RTN","RGUTBC28",88,0)
48 ;;12312
"RTN","RGUTBC28",89,0)
49 ;;12322
"RTN","RGUTBC28",90,0)
50 ;;22321
"RTN","RGUTBC28",91,0)
51 ;;22113
"RTN","RGUTBC28",92,0)
52 ;;22123
"RTN","RGUTBC28",93,0)
53 ;;21321
"RTN","RGUTBC28",94,0)
54 ;;22311
"RTN","RGUTBC28",95,0)
55 ;;31213
"RTN","RGUTBC28",96,0)
56 ;;31122
"RTN","RGUTBC28",97,0)
57 ;;32112
"RTN","RGUTBC28",98,0)
58 ;;32122
"RTN","RGUTBC28",99,0)
59 ;;31221
"RTN","RGUTBC28",100,0)
60 ;;32211
"RTN","RGUTBC28",101,0)
61 ;;32221
"RTN","RGUTBC28",102,0)
62 ;;21212
"RTN","RGUTBC28",103,0)
63 ;;21232
"RTN","RGUTBC28",104,0)
64 ;;23212
"RTN","RGUTBC28",105,0)
65 ;;11132
"RTN","RGUTBC28",106,0)
66 ;;13112
"RTN","RGUTBC28",107,0)
67 ;;13132
"RTN","RGUTBC28",108,0)
68 ;;11231
"RTN","RGUTBC28",109,0)
69 ;;13211
"RTN","RGUTBC28",110,0)
70 ;;13231
"RTN","RGUTBC28",111,0)
71 ;;21131
"RTN","RGUTBC28",112,0)
72 ;;23111
"RTN","RGUTBC28",113,0)
73 ;;23131
"RTN","RGUTBC28",114,0)
74 ;;11213
"RTN","RGUTBC28",115,0)
75 ;;11233
"RTN","RGUTBC28",116,0)
76 ;;13213
"RTN","RGUTBC28",117,0)
77 ;;11312
"RTN","RGUTBC28",118,0)
78 ;;11332
"RTN","RGUTBC28",119,0)
79 ;;13312
"RTN","RGUTBC28",120,0)
80 ;;31312
"RTN","RGUTBC28",121,0)
81 ;;21133
"RTN","RGUTBC28",122,0)
82 ;;23113
"RTN","RGUTBC28",123,0)
83 ;;21311
"RTN","RGUTBC28",124,0)
84 ;;21331
"RTN","RGUTBC28",125,0)
85 ;;21313
"RTN","RGUTBC28",126,0)
86 ;;31112
"RTN","RGUTBC28",127,0)
87 ;;31132
"RTN","RGUTBC28",128,0)
88 ;;33112
"RTN","RGUTBC28",129,0)
89 ;;31211
"RTN","RGUTBC28",130,0)
90 ;;31231
"RTN","RGUTBC28",131,0)
91 ;;33211
"RTN","RGUTBC28",132,0)
92 ;;31411
"RTN","RGUTBC28",133,0)
93 ;;22141
"RTN","RGUTBC28",134,0)
94 ;;43111
"RTN","RGUTBC28",135,0)
95 ;;11122
"RTN","RGUTBC28",136,0)
96 ;;11142
"RTN","RGUTBC28",137,0)
97 ;;12112
"RTN","RGUTBC28",138,0)
98 ;;12142
"RTN","RGUTBC28",139,0)
99 ;;14112
"RTN","RGUTBC28",140,0)
100 ;;14122
"RTN","RGUTBC28",141,0)
101 ;;11221
"RTN","RGUTBC28",142,0)
102 ;;11241
"RTN","RGUTBC28",143,0)
103 ;;12211
"RTN","RGUTBC28",144,0)
104 ;;12241
"RTN","RGUTBC28",145,0)
105 ;;14211
"RTN","RGUTBC28",146,0)
106 ;;14221
"RTN","RGUTBC28",147,0)
107 ;;24121
"RTN","RGUTBC28",148,0)
108 ;;22111
"RTN","RGUTBC28",149,0)
109 ;;41311
"RTN","RGUTBC28",150,0)
110 ;;24111
"RTN","RGUTBC28",151,0)
111 ;;13411
"RTN","RGUTBC28",152,0)
112 ;;11124
"RTN","RGUTBC28",153,0)
113 ;;12114
"RTN","RGUTBC28",154,0)
114 ;;12124
"RTN","RGUTBC28",155,0)
115 ;;11421
"RTN","RGUTBC28",156,0)
116 ;;12411
"RTN","RGUTBC28",157,0)
117 ;;12421
"RTN","RGUTBC28",158,0)
118 ;;41121
"RTN","RGUTBC28",159,0)
119 ;;42111
"RTN","RGUTBC28",160,0)
120 ;;42121
"RTN","RGUTBC28",161,0)
121 ;;21214
"RTN","RGUTBC28",162,0)
122 ;;21412
"RTN","RGUTBC28",163,0)
123 ;;41212
"RTN","RGUTBC28",164,0)
124 ;;11114
"RTN","RGUTBC28",165,0)
125 ;;11134
"RTN","RGUTBC28",166,0)
126 ;;13114
"RTN","RGUTBC28",167,0)
127 ;;11411
"RTN","RGUTBC39")
0^66^B7717700
"RTN","RGUTBC39",1,0)
RGUTBC39 ;RG/IND/PLS - Converts barcode 39 to HPCL-compatible format ;04-May-2006 08:19;DKM
"RTN","RGUTBC39",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTBC39",3,0)
 ;;
"RTN","RGUTBC39",4,0)
 ;=================================================================
"RTN","RGUTBC39",5,0)
 ; Inputs:
"RTN","RGUTBC39",6,0)
 ;   TXT = Data string to print in bar code
"RTN","RGUTBC39",7,0)
 ;   ORN = Orientation of bar code/Check Digit
"RTN","RGUTBC39",8,0)
 ;         0 = portrait/no check digit(default)
"RTN","RGUTBC39",9,0)
 ;         1 = landscape/no check digit
"RTN","RGUTBC39",10,0)
 ;         2 = portrait/check digit
"RTN","RGUTBC39",11,0)
 ;         3 = landscape/check digit
"RTN","RGUTBC39",12,0)
 ;   HGT = Height of bar code in dots (1/300 inch)
"RTN","RGUTBC39",13,0)
 ;   HOR = Horizontal position on page in dots
"RTN","RGUTBC39",14,0)
 ;   VER = Vertical position on page in dots
"RTN","RGUTBC39",15,0)
 ;   WID = Width of bar in dots (3=default)
"RTN","RGUTBC39",16,0)
 ; Purpose:
"RTN","RGUTBC39",17,0)
 ;   Accepts a barcode 39 string and writes an HPCL-compatible
"RTN","RGUTBC39",18,0)
 ;   string that will display the barcode on an HP laser printer.
"RTN","RGUTBC39",19,0)
 ;   A barcode font cartridge is not required.  The print position
"RTN","RGUTBC39",20,0)
 ;   on entry is restored upon exit.
"RTN","RGUTBC39",21,0)
 ;=================================================================
"RTN","RGUTBC39",22,0)
BC(TXT,ORN,HGT,HOR,VER,WID) ;
"RTN","RGUTBC39",23,0)
 N DD,CHK,CH,ZDD,C,P,Z1,Z2,Z3,Z4,Z5,X
"RTN","RGUTBC39",24,0)
 S X=0 X ^%ZOSF("RM")
"RTN","RGUTBC39",25,0)
 S CHK=$S($G(ORN)>1:1,1:0),ORN=$S($G(ORN)#2:1,1:0)
"RTN","RGUTBC39",26,0)
 S TXT=$TR(TXT,"*",""),CH="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+Z"
"RTN","RGUTBC39",27,0)
 S DD="" F ZDD=1:1:$L(TXT) S DD=DD_$S(CH[$E(TXT,ZDD):$E(TXT,ZDD),1:"") ;STRIP UNPRINTABLE CHARACTERS
"RTN","RGUTBC39",28,0)
 S TXT=DD I +$G(CHK) S TXT=$$CHK(TXT)                             ;ADD CHECKSUM CHARACTER
"RTN","RGUTBC39",29,0)
 S TXT="*"_TXT_"*"                                                     ;ADD START AND STOP CODES
"RTN","RGUTBC39",30,0)
 S C=$C(27)_"*c",P=$C(27)_"*p+",WID=$G(WID,3),HGT=$G(HGT,60),ORN=''$G(ORN)+1
"RTN","RGUTBC39",31,0)
 W $C(27),"&f0S"                                                       ;Push cursor position
"RTN","RGUTBC39",32,0)
 W:$D(HOR) $C(27)_"*p"_+HOR_"X"
"RTN","RGUTBC39",33,0)
 W:$D(VER) $C(27)_"*p"_+VER_"Y"
"RTN","RGUTBC39",34,0)
 W C_HGT_$E("BA",ORN)
"RTN","RGUTBC39",35,0)
 F Z=1:1:$L(TXT) D
"RTN","RGUTBC39",36,0)
 .S Z1=$S($E(TXT,Z)="*":$P($T(99),";",4),1:$P($T(@($F(CH,$E(TXT,Z))-2)),";",4)),Z4=15,Z5=0
"RTN","RGUTBC39",37,0)
 .F Z2=1:1:$L(Z1) D
"RTN","RGUTBC39",38,0)
 ..S Z3=+$E(Z1,Z2),Z4=Z4-Z3,Z3=Z3*WID
"RTN","RGUTBC39",39,0)
 ..Q:'Z3
"RTN","RGUTBC39",40,0)
 ..I Z2#2 W C_Z3_$E("ab",ORN)_"0P" S Z5=Z3
"RTN","RGUTBC39",41,0)
 ..E  W P_(Z3+Z5)_$E("XY",ORN) S Z5=0
"RTN","RGUTBC39",42,0)
 .S Z4=Z4*WID+Z5
"RTN","RGUTBC39",43,0)
 .W P_(Z5+WID)_$E("XY",ORN)
"RTN","RGUTBC39",44,0)
 W $C(27),"&f1S"                                                       ;Pop cursor position
"RTN","RGUTBC39",45,0)
 Q ""
"RTN","RGUTBC39",46,0)
CHK(X) ;CALCULATE CHECK DIGIT AND RETURN STRING TO PRINT
"RTN","RGUTBC39",47,0)
 Q:X="" ""
"RTN","RGUTBC39",48,0)
 N CHK,Y
"RTN","RGUTBC39",49,0)
 S CHK=0,Y=X
"RTN","RGUTBC39",50,0)
 F  Q:X=""  S CHK=$F(CH,$E(X))-2+CHK,X=$E(X,2,255)
"RTN","RGUTBC39",51,0)
 S CHK=$E(CH,CHK#43+1)
"RTN","RGUTBC39",52,0)
 Q Y_CHK
"RTN","RGUTBC39",53,0)
0 ;;0;111331311
"RTN","RGUTBC39",54,0)
1 ;;1;311311113
"RTN","RGUTBC39",55,0)
2 ;;2;113311113
"RTN","RGUTBC39",56,0)
3 ;;3;313311111
"RTN","RGUTBC39",57,0)
4 ;;4;111331113
"RTN","RGUTBC39",58,0)
5 ;;5;311331111
"RTN","RGUTBC39",59,0)
6 ;;6;113331111
"RTN","RGUTBC39",60,0)
7 ;;7;111311313
"RTN","RGUTBC39",61,0)
8 ;;8;311311311
"RTN","RGUTBC39",62,0)
9 ;;9;113311311
"RTN","RGUTBC39",63,0)
10 ;;A;311113113
"RTN","RGUTBC39",64,0)
11 ;;B;113113113
"RTN","RGUTBC39",65,0)
12 ;;C;313113111
"RTN","RGUTBC39",66,0)
13 ;;D;111133113
"RTN","RGUTBC39",67,0)
14 ;;E;311133111
"RTN","RGUTBC39",68,0)
15 ;;F;113133111
"RTN","RGUTBC39",69,0)
16 ;;G;111113313
"RTN","RGUTBC39",70,0)
17 ;;H;311113311
"RTN","RGUTBC39",71,0)
18 ;;I;113113311
"RTN","RGUTBC39",72,0)
19 ;;J;111133311
"RTN","RGUTBC39",73,0)
20 ;;K;311111133
"RTN","RGUTBC39",74,0)
21 ;;L;113111133
"RTN","RGUTBC39",75,0)
22 ;;M;313111131
"RTN","RGUTBC39",76,0)
23 ;;N;111131133
"RTN","RGUTBC39",77,0)
24 ;;O;311131131
"RTN","RGUTBC39",78,0)
25 ;;P;113131131
"RTN","RGUTBC39",79,0)
26 ;;Q;111111333
"RTN","RGUTBC39",80,0)
27 ;;R;311111331
"RTN","RGUTBC39",81,0)
28 ;;S;113111331
"RTN","RGUTBC39",82,0)
29 ;;T;111131331
"RTN","RGUTBC39",83,0)
30 ;;U;331111113
"RTN","RGUTBC39",84,0)
31 ;;V;133111113
"RTN","RGUTBC39",85,0)
32 ;;W;333111111
"RTN","RGUTBC39",86,0)
33 ;;X;131131113
"RTN","RGUTBC39",87,0)
34 ;;Y;331131111
"RTN","RGUTBC39",88,0)
35 ;;Z;133131111
"RTN","RGUTBC39",89,0)
36 ;;-;131111313
"RTN","RGUTBC39",90,0)
37 ;;.;331111311
"RTN","RGUTBC39",91,0)
38 ;; ;133111311
"RTN","RGUTBC39",92,0)
39 ;;$;131313111
"RTN","RGUTBC39",93,0)
40 ;;/;131311131
"RTN","RGUTBC39",94,0)
41 ;;+;131113131
"RTN","RGUTBC39",95,0)
42 ;;%;111313131
"RTN","RGUTBC39",96,0)
99 ;;*;131131311
"RTN","RGUTBCDA")
0^67^B8230455
"RTN","RGUTBCDA",1,0)
RGUTBCDA ;RG/IND/PLS - Converts barcode CODABAR to HPCL-compatible format ;04-May-2006 08:19;DKM
"RTN","RGUTBCDA",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTBCDA",3,0)
 ;;
"RTN","RGUTBCDA",4,0)
 ;=================================================================
"RTN","RGUTBCDA",5,0)
 ; Inputs:
"RTN","RGUTBCDA",6,0)
 ;   TXT = Data string to print in bar code
"RTN","RGUTBCDA",7,0)
 ;   ORN = Orientation of bar code/Check digit
"RTN","RGUTBCDA",8,0)
 ;         0 = portrait/no check digit(default)
"RTN","RGUTBCDA",9,0)
 ;         1 = landscape/no check digit
"RTN","RGUTBCDA",10,0)
 ;         2 = portrait/check digit
"RTN","RGUTBCDA",11,0)
 ;         3 = landscape/check digit
"RTN","RGUTBCDA",12,0)
 ;   HGT = Height of bar code in dots (1/300 inch)
"RTN","RGUTBCDA",13,0)
 ;   HOR = Horizontal position on page in dots
"RTN","RGUTBCDA",14,0)
 ;   VER = Vertical position on page in dots
"RTN","RGUTBCDA",15,0)
 ;   WID = Width of bar in dots (3=default)
"RTN","RGUTBCDA",16,0)
 ;   SSC = Start/Stop characters (a/a = default)
"RTN","RGUTBCDA",17,0)
 ; Purpose:
"RTN","RGUTBCDA",18,0)
 ;   Accepts a barcode CODABAR string and writes an HPCL-compatible
"RTN","RGUTBCDA",19,0)
 ;   string that will display the barcode on an HP laser printer.
"RTN","RGUTBCDA",20,0)
 ;   A barcode font cartridge is not required.  The print position
"RTN","RGUTBCDA",21,0)
 ;   on entry is restored upon exit.
"RTN","RGUTBCDA",22,0)
 ;=================================================================
"RTN","RGUTBCDA",23,0)
BC(TXT,ORN,HGT,HOR,VER,WID,SSC) ;
"RTN","RGUTBCDA",24,0)
 N DD,CHK,CH,ZDD,C,P,Z,Z1,Z2,Z3,Z4,Z5,X
"RTN","RGUTBCDA",25,0)
 S X=0 X ^%ZOSF("RM")
"RTN","RGUTBCDA",26,0)
 S CHK=$S($G(ORN)>1:1,1:0),ORN=$S($G(ORN)#2:1,1:0)
"RTN","RGUTBCDA",27,0)
 S CH="0123456789-$:/.+"
"RTN","RGUTBCDA",28,0)
 S DD="" F ZDD=1:1:$L(TXT) S DD=DD_$S(CH[$E(TXT,ZDD):$E(TXT,ZDD),1:"") ;STRIP UNPRINTABLE CHARACTERS
"RTN","RGUTBCDA",29,0)
 S TXT=DD,TXT="a"_TXT_"a"                                            ;ADD START AND STOP CODES
"RTN","RGUTBCDA",30,0)
 I +$G(CHK) S TXT=$$CHK(TXT)
"RTN","RGUTBCDA",31,0)
 S C=$C(27)_"*c",P=$C(27)_"*p+",WID=$G(WID,3),HGT=$G(HGT,60),ORN=''$G(ORN)+1
"RTN","RGUTBCDA",32,0)
 W $C(27),"&f0S"                                                       ;Push cursor position
"RTN","RGUTBCDA",33,0)
 W:$D(HOR) $C(27)_"*p"_+HOR_"X"
"RTN","RGUTBCDA",34,0)
 W:$D(VER) $C(27)_"*p"_+VER_"Y"
"RTN","RGUTBCDA",35,0)
 W C_HGT_$E("BA",ORN)
"RTN","RGUTBCDA",36,0)
 F Z=1:1:$L(TXT) D
"RTN","RGUTBCDA",37,0)
 .S Z1=$S("AaTt"[$E(TXT,Z):$P($T(16),";",4),"BbNn"[$E(TXT,Z):$P($T(17),";",4),"Cc*"[$E(TXT,Z):$P($T(18),";",4),"DdEe"[$E(TXT,Z):$P($T(19),";",4),1:$P($T(@($F(CH,$E(TXT,Z))-2)),";",4)),Z4=13,Z5=0
"RTN","RGUTBCDA",38,0)
 .F Z2=1:1:$L(Z1) D
"RTN","RGUTBCDA",39,0)
 ..S Z3=+$E(Z1,Z2),Z4=Z4-Z3,Z3=Z3*WID
"RTN","RGUTBCDA",40,0)
 ..Q:'Z3
"RTN","RGUTBCDA",41,0)
 ..I Z2#2 W C_Z3_$E("ab",ORN)_"0P" S Z5=Z3
"RTN","RGUTBCDA",42,0)
 ..E  W P_(Z3+Z5)_$E("XY",ORN) S Z5=0
"RTN","RGUTBCDA",43,0)
 .S Z4=Z4*WID+Z5
"RTN","RGUTBCDA",44,0)
 .W P_(Z5+WID)_$E("XY",ORN)
"RTN","RGUTBCDA",45,0)
 W $C(27),"&f1S"                                                       ;Pop cursor position
"RTN","RGUTBCDA",46,0)
 Q ""
"RTN","RGUTBCDA",47,0)
CHK(X) ;CALCULATE CHECK DIGIT AND RETURN STRING TO PRINT
"RTN","RGUTBCDA",48,0)
 Q:X="" ""
"RTN","RGUTBCDA",49,0)
 N Z1,Y,CHK,XX
"RTN","RGUTBCDA",50,0)
 S CHK=0,Y=X
"RTN","RGUTBCDA",51,0)
 S XX=$E(X,1)_$E(X,$L(X))                                             ;STRIP OFF S/S CODES AND CALCULATE CHECKSUM
"RTN","RGUTBCDA",52,0)
 F Z1=1:1:$L(XX) S CHK=CHK+$S("AaTt"[$E(XX,Z1):16,"BbNn"[$E(XX,Z1):17,"Cc*"[$E(XX,Z1):18,"DdEe"[$E(XX,Z1):19,1:0)
"RTN","RGUTBCDA",53,0)
 ;ADD TO CHECKSUM THE VALUES OF THE DATA
"RTN","RGUTBCDA",54,0)
 S X=$E(X,2,$L(X)-1) F  Q:X=""  S CHK=$F(CH,$E(X))-2+CHK,X=$E(X,2,255)
"RTN","RGUTBCDA",55,0)
 S CHK=$E(CH,$S('CHK#16:1,1:16-CHK#16+1))
"RTN","RGUTBCDA",56,0)
 Q $E(Y,1,$L(Y)-1)_CHK_$E(Y,$L(Y))
"RTN","RGUTBCDA",57,0)
0 ;;0;1111133
"RTN","RGUTBCDA",58,0)
1 ;;1;1111331
"RTN","RGUTBCDA",59,0)
2 ;;2;1113113
"RTN","RGUTBCDA",60,0)
3 ;;3;3311111
"RTN","RGUTBCDA",61,0)
4 ;;4;1131131
"RTN","RGUTBCDA",62,0)
5 ;;5;3111131
"RTN","RGUTBCDA",63,0)
6 ;;6;1311113
"RTN","RGUTBCDA",64,0)
7 ;;7;1311311
"RTN","RGUTBCDA",65,0)
8 ;;8;1331111
"RTN","RGUTBCDA",66,0)
9 ;;9;3113111
"RTN","RGUTBCDA",67,0)
10 ;;-;1113311
"RTN","RGUTBCDA",68,0)
11 ;;$;1133111
"RTN","RGUTBCDA",69,0)
12 ;;:;3111313
"RTN","RGUTBCDA",70,0)
13 ;;/;3131113
"RTN","RGUTBCDA",71,0)
14 ;;.;3131311
"RTN","RGUTBCDA",72,0)
15 ;;+;1131313
"RTN","RGUTBCDA",73,0)
16 ;;AaTt;1133131
"RTN","RGUTBCDA",74,0)
17 ;;BbNn;1313113
"RTN","RGUTBCDA",75,0)
18 ;;Cc*;1113133
"RTN","RGUTBCDA",76,0)
19 ;;DdEe;1113331
"RTN","RGUTBIG")
0^34^B14928339
"RTN","RGUTBIG",1,0)
RGUTBIG ;RG/IND/PLS - Print a banner in large letters;04-May-2006 08:19;DKM
"RTN","RGUTBIG",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTBIG",3,0)
 ;;
"RTN","RGUTBIG",4,0)
 ;=================================================================
"RTN","RGUTBIG",5,0)
 ; Prints CIABIG to the current output device in large letters.
"RTN","RGUTBIG",6,0)
 ; Inputs:
"RTN","RGUTBIG",7,0)
 ;   CIABIG = Big letter string
"RTN","RGUTBIG",8,0)
 ;   CIARPT = # times to repeat (default=2)
"RTN","RGUTBIG",9,0)
 ;   CIATXT = Full text string (optional)
"RTN","RGUTBIG",10,0)
 ;=================================================================
"RTN","RGUTBIG",11,0)
ENTRY(CIABIG,CIARPT,CIATXT) ;
"RTN","RGUTBIG",12,0)
 N CIALT,CIAFS,CIAZ,CIAZ1,CIALEN,CIAPF,CIALN
"RTN","RGUTBIG",13,0)
 S CIAFS="ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789,-/.!#'$()*+?\=^&%"
"RTN","RGUTBIG",14,0)
 S:$D(CIATXT) CIATXT=$$REPEAT^XLFSTR("*"_CIATXT,$G(IOM,80)\($L(CIATXT)+1))
"RTN","RGUTBIG",15,0)
 S CIALEN=$L(CIABIG),CIARPT=$G(CIARPT,2)
"RTN","RGUTBIG",16,0)
 W !
"RTN","RGUTBIG",17,0)
 F CIALT=1:1:CIARPT D
"RTN","RGUTBIG",18,0)
 .W !
"RTN","RGUTBIG",19,0)
 .F CIAZ=1:8:65 D
"RTN","RGUTBIG",20,0)
 ..W !
"RTN","RGUTBIG",21,0)
 ..F CIAZ1=1:1:CIALEN D
"RTN","RGUTBIG",22,0)
 ...S CIALN=$F(CIAFS,$E(CIABIG,CIAZ1))-1
"RTN","RGUTBIG",23,0)
 ...S CIAPF=$P($T(TBL+CIALN),";;",2,99)
"RTN","RGUTBIG",24,0)
 ...W $E(CIAPF,CIAZ,CIAZ+7)
"RTN","RGUTBIG",25,0)
 ...W:CIAZ1<CIALEN ?(CIAZ1*12)
"RTN","RGUTBIG",26,0)
 .W !!,$G(CIATXT)
"RTN","RGUTBIG",27,0)
 Q
"RTN","RGUTBIG",28,0)
TBL ;; Table of character "raster images"
"RTN","RGUTBIG",29,0)
 ;; AAAAAA AA    AAAA    AAAAAAAAAAAAAAAAAAAA    AAAA    AAAA    AA
"RTN","RGUTBIG",30,0)
 ;;BBBBBBB BB    BBBB    BBBBBBBBB BBBBBBB BB    BBBB    BBBBBBBBB
"RTN","RGUTBIG",31,0)
 ;;CCCCCCCCCC      CC      CC      CC      CC      CC      CCCCCCCC
"RTN","RGUTBIG",32,0)
 ;;DDDDDD  DD   DD DD    DDDD    DDDD    DDDD    DDDD   DD DDDDDD
"RTN","RGUTBIG",33,0)
 ;;EEEEEEEEEE      EE      EEEEEE  EEEEEE  EE      EE      EEEEEEEE
"RTN","RGUTBIG",34,0)
 ;;FFFFFFFFFF      FF      FFFFFF  FFFFFF  FF      FF      FF
"RTN","RGUTBIG",35,0)
 ;;GGGGGGGGGG      GG      GG  GGGGGG  GGGGGG    GGGG    GGGGGGGGGG
"RTN","RGUTBIG",36,0)
 ;;HH    HHHH    HHHH     HHHHHHHHHHHHHHHHHHH    HHHH    HHHH    HH
"RTN","RGUTBIG",37,0)
 ;;IIIIIIII   II      II      II      II      II      II   IIIIIIII
"RTN","RGUTBIG",38,0)
 ;;JJJJJJJJ    JJ      JJ      JJ      JJ      JJ  JJ  JJ  JJJJJJ
"RTN","RGUTBIG",39,0)
 ;;KK    KKKK   KK KK  KK  KKKK    KKKK    KK  KK  KK   KK KK    KK
"RTN","RGUTBIG",40,0)
 ;;LL      LL      LL      LL      LL      LL      LL      LLLLLLLL
"RTN","RGUTBIG",41,0)
 ;;MM    MMMMM  MMMM MMMM MMM MM MMMM    MMMM    MMMM    MMMM    MM
"RTN","RGUTBIG",42,0)
 ;;N     NNNN    NNNNN   NNNN N  NNNN  N NNNN   NNNNN    NNNN     N
"RTN","RGUTBIG",43,0)
 ;; OOOOOO OO    OOOO    OOOO    OOOO    OOOO    OOOO    OO OOOOOO
"RTN","RGUTBIG",44,0)
 ;;PPPPPPP PP    PPPP    PPPPPPPPP PP      PP      PP      PP
"RTN","RGUTBIG",45,0)
 ;; QQQQQQ QQ    QQQQ    QQQQ    QQQQ  Q QQQQ   Q Q QQQQQQ        Q
"RTN","RGUTBIG",46,0)
 ;;RRRRRRR RR    RRRR    RRRRRRRRR RR RR   RR  RR  RR   RR RR    RR
"RTN","RGUTBIG",47,0)
 ;;SSSSSSSSSS      SS      SSSSSSSSSSSSSSSS      SS      SSSSSSSSSS
"RTN","RGUTBIG",48,0)
 ;;TTTTTTTT   TT      TT      TT      TT      TT      TT      TT
"RTN","RGUTBIG",49,0)
 ;;UU    UUUU    UUUU    UUUU    UUUU    UUUU    UUUUUUUUUU UUUUUU
"RTN","RGUTBIG",50,0)
 ;;VV    VVVV    VVVV    VVVV    VV VV  VV  VV  VV   VVVV     VV
"RTN","RGUTBIG",51,0)
 ;;WW    WWWW    WWWW    WWWW    WWWW    WWWW WW WWWWW  WWWWW    WW
"RTN","RGUTBIG",52,0)
 ;;XX    XXXX    XX XX  XX   XXXX     XX     XXXX   XX  XX XX    XX
"RTN","RGUTBIG",53,0)
 ;;YY    YY YY  YY   Y  Y     YY      YY      YY      YY      YY
"RTN","RGUTBIG",54,0)
 ;;ZZZZZZZZZZZZZZZZ     ZZ     ZZ    ZZ      ZZ    ZZZZZZZZZZZZZZZZ
"RTN","RGUTBIG",55,0)
 ;;
"RTN","RGUTBIG",56,0)
 ;;  0000 0 00  00 00   00000  0 0000 0  00000   00 00  00 0 0000
"RTN","RGUTBIG",57,0)
 ;;   11     111    1111      11      11      11      11   1111111
"RTN","RGUTBIG",58,0)
 ;;  2222   22  22 22    22      22    22    22     22     2222222
"RTN","RGUTBIG",59,0)
 ;;3333333      33     33   33333       33       33     33 33333
"RTN","RGUTBIG",60,0)
 ;;      44     444   44 44 44   44 4444444      44      44      44
"RTN","RGUTBIG",61,0)
 ;;5555555555      55      5555555       55      55     55 555555
"RTN","RGUTBIG",62,0)
 ;;   666   66  66 66      66      66 6666 666   66 66   66  6666
"RTN","RGUTBIG",63,0)
 ;;77777777      77     77    77      77     77     77      77
"RTN","RGUTBIG",64,0)
 ;;  8888   88  88 88  88   8888   88  88  88    88 88  88   8888
"RTN","RGUTBIG",65,0)
 ;;  99999 99    9999    99 9999999      99      99     99   9999
"RTN","RGUTBIG",66,0)
 ;;                                         ''        '      '
"RTN","RGUTBIG",67,0)
 ;;                        ----------------
"RTN","RGUTBIG",68,0)
 ;;              //     //     //    //      //      //
"RTN","RGUTBIG",69,0)
 ;;                                         ....    ....    ....
"RTN","RGUTBIG",70,0)
 ;;    !!     !!      !!      !!     !!               ....    ....
"RTN","RGUTBIG",71,0)
 ;;  #  #  ########  #  #  ########  #  #
"RTN","RGUTBIG",72,0)
 ;;
"RTN","RGUTBIG",73,0)
 ;;   $$   $$$$$$$$$$ $$   $$$$$$$$   $$ $$$$$$$$$$   $$
"RTN","RGUTBIG",74,0)
 ;;   ((     ((     ((     ((      ((       ((       ((
"RTN","RGUTBIG",75,0)
 ;;   ))      ))        ))       ))      ))     ))     ))    ))
"RTN","RGUTBIG",76,0)
 ;;*  **  * * ** *   ****  ********  ****   * ** * *  **  *
"RTN","RGUTBIG",77,0)
 ;;           ++      ++   ++++++++++++++++   ++      ++
"RTN","RGUTBIG",78,0)
 ;;  ???   ??   ??      ??     ??     ??      ??     ....    ....
"RTN","RGUTBIG",79,0)
 ;;         \\       \\       \\       \\       \\       \\
"RTN","RGUTBIG",80,0)
 ;;        ================       =================
"RTN","RGUTBIG",81,0)
 ;;    ^      ^^^    ^^ ^^  ^^   ^^
"RTN","RGUTBIG",82,0)
 ;; &&&    &   &   &   &    &&&  &  &&& && &   &&  &   &&   &&&   &
"RTN","RGUTBIG",83,0)
 ;;  %    % % %  %   %  %      %      %      %  %   %  % % %     %
"RTN","RGUTDAT")
0^35^B13607562
"RTN","RGUTDAT",1,0)
RGUTDAT ;RG/IND/DKM - Date range input;20-Jan-2015 13:23;DKM
"RTN","RGUTDAT",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTDAT",3,0)
 ;;
"RTN","RGUTDAT",4,0)
 ;=================================================================
"RTN","RGUTDAT",5,0)
 ; Prompt for date range (normal format)
"RTN","RGUTDAT",6,0)
NORMAL D D1("P1"),D2("P2"):CIADAT1
"RTN","RGUTDAT",7,0)
 Q
"RTN","RGUTDAT",8,0)
 ; Prompt for date range (inverse format)
"RTN","RGUTDAT",9,0)
INVRSE D D1("PI1"),D2("PI2"):CIADAT1
"RTN","RGUTDAT",10,0)
 Q
"RTN","RGUTDAT",11,0)
 ; Prompt for starting date
"RTN","RGUTDAT",12,0)
D1(CIAOPT) ;
"RTN","RGUTDAT",13,0)
 S CIADAT1=$$ENTRY("Start date: ",.CIAOPT,"",0,$Y)
"RTN","RGUTDAT",14,0)
 Q
"RTN","RGUTDAT",15,0)
 ; Prompt for ending date
"RTN","RGUTDAT",16,0)
D2(CIAOPT) ;
"RTN","RGUTDAT",17,0)
 S CIADAT2=$$ENTRY("End date  : ",.CIAOPT,"",0,$Y+1)
"RTN","RGUTDAT",18,0)
 Q
"RTN","RGUTDAT",19,0)
 ; Prompt for a date
"RTN","RGUTDAT",20,0)
ENTRY(%CIAP,%CIAOPT,%CIADAT,%CIAX,%CIAY,%CIATRP,%CIAHLP) ;
"RTN","RGUTDAT",21,0)
 N %CIAD,%CIAI,%CIADT,%CIAZ,%CIADISV
"RTN","RGUTDAT",22,0)
 S %CIAX=$G(%CIAX,$X),%CIAY=$G(%CIAY,$Y),DUZ=+$G(DUZ),DTIME=$G(DTIME,999999),%CIAOPT=$$UP^XLFSTR($G(%CIAOPT)),%CIADISV=""
"RTN","RGUTDAT",23,0)
 S %CIATRP=$G(%CIATRP),%CIADAT=$G(%CIADAT)
"RTN","RGUTDAT",24,0)
 S:$G(%CIAHLP)="" %CIAHLP="HELP^RGUTDAT"
"RTN","RGUTDAT",25,0)
 S:$G(%CIAP)="" %CIAP="Enter date: "
"RTN","RGUTDAT",26,0)
 F %CIAZ=0:1:9 I %CIAOPT[%CIAZ S %CIADISV="CIADAT"_%CIAZ Q
"RTN","RGUTDAT",27,0)
DAT1 S %CIADT="",@$$TRAP^RGUTOS("DAT1^RGUTDAT")
"RTN","RGUTDAT",28,0)
 F %CIAZ="P","T","F","X" S:%CIAOPT[%CIAZ %CIADT=%CIADT_%CIAZ
"RTN","RGUTDAT",29,0)
 F  D  Q:$D(%CIAI)
"RTN","RGUTDAT",30,0)
 .W $$XY^RGUT(%CIAX,%CIAY)_%CIAP,*27,"[J"
"RTN","RGUTDAT",31,0)
 .S $X=%CIAX+$L(%CIAP)
"RTN","RGUTDAT",32,0)
 .I %CIAOPT["E" S %CIAI=$$ENTRY^RGUTEDT(%CIADAT,79-$X,$X,$Y,"","R")
"RTN","RGUTDAT",33,0)
 .E  I %CIADAT'="" S %CIAI=%CIADAT,%CIADAT=""
"RTN","RGUTDAT",34,0)
 .E  R %CIAI:DTIME
"RTN","RGUTDAT",35,0)
 .I $E(%CIAI)="?" D  Q
"RTN","RGUTDAT",36,0)
 ..W !
"RTN","RGUTDAT",37,0)
 ..I %CIAI["??" D HELP
"RTN","RGUTDAT",38,0)
 ..E  D @%CIAHLP
"RTN","RGUTDAT",39,0)
 ..D PAUSE()
"RTN","RGUTDAT",40,0)
 ..K %CIAI
"RTN","RGUTDAT",41,0)
 .I %CIAI=" " S %CIAI=$S(%CIADISV="":"",1:$G(^DISV(DUZ,%CIADISV))) K:%CIAI="" CIAZ1
"RTN","RGUTDAT",42,0)
 .W $$XY^RGUT(%CIAX+$L(%CIAP),%CIAY),*27,"[K"
"RTN","RGUTDAT",43,0)
 I %CIAI="",%CIATRP'="" S %CIAI=$G(@%CIATRP@(" "))
"RTN","RGUTDAT",44,0)
 S %CIAI=$$UP^XLFSTR(%CIAI),%CIAD=""
"RTN","RGUTDAT",45,0)
 Q:"^^"[%CIAI -$L(%CIAI)
"RTN","RGUTDAT",46,0)
 I %CIATRP'="" D  I %CIAD'="" S %CIAOPT=$TR(%CIAOPT,"I") G DAT2
"RTN","RGUTDAT",47,0)
 .I $D(@%CIATRP@(%CIAI)) S %CIAD=@%CIATRP@(%CIAI)
"RTN","RGUTDAT",48,0)
 .E  D
"RTN","RGUTDAT",49,0)
 ..N X
"RTN","RGUTDAT",50,0)
 ..S X=%CIAI,%CIAZ=""
"RTN","RGUTDAT",51,0)
 ..F  S %CIAZ=$O(@%CIATRP@("?",%CIAZ)) Q:%CIAZ=""  I %CIAI?@%CIAZ D  Q
"RTN","RGUTDAT",52,0)
 ...S %CIAD=$$MSG^RGUT($G(@%CIATRP@("?",%CIAZ)))
"RTN","RGUTDAT",53,0)
 S %CIAI=$$DT^RGUT(%CIAI,%CIADT)
"RTN","RGUTDAT",54,0)
 G:%CIAI=-1 DAT1
"RTN","RGUTDAT",55,0)
 I %CIAOPT["+",%CIAI<$S(%CIAI=%CIAI\1:$$DT^XLFDT,1:$$NOW^XLFDT) D  G DAT1
"RTN","RGUTDAT",56,0)
 .D PAUSE("Must be on or after current date.")
"RTN","RGUTDAT",57,0)
 I %CIAOPT["-",%CIAI>$S(%CIAI=%CIAI\1:$$DT^XLFDT,1:$$NOW^XLFDT) D  G DAT1
"RTN","RGUTDAT",58,0)
 .D PAUSE("Must be on or before current date.")
"RTN","RGUTDAT",59,0)
 S %CIAD=$$ENTRY^RGUTDT(%CIAI)
"RTN","RGUTDAT",60,0)
DAT2 W %CIAD
"RTN","RGUTDAT",61,0)
 S:%CIADISV'="" ^DISV(DUZ,%CIADISV)=%CIAI
"RTN","RGUTDAT",62,0)
 Q $S(%CIAOPT["I":9999999-%CIAI,1:%CIAI)
"RTN","RGUTDAT",63,0)
HELP W ?2,"Enter a valid ",$S(%CIAOPT["+":"future ",%CIAOPT["-":"past ",1:""),"date using one of the following formats:",!!
"RTN","RGUTDAT",64,0)
 W ?5,"Format",?20,"Example",?35,"Explanation",?60,"Comments",!
"RTN","RGUTDAT",65,0)
 W ?5,"------",?20,"-------",?35,"-----------",?60,"--------",!
"RTN","RGUTDAT",66,0)
 W ?5,"mm/dd/yy",?20,"6/20/93",?35,"June 20, 1993",?60,"If you omit the",!
"RTN","RGUTDAT",67,0)
 W ?5,"dd-mmm-yy",?20,"27-JUL-58",?35,"July 27, 1958",?60,"year, the "_$S(%CIAOPT["P":"most",%CIAOPT["F":"closest",1:"current"),!
"RTN","RGUTDAT",68,0)
 W ?5,"mmddyy",?20,"070457",?35,"July 4, 1957",?60,$S(%CIAOPT["P":"recent past date",%CIAOPT["F":"future date",1:"calendar year"),!
"RTN","RGUTDAT",69,0)
 W ?5,"mmm dd yyyy",?20,"JAN 5, 1984",?35,"January 5, 1984",?60,"is assumed.",!
"RTN","RGUTDAT",70,0)
 W ?5,"T-n",?20,"T-5",?35,"Today's date - 5 days.",!!
"RTN","RGUTDAT",71,0)
 Q
"RTN","RGUTDAT",72,0)
PAUSE(%CIAZ) ;
"RTN","RGUTDAT",73,0)
 W $$XY^RGUT(0,22),$G(%CIAZ)
"RTN","RGUTDAT",74,0)
 I $$PAUSE^RGUT
"RTN","RGUTDAT",75,0)
 Q
"RTN","RGUTDDR")
0^62^B59431447
"RTN","RGUTDDR",1,0)
RGUTDDR ;RG/IND/DKM - FileMan RPC Extensions ;04-May-2006 08:19;DKM
"RTN","RGUTDDR",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTDDR",3,0)
 ;;
"RTN","RGUTDDR",4,0)
 ;=================================================================
"RTN","RGUTDDR",5,0)
 ; RPC: Retrieve DD information about a file.
"RTN","RGUTDDR",6,0)
 ; FNUM = File # or name
"RTN","RGUTDDR",7,0)
 ; FLDS = Semi-colon delimited field list (optional)
"RTN","RGUTDDR",8,0)
 ; IENS = IENS (for subfile entries)
"RTN","RGUTDDR",9,0)
 ; FLGS = Control flags:
"RTN","RGUTDDR",10,0)
 ;   D = Fix duplicate field names
"RTN","RGUTDDR",11,0)
 ;   M = Retrieve multiples
"RTN","RGUTDDR",12,0)
 ; Return data:
"RTN","RGUTDDR",13,0)
 ;  DATA(0)   = -1^Error text or
"RTN","RGUTDDR",14,0)
 ;            = File #^File name^Rec count^Field count^Readonly^Parent File
"RTN","RGUTDDR",15,0)
 ;  DATA(n)   = Field #^Field name^Datatype^Size^Required^Readonly^Help lines^Xref^Calculated
"RTN","RGUTDDR",16,0)
 ;  DATA(n,0) = Supplemental data (set mappings)
"RTN","RGUTDDR",17,0)
 ;  DATA(n,1) = Prompt Text
"RTN","RGUTDDR",18,0)
 ;  DATA(n,2) = Help Text
"RTN","RGUTDDR",19,0)
GETDD(DATA,FNUM,FLDS,IENS,FLGS) ;
"RTN","RGUTDDR",20,0)
 N X,Y,Z,CNT,N0,FLD,PF,MULT,DUPS
"RTN","RGUTDDR",21,0)
 S DATA=$NA(^TMP("RGUTDDR",$J))
"RTN","RGUTDDR",22,0)
 K @DATA
"RTN","RGUTDDR",23,0)
 S FNUM=$G(FNUM),FLDS=$G(FLDS),FLGS=$G(FLGS),MULT=FLGS["M",DUPS=FLGS["D"
"RTN","RGUTDDR",24,0)
 I $L(FNUM),FNUM'=+FNUM D
"RTN","RGUTDDR",25,0)
 .S FNUM=$O(^DIC("B",FNUM,0))
"RTN","RGUTDDR",26,0)
 .I FNUM,$O(^(FNUM)) S FNUM=""
"RTN","RGUTDDR",27,0)
 S X=$$ROOT^DILFD(FNUM,$G(IENS),1),PF=$G(^DD(+FNUM,0,"UP"))
"RTN","RGUTDDR",28,0)
 S:$L(X) X=$G(@X@(0))
"RTN","RGUTDDR",29,0)
 S:PF $P(X,U)=$P($G(^DD(+FNUM,0)),U)
"RTN","RGUTDDR",30,0)
 I '$L(X) D SETERR("Table not found") Q
"RTN","RGUTDDR",31,0)
 S N0=FNUM_U_$P(X,U)_U_$P(X,U,4),CNT=0
"RTN","RGUTDDR",32,0)
 F X=1:1:$L(FLDS,";") D  Q:'X
"RTN","RGUTDDR",33,0)
 .S FLD=$P(FLDS,";",X)
"RTN","RGUTDDR",34,0)
 .Q:'$L(FLD)
"RTN","RGUTDDR",35,0)
 .S:FLD="*" FLD="0-9999999999999999"
"RTN","RGUTDDR",36,0)
 .I $TR(FLD,".")?1.N1"-"1.N D
"RTN","RGUTDDR",37,0)
 ..S Z=+$P(FLD,"-"),Y=+$P(FLD,"-",2)
"RTN","RGUTDDR",38,0)
 ..S:Z<0 Z=0
"RTN","RGUTDDR",39,0)
 ..I Z=0 S:'$$GETFL(0,0) X=0
"RTN","RGUTDDR",40,0)
 ..I Z>0,$D(^DD(FNUM,Z,0)) S:'$$GETFL(Z,MULT) X=0
"RTN","RGUTDDR",41,0)
 ..F  Q:'X  S Z=$O(^DD(FNUM,Z)) Q:'Z  Q:Z>Y  S:'$$GETFL(Z,MULT) X=0
"RTN","RGUTDDR",42,0)
 .E  I '$$GETFL(FLD,1) S X=0
"RTN","RGUTDDR",43,0)
 S:X @DATA@(0)=N0_U_CNT_U_($P($G(^DD(FNUM,0,"DI")),U,2)["Y")_U_PF
"RTN","RGUTDDR",44,0)
 Q
"RTN","RGUTDDR",45,0)
 ; Setup type info for field
"RTN","RGUTDDR",46,0)
 ;  FLDX = Field # or name
"RTN","RGUTDDR",47,0)
 ;  MULT = Allow multiples
"RTN","RGUTDDR",48,0)
 ; Note: Datatype (TP) maps to TFMFieldType enum:
"RTN","RGUTDDR",49,0)
 ;   0 = unknown, 1 = free text, 2 = numeric, 3 = boolean,
"RTN","RGUTDDR",50,0)
 ;   4 = date/time, 5 = wp, 6 = pointer, 7 = set, 8 = subfile
"RTN","RGUTDDR",51,0)
GETFL(FLDX,MULT) ;
"RTN","RGUTDDR",52,0)
 N X,Z,LN,TP,HC,DD,FLD,MLT,NAM
"RTN","RGUTDDR",53,0)
 S FLD=$$FLDNUM(FNUM,FLDX),MLT=0
"RTN","RGUTDDR",54,0)
 S DD=$S('$L(FLD):"",FLD:$G(^DD(FNUM,FLD,0)),1:"#^RICJ8,5"),X=$P(DD,U,2)
"RTN","RGUTDDR",55,0)
 I '$L(DD) D SETERR("Field not found: "_FLDX) Q 0
"RTN","RGUTDDR",56,0)
 I X,$P($G(^DD(X,.01,0)),U,2)'["W" S MLT=1
"RTN","RGUTDDR",57,0)
 I 'MULT,MLT Q 1
"RTN","RGUTDDR",58,0)
 S (LN,TP,HC,Z)=0,DX="",NAM=$P(DD,U),CNT=CNT+1
"RTN","RGUTDDR",59,0)
 I DUPS,$O(^(+$O(^DD(FNUM,"B",NAM,0)))) S NAM=NAM_"("_FLD_")"
"RTN","RGUTDDR",60,0)
 I MLT S TP=8,DX=+X
"RTN","RGUTDDR",61,0)
 E  I X["B" S TP=3
"RTN","RGUTDDR",62,0)
 E  I X["D" S TP=4,DX=$P($P($P(DD,U,5),"%DT=",2),"""",2)
"RTN","RGUTDDR",63,0)
 E  I X["F"!(X["K") S TP=1,LN=+$P($P(DD,U,5),"$L(X)>",2) S:'LN LN=30
"RTN","RGUTDDR",64,0)
 E  I X["J" S TP=2,DX=$P(X,"J",2) S:DX'["," LN=DX,DX="",TP=1
"RTN","RGUTDDR",65,0)
 E  I X["P"!(X["p") S TP=6,DX=+$P($TR(X,"p","P"),"P",2),LN=$$GETLN(DX)
"RTN","RGUTDDR",66,0)
 E  I X["S" S TP=7,DX=$P(DD,U,3)
"RTN","RGUTDDR",67,0)
 E  I X=+X S TP=5
"RTN","RGUTDDR",68,0)
 I 'FLD S HC=1,@DATA@(CNT,2,HC)="Internal record number."
"RTN","RGUTDDR",69,0)
 E  F  S Z=$O(^DD(FNUM,FLD,21,Z)) Q:'Z  S HC=HC+1,@DATA@(CNT,2,HC)=^(Z,0)
"RTN","RGUTDDR",70,0)
 S @DATA@(CNT)=FLD_U_NAM_U_TP_U_LN_U_(X["R")_U_(X["I")_U_HC_U_$$XREF(FNUM,FLD)_U_(X["C")
"RTN","RGUTDDR",71,0)
 S @DATA@(CNT,0)=DX,@DATA@(CNT,1)=$G(^DD(FNUM,FLD,3))
"RTN","RGUTDDR",72,0)
 Q 1
"RTN","RGUTDDR",73,0)
 ; Get length of .01 for file
"RTN","RGUTDDR",74,0)
GETLN(FNUM) ;
"RTN","RGUTDDR",75,0)
 N DD,X
"RTN","RGUTDDR",76,0)
 S DD=$G(^DD(FNUM,.01,0)),X=$P(DD,U,2)
"RTN","RGUTDDR",77,0)
 S X=+$S(X["P":$$GETLN(+$E(X,2,99)),X["F":$P($P(DD,U,5),"$L(X)>",2),1:0)
"RTN","RGUTDDR",78,0)
 Q $S(X:X,1:30)
"RTN","RGUTDDR",79,0)
SETERR(ERR) ;
"RTN","RGUTDDR",80,0)
 K @DATA
"RTN","RGUTDDR",81,0)
 S @DATA@(0)="-1^"_ERR
"RTN","RGUTDDR",82,0)
 Q
"RTN","RGUTDDR",83,0)
 ; RPC: RGUTDDR MOVETO
"RTN","RGUTDDR",84,0)
 ; Move to specified record (returns IEN only)
"RTN","RGUTDDR",85,0)
 ; FNUM: File #
"RTN","RGUTDDR",86,0)
 ; IEN : Current IEN
"RTN","RGUTDDR",87,0)
 ; DIR : 0 = current; 1 = next; 2 = prior
"RTN","RGUTDDR",88,0)
 ; IENS: Subfile IENS
"RTN","RGUTDDR",89,0)
 ; SCRN: Screens (optional)
"RTN","RGUTDDR",90,0)
 ; INDX: Index (optional)
"RTN","RGUTDDR",91,0)
 ; Returns IEN or <error code>^<error text>
"RTN","RGUTDDR",92,0)
MOVETO(DATA,FNUM,IEN,DIR,IENS,SCRN,INDX) ;
"RTN","RGUTDDR",93,0)
 N GBL,IDX,IDF,OK
"RTN","RGUTDDR",94,0)
 S GBL=$$ROOT^DILFD(FNUM,$G(IENS),1),DIR=+$G(DIR),INDX=$G(INDX)
"RTN","RGUTDDR",95,0)
 S DIR=$S(DIR=1:1,DIR=2:-1,1:0)
"RTN","RGUTDDR",96,0)
 S:$L($G(SCRN)) SCRN(-1)=SCRN
"RTN","RGUTDDR",97,0)
 I '$L(GBL) S DATA="-4^Table not found" Q
"RTN","RGUTDDR",98,0)
 I $L(INDX) D  Q:$G(DATA)
"RTN","RGUTDDR",99,0)
 .I '$O(^DD(FNUM,0,"IX",INDX,"")) S DATA="-5^Index "_INDX_" not found" Q
"RTN","RGUTDDR",100,0)
 .S IDF=$$XREFFLD(FNUM,INDX)
"RTN","RGUTDDR",101,0)
 .I 'IDF S DATA="-6^Index "_INDX_" is not a standard index" Q
"RTN","RGUTDDR",102,0)
 .S IDX=$S(IEN=-1:"",IEN=-2:$C(255),1:$E($$FLDVAL(FNUM,IDF,IEN,GBL),1,30))
"RTN","RGUTDDR",103,0)
 E  S IEN=$S(IEN=-1:0,IEN=-2:$O(@GBL@($C(1)),-1)+1,1:+IEN)
"RTN","RGUTDDR",104,0)
 F  D  Q:OK!'IEN
"RTN","RGUTDDR",105,0)
 .S IEN=+$$NXTIEN
"RTN","RGUTDDR",106,0)
 .;S OK=IEN&(IEN\1=IEN)&$D(@GBL@(IEN,0)),SCRN=""
"RTN","RGUTDDR",107,0)
 .S OK=IEN&$D(@GBL@(IEN,0)),SCRN=""
"RTN","RGUTDDR",108,0)
 .F  Q:'OK  S SCRN=$O(SCRN(SCRN)) Q:'$L(SCRN)  D
"RTN","RGUTDDR",109,0)
 ..N Y
"RTN","RGUTDDR",110,0)
 ..S Y=IEN
"RTN","RGUTDDR",111,0)
 ..I $D(@GBL@(Y,0))
"RTN","RGUTDDR",112,0)
 ..X SCRN(SCRN)
"RTN","RGUTDDR",113,0)
 ..S OK=$T
"RTN","RGUTDDR",114,0)
 .I 'OK,'DIR S IEN=0
"RTN","RGUTDDR",115,0)
 S DATA=$S(OK:IEN,'DIR:"-3^Record not found",DIR=1:"-2^End of file",1:"-1^Beginning of file")
"RTN","RGUTDDR",116,0)
 Q
"RTN","RGUTDDR",117,0)
 ; Return next IEN
"RTN","RGUTDDR",118,0)
NXTIEN() Q:'DIR IEN
"RTN","RGUTDDR",119,0)
 Q:'$L(INDX) $O(@GBL@(IEN),DIR)
"RTN","RGUTDDR",120,0)
 N OK
"RTN","RGUTDDR",121,0)
 F  D  Q:OK!'$L(IDX)
"RTN","RGUTDDR",122,0)
 .S:IEN'>0 IDX=$O(@GBL@(INDX,IDX),DIR),IEN=""
"RTN","RGUTDDR",123,0)
 .S IEN=$S($L(IDX):$O(@GBL@(INDX,IDX,IEN),DIR),1:0)
"RTN","RGUTDDR",124,0)
 .;S OK=$S('IEN:0,1:$E($$FLDVAL(FNUM,IDF,IEN,GBL),1,30)=IDX)
"RTN","RGUTDDR",125,0)
 .S OK=$S('IEN:0,1:$D(@GBL@(IEN,0)))
"RTN","RGUTDDR",126,0)
 Q IEN
"RTN","RGUTDDR",127,0)
 ; Return field value (internal)
"RTN","RGUTDDR",128,0)
 ;  FIL  = File or subfile #
"RTN","RGUTDDR",129,0)
 ;  FLD  = Field #
"RTN","RGUTDDR",130,0)
 ;  IEN  = Record #
"RTN","RGUTDDR",131,0)
 ;  ROOT = Global root of file or subfile, or IENS of subfile
"RTN","RGUTDDR",132,0)
FLDVAL(FIL,FLD,IEN,ROOT) ;
"RTN","RGUTDDR",133,0)
 I FLD=0!(FLD="#") Q IEN
"RTN","RGUTDDR",134,0)
 N PC,ND,DD
"RTN","RGUTDDR",135,0)
 S:FLD'=+FLD FLD=+$O(^DD(FIL,"B",FLD,0))
"RTN","RGUTDDR",136,0)
 S DD=$G(^DD(FIL,FLD,0))
"RTN","RGUTDDR",137,0)
 Q:$P(DD,U,2)["C" $$GET1^DIQ(FIL,IEN_","_$P(ROOT,",",2,999),FLD,"I")
"RTN","RGUTDDR",138,0)
 S ND=$P(DD,U,4),PC=$P(ND,";",2),ND=$P(ND,";")
"RTN","RGUTDDR",139,0)
 S:$E(ROOT)'=U ROOT=$$ROOT^DILFD(FIL,ROOT,1)
"RTN","RGUTDDR",140,0)
 Q $S('$L(ND):"",1:$P($G(@ROOT@(IEN,ND)),U,PC))
"RTN","RGUTDDR",141,0)
 ; RPC: Lock/unlock a record
"RTN","RGUTDDR",142,0)
 ;   FNUM = File #
"RTN","RGUTDDR",143,0)
 ;   IENS = Record # (IENS format)
"RTN","RGUTDDR",144,0)
 ;   WAIT = If >=0, seconds to wait for lock.
"RTN","RGUTDDR",145,0)
 ;          If missing or null, perform unlock operation.
"RTN","RGUTDDR",146,0)
 ;   DATA = Returns 0 if successful, -n^Error Text if not.
"RTN","RGUTDDR",147,0)
LOCK(DATA,FNUM,IENS,WAIT) ;
"RTN","RGUTDDR",148,0)
 N X,IEN,OK,$ET
"RTN","RGUTDDR",149,0)
 S @$$TRAP^RGUTOS("LOCKERR^RGUTDDR")
"RTN","RGUTDDR",150,0)
 S $ET="",X=$$ROOT^DILFD(FNUM,IENS,1),DATA=0,IEN=+IENS
"RTN","RGUTDDR",151,0)
 I '$L(X) S DATA="-1^Table not found"  Q
"RTN","RGUTDDR",152,0)
 K:$G(WAIT)="" WAIT
"RTN","RGUTDDR",153,0)
 D LOCK^CIANBRPC(.OK,$NA(@X@(IEN)),.WAIT)
"RTN","RGUTDDR",154,0)
 S:'OK DATA="-2^Record locked by another process"
"RTN","RGUTDDR",155,0)
 Q
"RTN","RGUTDDR",156,0)
LOCKERR S DATA="-3^Unexpected error"
"RTN","RGUTDDR",157,0)
 Q
"RTN","RGUTDDR",158,0)
 ; RPC: Convert pointer internal<->external
"RTN","RGUTDDR",159,0)
CVTPTR(DATA,FNUM,VAL,EXT) ;
"RTN","RGUTDDR",160,0)
 I EXT S DATA=$$GET1^DIQ(FNUM,VAL,.01)
"RTN","RGUTDDR",161,0)
 E  D
"RTN","RGUTDDR",162,0)
 .N ROOT
"RTN","RGUTDDR",163,0)
 .S ROOT=$$ROOT^DILFD(FNUM,,1)
"RTN","RGUTDDR",164,0)
 .I '$L(ROOT) S DATA=""
"RTN","RGUTDDR",165,0)
 .E  I VAL?1"`"1.N D
"RTN","RGUTDDR",166,0)
 ..S VAL=+$E(VAL,2,999),DATA=$S('VAL:"",$D(@ROOT@(VAL,0))#2:VAL,1:"")
"RTN","RGUTDDR",167,0)
 .E  D
"RTN","RGUTDDR",168,0)
 ..N LP
"RTN","RGUTDDR",169,0)
 ..F LP=0:1:3 S DATA=$$CP(LP) Q:DATA
"RTN","RGUTDDR",170,0)
 Q
"RTN","RGUTDDR",171,0)
 ; Lookup value in "B" xref
"RTN","RGUTDDR",172,0)
CP(XFM) N RTN,LKP
"RTN","RGUTDDR",173,0)
 S LKP=$S(XFM#2:$E(VAL,1,30),1:VAL),LKP=$S(XFM\2:$$UP^XLFSTR(LKP),1:LKP),RTN=0
"RTN","RGUTDDR",174,0)
 F  S RTN=$O(@ROOT@("B",LKP,RTN)) Q:'RTN  Q:$P($G(@ROOT@(RTN,0)),U)=VAL
"RTN","RGUTDDR",175,0)
 Q RTN
"RTN","RGUTDDR",176,0)
 ; RPC: Find an entry using specified fields and values
"RTN","RGUTDDR",177,0)
 ;   FNUM = File number to search
"RTN","RGUTDDR",178,0)
 ;   IENS = IENS for subfile
"RTN","RGUTDDR",179,0)
 ;   FLGS = Search flags.  Combination of:
"RTN","RGUTDDR",180,0)
 ;       P = partial match
"RTN","RGUTDDR",181,0)
 ;       I = case insensitive
"RTN","RGUTDDR",182,0)
 ;   FLDS = Field #'s or names to search.  Can be ;-delimited or list.
"RTN","RGUTDDR",183,0)
 ;   VALS = Values to search.  Can be single value or list.
"RTN","RGUTDDR",184,0)
 ;   MAX  = Maximum entries to return (default=all)
"RTN","RGUTDDR",185,0)
 ;   Returns list of one or all IENs matching criteria or
"RTN","RGUTDDR",186,0)
 ;     -n^error text if error.
"RTN","RGUTDDR",187,0)
FIND(DATA,FNUM,IENS,FLGS,FLDS,VALS,MAX) ;
"RTN","RGUTDDR",188,0)
 N ROOT,QUIT,XRF,XKY,CNT,X
"RTN","RGUTDDR",189,0)
 S IENS=$G(IENS)
"RTN","RGUTDDR",190,0)
 I $L(IENS),$E(IENS)'="," S IENS=","_IENS
"RTN","RGUTDDR",191,0)
 S ROOT=$$ROOT^DILFD(FNUM,IENS,1),QUIT=0,FLGS=$G(FLGS),MAX=+$G(MAX),CNT=0
"RTN","RGUTDDR",192,0)
 S:$D(VALS)=1 VALS(1)=VALS
"RTN","RGUTDDR",193,0)
 I $D(FLDS)=1 F X=1:1:$L(FLDS,";") S FLDS(X)=$P(FLDS,";",X)
"RTN","RGUTDDR",194,0)
 F FLDS=0:0 S FLDS=$O(FLDS(FLDS)) Q:'FLDS  D  Q:QUIT
"RTN","RGUTDDR",195,0)
 .I '$D(VALS(FLDS)) S QUIT="-1^Not enough lookup values." Q
"RTN","RGUTDDR",196,0)
 .S X=$$FLDNUM(FNUM,FLDS(FLDS))
"RTN","RGUTDDR",197,0)
 .I '$L(X) S QUIT="-2^Unknown field "_FLDS(FLDS)_"." Q
"RTN","RGUTDDR",198,0)
 .S FLDS(FLDS)=X
"RTN","RGUTDDR",199,0)
 .I '$D(XRF) D
"RTN","RGUTDDR",200,0)
 ..S X=$$XREF(FNUM,X)
"RTN","RGUTDDR",201,0)
 ..S:$L(X) XRF=X,XKY=$S(FLGS["I":$$UP^XLFSTR(VALS(FLDS)),1:VALS(FLDS))
"RTN","RGUTDDR",202,0)
 I 'QUIT,'$D(XRF) S QUIT="-3^At least one field must be a key field."
"RTN","RGUTDDR",203,0)
 D:'QUIT FINDX
"RTN","RGUTDDR",204,0)
 I QUIT<0 K @DATA S @DATA@(0)=QUIT
"RTN","RGUTDDR",205,0)
 Q
"RTN","RGUTDDR",206,0)
FINDX G FINDN:XRF="#",FINDP:FLGS["P",FINDE
"RTN","RGUTDDR",207,0)
 ; Find by IEN
"RTN","RGUTDDR",208,0)
FINDN D FINDF(XKY)
"RTN","RGUTDDR",209,0)
 Q
"RTN","RGUTDDR",210,0)
 ; Find exact match
"RTN","RGUTDDR",211,0)
FINDE N XKT,IEN
"RTN","RGUTDDR",212,0)
 S IEN=0,XKT=$E(XKY,1,30)
"RTN","RGUTDDR",213,0)
 F  S IEN=$O(@ROOT@(XRF,XKT,IEN)) Q:'IEN  D  Q:QUIT
"RTN","RGUTDDR",214,0)
 .D FINDF(IEN)
"RTN","RGUTDDR",215,0)
 Q
"RTN","RGUTDDR",216,0)
 ; Partial match
"RTN","RGUTDDR",217,0)
FINDP N XKT,VAL,IEN,LEN
"RTN","RGUTDDR",218,0)
 S XKT=$E(XKY,1,30),VAL=XKT,LEN=$L(XKT)
"RTN","RGUTDDR",219,0)
 F  D  S VAL=$O(@ROOT@(XRF,VAL)) Q:$E(VAL,1,LEN)'=XKT!QUIT
"RTN","RGUTDDR",220,0)
 .S IEN=0
"RTN","RGUTDDR",221,0)
 .F  S IEN=$O(@ROOT@(XRF,VAL,IEN)) Q:'IEN  D  Q:QUIT
"RTN","RGUTDDR",222,0)
 ..D FINDF(IEN)
"RTN","RGUTDDR",223,0)
 Q
"RTN","RGUTDDR",224,0)
 ; Check fields for match.  Add to output if all match
"RTN","RGUTDDR",225,0)
FINDF(IEN) ;
"RTN","RGUTDDR",226,0)
 N FND
"RTN","RGUTDDR",227,0)
 S FLDS=0,FND=1
"RTN","RGUTDDR",228,0)
 F  S FLDS=$O(FLDS(FLDS)) Q:'FLDS  D  Q:'FND
"RTN","RGUTDDR",229,0)
 .S FND=$$FINDM(FLDS(FLDS),VALS(FLDS),IEN)
"RTN","RGUTDDR",230,0)
 I FND D
"RTN","RGUTDDR",231,0)
 .S CNT=CNT+1,@DATA@(CNT)=IEN
"RTN","RGUTDDR",232,0)
 .I MAX,CNT'<MAX S QUIT=1
"RTN","RGUTDDR",233,0)
 Q
"RTN","RGUTDDR",234,0)
 ; Check for match
"RTN","RGUTDDR",235,0)
FINDM(FLD,VAL,IEN) ;
"RTN","RGUTDDR",236,0)
 N VALX
"RTN","RGUTDDR",237,0)
 S VALX=$$FLDVAL(FNUM,FLD,IEN,ROOT)
"RTN","RGUTDDR",238,0)
 S:FLGS["I" VAL=$$UP^XLFSTR(VAL),VALX=$$UP^XLFSTR(VALX)
"RTN","RGUTDDR",239,0)
 Q $S(FLGS["P":$E(VALX,1,$L(VAL))=VAL,1:VAL=VALX)
"RTN","RGUTDDR",240,0)
 ; Return field number from name
"RTN","RGUTDDR",241,0)
FLDNUM(FNUM,FLD) ;EP
"RTN","RGUTDDR",242,0)
 Q $S(FLD=+FLD:FLD,FLD="#":0,1:$O(^DD(FNUM,"B",FLD,0)))
"RTN","RGUTDDR",243,0)
 ; Returns the standard xref for the specified field.
"RTN","RGUTDDR",244,0)
XREF(FNUM,FLD,LAST) ;EP
"RTN","RGUTDDR",245,0)
 N XREF
"RTN","RGUTDDR",246,0)
 S LAST=+$G(LAST),XREF="",FLD=$$FLDNUM(FNUM,FLD)
"RTN","RGUTDDR",247,0)
 Q:'$L(FLD) ""
"RTN","RGUTDDR",248,0)
 Q:'FLD "#"
"RTN","RGUTDDR",249,0)
 F  S LAST=$O(^DD(FNUM,FLD,1,LAST)) Q:'LAST  I $D(^(LAST,0)),$P(^(0),U,3)="" S XREF=$P(^(0),U,2) Q
"RTN","RGUTDDR",250,0)
 Q XREF
"RTN","RGUTDDR",251,0)
 ; Returns field # if xref is a standard type, or 0 if not.
"RTN","RGUTDDR",252,0)
XREFFLD(FNUM,XREF) ;EP
"RTN","RGUTDDR",253,0)
 N FLD,LAST,X
"RTN","RGUTDDR",254,0)
 S FLD=$O(^DD(FNUM,0,"IX",XREF,FNUM,0))
"RTN","RGUTDDR",255,0)
 Q:'FLD 0
"RTN","RGUTDDR",256,0)
 F  S X=$$XREF(FNUM,FLD,.LAST) Q:'$L(X)!(X=XREF)
"RTN","RGUTDDR",257,0)
 Q $S($L(X):FLD,1:0)
"RTN","RGUTDIC")
0^36^B30172675
"RTN","RGUTDIC",1,0)
RGUTDIC ;RG/IND/DKM - Encapsulated FileMan API;15-Feb-2007 10:32;DKM
"RTN","RGUTDIC",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTDIC",3,0)
 ;;
"RTN","RGUTDIC",4,0)
 ;=================================================================
"RTN","RGUTDIC",5,0)
 ; Parameterized routine to add/edit/extract an entry in a
"RTN","RGUTDIC",6,0)
 ; FileMan file.  Encapsulates global structure info so no
"RTN","RGUTDIC",7,0)
 ; need to specify this directly.
"RTN","RGUTDIC",8,0)
 ; Inputs:
"RTN","RGUTDIC",9,0)
 ;    %CIADIC = Global root, file number, or bookmark
"RTN","RGUTDIC",10,0)
 ;    %CIACMD = n    : IEN of entry to process
"RTN","RGUTDIC",11,0)
 ;             0    : Process last IEN referenced
"RTN","RGUTDIC",12,0)
 ;             +n   : Move down to subfile n
"RTN","RGUTDIC",13,0)
 ;             -    : Move up to parent file
"RTN","RGUTDIC",14,0)
 ;             @n   : Delete IEN #n (or last referenced if missing)
"RTN","RGUTDIC",15,0)
 ;             =x;y : Lookup y at current level using options in x
"RTN","RGUTDIC",16,0)
 ;             ?x;y ; Lookup y using RGUTLKP utility with options in x
"RTN","RGUTDIC",17,0)
 ;             >x;y : Read fields specified in y using options in x
"RTN","RGUTDIC",18,0)
 ;             <x;y : Write fields specified in y using options in x
"RTN","RGUTDIC",19,0)
 ;             ~x;y : Same as <, but creates new entry
"RTN","RGUTDIC",20,0)
 ;             %n   : Force DINUM to n
"RTN","RGUTDIC",21,0)
 ; Outputs:
"RTN","RGUTDIC",22,0)
 ;     Returns in the first piece the IEN of the entry or...
"RTN","RGUTDIC",23,0)
 ;      0 = Entry was deleted
"RTN","RGUTDIC",24,0)
 ;     -1 = Entry was rejected
"RTN","RGUTDIC",25,0)
 ;     -2 = Entry locked by another process
"RTN","RGUTDIC",26,0)
 ;     -3 = Unexpected error
"RTN","RGUTDIC",27,0)
 ;=================================================================
"RTN","RGUTDIC",28,0)
ENTRY(%CIADIC,%CIACMD) ;
"RTN","RGUTDIC",29,0)
 S %CIADIC(0)=+$G(DUZ)
"RTN","RGUTDIC",30,0)
 N DUZ,DIC,DINUM,DIE,DIQ,DIQUIET,DIK,%CIAX,%CIAIEN,%CIAARG,%CIAN1,%CIAN2,%CIAZ,X,Y
"RTN","RGUTDIC",31,0)
 N DA,DC,DD,DG,DH,DK,DL,DO,DQ,DR,DU,DV,DW,DY
"RTN","RGUTDIC",32,0)
 S DUZ=%CIADIC(0),DUZ(0)="@",@$$TRAP^RGUTOS("ERROR^RGUTDIC"),%CIACMD=$G(%CIACMD),%CIAIEN="",DIQUIET=1
"RTN","RGUTDIC",33,0)
 ; Build the bookmark if a global reference or file # passed
"RTN","RGUTDIC",34,0)
 I %CIADIC'[U D
"RTN","RGUTDIC",35,0)
 .S:%CIADIC'=+%CIADIC %CIADIC=+$O(^DIC("B",%CIADIC,0))
"RTN","RGUTDIC",36,0)
 .S %CIADIC=$$ROOT^DILFD(%CIADIC)_U_U_%CIADIC
"RTN","RGUTDIC",37,0)
 I $P(%CIADIC,U,4)="" D
"RTN","RGUTDIC",38,0)
 .S %CIAZ=U_$P(%CIADIC,U,2),%CIAZ=$E(%CIAZ,1,$L(%CIAZ)-1),%CIAZ=%CIAZ_$S(%CIAZ["(":")",1:"")
"RTN","RGUTDIC",39,0)
 .S $P(%CIADIC,U,4)=$P(@%CIAZ@(0),U,2)
"RTN","RGUTDIC",40,0)
 F %CIAN1=1:1:$L(%CIACMD,"|") S %CIAARG=$P(%CIACMD,"|",%CIAN1),%CIAZ=$E(%CIAARG) D  Q:%CIAIEN<0
"RTN","RGUTDIC",41,0)
 .S %CIAN2=$F("-+=@><~?%",%CIAZ)
"RTN","RGUTDIC",42,0)
 .S:%CIAN2 %CIAN2=%CIAN2-1,%CIAARG=$E(%CIAARG,2,999)
"RTN","RGUTDIC",43,0)
 .D DA,@%CIAN2
"RTN","RGUTDIC",44,0)
 .S:%CIAIEN>0 $P(%CIADIC,U,3)=%CIAIEN
"RTN","RGUTDIC",45,0)
 S $P(%CIADIC,U)=%CIAIEN
"RTN","RGUTDIC",46,0)
 Q %CIADIC
"RTN","RGUTDIC",47,0)
 ; Set IEN
"RTN","RGUTDIC",48,0)
0 S:%CIAARG'<0 %CIAIEN=$S($D(@%CIADIC(2)@(+%CIAARG)):+%CIAARG,1:0),$P(%CIADIC,U,3)=%CIAIEN
"RTN","RGUTDIC",49,0)
 Q
"RTN","RGUTDIC",50,0)
 ; Move up to parent file
"RTN","RGUTDIC",51,0)
1 N %CIAX,%CIAY
"RTN","RGUTDIC",52,0)
 S $P(%CIADIC,U,4)=$P($P(%CIADIC,U,4),"|",2,999)
"RTN","RGUTDIC",53,0)
 S %CIAY=$P(%CIADIC,U,2),%CIAX=$L(%CIAY,"|"),$P(%CIADIC,U,2)=$P(%CIAY,"|",1,%CIAX-1)
"RTN","RGUTDIC",54,0)
 S %CIAIEN=+$P(%CIAY,"|",%CIAX),$P(%CIADIC,U,3)=%CIAIEN
"RTN","RGUTDIC",55,0)
 D DA
"RTN","RGUTDIC",56,0)
 Q
"RTN","RGUTDIC",57,0)
 ; Move down to subfile
"RTN","RGUTDIC",58,0)
2 N %CIAX,%CIAY,%CIAZ
"RTN","RGUTDIC",59,0)
 I $P(%CIADIC,U,3)'>0 S %CIAIEN=-1 Q
"RTN","RGUTDIC",60,0)
 S %CIAY=+$P(%CIADIC,U,4)
"RTN","RGUTDIC",61,0)
 S:%CIAARG'=+%CIAARG %CIAARG=+$O(^DD(%CIAY,"B",%CIAARG,0)),%CIAARG=+$P($G(^DD(%CIAY,%CIAARG,0)),U,2)
"RTN","RGUTDIC",62,0)
 S %CIAX=+%CIAARG,%CIAZ=+$O(^DD(%CIAY,"SB",%CIAX,0)),%CIAZ=$P($P(^DD(%CIAY,%CIAZ,0),U,4),";"),%CIAX=$P(^(0),U,2)
"RTN","RGUTDIC",63,0)
 S:%CIAZ'=+%CIAZ %CIAZ=""""_%CIAZ_""""
"RTN","RGUTDIC",64,0)
 S $P(%CIADIC,U,4)=%CIAX_"|"_$P(%CIADIC,U,4),$P(%CIADIC,U,2)=$P(%CIADIC,U,2)_"|"_$P(%CIADIC,U,3)_","_%CIAZ_","
"RTN","RGUTDIC",65,0)
 S %CIAIEN="",$P(%CIADIC,U,3)=""
"RTN","RGUTDIC",66,0)
 D DA
"RTN","RGUTDIC",67,0)
 Q
"RTN","RGUTDIC",68,0)
 ; Lookup an entry
"RTN","RGUTDIC",69,0)
3 N X,Y
"RTN","RGUTDIC",70,0)
 I %CIAARG[";" S DIC(0)=$P(%CIAARG,";"),%CIAARG=$P(%CIAARG,";",2,999)
"RTN","RGUTDIC",71,0)
 E  S DIC(0)="XMF"
"RTN","RGUTDIC",72,0)
 S DIC=%CIADIC(1),X=%CIAARG
"RTN","RGUTDIC",73,0)
 D ^DIC
"RTN","RGUTDIC",74,0)
 S %CIAIEN=+Y
"RTN","RGUTDIC",75,0)
 Q
"RTN","RGUTDIC",76,0)
 ; Delete an entry
"RTN","RGUTDIC",77,0)
4 N X,Y
"RTN","RGUTDIC",78,0)
 S:%CIAARG DA=%CIAARG
"RTN","RGUTDIC",79,0)
 S DIK=%CIADIC(1),%CIAIEN=0
"RTN","RGUTDIC",80,0)
 D ^DIK
"RTN","RGUTDIC",81,0)
 Q
"RTN","RGUTDIC",82,0)
 ; Extract data
"RTN","RGUTDIC",83,0)
5 N %CIAZ,%CIAZ1,%CIAX,%CIAY
"RTN","RGUTDIC",84,0)
 I '%CIAIEN S %CIAIEN=-1 Q
"RTN","RGUTDIC",85,0)
 S DR=""
"RTN","RGUTDIC",86,0)
 F %CIAX=2:1:$L(%CIAARG,";") D
"RTN","RGUTDIC",87,0)
 .S %CIAY=$P(%CIAARG,";",%CIAX)
"RTN","RGUTDIC",88,0)
 .I %CIAY["=" S %CIAZ=$$FLD($P(%CIAY,"=",2)),%CIAZ1(%CIAZ,$P(%CIAY,"="))="",%CIAY=%CIAZ
"RTN","RGUTDIC",89,0)
 .S DR=DR_$S($L(DR):";",1:"")_%CIAY
"RTN","RGUTDIC",90,0)
 S DIC=%CIADIC(1),DIQ(0)=$P(%CIAARG,";")
"RTN","RGUTDIC",91,0)
 S:DIQ(0)="" DIQ(0)="E"
"RTN","RGUTDIC",92,0)
 K ^UTILITY("DIQ1",$J)
"RTN","RGUTDIC",93,0)
 D
"RTN","RGUTDIC",94,0)
 .N X,Y
"RTN","RGUTDIC",95,0)
 .D EN^DIQ1
"RTN","RGUTDIC",96,0)
 F %CIAX=0:0 S %CIAX=$O(%CIAZ1(%CIAX)),%CIAZ="" Q:'%CIAX  D
"RTN","RGUTDIC",97,0)
 .F  S %CIAZ=$O(%CIAZ1(%CIAX,%CIAZ)),%CIAZ1="" Q:%CIAZ=""  D
"RTN","RGUTDIC",98,0)
 ..F %CIAY="E","I" D
"RTN","RGUTDIC",99,0)
 ...S:$D(^UTILITY("DIQ1",$J,+$P(%CIADIC,U,4),%CIAIEN,%CIAX,%CIAY)) %CIAZ1=%CIAZ1_$S($L(%CIAZ1):U,1:"")_^(%CIAY)
"RTN","RGUTDIC",100,0)
 ..S @%CIAZ=%CIAZ1
"RTN","RGUTDIC",101,0)
 Q
"RTN","RGUTDIC",102,0)
 ; Edit existing entry
"RTN","RGUTDIC",103,0)
6 S DIC(0)=$P(%CIAARG,";"),DIC("P")=$P($P(%CIADIC,U,4),"|"),%CIAARG=$P(%CIAARG,";",2,999)
"RTN","RGUTDIC",104,0)
 I %CIAIEN'>0 S %CIAIEN=-1 Q
"RTN","RGUTDIC",105,0)
 S DIE=%CIADIC(1),DR=%CIAARG
"RTN","RGUTDIC",106,0)
 L +@%CIADIC(2)@(%CIAIEN):$S(DIC(0)["!":9999999,1:0)
"RTN","RGUTDIC",107,0)
 E  S %CIAIEN=-2 Q
"RTN","RGUTDIC",108,0)
 D ^DIE
"RTN","RGUTDIC",109,0)
 L -@%CIADIC(2)@(%CIAIEN)
"RTN","RGUTDIC",110,0)
 S %CIAIEN=+$G(DA)
"RTN","RGUTDIC",111,0)
 Q
"RTN","RGUTDIC",112,0)
 ; Create new entry
"RTN","RGUTDIC",113,0)
7 N X,Y,DD,DO,DLAYGO
"RTN","RGUTDIC",114,0)
 S DIC=%CIADIC(1),DIC(0)=$P(%CIAARG,";")_"L",DIC("P")=$P($P(%CIADIC,U,4),"|"),Y=$P(%CIAARG,";",2),%CIAARG=DIC(0)_";"_$P(%CIAARG,";",3,999),DLAYGO=DIC("P")\1
"RTN","RGUTDIC",115,0)
 I +Y'=.01 S %CIAIEN=-1 Q
"RTN","RGUTDIC",116,0)
 S X=$P(Y,"/",4)
"RTN","RGUTDIC",117,0)
 S:X="" X=$P(Y,"/",5)
"RTN","RGUTDIC",118,0)
 X:$E(X)=U $E(X,2,999)
"RTN","RGUTDIC",119,0)
 I $P(^DD(+DIC("P"),.01,0),U,2)["W" D
"RTN","RGUTDIC",120,0)
 .D WP
"RTN","RGUTDIC",121,0)
 E  D ^DIC:DIC(0)'["U",FILE^DICN:DIC(0)["U"
"RTN","RGUTDIC",122,0)
 S %CIAIEN=+Y
"RTN","RGUTDIC",123,0)
 I %CIAIEN>0,$P(%CIAARG,";",2,99)'="" D DA,6
"RTN","RGUTDIC",124,0)
 K DINUM
"RTN","RGUTDIC",125,0)
 Q
"RTN","RGUTDIC",126,0)
8 ; Lookup entry
"RTN","RGUTDIC",127,0)
 N %CIAOPT,%CIAP,CIAFN
"RTN","RGUTDIC",128,0)
 S %CIAOPT=$P(%CIAARG,";"),%CIAARG=$P(%CIAARG,";",2,999),CIAFN=+$P(%CIADIC,U,4)
"RTN","RGUTDIC",129,0)
 S %CIAP=+$P(%CIADIC,U,4),%CIAP=$P($G(^DD(%CIAP,.01,0)),U)
"RTN","RGUTDIC",130,0)
 S:$L(%CIAP) %CIAP=%CIAP_": "
"RTN","RGUTDIC",131,0)
 S %CIAIEN=$$ENTRY^RGUTLKP(%CIADIC(2),%CIAOPT,%CIAP,"",%CIAARG,"","",$X,$Y,"","","HLP^RGUTDIC")
"RTN","RGUTDIC",132,0)
 Q
"RTN","RGUTDIC",133,0)
 ; Force DINUM
"RTN","RGUTDIC",134,0)
9 S DINUM=%CIAARG
"RTN","RGUTDIC",135,0)
 Q
"RTN","RGUTDIC",136,0)
HLP W $G(^DD(+CIAFN,.01,3)),!
"RTN","RGUTDIC",137,0)
 Q
"RTN","RGUTDIC",138,0)
 ; Word processing field (special case of #7)
"RTN","RGUTDIC",139,0)
WP N %CIAZ,%CIAZ1
"RTN","RGUTDIC",140,0)
 I X="@" D
"RTN","RGUTDIC",141,0)
 .K @%CIADIC(2)
"RTN","RGUTDIC",142,0)
 .S Y=0
"RTN","RGUTDIC",143,0)
 E  D
"RTN","RGUTDIC",144,0)
 .S %CIAZ=$G(@%CIADIC(2)@(0)),Y=$G(DINUM,1+$O(^($C(1)),-1))
"RTN","RGUTDIC",145,0)
 .S %CIAZ1=+$P(%CIAZ,U,4),%CIAZ=+$P(%CIAZ,U,3)
"RTN","RGUTDIC",146,0)
 .S:Y>%CIAZ %CIAZ=Y
"RTN","RGUTDIC",147,0)
 .S:'$D(^(Y)) %CIAZ1=%CIAZ1+1
"RTN","RGUTDIC",148,0)
 .S ^(0)=U_U_%CIAZ_U_%CIAZ1_U_$G(DT),^(Y,0)=X
"RTN","RGUTDIC",149,0)
 Q:$P(^DD(+DIC("P"),.01,0),U,2)'["a"
"RTN","RGUTDIC",150,0)
 S %CIAIEN=Y
"RTN","RGUTDIC",151,0)
 D DA,WPAUDIT^CCCODAUD(+DIC("P"),.DA,X,"")
"RTN","RGUTDIC",152,0)
 Q
"RTN","RGUTDIC",153,0)
 ; Trap unexpected error
"RTN","RGUTDIC",154,0)
ERROR S $P(%CIADIC,U)=-3
"RTN","RGUTDIC",155,0)
 Q %CIADIC
"RTN","RGUTDIC",156,0)
 ; Return field #
"RTN","RGUTDIC",157,0)
FLD(X) Q $S(X=+X:X,1:+$O(^DD(+$P(%CIADIC,U,4),"B",X,0)))
"RTN","RGUTDIC",158,0)
 ; Set up DA array
"RTN","RGUTDIC",159,0)
DA N %CIAZ,%CIAZ1,%CIAZ2
"RTN","RGUTDIC",160,0)
 K DA
"RTN","RGUTDIC",161,0)
 S:'$G(%CIAIEN) %CIAIEN=$P(%CIADIC,U,3)
"RTN","RGUTDIC",162,0)
 S %CIAZ=$P(%CIADIC,U,2),%CIAZ2=$L(%CIAZ,"|"),DA=%CIAIEN
"RTN","RGUTDIC",163,0)
 F %CIAZ1=2:1:%CIAZ2 S DA(%CIAZ2-%CIAZ1+1)=+$P(%CIAZ,"|",%CIAZ1)
"RTN","RGUTDIC",164,0)
 S %CIADIC(1)=U_$TR($P(%CIADIC,U,2),"|"),%CIADIC(2)=$E(%CIADIC(1),1,$L(%CIADIC(1))-1),%CIADIC(2)=%CIADIC(2)_$S(%CIADIC(2)["(":")",1:"")
"RTN","RGUTDIC",165,0)
 Q
"RTN","RGUTDT")
0^37^B5201713
"RTN","RGUTDT",1,0)
RGUTDT ;RG/IND/DKM - FM date to formatted date;04-May-2006 08:19;DKM
"RTN","RGUTDT",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTDT",3,0)
 ;;
"RTN","RGUTDT",4,0)
 ;=================================================================
"RTN","RGUTDT",5,0)
 ; Inputs:
"RTN","RGUTDT",6,0)
 ;   CIADAT = date to format (DHCP format or $H format)
"RTN","RGUTDT",7,0)
 ;   CIAFMT = date and time format control (optional)
"RTN","RGUTDT",8,0)
 ;      xxx0 = dd-mmm-yyyy
"RTN","RGUTDT",9,0)
 ;      xxx1 = mmm dd,yyyy
"RTN","RGUTDT",10,0)
 ;      xxx2 = mm/dd/yyyy
"RTN","RGUTDT",11,0)
 ;      xxx3 = mm-dd-yyyy
"RTN","RGUTDT",12,0)
 ;      xx0x = hh:mm
"RTN","RGUTDT",13,0)
 ;      xx1x = hh:mm xx
"RTN","RGUTDT",14,0)
 ;      x0xx = use space to separate date/time
"RTN","RGUTDT",15,0)
 ;      x1xx = use @ to separate date/time
"RTN","RGUTDT",16,0)
 ;      0xxx = allow leading zeros
"RTN","RGUTDT",17,0)
 ;      1xxx = remove leading zeros
"RTN","RGUTDT",18,0)
 ; Outputs:
"RTN","RGUTDT",19,0)
 ;   Returns formatted date
"RTN","RGUTDT",20,0)
 ;=================================================================
"RTN","RGUTDT",21,0)
ENTRY(CIADAT,CIAFMT) ; EP
"RTN","RGUTDT",22,0)
 S CIADAT=$G(CIADAT,$H)
"RTN","RGUTDT",23,0)
 Q:'CIADAT ""
"RTN","RGUTDT",24,0)
 N CIAZ1,CIAZ2,CIAZ3,CIAZ4,CIADLM,CIATM
"RTN","RGUTDT",25,0)
 S:CIADAT?1.N1",".N CIADAT=$$HTFM^XLFDT(CIADAT)
"RTN","RGUTDT",26,0)
 S CIAFMT=$G(CIAFMT)#100000,CIAFMT=CIAFMT#10000,CIAZ4=CIAFMT\1000,CIAFMT=CIAFMT#1000,CIADLM=$S(CIAFMT>99:"@",1:" "),CIAFMT=CIAFMT#100,CIATM=CIAFMT\10,CIAFMT=CIAFMT#10
"RTN","RGUTDT",27,0)
 I CIADAT\1 D
"RTN","RGUTDT",28,0)
 .S CIAZ3=CIADAT\1+17000000,CIAZ1=$E(CIAZ3,7,8),CIAZ2=$E(CIAZ3,5,6),CIAZ3=$E(CIAZ3,1,4)
"RTN","RGUTDT",29,0)
 .S:CIAZ4 CIAZ1=+CIAZ1,CIAZ2=+CIAZ2
"RTN","RGUTDT",30,0)
 .S:CIAFMT<2 CIAZ2=$P("Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec",",",CIAZ2)
"RTN","RGUTDT",31,0)
 .S CIAZ1=$S('CIAFMT:CIAZ1_"-"_CIAZ2_"-"_CIAZ3,CIAFMT=1:CIAZ2_" "_CIAZ1_","_CIAZ3,CIAFMT=2:CIAZ2_"/"_CIAZ1_"/"_CIAZ3,1:CIAZ2_"-"_CIAZ1_"-"_CIAZ3)
"RTN","RGUTDT",32,0)
 E  S CIAZ1=""
"RTN","RGUTDT",33,0)
 S CIAZ2=CIADAT#1*10000+10000\1
"RTN","RGUTDT",34,0)
 I CIAZ2=10000!(CIAZ2>12400) S CIAZ2=""
"RTN","RGUTDT",35,0)
 E  D
"RTN","RGUTDT",36,0)
 .S:CIATM CIAZ2=$S(CIAZ2=12400:CIAZ2-1200_" am",CIAZ2>11299:CIAZ2-1200_" pm",CIAZ2>11199:CIAZ2_" pm",CIAZ2<10099:CIAZ2+1200_" am",1:CIAZ2_" am")
"RTN","RGUTDT",37,0)
 .S CIAZ3=$S(CIAZ4:+$E(CIAZ2,2,3),1:$E(CIAZ2,2,3)),CIAZ2=CIAZ3_":"_$E(CIAZ2,4,8)
"RTN","RGUTDT",38,0)
 Q CIAZ1_$S('$L(CIAZ2):"",$L(CIAZ1):CIADLM,1:"")_CIAZ2
"RTN","RGUTEDT")
0^38^B50036890
"RTN","RGUTEDT",1,0)
RGUTEDT ;RG/IND/DKM - Screen-oriented line editor;20-Jan-2015 13:23;DKM
"RTN","RGUTEDT",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTEDT",3,0)
 ;;
"RTN","RGUTEDT",4,0)
 ;=================================================================
"RTN","RGUTEDT",5,0)
 ; Inputs:
"RTN","RGUTEDT",6,0)
 ;   CIADATA  = Data to edit
"RTN","RGUTEDT",7,0)
 ;   CIALEN   = Maximum length of data
"RTN","RGUTEDT",8,0)
 ;   CIAX     = Starting column position
"RTN","RGUTEDT",9,0)
 ;   CIAY     = Starting row position
"RTN","RGUTEDT",10,0)
 ;   CIAVALD  = List of valid inputs (optional)
"RTN","RGUTEDT",11,0)
 ;   CIADISV  = DISV node to save under (optional)
"RTN","RGUTEDT",12,0)
 ;   CIATERM  = Valid input terminators (default=<CR>)
"RTN","RGUTEDT",13,0)
 ;   CIAABRT  = Valid input abort characters (default=none)
"RTN","RGUTEDT",14,0)
 ;   CIARM    = Right margin setting (default=IOM or 80)
"RTN","RGUTEDT",15,0)
 ;   CIAQUIT  = Exit code (returned)
"RTN","RGUTEDT",16,0)
 ;   CIAOPT   = Input options
"RTN","RGUTEDT",17,0)
 ;      C = Mark <CR> with ~
"RTN","RGUTEDT",18,0)
 ;      E = Echo off
"RTN","RGUTEDT",19,0)
 ;      H = Horizontal scroll
"RTN","RGUTEDT",20,0)
 ;      I = No timeout
"RTN","RGUTEDT",21,0)
 ;      L = Lowercase only
"RTN","RGUTEDT",22,0)
 ;      O = Overwrite mode
"RTN","RGUTEDT",23,0)
 ;      Q = Quiet mode
"RTN","RGUTEDT",24,0)
 ;      R = Reverse video
"RTN","RGUTEDT",25,0)
 ;      T = Auto-terminate
"RTN","RGUTEDT",26,0)
 ;      U = Uppercase only
"RTN","RGUTEDT",27,0)
 ;      V = Up/down cursor keys terminate input
"RTN","RGUTEDT",28,0)
 ;      X = Suppress auto-erase
"RTN","RGUTEDT",29,0)
 ; Outputs:
"RTN","RGUTEDT",30,0)
 ;   Return value = Edited data
"RTN","RGUTEDT",31,0)
 ;=================================================================
"RTN","RGUTEDT",32,0)
ENTRY(CIADATA,CIALEN,CIAX,CIAY,CIAVALD,CIAOPT,CIADISV,CIATERM,CIAABRT,CIARM,CIAQUIT) ;
"RTN","RGUTEDT",33,0)
 N CIAZ,CIAZ1,CIAZ2,CIASAVE,CIAINS,CIAAE,CIABUF,CIATAB,CIAPOS,CIAEON,CIALEFT,CIABEL,CIAMAX,CIARVON,CIARVOFF,CIAC,CIAW
"RTN","RGUTEDT",34,0)
 S CIAVALD=$G(CIAVALD),CIAOPT=$$UP^XLFSTR($G(CIAOPT)),CIABEL=$S(CIAOPT'["Q":$C(7),1:""),CIADISV=$G(CIADISV)
"RTN","RGUTEDT",35,0)
 S:$G(CIATERM)="" CIATERM=$C(13)                                         ; Valid line terminators
"RTN","RGUTEDT",36,0)
 S CIAABRT=$G(CIAABRT)                                                   ; Valid input abort keys
"RTN","RGUTEDT",37,0)
 S CIARVON=$C(27,91,55,109),CIARVOFF=$C(27,91,109)                       ; Reverse video control
"RTN","RGUTEDT",38,0)
 S CIAINS=CIAOPT'["O"                                                    ; Default mode = insert
"RTN","RGUTEDT",39,0)
 S CIAAE=CIAOPT'["X"                                                     ; Auto-erase option
"RTN","RGUTEDT",40,0)
 S CIAEON=CIAOPT'["E"                                                    ; No echo option
"RTN","RGUTEDT",41,0)
 I CIAOPT["I"!'$D(DTIME) N DTIME S DTIME=999999                          ; Suppress timeout option
"RTN","RGUTEDT",42,0)
 S CIABUF=""
"RTN","RGUTEDT",43,0)
 S CIARM=$G(CIARM,$G(IOM,80))                                            ; Display width
"RTN","RGUTEDT",44,0)
 S CIATAB=$C(9)                                                         ; Tab character
"RTN","RGUTEDT",45,0)
 S CIAX=$G(CIAX,$X),CIAY=$G(CIAY,$Y),CIAW=CIARM-CIAX
"RTN","RGUTEDT",46,0)
 S:CIAW'>0 CIAW=1
"RTN","RGUTEDT",47,0)
 S:'$G(CIALEN) CIALEN=CIAW                                                ; Default field width
"RTN","RGUTEDT",48,0)
 S CIAMAX=$S(CIAOPT["H":250,1:CIALEN)                                     ; Maximum data length
"RTN","RGUTEDT",49,0)
 S (CIASAVE,CIADATA)=$E($G(CIADATA),1,CIAMAX)                              ; Truncate data if too long
"RTN","RGUTEDT",50,0)
 I $$NEWERR^%ZTER N $ET S $ET=""
"RTN","RGUTEDT",51,0)
 S @$$TRAP^RGUTOS("ERROR^RGUTEDT")
"RTN","RGUTEDT",52,0)
 D RM^RGUTOS(0)
"RTN","RGUTEDT",53,0)
 X ^%ZOSF("EOFF")
"RTN","RGUTEDT",54,0)
 F  Q:CIADATA'[CIATAB  S CIAZ=$P(CIADATA,CIATAB),CIADATA=CIAZ_$J("",8-($L(CIAZ)#8))_$P(CIADATA,CIATAB,2,999)
"RTN","RGUTEDT",55,0)
RESTART D RESET
"RTN","RGUTEDT",56,0)
AGAIN F CIAQUIT=0:0 Q:CIAQUIT  D NXT S CIAAE=0
"RTN","RGUTEDT",57,0)
 X ^%ZOSF("EON")
"RTN","RGUTEDT",58,0)
 W $$XY^RGUT(CIAX,CIAY),$S(CIAOPT["R":CIARVOFF,1:"")
"RTN","RGUTEDT",59,0)
 I CIADISV'="" Q:"^^"[CIADATA CIADATA S:CIADATA=" " CIADATA=$G(^DISV(DUZ,CIADISV))
"RTN","RGUTEDT",60,0)
 S:CIADISV'="" ^DISV(DUZ,CIADISV)=CIADATA
"RTN","RGUTEDT",61,0)
 Q CIADATA                                                              ; Return to calling routine
"RTN","RGUTEDT",62,0)
NXT D POSCUR()                                                            ; Position cursor
"RTN","RGUTEDT",63,0)
 R *CIAC:DTIME                                                          ; Next character typed
"RTN","RGUTEDT",64,0)
 I CIAC=27 D ESC Q:'CIAC
"RTN","RGUTEDT",65,0)
 I CIAC<1!(CIAABRT[$C(CIAC)) S CIADATA=U,CIAQUIT=1 Q
"RTN","RGUTEDT",66,0)
 I CIATERM[$C(CIAC) D TERM Q
"RTN","RGUTEDT",67,0)
 I CIAC<28 D:CIAC'=27 @("CTL"_$C(CIAC+64)) Q
"RTN","RGUTEDT",68,0)
 I CIAC=127!(CIAC=240) D CTLH Q
"RTN","RGUTEDT",69,0)
 I CIAC>64,CIAC<91,CIAOPT["L" S CIAC=CIAC+32
"RTN","RGUTEDT",70,0)
 E  I CIAC>96,CIAC<123,CIAOPT["U" S CIAC=CIAC-32
"RTN","RGUTEDT",71,0)
 I $L(CIAVALD),CIAVALD'[$C(CIAC) D RAISE^RGUTOS()
"RTN","RGUTEDT",72,0)
 D:CIAAE CTLK,POSCUR()                                                  ; Erase buffer if auto erase on
"RTN","RGUTEDT",73,0)
 D INSW($C(CIAC))
"RTN","RGUTEDT",74,0)
 S CIAQUIT=CIAPOS=CIALEN&(CIAOPT["T")
"RTN","RGUTEDT",75,0)
 Q
"RTN","RGUTEDT",76,0)
CTLA S CIAINS='CIAINS                                                        ; Toggle insert mode
"RTN","RGUTEDT",77,0)
 Q
"RTN","RGUTEDT",78,0)
CTLB D MOVETO(0)                                                           ; Move cursor to beginning
"RTN","RGUTEDT",79,0)
 Q
"RTN","RGUTEDT",80,0)
CTLX S CIADATA=CIASAVE                                                       ; Restore buffer to original
"RTN","RGUTEDT",81,0)
 G RESET
"RTN","RGUTEDT",82,0)
CTLE D MOVETO($L(CIADATA))                                                  ; Move cursor to end
"RTN","RGUTEDT",83,0)
 Q
"RTN","RGUTEDT",84,0)
CTLI D INSW($J("",8-(CIAPOS#8)))                                            ; Insert expanded tab
"RTN","RGUTEDT",85,0)
 Q
"RTN","RGUTEDT",86,0)
CTLJ F CIAZ=CIAPOS:-1:1 Q:$A(CIADATA,CIAZ)'=32                                     ; Find previous nonspace
"RTN","RGUTEDT",87,0)
 F CIAZ=CIAZ:-1:1 Q:$A(CIADATA,CIAZ)=32                                          ; Find previous space
"RTN","RGUTEDT",88,0)
 S CIABUF=$E(CIADATA,CIAZ,CIAPOS)                                            ; Save deleted portion
"RTN","RGUTEDT",89,0)
 S CIADATA=$E(CIADATA,1,CIAZ-1)_$E(CIADATA,CIAPOS+1,CIALEN)                    ; Remove word
"RTN","RGUTEDT",90,0)
 D MOVETO(CIAZ-1)
"RTN","RGUTEDT",91,0)
 Q
"RTN","RGUTEDT",92,0)
CTLK S CIABUF=CIADATA                                                        ; Save buffer
"RTN","RGUTEDT",93,0)
 S CIADATA=""                                                           ; Erase buffer
"RTN","RGUTEDT",94,0)
 D RESET
"RTN","RGUTEDT",95,0)
 Q
"RTN","RGUTEDT",96,0)
CTLL S CIABUF=$E(CIADATA,CIAPOS+1,CIALEN)                                      ; Save deleted portion
"RTN","RGUTEDT",97,0)
 S CIADATA=$E(CIADATA,1,CIAPOS)                                           ; Truncate at current position
"RTN","RGUTEDT",98,0)
 D DSPLY(CIAPOS)
"RTN","RGUTEDT",99,0)
 Q
"RTN","RGUTEDT",100,0)
CTLM D POSCUR(CIAPOS),INSW("~"):CIAOPT["C",MOVETO(CIAPOS-$X+CIAX+CIAW)
"RTN","RGUTEDT",101,0)
 Q
"RTN","RGUTEDT",102,0)
CTLR D INSW(CIABUF)                                                         ; Insert at current position
"RTN","RGUTEDT",103,0)
 Q
"RTN","RGUTEDT",104,0)
CTLT D CTLL
"RTN","RGUTEDT",105,0)
 Q
"RTN","RGUTEDT",106,0)
CTLU S CIABUF=$E(CIADATA,1,CIAPOS)                                            ; Save deleted portion
"RTN","RGUTEDT",107,0)
 S CIADATA=$E(CIADATA,CIAPOS+1,CIALEN)                                     ; Remove to left of cursor
"RTN","RGUTEDT",108,0)
 D RESET
"RTN","RGUTEDT",109,0)
 Q
"RTN","RGUTEDT",110,0)
CTLH I 'CIAPOS W CIABEL Q
"RTN","RGUTEDT",111,0)
 D LEFT
"RTN","RGUTEDT",112,0)
CTLD S CIADATA=$E(CIADATA,1,CIAPOS)_$E(CIADATA,CIAPOS+2,CIAMAX)                  ; Delete character to left
"RTN","RGUTEDT",113,0)
 D DSPLY(CIAPOS,1)
"RTN","RGUTEDT",114,0)
 Q
"RTN","RGUTEDT",115,0)
TERM S CIAQUIT=2
"RTN","RGUTEDT",116,0)
 Q
"RTN","RGUTEDT",117,0)
ESC R *CIAZ:1
"RTN","RGUTEDT",118,0)
 R:CIAZ>0 *CIAZ:1
"RTN","RGUTEDT",119,0)
 S CIAC=0
"RTN","RGUTEDT",120,0)
 G UP:CIAZ=65,DOWN:CIAZ=66,RIGHT:CIAZ=67,LEFT:CIAZ=68                              ;Execute code
"RTN","RGUTEDT",121,0)
 S CIAC=27
"RTN","RGUTEDT",122,0)
 Q
"RTN","RGUTEDT",123,0)
DSPLY(CIAP1,CIAP2) ;
"RTN","RGUTEDT",124,0)
 Q:'CIAEON                                                              ; Refresh buffer display starting at position CIAP1
"RTN","RGUTEDT",125,0)
 N CIAZ,CIAZ1
"RTN","RGUTEDT",126,0)
 S CIAP1=+$G(CIAP1,CIALEFT),CIAZ=$E(CIADATA,CIAP1+1,CIALEFT+CIALEN),CIAP2=$S($D(CIAP2):CIAP2+$L(CIAZ),1:CIALEN-CIAP1+CIALEFT)
"RTN","RGUTEDT",127,0)
 S:CIAP2>CIALEN CIAP2=CIALEN
"RTN","RGUTEDT",128,0)
 S CIAZ=CIAZ_$J("",CIAP2-$L(CIAZ))
"RTN","RGUTEDT",129,0)
 F  D  Q:CIAZ=""
"RTN","RGUTEDT",130,0)
 .D POSCUR(CIAP1)
"RTN","RGUTEDT",131,0)
 .S CIAZ1=CIARM-$X
"RTN","RGUTEDT",132,0)
 .S:CIAZ1<1 CIAZ1=1
"RTN","RGUTEDT",133,0)
 .W $E(CIAZ,1,CIAZ1)
"RTN","RGUTEDT",134,0)
 .S CIAZ=$E(CIAZ,CIAZ1+1,999),CIAP1=CIAP1+CIAZ1
"RTN","RGUTEDT",135,0)
 Q
"RTN","RGUTEDT",136,0)
INSW(CIATXT) ;
"RTN","RGUTEDT",137,0)
 S:CIAPOS>$L(CIADATA) CIADATA=CIADATA_$J("",CIAPOS-$L(CIADATA))              ; Pad if past end of buffer
"RTN","RGUTEDT",138,0)
 S CIADATA=$E($E(CIADATA,1,CIAPOS)_CIATXT_$E(CIADATA,CIAPOS+2-CIAINS,CIAMAX),1,CIAMAX)
"RTN","RGUTEDT",139,0)
 D DSPLY(CIAPOS,0),MOVETO(CIAPOS+$L(CIATXT))
"RTN","RGUTEDT",140,0)
 Q
"RTN","RGUTEDT",141,0)
POSCUR(CIAP) ;
"RTN","RGUTEDT",142,0)
 N CIAZX,CIAZY
"RTN","RGUTEDT",143,0)
 S CIAP=+$G(CIAP,CIAPOS),CIAZX=CIAP-CIALEFT,CIAZY=CIAZX\CIAW+CIAY,CIAZX=CIAZX#CIAW+CIAX
"RTN","RGUTEDT",144,0)
 W $$XY^RGUT(CIAZX,CIAZY)
"RTN","RGUTEDT",145,0)
 Q
"RTN","RGUTEDT",146,0)
MOVETO(CIAP) ;
"RTN","RGUTEDT",147,0)
 I CIAP>CIAMAX!(CIAP<0) W CIABEL Q
"RTN","RGUTEDT",148,0)
 S CIAPOS=CIAP,CIAP=CIALEFT
"RTN","RGUTEDT",149,0)
 S:CIAPOS<CIALEFT CIALEFT=CIAPOS-CIAW-1
"RTN","RGUTEDT",150,0)
 S:CIALEFT+CIALEN<CIAPOS CIALEFT=CIAPOS-CIAW+1
"RTN","RGUTEDT",151,0)
 S:CIALEFT'<CIAMAX CIALEFT=CIAMAX-CIAW
"RTN","RGUTEDT",152,0)
 S:CIALEFT<0 CIALEFT=0
"RTN","RGUTEDT",153,0)
 D DSPLY():CIALEFT'=CIAP,POSCUR()
"RTN","RGUTEDT",154,0)
 Q
"RTN","RGUTEDT",155,0)
UP I CIAOPT["V" S CIAQUIT=3
"RTN","RGUTEDT",156,0)
 E  D MOVETO(CIAPOS-CIAW)
"RTN","RGUTEDT",157,0)
 Q
"RTN","RGUTEDT",158,0)
DOWN I CIAOPT["V" S CIAQUIT=4
"RTN","RGUTEDT",159,0)
 E  D MOVETO(CIAPOS+CIAW)
"RTN","RGUTEDT",160,0)
 Q
"RTN","RGUTEDT",161,0)
RIGHT D MOVETO(CIAPOS+1)
"RTN","RGUTEDT",162,0)
 Q
"RTN","RGUTEDT",163,0)
LEFT D MOVETO(CIAPOS-1)
"RTN","RGUTEDT",164,0)
 Q
"RTN","RGUTEDT",165,0)
RESET W $S(CIAOPT["R":CIARVON,1:CIARVOFF)
"RTN","RGUTEDT",166,0)
 S (CIAPOS,CIALEFT)=0                                                    ; Current edit offset
"RTN","RGUTEDT",167,0)
 D DSPLY()                                                             ; Refresh display
"RTN","RGUTEDT",168,0)
 Q
"RTN","RGUTEDT",169,0)
ERROR W CIABEL                                                               ; Sound bell
"RTN","RGUTEDT",170,0)
 S @$$TRAP^RGUTOS("ERROR^RGUTEDT")
"RTN","RGUTEDT",171,0)
 G AGAIN
"RTN","RGUTHFS")
0^61^B5078426
"RTN","RGUTHFS",1,0)
RGUTHFS ;RG/IND/DKM - Host IO Support ;04-May-2006 08:19;DKM
"RTN","RGUTHFS",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTHFS",3,0)
 ;;
"RTN","RGUTHFS",4,0)
 ;=================================================================
"RTN","RGUTHFS",5,0)
 ; Capture output to HFS and optionally redirect to global
"RTN","RGUTHFS",6,0)
 ;   EXEC = Code to execute
"RTN","RGUTHFS",7,0)
 ;   ROOT = Global root to receive output (or null to leave in HFS)
"RTN","RGUTHFS",8,0)
 ;   RM   = Right margin setting (defaults to 80)
"RTN","RGUTHFS",9,0)
CAPTURE(EXEC,ROOT,RM) ;EP
"RTN","RGUTHFS",10,0)
 N UFN,HNDL,TMP,IOM,IOSL,IOST,IOF,IOT,IOS,$ET
"RTN","RGUTHFS",11,0)
 S $ET="",UFN=$$UFN^RGUT,TMP=$$DEFDIR^RGUTOS,HNDL="RGUTHFS",@$$TRAP^RGUTOS("ERR^RGUTHFS")
"RTN","RGUTHFS",12,0)
 S:$L($G(ROOT)) ROOT=$NA(@ROOT)
"RTN","RGUTHFS",13,0)
 D OPEN^%ZISH(HNDL,TMP,UFN,"W")
"RTN","RGUTHFS",14,0)
 D:'POP IOVAR(.RM),EXEC,HFSCLOSE(HNDL,UFN)
"RTN","RGUTHFS",15,0)
 Q:$Q TMP_UFN
"RTN","RGUTHFS",16,0)
 Q
"RTN","RGUTHFS",17,0)
EXEC X EXEC
"RTN","RGUTHFS",18,0)
 Q
"RTN","RGUTHFS",19,0)
 ; Error trap
"RTN","RGUTHFS",20,0)
ERR D @^%ZOSF("ERRTN"),HFSCLOSE(HNDL,UFN,1)
"RTN","RGUTHFS",21,0)
 Q:$Q ""
"RTN","RGUTHFS",22,0)
 Q
"RTN","RGUTHFS",23,0)
 ; Setup IO variables based on IO Device
"RTN","RGUTHFS",24,0)
IOVAR(XIOM,XIO,XIOSL,XIOST,XIOF,XIOT) ;
"RTN","RGUTHFS",25,0)
 N X
"RTN","RGUTHFS",26,0)
 S ION=$G(XIO,"RGUT HFS DEVICE"),IOS=+$O(^%ZIS(1,"B",ION,0)),IOM=80,IOSL=62,IOST=$G(XIOST,"P-OTHER"),IOF=$G(XIOF,""""""),IOT=$G(XIOT,"HFS")
"RTN","RGUTHFS",27,0)
 S:$D(^%ZIS(1,IOS,0)) IOST(0)=+$G(^("SUBTYPE")),IOT=$G(^("TYPE"),IOT),IOST=$P($G(^%ZIS(2,IOST(0),0),IOST),U)
"RTN","RGUTHFS",28,0)
 S X=$O(^%ZIS(2,"B",IOST,0))
"RTN","RGUTHFS",29,0)
 S:X IOST(0)=X,X=$G(^%ZIS(2,X,1)),IOM=$P(X,U),IOF=$P(X,U,2),IOSL=$P(X,U,3)
"RTN","RGUTHFS",30,0)
 S:$G(XIOM) IOM=XIOM
"RTN","RGUTHFS",31,0)
 S:$G(XIOSL) IOSL=XIOSL
"RTN","RGUTHFS",32,0)
 U IO
"RTN","RGUTHFS",33,0)
 Q
"RTN","RGUTHFS",34,0)
 ; Move HFS data to global (if ROOT specified) and cleanup
"RTN","RGUTHFS",35,0)
HFSCLOSE(HNDL,UFN,BAD) ;
"RTN","RGUTHFS",36,0)
 N DEL
"RTN","RGUTHFS",37,0)
 D GETDEV^%ZISUTL(HNDL)
"RTN","RGUTHFS",38,0)
 I IOT="HFS" D
"RTN","RGUTHFS",39,0)
 .D CLOSE^%ZISH(HNDL)
"RTN","RGUTHFS",40,0)
 E  D RMDEV^%ZISUTL(HNDL)
"RTN","RGUTHFS",41,0)
 Q:'$L($G(ROOT))
"RTN","RGUTHFS",42,0)
 K @ROOT
"RTN","RGUTHFS",43,0)
 I '$G(BAD),$$FTG^%ZISH($$DEFDIR^RGUTOS,UFN,$NA(@ROOT@(1)),$QL(ROOT)+1) D STRIP
"RTN","RGUTHFS",44,0)
 S DEL(UFN)=""
"RTN","RGUTHFS",45,0)
 I $$DEL^%ZISH($$DEFDIR^RGUTOS,"DEL")
"RTN","RGUTHFS",46,0)
 Q
"RTN","RGUTHFS",47,0)
 ; Strip off control chars and remove leading/trailing blank lines
"RTN","RGUTHFS",48,0)
STRIP N I,J,K,X
"RTN","RGUTHFS",49,0)
 S (I,J)=0
"RTN","RGUTHFS",50,0)
 F  S I=$O(@ROOT@(I)) Q:'I  S X=@ROOT@(I) D  S @ROOT@(I)=X
"RTN","RGUTHFS",51,0)
 .I X[$C(8),$L(X,$C(8))=$L(X,$C(95)) S X=$TR(X,$C(7,8,12,95))
"RTN","RGUTHFS",52,0)
 .E  S X=$TR(X,$C(7,8,12))
"RTN","RGUTHFS",53,0)
 .S:$L(X) J=I,K=$G(K,J)
"RTN","RGUTHFS",54,0)
 I $D(K) F  S I=$O(@ROOT@(I)) Q:I=K  K @ROOT@(I)
"RTN","RGUTHFS",55,0)
 F  S J=$O(@ROOT@(J)) Q:'J  K @ROOT@(J)
"RTN","RGUTHFS",56,0)
 Q
"RTN","RGUTIMP")
0^44^B12071934
"RTN","RGUTIMP",1,0)
RGUTIMP ;RG/IND/DKM - Import text into FileMan file;04-May-2006 08:19;DKM
"RTN","RGUTIMP",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTIMP",3,0)
 ;;
"RTN","RGUTIMP",4,0)
 ;=================================================================
"RTN","RGUTIMP",5,0)
 ; Imports data from a specially formatted text file into a
"RTN","RGUTIMP",6,0)
 ; FileMan file.
"RTN","RGUTIMP",7,0)
 ; Inputs:
"RTN","RGUTIMP",8,0)
 ;   CIAINP  = Full input file or global specification.
"RTN","RGUTIMP",9,0)
 ;   CIATRACE= If nonzero, generates a debug trace.
"RTN","RGUTIMP",10,0)
 ; Outputs:
"RTN","RGUTIMP",11,0)
 ;   Returns status code^status message.  Status code of 0 means
"RTN","RGUTIMP",12,0)
 ;   successful completion.
"RTN","RGUTIMP",13,0)
 ;=================================================================
"RTN","RGUTIMP",14,0)
ENTRY(CIAINP,CIATRACE) ;
"RTN","RGUTIMP",15,0)
 N CIALN,CIAFN,CIALVL,CIABM,CIAC,CIALBL,CIAQT,CIAST,CIAIO,CIAGBL
"RTN","RGUTIMP",16,0)
 S @$$TRAP^RGUTOS("ERROR^RGUTIMP")
"RTN","RGUTIMP",17,0)
 S CIAFN=0,CIALVL=-1,CIATRACE=+$G(CIATRACE),CIAST=0,CIAIO=$I,U="^",CIAC=0,CIAGBL=$E(CIAINP)=U
"RTN","RGUTIMP",18,0)
 I CIAGBL S CIAINP=$$CREF^DILF(CIAINP)
"RTN","RGUTIMP",19,0)
 E  D OPEN^RGUTOS(.CIAINP,"R")
"RTN","RGUTIMP",20,0)
 F  Q:$$READ  D  Q:CIAST
"RTN","RGUTIMP",21,0)
 .U CIAIO
"RTN","RGUTIMP",22,0)
 .W:CIATRACE=1 CIAC,*13
"RTN","RGUTIMP",23,0)
 .W:CIATRACE=2 CIAC_": ",$$TRUNC^RGUT(CIALN,$G(IOM,80)-$X-2),!
"RTN","RGUTIMP",24,0)
 .D DOIT(CIALN)
"RTN","RGUTIMP",25,0)
 D:'CIAGBL CLOSE^RGUTOS(.CIAINP)
"RTN","RGUTIMP",26,0)
 Q CIAST
"RTN","RGUTIMP",27,0)
READ() I 'CIAGBL S CIAC=CIAC+1 Q $$READ^RGUTOS(.CIALN,CIAINP)
"RTN","RGUTIMP",28,0)
 S CIAC=$O(@CIAINP@(CIAC))
"RTN","RGUTIMP",29,0)
 Q:'CIAC 1
"RTN","RGUTIMP",30,0)
 I $D(@CIAINP@(CIAC))#2 S CIALN=@CIAINP@(CIAC) Q 0
"RTN","RGUTIMP",31,0)
 I $D(@CIAINP@(CIAC,0))#2 S CIALN=@CIAINP@(CIAC,0) Q 0
"RTN","RGUTIMP",32,0)
 Q 1
"RTN","RGUTIMP",33,0)
ERROR D ERR("Fatal error",$$EC^%ZOSV)
"RTN","RGUTIMP",34,0)
 Q CIAST
"RTN","RGUTIMP",35,0)
DOIT(CIALN) ;
"RTN","RGUTIMP",36,0)
 N CIAZ,CIAL,CIAFLD,CIAWP
"RTN","RGUTIMP",37,0)
 S CIALN=$$TRIM^RGUT(CIALN)
"RTN","RGUTIMP",38,0)
 I ";"[$E(CIALN) W:CIATRACE=3 $P(CIALN,";",2,999),! Q
"RTN","RGUTIMP",39,0)
 F CIAL=0:1 Q:$E(CIALN,CIAL+1)'="."
"RTN","RGUTIMP",40,0)
 S CIALN=$E(CIALN,CIAL+1,999)
"RTN","RGUTIMP",41,0)
 I CIALN'[":" D ERR("Missing label",CIALN) Q
"RTN","RGUTIMP",42,0)
 S CIALBL=$$TRIM^RGUT($P(CIALN,":")),CIALN=$$TRIM^RGUT($P(CIALN,":",2,999))
"RTN","RGUTIMP",43,0)
 I 'CIAL S CIAFN=$$FILE(CIALN) Q
"RTN","RGUTIMP",44,0)
 I CIAL>CIALVL D ERR("Invalid nesting",CIALN) Q
"RTN","RGUTIMP",45,0)
 S CIALVL=CIAL,CIAFN=+$P(CIABM(CIALVL),U,4)
"RTN","RGUTIMP",46,0)
 S CIAFLD=$$FLD(CIALBL,CIAFN)
"RTN","RGUTIMP",47,0)
 S CIAZ=+$P($G(^DD(CIAFN,CIAFLD,0)),U,2)
"RTN","RGUTIMP",48,0)
 I CIAZ D  Q:CIAST
"RTN","RGUTIMP",49,0)
 .S CIALVL=CIALVL+1,CIAFN=CIAZ,CIABM(CIALVL)=$$ENTRY^RGUTDIC(CIABM(CIALVL-1),"+"_CIAFN)
"RTN","RGUTIMP",50,0)
 .I +CIABM(CIALVL)<0 D ERR("Error access subfile entry",CIALBL) Q
"RTN","RGUTIMP",51,0)
 .S CIAFLD=$$FLD(.01,CIAFN)
"RTN","RGUTIMP",52,0)
 I 'CIAFLD D ERR("Unknown field",CIALBL) Q
"RTN","RGUTIMP",53,0)
 I 'CIAWP,CIALN="" Q
"RTN","RGUTIMP",54,0)
 ;S:CIALN="+" CIALN=U_$TR($P(CIABM(CIALVL),U,2),"|",",")_"$C(1))",CIALN=1+$O(@CIALN,-1)\1
"RTN","RGUTIMP",55,0)
 I CIAFLD=.01!'CIABM(CIALVL)!CIAWP D  Q
"RTN","RGUTIMP",56,0)
 .I 'CIAWP,CIAFLD'=.01 D ERR("First field is not primary index",CIALBL) Q
"RTN","RGUTIMP",57,0)
 .I 'CIAWP D
"RTN","RGUTIMP",58,0)
 ..S CIABM(CIALVL)=$$ENTRY^RGUTDIC(CIABM(CIALVL),"="_CIALN)
"RTN","RGUTIMP",59,0)
 ..S:+CIABM(CIALVL)'>0 CIABM(CIALVL)=$$ENTRY^RGUTDIC(CIABM(CIALVL),"="_$$UP^XLFSTR(CIALN))
"RTN","RGUTIMP",60,0)
 .S:+CIABM(CIALVL)'>0!CIAWP CIABM(CIALVL)=$$ENTRY^RGUTDIC(CIABM(CIALVL),$S(CIALN="@"&'CIAWP:CIALN,1:"~LX;.01///^S X=CIALN"))
"RTN","RGUTIMP",61,0)
 .I +CIABM(CIALVL)'>0,CIALN'="@" D ERR("Error adding entry",CIALN)
"RTN","RGUTIMP",62,0)
 S CIABM(CIALVL)=$$ENTRY^RGUTDIC(CIABM(CIALVL),"<;"_CIAFLD_"///^S X=CIALN")
"RTN","RGUTIMP",63,0)
 D:+CIABM(CIALVL)'>0 ERR("Error writing to field",CIALBL)
"RTN","RGUTIMP",64,0)
 Q
"RTN","RGUTIMP",65,0)
FILE(CIAFN) ;
"RTN","RGUTIMP",66,0)
 K CIABM
"RTN","RGUTIMP",67,0)
 S CIABM(1)=$$ENTRY^RGUTDIC(CIAFN),CIALVL=1
"RTN","RGUTIMP",68,0)
 I +CIABM(1)'<0 S CIAFN=+$P(CIABM(1),U,4)
"RTN","RGUTIMP",69,0)
 E  D ERR("Error accessing database",CIAFN)
"RTN","RGUTIMP",70,0)
 Q CIAFN
"RTN","RGUTIMP",71,0)
FLD(CIANM,CIAFN) ;
"RTN","RGUTIMP",72,0)
 N CIAZ
"RTN","RGUTIMP",73,0)
 S CIAZ=$S(CIANM="":.01,CIANM=+CIANM:CIANM,1:+$O(^DD(CIAFN,"B",CIANM,0)))
"RTN","RGUTIMP",74,0)
 I '$D(^DD(CIAFN,CIAZ,0)) S CIAZ=0
"RTN","RGUTIMP",75,0)
 E  S CIAWP=$P(^(0),U,2)["W"
"RTN","RGUTIMP",76,0)
 Q CIAZ
"RTN","RGUTIMP",77,0)
ERR(CIAMSG,CIAX) ;
"RTN","RGUTIMP",78,0)
 S CIAST=CIAC_U_CIAMSG_$S($D(CIAX):": "_CIAX,1:"")
"RTN","RGUTIMP",79,0)
 W:CIATRACE=2 CIAC_": "_$P(CIAST,U,2,999),!
"RTN","RGUTIMP",80,0)
 Q
"RTN","RGUTIN")
1^45
"RTN","RGUTIN0")
0^46^B1456400
"RTN","RGUTIN0",1,0)
RGUTIN0 ;RG/IND/DKM - Platform-dependent operations;04-May-2006 08:19;DKM
"RTN","RGUTIN0",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTIN0",3,0)
 ;;
"RTN","RGUTIN0",4,0)
 ;=================================================================
"RTN","RGUTIN0",5,0)
 ; Return version #
"RTN","RGUTIN0",6,0)
VER() Q $P($T(+2),";",3)
"RTN","RGUTIN0",7,0)
CVTFN(CIAFIL,CIAROOT) ;
"RTN","RGUTIN0",8,0)
 N CIAZ,CIAZ1,CIAD
"RTN","RGUTIN0",9,0)
 S CIAD=$$DIRDLM,CIAROOT=$G(CIAROOT)
"RTN","RGUTIN0",10,0)
 S:$E(CIAROOT,$L(CIAROOT))=$E(CIAD,3) CIAROOT=$E(CIAROOT,1,$L(CIAROOT)-1)
"RTN","RGUTIN0",11,0)
 S CIAZ=$L(CIAFIL,"/"),CIAZ1=$P(CIAFIL,"/",1,CIAZ-1),CIAFIL=$P(CIAFIL,"/",CIAZ)
"RTN","RGUTIN0",12,0)
 S:$L(CIAZ1) CIAROOT=CIAROOT_$E(CIAD,$S($L(CIAROOT):2,1:1))_$TR(CIAZ1,"/.-",$E(CIAD,2))
"RTN","RGUTIN0",13,0)
 Q CIAROOT_$S($L(CIAROOT):$E(CIAD,3),1:"")_CIAFIL
"RTN","RGUTIN0",14,0)
 ; Set right margin
"RTN","RGUTIN0",15,0)
RM(X) ;EP
"RTN","RGUTIN0",16,0)
 X ^%ZOSF("RM")
"RTN","RGUTIN0",17,0)
 Q
"RTN","RGUTIN0",18,0)
 ; Test for tag/routine
"RTN","RGUTIN0",19,0)
TEST(X) ;EP
"RTN","RGUTIN0",20,0)
 N Z
"RTN","RGUTIN0",21,0)
 S:X[U Z=$P(X,U),X=$P(X,U,2)
"RTN","RGUTIN0",22,0)
 Q:'$L(X)!(X'?.1"%"1.AN) 0
"RTN","RGUTIN0",23,0)
 X ^%ZOSF("TEST")
"RTN","RGUTIN0",24,0)
 Q $S('$T:0,$G(Z)="":1,Z'?.1"%"1.AN:0,1:$T(@Z^@X)'="")
"RTN","RGUTIN0",25,0)
ETRAP() Q $$NEWERR^%ZTER
"RTN","RGUTIN0",26,0)
 ; Open a host file
"RTN","RGUTIN0",27,0)
OPENX(X1,X2) ;EP
"RTN","RGUTIN0",28,0)
 D OPEN(.X1,.X2)
"RTN","RGUTIN0",29,0)
 Q X1
"RTN","RGUTIN16")
0^47^B4324901
"RTN","RGUTIN16",1,0)
RGUTIN16 ;RG/IND/DKM - Inits for VMS;04-May-2006 08:19;DKM
"RTN","RGUTIN16",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTIN16",3,0)
 ;;
"RTN","RGUTIN16",4,0)
 ;=================================================================
"RTN","RGUTIN16",5,0)
 ; Open a host file
"RTN","RGUTIN16",6,0)
OPEN(X1,X2) ;EP
"RTN","RGUTIN16",7,0)
 N Z
"RTN","RGUTIN16",8,0)
 S Z="X1"_$S("Rr"[$G(X2):":READONLY:0","Ww"[X2:":(NEWVERSION,RECORDSIZE=65535)","Bb"[X2:":(READONLY,BLOCKSIZE=0)",1:"")
"RTN","RGUTIN16",9,0)
 O @Z
"RTN","RGUTIN16",10,0)
 U X1
"RTN","RGUTIN16",11,0)
 S ^TMP("RGUTHFS",$J,X1)=""
"RTN","RGUTIN16",12,0)
 Q
"RTN","RGUTIN16",13,0)
 ; Close a host file
"RTN","RGUTIN16",14,0)
CLOSE(X) ;EP
"RTN","RGUTIN16",15,0)
 C X
"RTN","RGUTIN16",16,0)
 K ^TMP("RGUTHFS",$J,X)
"RTN","RGUTIN16",17,0)
 Q
"RTN","RGUTIN16",18,0)
 ; Close all open host files
"RTN","RGUTIN16",19,0)
CLOSEALL ;EP
"RTN","RGUTIN16",20,0)
 N Z
"RTN","RGUTIN16",21,0)
 S Z=""
"RTN","RGUTIN16",22,0)
 F  S Z=$O(^TMP("RGUTHFS",$J,Z)) Q:Z=""  C Z
"RTN","RGUTIN16",23,0)
 K ^TMP("RGUTHFS",$J)
"RTN","RGUTIN16",24,0)
 Q
"RTN","RGUTIN16",25,0)
EOF U $I:TRAP
"RTN","RGUTIN16",26,0)
 Q
"RTN","RGUTIN16",27,0)
EOFERR() Q $ZE["ENDOFILE"
"RTN","RGUTIN16",28,0)
 ; Read a line of data
"RTN","RGUTIN16",29,0)
READ(X,Y) ;EP
"RTN","RGUTIN16",30,0)
 U $G(Y,$I):NOTRAP
"RTN","RGUTIN16",31,0)
 R X:5
"RTN","RGUTIN16",32,0)
 Q $S($T:$ZA=-1,1:1)
"RTN","RGUTIN16",33,0)
 ; Delete a host file
"RTN","RGUTIN16",34,0)
DELETE(X) ;EP
"RTN","RGUTIN16",35,0)
 O X::0
"RTN","RGUTIN16",36,0)
 C X:DELETE
"RTN","RGUTIN16",37,0)
 Q
"RTN","RGUTIN16",38,0)
 ; Rename a host file
"RTN","RGUTIN16",39,0)
RENAME(X1,X2) ;EP
"RTN","RGUTIN16",40,0)
 O X1:READONLY:0
"RTN","RGUTIN16",41,0)
 C X1:RENAME=X2
"RTN","RGUTIN16",42,0)
 Q
"RTN","RGUTIN16",43,0)
 ; Return directory of files
"RTN","RGUTIN16",44,0)
DIR(X1,X2,X3) ;EP
"RTN","RGUTIN16",45,0)
 N Z,Z1
"RTN","RGUTIN16",46,0)
 S $ZT="DIRX^RGUTOS",X3=$G(X3,"^UTILITY(""DIR"",$J)")
"RTN","RGUTIN16",47,0)
 K @X3
"RTN","RGUTIN16",48,0)
 S:'$G(X2) X2=9999999999
"RTN","RGUTIN16",49,0)
 F Z=1:1:X2 S Z1=$ZSEARCH(X1),X1="" Q:Z1=""  S @X3@($P(Z1,"]",2))=""
"RTN","RGUTIN16",50,0)
DIRX Q
"RTN","RGUTIN16",51,0)
 ; Return default working directory
"RTN","RGUTIN16",52,0)
DEFDIR(X) ;EP
"RTN","RGUTIN16",53,0)
 Q $G(X,$P($G(^XTV(8989.3,1,"DEV")),U))
"RTN","RGUTIN16",54,0)
 ; Return path delimiters
"RTN","RGUTIN16",55,0)
DIRDLM() ;EP
"RTN","RGUTIN16",56,0)
 Q "[.]"
"RTN","RGUTIN16",57,0)
 ; Parse current error
"RTN","RGUTIN16",58,0)
ERR(X1,X2,X3) ;EP
"RTN","RGUTIN16",59,0)
 S X1=$P($P($ZE,", ",2),"-",3),X2=$P($P($ZE,", "),":"),X3=$P($ZE,", ",$S(X1="ZTRAP":4,1:3))
"RTN","RGUTIN16",60,0)
 Q
"RTN","RGUTIN16",61,0)
 ; Raise an exception
"RTN","RGUTIN16",62,0)
RAISE(X) ;EP
"RTN","RGUTIN16",63,0)
 ZT $G(X)
"RTN","RGUTIN16",64,0)
 ; Set error trap
"RTN","RGUTIN16",65,0)
TRAP(X) ;EP
"RTN","RGUTIN16",66,0)
 Q $S($D(X):"$ZT="""_X_"""",1:"$ZT")
"RTN","RGUTIN16",67,0)
 ; Return size of a file
"RTN","RGUTIN16",68,0)
SIZE(X) ;EP
"RTN","RGUTIN16",69,0)
 Q $ZC(%GETFILE,X,"BLS")*$ZC(%GETFILE,X,"EOF")
"RTN","RGUTIN16",70,0)
 ; Return free disk space
"RTN","RGUTIN16",71,0)
FREE(X) ;EP
"RTN","RGUTIN16",72,0)
 Q $ZC(%GETDVI,X,"FREEBLOCKS")/2048
"RTN","RGUTIN16",73,0)
 ; Return host ip address
"RTN","RGUTIN16",74,0)
HOSTIP() ;EP
"RTN","RGUTIN16",75,0)
 Q ""
"RTN","RGUTIN16",76,0)
 ; Return host name
"RTN","RGUTIN16",77,0)
HOSTNAME() ;EP
"RTN","RGUTIN16",78,0)
 Q ""
"RTN","RGUTIN16",79,0)
 ; Return client ip address
"RTN","RGUTIN16",80,0)
CLIENTIP() ;EP
"RTN","RGUTIN16",81,0)
 N IP,$ET
"RTN","RGUTIN16",82,0)
 S $ET="S $EC=""""",IP=$&%UCXGETPEER
"RTN","RGUTIN16",83,0)
 Q $A(IP,1)_"."_$A(IP,2)_"."_$A(IP,3)_"."_$A(IP,4)
"RTN","RGUTIN18")
0^48^B4545277
"RTN","RGUTIN18",1,0)
RGUTIN18 ;RG/IND/DKM - Inits for Cache (Windows);04-May-2006 08:19;DKM
"RTN","RGUTIN18",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTIN18",3,0)
 ;;
"RTN","RGUTIN18",4,0)
 ;=================================================================
"RTN","RGUTIN18",5,0)
 ; Open a host file
"RTN","RGUTIN18",6,0)
OPEN(X1,X2) ;EP
"RTN","RGUTIN18",7,0)
 O X1:$S("Rr"[$G(X2):"RS","Ww"[X2:"WNS","Bb"[X2:"RF",1:""):0
"RTN","RGUTIN18",8,0)
 E  ZT "NOPEN"
"RTN","RGUTIN18",9,0)
 U X1
"RTN","RGUTIN18",10,0)
 S ^TMP("RGUTHFS",$J,X1)=""
"RTN","RGUTIN18",11,0)
 Q
"RTN","RGUTIN18",12,0)
 ; Close a host file
"RTN","RGUTIN18",13,0)
CLOSE(X) ;EP
"RTN","RGUTIN18",14,0)
 C X
"RTN","RGUTIN18",15,0)
 K ^TMP("RGUTHFS",$J,X)
"RTN","RGUTIN18",16,0)
 Q
"RTN","RGUTIN18",17,0)
 ; Close all host files
"RTN","RGUTIN18",18,0)
CLOSEALL ;EP
"RTN","RGUTIN18",19,0)
 N Z
"RTN","RGUTIN18",20,0)
 S Z=""
"RTN","RGUTIN18",21,0)
 F  S Z=$O(^TMP("RGUTHFS",$J,Z)) Q:Z=""  C Z
"RTN","RGUTIN18",22,0)
 K ^TMP("RGUTHFS",$J)
"RTN","RGUTIN18",23,0)
 Q
"RTN","RGUTIN18",24,0)
EOF ZT:$ZA=-1 "ENDOFFILE"
"RTN","RGUTIN18",25,0)
 Q
"RTN","RGUTIN18",26,0)
EOFERR() Q:$ZE["ENDOFFILE"
"RTN","RGUTIN18",27,0)
 ; Read line of data
"RTN","RGUTIN18",28,0)
READ(X,Y) ;EP
"RTN","RGUTIN18",29,0)
 N $ET
"RTN","RGUTIN18",30,0)
 S $ET="",$ZT="READX^RGUTOS"
"RTN","RGUTIN18",31,0)
 U $G(Y,$I)
"RTN","RGUTIN18",32,0)
 Q:$ZEOF 1
"RTN","RGUTIN18",33,0)
 R X:5
"RTN","RGUTIN18",34,0)
 Q:$T 0
"RTN","RGUTIN18",35,0)
READX Q 1
"RTN","RGUTIN18",36,0)
 ; Delete a host file
"RTN","RGUTIN18",37,0)
DELETE(X) ;EP
"RTN","RGUTIN18",38,0)
 S X=$ZF(-1,"del """_X_"""")
"RTN","RGUTIN18",39,0)
 Q
"RTN","RGUTIN18",40,0)
 ; Rename a host file
"RTN","RGUTIN18",41,0)
RENAME(X1,X2) ;EP
"RTN","RGUTIN18",42,0)
 S X1=$ZF(-1,"ren """_X1_""" """_X2_"""")
"RTN","RGUTIN18",43,0)
 Q
"RTN","RGUTIN18",44,0)
 ; Return directory of files
"RTN","RGUTIN18",45,0)
DIR(X1,X2,X3) ;EP
"RTN","RGUTIN18",46,0)
 N Z,Z1,FDLM
"RTN","RGUTIN18",47,0)
 S FDLM=$E($$DIRDLM,1)
"RTN","RGUTIN18",48,0)
 S X3=$G(X3,$NA(^UTILITY("DIR",$J)))
"RTN","RGUTIN18",49,0)
 K @X3
"RTN","RGUTIN18",50,0)
 S:'$G(X2) X2=9999999999
"RTN","RGUTIN18",51,0)
 F Z=1:1:X2 S Z1=$ZSEARCH(X1),X1="" Q:Z1=""  D
"RTN","RGUTIN18",52,0)
 .S Z1=$P(Z1,FDLM,$L(Z1,FDLM))
"RTN","RGUTIN18",53,0)
 .S:$TR(Z1,".")'="" @X3@(Z1)=""
"RTN","RGUTIN18",54,0)
 Q
"RTN","RGUTIN18",55,0)
 ; Return path delimiters
"RTN","RGUTIN18",56,0)
DIRDLM() ;EP
"RTN","RGUTIN18",57,0)
 Q "\\\"
"RTN","RGUTIN18",58,0)
 ; Return default working directory
"RTN","RGUTIN18",59,0)
DEFDIR(X) ;EP
"RTN","RGUTIN18",60,0)
 N FDLM
"RTN","RGUTIN18",61,0)
 S FDLM=$E($$DIRDLM,1)
"RTN","RGUTIN18",62,0)
 S X=$G(X,$P($G(^XTV(8989.3,1,"DEV")),U))
"RTN","RGUTIN18",63,0)
 S:$E(X,$L(X))'=FDLM X=X_FDLM
"RTN","RGUTIN18",64,0)
 Q X
"RTN","RGUTIN18",65,0)
 ; Parse current error
"RTN","RGUTIN18",66,0)
ERR(X1,X2,X3) ;EP
"RTN","RGUTIN18",67,0)
 S X1=$E($P($ZE,">"),2,99),X2=$P($P($ZE,">",2),":"),X3=X1
"RTN","RGUTIN18",68,0)
 S:X2["*" X2=""
"RTN","RGUTIN18",69,0)
 S:$E(X1)="Z" X3=$E(X1,2,99),X1="ZTRAP"
"RTN","RGUTIN18",70,0)
 Q
"RTN","RGUTIN18",71,0)
 ; Raise an exception
"RTN","RGUTIN18",72,0)
RAISE(X) ;EP
"RTN","RGUTIN18",73,0)
 ZT $G(X)
"RTN","RGUTIN18",74,0)
 ; Set error trap
"RTN","RGUTIN18",75,0)
TRAP(X) ;EP
"RTN","RGUTIN18",76,0)
 Q $S($D(X):"$ZT="""_X_"""",1:"$ZT")
"RTN","RGUTIN18",77,0)
 ; Return size of file
"RTN","RGUTIN18",78,0)
SIZE(X) ;EP
"RTN","RGUTIN18",79,0)
 Q 0
"RTN","RGUTIN18",80,0)
 ; Return free disk space
"RTN","RGUTIN18",81,0)
FREE(X) ;EP
"RTN","RGUTIN18",82,0)
 Q 0
"RTN","RGUTIN18",83,0)
 ; Return host ip address
"RTN","RGUTIN18",84,0)
HOSTIP() ;EP
"RTN","RGUTIN18",85,0)
 Q $P($P($ZU(131,1),","),":",2)
"RTN","RGUTIN18",86,0)
 ; Return host name
"RTN","RGUTIN18",87,0)
HOSTNAME() ;EP
"RTN","RGUTIN18",88,0)
 Q $P($P($ZU(131,1),","),":")
"RTN","RGUTIN18",89,0)
 ; Return client ip address
"RTN","RGUTIN18",90,0)
CLIENTIP() ;EP
"RTN","RGUTIN18",91,0)
 N IP,$ET
"RTN","RGUTIN18",92,0)
 S $ET="S $EC=""""",IP=$ZU(111,0)
"RTN","RGUTIN18",93,0)
 Q $A(IP,1)_"."_$A(IP,2)_"."_$A(IP,3)_"."_$A(IP,4)
"RTN","RGUTIN58")
0^70^B5603465
"RTN","RGUTIN58",1,0)
RGUTIN58 ;RG/IND/DKM/PLS - Inits for MSM-UNIX;04-May-2006 08:19;DKM
"RTN","RGUTIN58",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTIN58",3,0)
 ;;
"RTN","RGUTIN58",4,0)
 ;=================================================================
"RTN","RGUTIN58",5,0)
 ; Open a host file
"RTN","RGUTIN58",6,0)
OPEN(X1,X2) ;EP
"RTN","RGUTIN58",7,0)
 N Z
"RTN","RGUTIN58",8,0)
 S X2=$G(X2,"R")
"RTN","RGUTIN58",9,0)
 F Z=51:1:55 I '$D(^TMP("RGUTHFS",$J,Z)) D  Q
"RTN","RGUTIN58",10,0)
 .ZT:Z=55 "TMOF"
"RTN","RGUTIN58",11,0)
 .O Z:(X1:$S("RrWw"[X2:X2,1:"R")::::$S("Bb"[X2:"",1:$C(10)))
"RTN","RGUTIN58",12,0)
 .U Z
"RTN","RGUTIN58",13,0)
 .ZT:$ZA "OPEN"
"RTN","RGUTIN58",14,0)
 .S ^TMP("RGUTHFS",$J,Z)=X1,X1=Z
"RTN","RGUTIN58",15,0)
 Q
"RTN","RGUTIN58",16,0)
 ; Close a host file
"RTN","RGUTIN58",17,0)
CLOSE(X) ;EP
"RTN","RGUTIN58",18,0)
 N Z
"RTN","RGUTIN58",19,0)
 S Z=X,X=$G(^TMP("RGUTHFS",$J,X))
"RTN","RGUTIN58",20,0)
 K ^(Z)
"RTN","RGUTIN58",21,0)
 C Z
"RTN","RGUTIN58",22,0)
 Q
"RTN","RGUTIN58",23,0)
 ; Close all open host files
"RTN","RGUTIN58",24,0)
CLOSEALL ;EP
"RTN","RGUTIN58",25,0)
 N Z
"RTN","RGUTIN58",26,0)
 F Z=0:0 S Z=$O(^TMP("RGUTHFS",$J,Z)) Q:'Z  C Z
"RTN","RGUTIN58",27,0)
 K ^TMP("RGUTHFS",$J)
"RTN","RGUTIN58",28,0)
 Q
"RTN","RGUTIN58",29,0)
EOF ZT:$ZC "EOF"
"RTN","RGUTIN58",30,0)
 Q
"RTN","RGUTIN58",31,0)
EOFERR() Q $ZE["ZEOF"
"RTN","RGUTIN58",32,0)
 ; Read a line of data
"RTN","RGUTIN58",33,0)
READ(X,Y) ;EP
"RTN","RGUTIN58",34,0)
 U:$G(Y)'="" Y
"RTN","RGUTIN58",35,0)
 R X:5
"RTN","RGUTIN58",36,0)
 Q $S($T:$ZC&'$L(X),1:1)
"RTN","RGUTIN58",37,0)
 ; Delete a host file
"RTN","RGUTIN58",38,0)
DELETE(X) ;EP
"RTN","RGUTIN58",39,0)
 D JW("rm "_X)
"RTN","RGUTIN58",40,0)
 Q
"RTN","RGUTIN58",41,0)
 ; Rename a host file
"RTN","RGUTIN58",42,0)
RENAME(X1,X2) ;EP
"RTN","RGUTIN58",43,0)
 D JW("mv "_X1_" "_X2)
"RTN","RGUTIN58",44,0)
 Q
"RTN","RGUTIN58",45,0)
 ; Generate a directory listing
"RTN","RGUTIN58",46,0)
DIR(X1,X2,X3) ;EP
"RTN","RGUTIN58",47,0)
 N TFN,X,Z
"RTN","RGUTIN58",48,0)
 N $ET
"RTN","RGUTIN58",49,0)
 S $ET="",@$$TRAP("DIRERR^RGUTOS")
"RTN","RGUTIN58",50,0)
 S X1=$G(X1),X2=+$G(X2),X3=$G(X3,"^UTILITY(""DIR"",$J)")
"RTN","RGUTIN58",51,0)
 S TFN=$$DEFDIR_"RGUTAUTO."_$J
"RTN","RGUTIN58",52,0)
 K @X3
"RTN","RGUTIN58",53,0)
 ;
"RTN","RGUTIN58",54,0)
 D DELETE(TFN)
"RTN","RGUTIN58",55,0)
 D JW("ls -d "_X1_" >> "_TFN)
"RTN","RGUTIN58",56,0)
 D OPEN(.TFN,"R")
"RTN","RGUTIN58",57,0)
 F Z=1:1 Q:(X2&(Z>X2))  Q:$$READ(.X,TFN)  D
"RTN","RGUTIN58",58,0)
 .S X=$TR($P(X,"/",$L(X,"/")),$C(10),"")
"RTN","RGUTIN58",59,0)
 .I X]"" S @X3@(X)=""
"RTN","RGUTIN58",60,0)
DIRERR D CLOSE(.TFN)
"RTN","RGUTIN58",61,0)
 D DELETE(TFN)
"RTN","RGUTIN58",62,0)
 Q
"RTN","RGUTIN58",63,0)
 ; Return default working directory
"RTN","RGUTIN58",64,0)
DEFDIR(X) ;EP
"RTN","RGUTIN58",65,0)
 S X=$G(X,$P($G(^XTV(8989.3,1,"DEV")),U))
"RTN","RGUTIN58",66,0)
 S:$E(X,$L(X))'="/" X=X_"/"
"RTN","RGUTIN58",67,0)
 Q X
"RTN","RGUTIN58",68,0)
 ; Return path delimiters
"RTN","RGUTIN58",69,0)
DIRDLM() ;EP
"RTN","RGUTIN58",70,0)
 Q "///"
"RTN","RGUTIN58",71,0)
 ; Return free disk space
"RTN","RGUTIN58",72,0)
FREE(X) ;EP
"RTN","RGUTIN58",73,0)
 S X=$ZOS(9,$E(X))
"RTN","RGUTIN58",74,0)
 Q X*$P(X,"^",2)*$P(X,"^",3)/1048576
"RTN","RGUTIN58",75,0)
 ; Parse current error
"RTN","RGUTIN58",76,0)
ERR(X1,X2,X3) ;EP
"RTN","RGUTIN58",77,0)
 S X1=$E($P($ZE,">"),2,99),X2=$P($P($ZE,">",2),":"),X3=X1
"RTN","RGUTIN58",78,0)
 S:X2["*" X2=""
"RTN","RGUTIN58",79,0)
 S:$E(X1)="Z" X3=$E(X1,2,99),X1="ZTRAP"
"RTN","RGUTIN58",80,0)
 Q
"RTN","RGUTIN58",81,0)
 ; Raise an exception
"RTN","RGUTIN58",82,0)
RAISE(X) ;EP
"RTN","RGUTIN58",83,0)
 ZT $G(X)
"RTN","RGUTIN58",84,0)
 ; Set error trap
"RTN","RGUTIN58",85,0)
TRAP(X) ;EP
"RTN","RGUTIN58",86,0)
 Q $S($D(X):"$ZT="""_X_"""",1:"$ZT")
"RTN","RGUTIN58",87,0)
 ; Return size of a file
"RTN","RGUTIN58",88,0)
SIZE(X) ;EP
"RTN","RGUTIN58",89,0)
 N I,Y,Z
"RTN","RGUTIN58",90,0)
 S Z=$ZOS(12,X,0),Z=$P(Z,"^",2,999),Y=0
"RTN","RGUTIN58",91,0)
 I Z'="" F I=30:-1:27 S Y=Y*256+$A(Z,I)
"RTN","RGUTIN58",92,0)
 Q Y
"RTN","RGUTIN58",93,0)
 ; Return host ip address
"RTN","RGUTIN58",94,0)
HOSTIP() ;EP
"RTN","RGUTIN58",95,0)
 Q ""
"RTN","RGUTIN58",96,0)
 ; Return host name
"RTN","RGUTIN58",97,0)
HOSTNAME() ;EP
"RTN","RGUTIN58",98,0)
 Q ""
"RTN","RGUTIN58",99,0)
 ; Return client ip address
"RTN","RGUTIN58",100,0)
CLIENTIP() ;EP
"RTN","RGUTIN58",101,0)
 Q ""
"RTN","RGUTIN58",102,0)
 ; Issue host command and wait
"RTN","RGUTIN58",103,0)
JW(ZOSHC) ;msm extrinsic
"RTN","RGUTIN58",104,0)
 N ZOSHX
"RTN","RGUTIN58",105,0)
 S ZOSHX=$$JOBWAIT^%HOSTCMD(ZOSHC)
"RTN","RGUTIN58",106,0)
 Q
"RTN","RGUTIN68")
0^69^B4493128
"RTN","RGUTIN68",1,0)
RGUTIN68 ;RG/IND/DKM - Inits for Cache (Unix);04-May-2006 08:19;DKM
"RTN","RGUTIN68",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTIN68",3,0)
 ;;
"RTN","RGUTIN68",4,0)
 ;=================================================================
"RTN","RGUTIN68",5,0)
 ; Open a host file
"RTN","RGUTIN68",6,0)
OPEN(X1,X2) ;EP
"RTN","RGUTIN68",7,0)
 O X1:$S("Rr"[$G(X2):"RS","Ww"[X2:"WNS","Bb"[X2:"RF",1:""):0
"RTN","RGUTIN68",8,0)
 E  ZT "NOPEN"
"RTN","RGUTIN68",9,0)
 U X1
"RTN","RGUTIN68",10,0)
 S ^TMP("RGUTHFS",$J,X1)=""
"RTN","RGUTIN68",11,0)
 Q
"RTN","RGUTIN68",12,0)
 ; Close a host file
"RTN","RGUTIN68",13,0)
CLOSE(X) ;EP
"RTN","RGUTIN68",14,0)
 C X
"RTN","RGUTIN68",15,0)
 K ^TMP("RGUTHFS",$J,X)
"RTN","RGUTIN68",16,0)
 Q
"RTN","RGUTIN68",17,0)
 ; Close all open host files
"RTN","RGUTIN68",18,0)
CLOSEALL ;EP
"RTN","RGUTIN68",19,0)
 N Z
"RTN","RGUTIN68",20,0)
 S Z=""
"RTN","RGUTIN68",21,0)
 F  S Z=$O(^TMP("RGUTHFS",$J,Z)) Q:Z=""  C Z
"RTN","RGUTIN68",22,0)
 K ^TMP("RGUTHFS",$J)
"RTN","RGUTIN68",23,0)
 Q
"RTN","RGUTIN68",24,0)
EOF ZT:$ZA=-1 "ENDOFFILE"
"RTN","RGUTIN68",25,0)
 Q
"RTN","RGUTIN68",26,0)
EOFERR() Q:$ZE["ENDOFFILE"
"RTN","RGUTIN68",27,0)
 ; Read a line of data
"RTN","RGUTIN68",28,0)
READ(X,Y) ;EP
"RTN","RGUTIN68",29,0)
 N $ET
"RTN","RGUTIN68",30,0)
 S $ET="",$ZT="READX"
"RTN","RGUTIN68",31,0)
 U $G(Y,$I)
"RTN","RGUTIN68",32,0)
 Q:$ZEOF 1
"RTN","RGUTIN68",33,0)
 R X:5
"RTN","RGUTIN68",34,0)
 Q:$T 0
"RTN","RGUTIN68",35,0)
READX Q 1
"RTN","RGUTIN68",36,0)
 ; Delete a host file
"RTN","RGUTIN68",37,0)
DELETE(X) ;EP
"RTN","RGUTIN68",38,0)
 S X=$ZF(-1,"rm """_X_"""")
"RTN","RGUTIN68",39,0)
 Q
"RTN","RGUTIN68",40,0)
 ; Rename a host file
"RTN","RGUTIN68",41,0)
RENAME(X1,X2) ;EP
"RTN","RGUTIN68",42,0)
 S X1=$ZF(-1,"mv """_X1_""" """_X2_"""")
"RTN","RGUTIN68",43,0)
 Q
"RTN","RGUTIN68",44,0)
 ; Generate directory listing
"RTN","RGUTIN68",45,0)
DIR(X1,X2,X3) ;EP
"RTN","RGUTIN68",46,0)
 N Z,Z1,FDLM
"RTN","RGUTIN68",47,0)
 S FDLM=$E($$DIRDLM,1)
"RTN","RGUTIN68",48,0)
 S X3=$G(X3,$NA(^UTILITY("DIR",$J)))
"RTN","RGUTIN68",49,0)
 K @X3
"RTN","RGUTIN68",50,0)
 S:'$G(X2) X2=9999999999
"RTN","RGUTIN68",51,0)
 F Z=1:1:X2 S Z1=$ZSEARCH(X1),X1="" Q:Z1=""  D
"RTN","RGUTIN68",52,0)
 .S Z1=$P(Z1,FDLM,$L(Z1,FDLM))
"RTN","RGUTIN68",53,0)
 .S:$TR(Z1,".")'="" @X3@(Z1)=""
"RTN","RGUTIN68",54,0)
 Q
"RTN","RGUTIN68",55,0)
 ; Return path delimiters
"RTN","RGUTIN68",56,0)
DIRDLM() ;EP
"RTN","RGUTIN68",57,0)
 Q "///"
"RTN","RGUTIN68",58,0)
 ; Return default working directory
"RTN","RGUTIN68",59,0)
DEFDIR(X) ;EP
"RTN","RGUTIN68",60,0)
 N FDLM
"RTN","RGUTIN68",61,0)
 S FDLM=$E($$DIRDLM,1)
"RTN","RGUTIN68",62,0)
 S X=$G(X,$P($G(^XTV(8989.3,1,"DEV")),U))
"RTN","RGUTIN68",63,0)
 S:$E(X,$L(X))'=FDLM X=X_FDLM
"RTN","RGUTIN68",64,0)
 Q X
"RTN","RGUTIN68",65,0)
 ; Parse current error
"RTN","RGUTIN68",66,0)
ERR(X1,X2,X3) ;EP
"RTN","RGUTIN68",67,0)
 S X1=$E($P($ZE,">"),2,99),X2=$P($P($ZE,">",2),":"),X3=X1
"RTN","RGUTIN68",68,0)
 S:X2["*" X2=""
"RTN","RGUTIN68",69,0)
 S:$E(X1)="Z" X3=$E(X1,2,99),X1="ZTRAP"
"RTN","RGUTIN68",70,0)
 Q
"RTN","RGUTIN68",71,0)
 ; Raise an exception
"RTN","RGUTIN68",72,0)
RAISE(X) ;EP
"RTN","RGUTIN68",73,0)
 ZT $G(X)
"RTN","RGUTIN68",74,0)
 ; Set error trap
"RTN","RGUTIN68",75,0)
TRAP(X) ;EP
"RTN","RGUTIN68",76,0)
 Q $S($D(X):"$ZT="""_X_"""",1:"$ZT")
"RTN","RGUTIN68",77,0)
 ; Return size of a file
"RTN","RGUTIN68",78,0)
SIZE(X) ;EP
"RTN","RGUTIN68",79,0)
 Q 0
"RTN","RGUTIN68",80,0)
 ; Return free disk space
"RTN","RGUTIN68",81,0)
FREE(X) ;EP
"RTN","RGUTIN68",82,0)
 Q 0
"RTN","RGUTIN68",83,0)
 ; Return host ip address
"RTN","RGUTIN68",84,0)
HOSTIP() ;EP
"RTN","RGUTIN68",85,0)
 Q $P($P($ZU(131,1),","),":",2)
"RTN","RGUTIN68",86,0)
 ; Return host name
"RTN","RGUTIN68",87,0)
HOSTNAME() ;EP
"RTN","RGUTIN68",88,0)
 Q $P($P($ZU(131,1),","),":")
"RTN","RGUTIN68",89,0)
 ; Return client ip address
"RTN","RGUTIN68",90,0)
CLIENTIP() ;EP
"RTN","RGUTIN68",91,0)
 N IP,$ET
"RTN","RGUTIN68",92,0)
 S $ET="S $EC=""""",IP=$ZU(111,0)
"RTN","RGUTIN68",93,0)
 Q $A(IP,1)_"."_$A(IP,2)_"."_$A(IP,3)_"."_$A(IP,4)
"RTN","RGUTIN8")
0^49^B4187174
"RTN","RGUTIN8",1,0)
RGUTIN8 ;RG/IND/DKM - Inits for MSM;04-May-2006 08:19;DKM
"RTN","RGUTIN8",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTIN8",3,0)
 ;;
"RTN","RGUTIN8",4,0)
 ;=================================================================
"RTN","RGUTIN8",5,0)
 ; Open a host file
"RTN","RGUTIN8",6,0)
OPEN(X1,X2) ;EP
"RTN","RGUTIN8",7,0)
 N Z
"RTN","RGUTIN8",8,0)
 S X2=$G(X2,"R")
"RTN","RGUTIN8",9,0)
 F Z=51:1:55 I '$D(^TMP("RGUTHFS",$J,Z)) D  Q
"RTN","RGUTIN8",10,0)
 .ZT:Z=55 "TMOF"
"RTN","RGUTIN8",11,0)
 .O Z:(X1:$S("RrWw"[X2:X2,1:"R")::::$S("Bb"[X2:"",1:$C(13,10)))
"RTN","RGUTIN8",12,0)
 .U Z
"RTN","RGUTIN8",13,0)
 .ZT:$ZA "OPEN"
"RTN","RGUTIN8",14,0)
 .S ^TMP("RGUTHFS",$J,Z)=X1,X1=Z
"RTN","RGUTIN8",15,0)
 Q
"RTN","RGUTIN8",16,0)
 ; Close a host file
"RTN","RGUTIN8",17,0)
CLOSE(X) ;EP
"RTN","RGUTIN8",18,0)
 N Z
"RTN","RGUTIN8",19,0)
 S Z=X,X=$G(^TMP("RGUTHFS",$J,X))
"RTN","RGUTIN8",20,0)
 K ^(Z)
"RTN","RGUTIN8",21,0)
 C Z
"RTN","RGUTIN8",22,0)
 Q
"RTN","RGUTIN8",23,0)
 ; Close all open host files
"RTN","RGUTIN8",24,0)
CLOSEALL ;EP
"RTN","RGUTIN8",25,0)
 N Z
"RTN","RGUTIN8",26,0)
 F Z=0:0 S Z=$O(^TMP("RGUTHFS",$J,Z)) Q:'Z  C Z
"RTN","RGUTIN8",27,0)
 K ^TMP("RGUTHFS",$J)
"RTN","RGUTIN8",28,0)
 Q
"RTN","RGUTIN8",29,0)
EOF ZT:$ZC "EOF"
"RTN","RGUTIN8",30,0)
 Q
"RTN","RGUTIN8",31,0)
EOFERR() Q $ZE["ZEOF"
"RTN","RGUTIN8",32,0)
 ; Read a line of data
"RTN","RGUTIN8",33,0)
READ(X,Y) ;EP
"RTN","RGUTIN8",34,0)
 U:$G(Y)'="" Y
"RTN","RGUTIN8",35,0)
 R X:5
"RTN","RGUTIN8",36,0)
 Q $S($T:$ZC&'$L(X),1:1)
"RTN","RGUTIN8",37,0)
 ; Delete a host file
"RTN","RGUTIN8",38,0)
DELETE(X) ;EP
"RTN","RGUTIN8",39,0)
 S X=$ZOS(2,X)
"RTN","RGUTIN8",40,0)
 Q
"RTN","RGUTIN8",41,0)
 ; Rename a host file
"RTN","RGUTIN8",42,0)
RENAME(X1,X2) ;EP
"RTN","RGUTIN8",43,0)
 N Z
"RTN","RGUTIN8",44,0)
 S Z=$ZOS(3,X1,X2)
"RTN","RGUTIN8",45,0)
 Q
"RTN","RGUTIN8",46,0)
 ; Generate a directory listing
"RTN","RGUTIN8",47,0)
DIR(X1,X2,X3) ;EP
"RTN","RGUTIN8",48,0)
 N Z
"RTN","RGUTIN8",49,0)
 S X1=$ZOS(12,X1,0),X2=+$G(X2),X3=$G(X3,"^UTILITY(""DIR"",$J)")
"RTN","RGUTIN8",50,0)
 K @X3
"RTN","RGUTIN8",51,0)
 F Z=1:1 Q:(X2&(Z>X2))!($P(X1,"^")="")  S @X3@($P(X1,"^"))="",X1=$ZOS(13,X1)
"RTN","RGUTIN8",52,0)
 Q
"RTN","RGUTIN8",53,0)
 ; Return default working directory
"RTN","RGUTIN8",54,0)
DEFDIR(X) ;EP
"RTN","RGUTIN8",55,0)
 S X=$G(X,$P($G(^XTV(8989.3,1,"DEV")),U))
"RTN","RGUTIN8",56,0)
 S:$E(X,$L(X))'="\" X=X_"\"
"RTN","RGUTIN8",57,0)
 Q X
"RTN","RGUTIN8",58,0)
 ; Return path delimiters
"RTN","RGUTIN8",59,0)
DIRDLM() ;EP
"RTN","RGUTIN8",60,0)
 Q "\\\"
"RTN","RGUTIN8",61,0)
 ; Return free disk space
"RTN","RGUTIN8",62,0)
FREE(X) ;EP
"RTN","RGUTIN8",63,0)
 S X=$ZOS(9,$E(X))
"RTN","RGUTIN8",64,0)
 Q X*$P(X,"^",2)*$P(X,"^",3)/1048576
"RTN","RGUTIN8",65,0)
 ; Parse current error
"RTN","RGUTIN8",66,0)
ERR(X1,X2,X3) ;EP
"RTN","RGUTIN8",67,0)
 S X1=$E($P($ZE,">"),2,99),X2=$P($P($ZE,">",2),":"),X3=X1
"RTN","RGUTIN8",68,0)
 S:X2["*" X2=""
"RTN","RGUTIN8",69,0)
 S:$E(X1)="Z" X3=$E(X1,2,99),X1="ZTRAP"
"RTN","RGUTIN8",70,0)
 Q
"RTN","RGUTIN8",71,0)
 ; Raise an exception
"RTN","RGUTIN8",72,0)
RAISE(X) ;EP
"RTN","RGUTIN8",73,0)
 ZT $G(X)
"RTN","RGUTIN8",74,0)
 ; Set error trap
"RTN","RGUTIN8",75,0)
TRAP(X) ;EP
"RTN","RGUTIN8",76,0)
 Q $S($D(X):"$ZT="""_X_"""",1:"$ZT")
"RTN","RGUTIN8",77,0)
 ; Return size of a file
"RTN","RGUTIN8",78,0)
SIZE(X) ;EP
"RTN","RGUTIN8",79,0)
 N I,Y,Z
"RTN","RGUTIN8",80,0)
 S Z=$ZOS(12,X,0),Z=$P(Z,"^",2,999),Y=0
"RTN","RGUTIN8",81,0)
 I Z'="" F I=30:-1:27 S Y=Y*256+$A(Z,I)
"RTN","RGUTIN8",82,0)
 Q Y
"RTN","RGUTIN8",83,0)
 ; Return host ip address
"RTN","RGUTIN8",84,0)
HOSTIP() ;EP
"RTN","RGUTIN8",85,0)
 Q ""
"RTN","RGUTIN8",86,0)
 ; Return host name
"RTN","RGUTIN8",87,0)
HOSTNAME() ;EP
"RTN","RGUTIN8",88,0)
 Q ""
"RTN","RGUTIN8",89,0)
 ; Return client ip address
"RTN","RGUTIN8",90,0)
CLIENTIP() ;EP
"RTN","RGUTIN8",91,0)
 Q ""
"RTN","RGUTIN8U")
1^68
"RTN","RGUTINIT")
0^60^B6026117
"RTN","RGUTINIT",1,0)
RGUTINIT ;RG/IND/DKM - Platform specific inits;04-May-2006 08:19;DKM
"RTN","RGUTINIT",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTINIT",3,0)
 ;;
"RTN","RGUTINIT",4,0)
 ;=================================================================
"RTN","RGUTINIT",5,0)
POST N CIAOS,CIAH,X
"RTN","RGUTINIT",6,0)
 S U="^",X="ERROR^RGUTINIT",@^%ZOSF("TRAP"),CIAOS=$P(^%ZOSF("OS"),U,2)
"RTN","RGUTINIT",7,0)
 I 'CIAOS D
"RTN","RGUTINIT",8,0)
 .D HOME^%ZIS,TITLE^RGUT("Platform-Specific Inits",1.6)
"RTN","RGUTINIT",9,0)
 .S CIAH(1)="Enter the name of this MUMPS environment for the RG-namespace"
"RTN","RGUTINIT",10,0)
 .S CIAH(2)="platform-specific initialization process."
"RTN","RGUTINIT",11,0)
 .S CIAOS=$$ENTRY^RGUTLKP("^DD(""OS"")","UX","Operating System: ","B","*","","",0,5,"","","HELP(.CIAH)")
"RTN","RGUTINIT",12,0)
 .W !!
"RTN","RGUTINIT",13,0)
 D:CIAOS>0 INIT(CIAOS)
"RTN","RGUTINIT",14,0)
 Q
"RTN","RGUTINIT",15,0)
INIT(CIAOS) ;
"RTN","RGUTINIT",16,0)
 N I,X,Y,Z,N,CIAOSZ
"RTN","RGUTINIT",17,0)
 S CIAOSZ=$$OSRTN($G(CIAOS))
"RTN","RGUTINIT",18,0)
 S:$L(CIAOSZ) @("CIAOSZ="_CIAOSZ)
"RTN","RGUTINIT",19,0)
 I '$L(CIAOSZ) D  Q
"RTN","RGUTINIT",20,0)
 .X "ZL RGUTOS1 ZS RGUTOS"
"RTN","RGUTINIT",21,0)
 .D MES("Init not found for specified OS. Will use generic init.")
"RTN","RGUTINIT",22,0)
 S I=0,N="RGUT"
"RTN","RGUTINIT",23,0)
 K ^TMP(N,$J)
"RTN","RGUTINIT",24,0)
 F Z=0,1 F X=$S(Z:3,1:1):1 S Y=$T(+X^@$S(Z:CIAOSZ,1:"RGUTIN0")) Q:Y=""  S I=I+1,^TMP(N,$J,I)=Y
"RTN","RGUTINIT",25,0)
 S $P(^TMP(N,$J,1),";")="RGUTOS "
"RTN","RGUTINIT",26,0)
 X "ZR  F Z=1:1:I ZI ^TMP(N,$J,Z) ZS:Z=I RGUTOS"
"RTN","RGUTINIT",27,0)
 K ^TMP(N,$J)
"RTN","RGUTINIT",28,0)
 F Z=1:1 S X=$P($T(DEVICE+Z),";;",2,99) Q:X=""  S ^TMP(N,$J,Z)=$$MSG^RGUT(X,"|")
"RTN","RGUTINIT",29,0)
 I $$ENTRY^RGUTIMP($NA(^TMP(N,$J))) D
"RTN","RGUTINIT",30,0)
 .D MES("Unable to install RGUT HFS DEVICE.")
"RTN","RGUTINIT",31,0)
 W !!,"Initialization completed for "_$P(^DD("OS",CIAOS,0),"^")_" operating system.",!!
"RTN","RGUTINIT",32,0)
 K ^TMP(N,$J)
"RTN","RGUTINIT",33,0)
 Q
"RTN","RGUTINIT",34,0)
OSRTN(X) Q $P($T(@("OS"_X)),";",4,99)
"RTN","RGUTINIT",35,0)
OS8 ;;MSM;$S($ZV["UNIX":"RGUTIN58",1:"RGUTIN8")
"RTN","RGUTINIT",36,0)
OS16 ;;DSM;RGUTIN16
"RTN","RGUTINIT",37,0)
OS18 ;;Cache;$S($ZV["UNIX":"RGUTIN68",1:"RGUTIN18")
"RTN","RGUTINIT",38,0)
MES(X) D BMES^XPDUTL(X)
"RTN","RGUTINIT",39,0)
 Q
"RTN","RGUTINIT",40,0)
ERROR D MES("An error has occurred during initialization.")
"RTN","RGUTINIT",41,0)
 Q
"RTN","RGUTINIT",42,0)
 ; Return $I for HFS device
"RTN","RGUTINIT",43,0)
HFS() Q $S(CIAOS=16:"TEMP.TMP",CIAOS=8:51,CIAOS=18:"NUL",1:"@")
"RTN","RGUTINIT",44,0)
DEVICE ; Device setup
"RTN","RGUTINIT",45,0)
 ;;:3.5
"RTN","RGUTINIT",46,0)
 ;;.NAME: RGUT HFS DEVICE
"RTN","RGUTINIT",47,0)
 ;;.LOCATION OF TERMINAL: HFS
"RTN","RGUTINIT",48,0)
 ;;.$I: |$$HFS^RGUTINIT|
"RTN","RGUTINIT",49,0)
 ;;.SIGN-ON/SYSTEM DEVICE: N
"RTN","RGUTINIT",50,0)
 ;;.TYPE: HFS
"RTN","RGUTINIT",51,0)
 ;;.SUBTYPE: P-OTHER
"RTN","RGUTINIT",52,0)
 ;;.ASK DEVICE: N
"RTN","RGUTINIT",53,0)
 ;;.ASK PARAMETERS: N
"RTN","RGUTINIT",54,0)
 ;;.ASK HOST FILE: N
"RTN","RGUTINIT",55,0)
 ;;.ASK HFS I/O OPERATION: N
"RTN","RGUTINIT",56,0)
 ;;
"RTN","RGUTLK2")
0^50^B51777461
"RTN","RGUTLK2",1,0)
RGUTLK2 ;RG/IND/DKM - Continuation of RGUTLKP;20-Jan-2015 13:23;DKM
"RTN","RGUTLK2",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTLK2",3,0)
 ;;
"RTN","RGUTLK2",4,0)
 ;=================================================================
"RTN","RGUTLK2",5,0)
LKP(%CIADX) ;
"RTN","RGUTLK2",6,0)
 N %CIAD,%CIAZ,%CIAN
"RTN","RGUTLK2",7,0)
 S %CIAXRN=0,%CIATRNC=0,%CIAIEN="",%CIASCT=0,%CIAD=%CIADX
"RTN","RGUTLK2",8,0)
 W:'%CIAHTML $$XY(%CIAX+$L(%CIAPRMP),%CIAY),$S(%CIAOPT["X":"",1:%CIAD),%CIAEOS,!,"Searching"_$S(%CIAOPT[U:" (press ^ to abort)",1:"")_"...",*13
"RTN","RGUTLK2",9,0)
 I $E(%CIAD)="`" S %CIASLCT=%CIAD G:'%CIAHTML NR5 D SHOW($E(%CIAD,2,999)) Q 1
"RTN","RGUTLK2",10,0)
NXTREF S %CIAXRN=%CIAXRN+1,%CIAXRF=$P(%CIAXRFS,U,%CIAXRN),%CIAD=%CIADX
"RTN","RGUTLK2",11,0)
 I %CIAXRF="" G:%CIASCT NR3 W:'%CIAHTML *7,*13,%CIAEOL,"Not found"_$S(%CIAD="":".",1:": ")_$S(%CIAD'=+%CIAD:%CIAD,%CIAOPT["D":$$ENTRY^RGUTDT(%CIAD),1:%CIAD) S %CIAD1=$S(%CIAOPT["X":U,1:"") Q ""
"RTN","RGUTLK2",12,0)
 S %CIAOPT(0)=%CIAOPT_%CIAXRFS(%CIAXRF)
"RTN","RGUTLK2",13,0)
 I %CIAOPT(0)["D",$L(%CIADX) D  G:%CIAD<1 NXTREF
"RTN","RGUTLK2",14,0)
 .S %CIAD=$$DT^RGUT(%CIADX)
"RTN","RGUTLK2",15,0)
 I %CIAOPT(0)["W" D MTL G NXTREF
"RTN","RGUTLK2",16,0)
 S %CIAKEY=$S(%CIAOPT(0)["P":$P(%CIAD," "),1:%CIAD)_$S(%CIADIR<0:$C(255),1:""),%CIANUM=$S(%CIAKEY=+%CIAKEY:%CIAKEY,1:"")
"RTN","RGUTLK2",17,0)
 I %CIAD'="",$D(@%CIADIC@(%CIAXRF,%CIAD)) S %=%CIASCT+1 D ADD(%CIAD) I %CIASCT=%,%CIAOPT(0)["A" D SLCT(%CIASCT) Q %CIAIEN
"RTN","RGUTLK2",18,0)
NR2 I %CIAOPT(0)[U R %#1:0 I %=U S %CIATRNC=1 G NR3:%CIASCT Q ""
"RTN","RGUTLK2",19,0)
 S %CIAKEY=$O(@%CIADIC@(%CIAXRF,%CIAKEY),%CIADIR)
"RTN","RGUTLK2",20,0)
 I (%CIANUM="")=(%CIAKEY=+%CIAKEY),%CIAD'="" S %CIAKEY=""
"RTN","RGUTLK2",21,0)
 I %CIAKEY'="",%CIAOPT(0)["P",%CIAKEY'=%CIAD S %=$$PARTIAL(%CIAD,%CIAKEY) D ADD(%CIAKEY):%>0 G:%'<0 NR2:%CIASCT<100
"RTN","RGUTLK2",22,0)
 I %CIAKEY'="",%CIAOPT(0)'["P",$E(%CIAKEY,1,$L(%CIAD))=%CIAD D ADD(%CIAKEY) G:%CIASCT<100 NR2
"RTN","RGUTLK2",23,0)
 I %CIANUM'="" S %CIAKEY=%CIANUM_$C($S(%CIADIR<0:255,1:1)),%CIANUM="" G NR2
"RTN","RGUTLK2",24,0)
 I %CIASCT'<100 W:'%CIAHTML *7 S %CIAXALL=0,%CIATRNC=1
"RTN","RGUTLK2",25,0)
 G:'%CIASCT!%CIAXALL NXTREF
"RTN","RGUTLK2",26,0)
NR3 I %CIASCT=1,%CIAOPT(0)[1,'%CIATRNC D SLCT(1) Q %CIAIEN
"RTN","RGUTLK2",27,0)
 S %CIAKEY=%CIASLT,%CIASLT=1,%CIASMAX=$S(%CIAHTML!%CIARS:99999,1:17-%CIAY)
"RTN","RGUTLK2",28,0)
NR4 W:'%CIAHTML $$XY(0,%CIAY+1),%CIAEOS,!
"RTN","RGUTLK2",29,0)
 F %CIAN=%CIAKEY:1:%CIAKEY+%CIASMAX-1 D  Q:%CIAN=%CIASCT
"RTN","RGUTLK2",30,0)
 .F %CIAZ=0:1:%CIACOL-1 D
"RTN","RGUTLK2",31,0)
 ..S %1=IOM/%CIACOL*%CIAZ\1,%CIALAST=%CIAZ*%CIASMAX+%CIAN
"RTN","RGUTLK2",32,0)
 ..Q:%CIALAST>%CIASCT
"RTN","RGUTLK2",33,0)
 ..W:'%CIAHTML $$XY(%1,$Y),%CIAEOL,%CIALAST,?5
"RTN","RGUTLK2",34,0)
 ..D SHOW(^TMP(%CIAPID,%CIALAST),%1+4)
"RTN","RGUTLK2",35,0)
 .W:'%CIAQT !
"RTN","RGUTLK2",36,0)
 Q:%CIAHTML $S(%CIATRNC:-%CIASCT,1:%CIASCT)
"RTN","RGUTLK2",37,0)
 W:%CIALAST<%CIASCT !,%CIASCT-%CIALAST," more choice(s)..."
"RTN","RGUTLK2",38,0)
 W:%CIATRNC "  (list was truncated)",!
"RTN","RGUTLK2",39,0)
 W %CIAEOS_%CIABEL,!!
"RTN","RGUTLK2",40,0)
 R "Enter selection: ",%CIASLCT:DTIME
"RTN","RGUTLK2",41,0)
 S:'$T %CIASLCT=U
"RTN","RGUTLK2",42,0)
 W *13
"RTN","RGUTLK2",43,0)
 I %CIAOPT["K",%CIASLCT="" Q -1
"RTN","RGUTLK2",44,0)
 I "Nn"[%CIASLCT S %CIAKEY=$S(%CIALAST<%CIASCT:%CIALAST+1,1:1) G NR4
"RTN","RGUTLK2",45,0)
 I "Bb"[%CIASLCT S %CIAKEY=$S(%CIAKEY=1:%CIASCT-%CIASMAX+1,%CIAKEY'>%CIASMAX:1,1:%CIAKEY-%CIASMAX) S:%CIAKEY<1 %CIAKEY=1 G NR4
"RTN","RGUTLK2",46,0)
 I "?"[%CIASLCT D HELP2 G NR4
"RTN","RGUTLK2",47,0)
 I "^^"[%CIASLCT S %CIAD2="",%CIAD1=$S(%CIAOPT(0)["X":%CIASLCT,%CIASLCT="^^":%CIASLCT,1:"") Q ""
"RTN","RGUTLK2",48,0)
NR5 F  D  Q:%CIASLCT=""
"RTN","RGUTLK2",49,0)
 .I %CIAOPT(0)["M" S %CIAD=$P(%CIASLCT,";"),%CIASLCT=$P(%CIASLCT,";",2,999)
"RTN","RGUTLK2",50,0)
 .E  S %CIAD=%CIASLCT,%CIASLCT=""
"RTN","RGUTLK2",51,0)
 .Q:'$L(%CIAD)
"RTN","RGUTLK2",52,0)
 .I %CIAD?1.N D SLCT(%CIAD) Q
"RTN","RGUTLK2",53,0)
 .I %CIAOPT(0)["M",%CIAD?1.N1"-".N D  Q
"RTN","RGUTLK2",54,0)
 ..N %1,%2
"RTN","RGUTLK2",55,0)
 ..S %1=+%CIAD,%2=+$P(%CIAD,"-",2)
"RTN","RGUTLK2",56,0)
 ..S:'%2 %2=%CIASCT
"RTN","RGUTLK2",57,0)
 ..S:%1>%2 %CIAD=%1,%1=%2,%2=%CIAD
"RTN","RGUTLK2",58,0)
 ..S:%2>%CIASCT %2=%CIASCT
"RTN","RGUTLK2",59,0)
 ..F %=%1:1:%2 D SLCT(%)
"RTN","RGUTLK2",60,0)
 .I %CIAOPT["X",%CIAOPT'["L" S (%CIASLCT,%CIAD1,%CIAIEN)="" Q
"RTN","RGUTLK2",61,0)
 .I $E(%CIAD)="`" D  Q
"RTN","RGUTLK2",62,0)
 ..S %CIAD=+$E(%CIAD,2,999)
"RTN","RGUTLK2",63,0)
 ..I $$VALD(%CIAD) D DISV(%CIAD) S %CIAIEN=%CIAD
"RTN","RGUTLK2",64,0)
 .S %CIAD1=%CIAD1_";"_%CIAD
"RTN","RGUTLK2",65,0)
 W $$XY(0,%CIAY+1),%CIAEOS,!
"RTN","RGUTLK2",66,0)
 Q %CIAIEN
"RTN","RGUTLK2",67,0)
 ; Add list selection to output
"RTN","RGUTLK2",68,0)
SLCT(%CIASLCT) ;
"RTN","RGUTLK2",69,0)
 I %CIASLCT>0,%CIASLCT'>%CIASCT D
"RTN","RGUTLK2",70,0)
 .S %CIAIEN=+^TMP(%CIAPID,+%CIASLCT)
"RTN","RGUTLK2",71,0)
 .D DISV(%CIAIEN)
"RTN","RGUTLK2",72,0)
 Q
"RTN","RGUTLK2",73,0)
 ; Add IEN to output
"RTN","RGUTLK2",74,0)
DISV(%CIAIEN) ;
"RTN","RGUTLK2",75,0)
 Q:%CIAIEN=""
"RTN","RGUTLK2",76,0)
 I %CIAMUL'="",'$D(@%CIAMUL@(%CIAIEN)) S @%CIAMUL@(%CIAIEN)="" D:'%CIAQT APP(%CIAIEN)
"RTN","RGUTLK2",77,0)
 D:%CIAMUL="" APP(%CIAIEN)
"RTN","RGUTLK2",78,0)
 Q:%CIAOPT(0)["F"
"RTN","RGUTLK2",79,0)
 K:%CIASAME ^DISV(DUZ,%CIADISV)
"RTN","RGUTLK2",80,0)
 S %CIASAME=0,^DISV(DUZ,%CIADISV)=%CIAIEN,^(%CIADISV,%CIAIEN)=""
"RTN","RGUTLK2",81,0)
 Q
"RTN","RGUTLK2",82,0)
 ; Append primary key to key list
"RTN","RGUTLK2",83,0)
APP(%CIAIEN) ;
"RTN","RGUTLK2",84,0)
 N %CIAKEY
"RTN","RGUTLK2",85,0)
 S %CIAKEY=$S(%CIAIEN=+%CIAIEN:$P($G(@%CIADIC@(%CIAIEN,0)),U),1:%CIAIEN)
"RTN","RGUTLK2",86,0)
 S %CIAKEY=$$FMT(%CIAIEN,%CIAKEY)
"RTN","RGUTLK2",87,0)
 Q:'$L(%CIAKEY)!($L(%CIAKEY)+$L(%CIAD2)'<250)
"RTN","RGUTLK2",88,0)
 S %CIAD2=%CIAD2_$S($L(%CIAD2):";",1:"")_%CIAKEY
"RTN","RGUTLK2",89,0)
 I %CIAOPT(0)'["J",%CIAOPT(0)'["M" S %CIAD2=%CIAD2_"  "_$$SID(%CIAIEN)
"RTN","RGUTLK2",90,0)
 Q
"RTN","RGUTLK2",91,0)
 ; Multi-term lookup
"RTN","RGUTLK2",92,0)
MTL N %
"RTN","RGUTLK2",93,0)
 S %=$S(%CIADIC[")":$TR(%CIADIC,")",","),1:%CIADIC_"(")_"%CIAXRF)"
"RTN","RGUTLK2",94,0)
 S %=$$LKP^RGUTMTL(%,%CIAD,"^TMP(""MTL"",%CIAPID)",%CIAOPT(0)[U)
"RTN","RGUTLK2",95,0)
 S:%<0 %CIATRNC=1
"RTN","RGUTLK2",96,0)
 D:% ADD(%CIAPID,"^TMP","MTL")
"RTN","RGUTLK2",97,0)
 K ^TMP("MTL",%CIAPID)
"RTN","RGUTLK2",98,0)
 Q
"RTN","RGUTLK2",99,0)
 ; Add key to selection list
"RTN","RGUTLK2",100,0)
ADD(%CIAKEY,%CIAIDX,%CIASUB) ;
"RTN","RGUTLK2",101,0)
 N %S
"RTN","RGUTLK2",102,0)
 S:'$D(%CIAIDX) %CIAIDX=%CIADIC,%CIASUB=%CIAXRF
"RTN","RGUTLK2",103,0)
 F %S=0:0 S %S=$O(@%CIAIDX@(%CIASUB,%CIAKEY,%S)) Q:'%S  D
"RTN","RGUTLK2",104,0)
 .I %CIAOPT(0)["O",$D(^TMP(%CIAPID,0,%S)) Q
"RTN","RGUTLK2",105,0)
 .I $$VALD(%S) D
"RTN","RGUTLK2",106,0)
 ..S %CIASCT=%CIASCT+1,^TMP(%CIAPID,%CIASCT)=%S_U_$S(%CIAOPT(0)["W":"",1:%CIAKEY),^(0,%S)=""
"RTN","RGUTLK2",107,0)
 ..I %CIAOPT(0)["S",$G(^DISV(DUZ,%CIADISV))=%S S %CIASLT=%CIASCT
"RTN","RGUTLK2",108,0)
 Q
"RTN","RGUTLK2",109,0)
 ; Check entry against screening criteria
"RTN","RGUTLK2",110,0)
VALD(%S) Q:'$D(@%CIADIC@(%S))!'%S 0
"RTN","RGUTLK2",111,0)
 Q:%CIASCN="" 1
"RTN","RGUTLK2",112,0)
 N %,%1
"RTN","RGUTLK2",113,0)
 S %1=1,@$$TRAP^RGUTOS("V3^RGUTLK2")
"RTN","RGUTLK2",114,0)
 F %=0:0 S %=$O(@%CIASCN@(%)) Q:'%  D  Q:%1
"RTN","RGUTLK2",115,0)
 .S %1=0,@$$TRAP^RGUTOS("V2^RGUTLK2")
"RTN","RGUTLK2",116,0)
 .X "S %1="_@%CIASCN@(%)
"RTN","RGUTLK2",117,0)
V2 .Q
"RTN","RGUTLK2",118,0)
 Q %1
"RTN","RGUTLK2",119,0)
V3 Q 0
"RTN","RGUTLK2",120,0)
 ; Show the specified selection
"RTN","RGUTLK2",121,0)
SHOW(%CIASLCT,%CIACOL1,%CIACOL2) ;
"RTN","RGUTLK2",122,0)
 N %S,%Z,%P,%I
"RTN","RGUTLK2",123,0)
 S %S=+%CIASLCT,%Z=$G(@%CIADIC@(%S,0)),%P=$$FMT(%S,$S(%CIAOPT["I":$P(%CIASLCT,U,2),1:$P(%Z,U)))
"RTN","RGUTLK2",124,0)
 ;S %I=$$SID(%S,$P(%CIASLCT,U,2)),%I=$S(%I="":%P,1:%I)
"RTN","RGUTLK2",125,0)
 S %I=$$SID(%S,%P),%I=$S(%I="":%P,1:%I)
"RTN","RGUTLK2",126,0)
 I %CIAHTML D  Q
"RTN","RGUTLK2",127,0)
 .I '%CIAQT W $$MSG^RGUT(%CIAPRMP,"|"),!
"RTN","RGUTLK2",128,0)
 .E  D DISV(%S)
"RTN","RGUTLK2",129,0)
 S %CIACOL1=+$G(%CIACOL1,$X)
"RTN","RGUTLK2",130,0)
 I %CIAOPT(0)["Y" S %CIACOL2=+$G(%CIACOL2,IOM\%CIACOL+%CIACOL1-8-$L(%I))
"RTN","RGUTLK2",131,0)
 E  S %CIACOL2=+$G(%CIACOL2,IOM\%CIACOL\$S(%CIAOPT(0)["D":3,1:2)-3+%CIACOL1)
"RTN","RGUTLK2",132,0)
 W $$XY(%CIACOL1,$Y)
"RTN","RGUTLK2",133,0)
 I %CIAOPT(0)'["J",%I'=%P W $$TRUNC^RGUT(%P,IOM\%CIACOL-6),?%CIACOL2," "_$$TRUNC^RGUT(%I,IOM-%CIACOL2-2)
"RTN","RGUTLK2",134,0)
 E  W $$TRUNC^RGUT(%I,IOM\%CIACOL-6)
"RTN","RGUTLK2",135,0)
 Q
"RTN","RGUTLK2",136,0)
 ; Return external form of result
"RTN","RGUTLK2",137,0)
FMT(%S,%CIAKEY) ;
"RTN","RGUTLK2",138,0)
 Q:%CIAKEY="" %CIAKEY
"RTN","RGUTLK2",139,0)
 I %CIATRP'="",$D(@%CIATRP@(%CIAKEY)) Q @%CIATRP@(%CIAKEY)
"RTN","RGUTLK2",140,0)
 S:%CIAOPT(0)["D" %CIAKEY=$$ENTRY^RGUTDT(%CIAKEY)
"RTN","RGUTLK2",141,0)
 I %CIAOPT(0)["Z",%CIASCN'="",$G(@%CIASCN)'="" S @("%CIAKEY="_@%CIASCN)
"RTN","RGUTLK2",142,0)
 S:%CIAOPT["J" %CIAKEY=$$SID(%S,%CIAKEY)
"RTN","RGUTLK2",143,0)
 Q %CIAKEY
"RTN","RGUTLK2",144,0)
 ; Return secondary identifier
"RTN","RGUTLK2",145,0)
SID(%S,%CIAKEY) ;
"RTN","RGUTLK2",146,0)
 S %CIAKEY=$G(%CIAKEY)
"RTN","RGUTLK2",147,0)
 N %Z
"RTN","RGUTLK2",148,0)
 S %Z=$G(@%CIADIC@(%S,0)),@("%Z="_$S(%CIASID<0:$S(%CIAKEY=$$UP^XLFSTR($P(%Z,U)):"""""",1:"%CIAKEY"),%CIASID="":"%CIASID",1:%CIASID))
"RTN","RGUTLK2",149,0)
 Q %Z
"RTN","RGUTLK2",150,0)
 ; Partial key lookup
"RTN","RGUTLK2",151,0)
PARTIAL(%CIAD,%CIAKEY) ;
"RTN","RGUTLK2",152,0)
 N %,%1,%2
"RTN","RGUTLK2",153,0)
 S (%(1),%(2))=0,%1(1)=%CIAD,%1(2)=%CIAKEY
"RTN","RGUTLK2",154,0)
 F %=1,2 S %1(%)=$TR(%1(%),".,;:?/!-","        ")
"RTN","RGUTLK2",155,0)
P1 S (%2(1),%2(2))=""
"RTN","RGUTLK2",156,0)
 F %=1,2 D
"RTN","RGUTLK2",157,0)
 .F %(%)=%(%)+1:1:$L(%1(%)," ") S %2(%)=$P(%1(%)," ",%(%)) Q:%2(%)'=""
"RTN","RGUTLK2",158,0)
 Q:%2(1)="" 1
"RTN","RGUTLK2",159,0)
 Q:%2(1)'=$E(%2(2),1,$L(%2(1))) -(%(1)=1)
"RTN","RGUTLK2",160,0)
 G P1
"RTN","RGUTLK2",161,0)
HELP(X) ; Application-specific help
"RTN","RGUTLK2",162,0)
 N %
"RTN","RGUTLK2",163,0)
 S %=""
"RTN","RGUTLK2",164,0)
 F  S %=$O(X(%)) Q:%=""  D:$Y>20 PAUSE W $G(X(%)),!
"RTN","RGUTLK2",165,0)
 Q
"RTN","RGUTLK2",166,0)
 ; Generic help
"RTN","RGUTLK2",167,0)
HELP1 N %
"RTN","RGUTLK2",168,0)
 W !!
"RTN","RGUTLK2",169,0)
 D:%CIAHLP'="" @%CIAHLP
"RTN","RGUTLK2",170,0)
 W !,"Enter a blank line for default action.",!
"RTN","RGUTLK2",171,0)
 D:$Y>20 PAUSE
"RTN","RGUTLK2",172,0)
 W:%CIAOPT'["W" "Enter ?? to see all possible selections.",!
"RTN","RGUTLK2",173,0)
 D:$Y>20 PAUSE
"RTN","RGUTLK2",174,0)
 W "Enter a space to retrieve previous selection.",!
"RTN","RGUTLK2",175,0)
 D:$Y>20 PAUSE
"RTN","RGUTLK2",176,0)
 W "Enter a valid identifier for lookup."
"RTN","RGUTLK2",177,0)
 W:(%CIAOPT'["*")&(%CIAXRFS[U) "  Append a * to include all indices."
"RTN","RGUTLK2",178,0)
 W !
"RTN","RGUTLK2",179,0)
 I %CIAOPT["M" D
"RTN","RGUTLK2",180,0)
 .D:$Y>20 PAUSE
"RTN","RGUTLK2",181,0)
 .W "Separate multiple selections by semicolons."
"RTN","RGUTLK2",182,0)
 R !!,"Press any key to continue...",*%:DTIME
"RTN","RGUTLK2",183,0)
 Q
"RTN","RGUTLK2",184,0)
 ; Help at choice prompt
"RTN","RGUTLK2",185,0)
HELP2 N %
"RTN","RGUTLK2",186,0)
 W $$XY(0,16),%CIAEOS,!
"RTN","RGUTLK2",187,0)
 W $S(%CIAOPT(0)["K":"Enter N for next choices.",1:"Press RETURN for more choices.")
"RTN","RGUTLK2",188,0)
 W ?35,"Enter B for previous choices.",!
"RTN","RGUTLK2",189,0)
 W "Enter ^ to abort lookup.",?35,"Enter choice number to select.",!
"RTN","RGUTLK2",190,0)
 W "Any other entry = new lookup."
"RTN","RGUTLK2",191,0)
 W:%CIAOPT(0)["M" ?35,"Separate multiple selections by semicolons."
"RTN","RGUTLK2",192,0)
 R !!,"Press any key to continue...",*%:DTIME
"RTN","RGUTLK2",193,0)
 Q
"RTN","RGUTLK2",194,0)
PAUSE Q:%CIARS
"RTN","RGUTLK2",195,0)
 N %
"RTN","RGUTLK2",196,0)
 R !,"Press any key for more...",*%:DTIME
"RTN","RGUTLK2",197,0)
 W $$XY(0,%CIAY+2),%CIAEOS
"RTN","RGUTLK2",198,0)
 Q
"RTN","RGUTLK2",199,0)
XY(X,Y) ;I %CIARS W:'X *13 S $X=X,$Y=Y Q ""
"RTN","RGUTLK2",200,0)
 S:%CIARS Y=$Y
"RTN","RGUTLK2",201,0)
 Q $$XY^RGUT(X,Y)
"RTN","RGUTLKP")
0^51^B29106476
"RTN","RGUTLKP",1,0)
RGUTLKP ;RG/IND/DKM - File lookup utility;20-Jan-2015 13:23;DKM
"RTN","RGUTLKP",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTLKP",3,0)
 ;;
"RTN","RGUTLKP",4,0)
 ;=================================================================
"RTN","RGUTLKP",5,0)
 ; Inputs:
"RTN","RGUTLKP",6,0)
 ;   %CIADIC  = Global root or file #
"RTN","RGUTLKP",7,0)
 ;   %CIAOPT  = Options
"RTN","RGUTLKP",8,0)
 ;      A allow automatic selection of exact match
"RTN","RGUTLKP",9,0)
 ;      B sound bell with selection prompt
"RTN","RGUTLKP",10,0)
 ;      C use roll & scroll mode
"RTN","RGUTLKP",11,0)
 ;      D index is in date/time format
"RTN","RGUTLKP",12,0)
 ;      E use line editor
"RTN","RGUTLKP",13,0)
 ;      F forget the entry (i.e., ^DISV not updated)
"RTN","RGUTLKP",14,0)
 ;      G start with prior entry
"RTN","RGUTLKP",15,0)
 ;      H HTML-formatted output
"RTN","RGUTLKP",16,0)
 ;      I show only lookup identifiers
"RTN","RGUTLKP",17,0)
 ;      J show only secondary identifiers
"RTN","RGUTLKP",18,0)
 ;      K null entry at select prompt exits
"RTN","RGUTLKP",19,0)
 ;      L like X, but allows lookup at select prompt
"RTN","RGUTLKP",20,0)
 ;      M allow multiple selection
"RTN","RGUTLKP",21,0)
 ;      O show entry only once
"RTN","RGUTLKP",22,0)
 ;      P partial lookup
"RTN","RGUTLKP",23,0)
 ;      Q silent lookup
"RTN","RGUTLKP",24,0)
 ;      R reverse search through indices
"RTN","RGUTLKP",25,0)
 ;      S start selection list at last selection
"RTN","RGUTLKP",26,0)
 ;      T forget trapped inputs
"RTN","RGUTLKP",27,0)
 ;      U force uppercase translation
"RTN","RGUTLKP",28,0)
 ;      V extended DISV recall (prompt-specific)
"RTN","RGUTLKP",29,0)
 ;      W use multi-term lookup algorithm
"RTN","RGUTLKP",30,0)
 ;      X do not prompt for input
"RTN","RGUTLKP",31,0)
 ;      Y right justify secondary identifiers
"RTN","RGUTLKP",32,0)
 ;      Z perform special formatting of output
"RTN","RGUTLKP",33,0)
 ;      1 automatic selection if one match only
"RTN","RGUTLKP",34,0)
 ;      2-9 # of columns for selection display (default=1)
"RTN","RGUTLKP",35,0)
 ;      * force all indices to be searched
"RTN","RGUTLKP",36,0)
 ;      ^ allow search to be aborted
"RTN","RGUTLKP",37,0)
 ;   %CIAPRMP = Prompt (optional)
"RTN","RGUTLKP",38,0)
 ;   %CIAXRFS  = Cross-references to examine (all "B"'s by default)
"RTN","RGUTLKP",39,0)
 ;   %CIADATA  = Data to lookup (optional)
"RTN","RGUTLKP",40,0)
 ;   %CIASCN   = Screening criteria (optional)
"RTN","RGUTLKP",41,0)
 ;   %CIAMUL   = Local variable or global reference to
"RTN","RGUTLKP",42,0)
 ;              store multiple hits
"RTN","RGUTLKP",43,0)
 ;   %CIAX     = Column position for prompt (optional)
"RTN","RGUTLKP",44,0)
 ;   %CIAY     = Row position for prompt (optional)
"RTN","RGUTLKP",45,0)
 ;   %CIASID   = Piece # of secondary identifier (optional)
"RTN","RGUTLKP",46,0)
 ;              or executable M code to display same
"RTN","RGUTLKP",47,0)
 ;   %CIATRP   = Special inputs to trap (optional)
"RTN","RGUTLKP",48,0)
 ;   %CIAHLP   = Entry point to invoke help
"RTN","RGUTLKP",49,0)
 ; Outputs:
"RTN","RGUTLKP",50,0)
 ;    Return value = index of selected entry or:
"RTN","RGUTLKP",51,0)
 ;      -1 for forced exit by ^
"RTN","RGUTLKP",52,0)
 ;      -2 for forced exit by ^^
"RTN","RGUTLKP",53,0)
 ;       0 for null entry
"RTN","RGUTLKP",54,0)
 ;=================================================================
"RTN","RGUTLKP",55,0)
ENTRY(%CIADIC,%CIAOPT,%CIAPRMP,%CIAXRFS,%CIADATA,%CIASCN,%CIAMUL,%CIAX,%CIAY,%CIASID,%CIATRP,%CIAHLP) ;
"RTN","RGUTLKP",56,0)
 N %,%1,%N,%S,%Z,%CIAPID,%CIAXRF,%CIASCT,%CIAKEY,%CIAKEY1,%CIADISV,%CIASLCT
"RTN","RGUTLKP",57,0)
 N %CIAXALL,%CIAXRN,%CIASMAX,%CIATRNC,%CIAD,%CIAD1,%CIAD2,%CIABEL,%CIANUM
"RTN","RGUTLKP",58,0)
 N %CIADIR,%CIASLT,%CIACOL,%CIALAST,%CIASAME,%CIAEOS,%CIAEOL,%CIAHTML,%CIARS,%CIAQT
"RTN","RGUTLKP",59,0)
 I $$NEWERR^%ZTER N $ET S $ET=""
"RTN","RGUTLKP",60,0)
 S (%CIAOPT,%CIAOPT(0))=$$UP^XLFSTR($G(%CIAOPT)),%CIAPID="%CIALKP"_$J
"RTN","RGUTLKP",61,0)
 S %CIABEL=$S(%CIAOPT["B":$C(7),1:""),%CIADIR=$S(%CIAOPT["R":-1,1:1)
"RTN","RGUTLKP",62,0)
 S %CIASLT=1,%CIACOL=1,%CIAEOS=$C(27,91,74),%CIAEOL=$C(27,91,75),%CIAHTML=0
"RTN","RGUTLKP",63,0)
 S %CIAX=$G(%CIAX,0),%CIAY=$G(%CIAY,3),DTIME=$G(DTIME,999999)
"RTN","RGUTLKP",64,0)
 S %CIALAST=0,%CIARS=%CIAOPT["C",%CIAQT=%CIAOPT["Q"
"RTN","RGUTLKP",65,0)
 S:%CIARS %CIAEOS="",%CIAY=$Y
"RTN","RGUTLKP",66,0)
 S:%CIAQT %CIAOPT=%CIAOPT_"XHM"
"RTN","RGUTLKP",67,0)
 S:%CIAOPT["H" (%CIABEL,%CIAEOL,%CIAEOS)="",%CIAOPT=%CIAOPT_"X",%CIAHTML=1
"RTN","RGUTLKP",68,0)
 S:%CIAOPT["L" %CIAOPT=%CIAOPT_"X"
"RTN","RGUTLKP",69,0)
 S U="^",DUZ=$G(DUZ,0),IO=$G(IO,$I),IOM=$G(IOM,80),%CIAMUL=$G(%CIAMUL),%CIAHLP=$G(%CIAHLP),%CIATRP=$G(%CIATRP),%CIASCN=$G(%CIASCN),%CIASAME=%CIAOPT["M"&(%CIAMUL'="")
"RTN","RGUTLKP",70,0)
 F %=2:1:9 S:%CIAOPT[% %CIACOL=%
"RTN","RGUTLKP",71,0)
 S:%CIAOPT'["M" %CIAMUL=""
"RTN","RGUTLKP",72,0)
 K:%CIAMUL'="" @%CIAMUL
"RTN","RGUTLKP",73,0)
 S:%CIADIC=+%CIADIC %CIADIC=$$ROOT^DILFD(%CIADIC)
"RTN","RGUTLKP",74,0)
 S:$E(%CIADIC,$L(%CIADIC))="(" %CIADIC=$E(%CIADIC,1,$L(%CIADIC)-1)
"RTN","RGUTLKP",75,0)
 S:$E(%CIADIC,$L(%CIADIC))="," %CIADIC=$E(%CIADIC,1,$L(%CIADIC)-1)
"RTN","RGUTLKP",76,0)
 I %CIADIC["(",$E(%CIADIC,$L(%CIADIC))'=")" S %CIADIC=%CIADIC_")"
"RTN","RGUTLKP",77,0)
 S %CIAPRMP=$G(%CIAPRMP,$S(%CIAOPT["X":"",1:"Enter identifier: "))
"RTN","RGUTLKP",78,0)
 S %CIADISV=$S(%CIADIC[")":$TR(%CIADIC,")",","),1:%CIADIC_"(")_$S(%CIAOPT["V":";"_%CIAPRMP,1:"")
"RTN","RGUTLKP",79,0)
 S %CIASID=$G(%CIASID),%CIAXRFS=$G(%CIAXRFS),%CIADATA=$G(%CIADATA)
"RTN","RGUTLKP",80,0)
 S:%CIASID=+%CIASID %CIASID=$S(%CIASID<0:%CIASID,1:"$P(%Z,U,"_%CIASID_")")
"RTN","RGUTLKP",81,0)
 W:'%CIAHTML $$XY(%CIAX,%CIAY),%CIAEOS,!
"RTN","RGUTLKP",82,0)
 I %CIAOPT["G",$G(^DISV(DUZ,%CIADISV))'="" D
"RTN","RGUTLKP",83,0)
 .S %CIADATA=^(%CIADISV)
"RTN","RGUTLKP",84,0)
 .S:+%CIADATA=%CIADATA %CIADATA=$P($G(@%CIADIC@(%CIADATA,0)),U)
"RTN","RGUTLKP",85,0)
 I %CIAXRFS="" D
"RTN","RGUTLKP",86,0)
 .S (%,%CIAXRFS)="B"
"RTN","RGUTLKP",87,0)
 .F  S %=$O(@%CIADIC@(%)) Q:$E(%)'="B"  S %CIAXRFS=%CIAXRFS_U_%
"RTN","RGUTLKP",88,0)
 F %=1:1:$L(%CIAXRFS,U) S %1=$P(%CIAXRFS,U,%) S:%1'="" %CIAXRFS($P(%1,":"))=$P(%1,":",2),$P(%CIAXRFS,U,%)=$P(%1,":")
"RTN","RGUTLKP",89,0)
 S (%CIAD1,%CIAD2)=""
"RTN","RGUTLKP",90,0)
 D RM(0)
"RTN","RGUTLKP",91,0)
 S %CIAIEN=$$INPUT
"RTN","RGUTLKP",92,0)
 W:'%CIAHTML $$XY(%CIAX+$L(%CIAPRMP),%CIAY),$$TRUNC^RGUT(%CIAD2,IOM-$X),%CIAEOS
"RTN","RGUTLKP",93,0)
 D RM(IOM)
"RTN","RGUTLKP",94,0)
 K ^TMP(%CIAPID)
"RTN","RGUTLKP",95,0)
 Q %CIAIEN
"RTN","RGUTLKP",96,0)
INPUT() ;
"RTN","RGUTLKP",97,0)
INP K ^TMP(%CIAPID)
"RTN","RGUTLKP",98,0)
 D READ
"RTN","RGUTLKP",99,0)
 S:%CIAOPT["U" %CIAD=$$UP^XLFSTR(%CIAD)
"RTN","RGUTLKP",100,0)
 S @$$TRAP^RGUTOS("ERROR^RGUTLKP")
"RTN","RGUTLKP",101,0)
 I %CIAD="",%CIATRP'="" S %CIAD=$G(@%CIATRP@(" "))
"RTN","RGUTLKP",102,0)
 Q:"^^"[%CIAD -$L(%CIAD)
"RTN","RGUTLKP",103,0)
 I "?"[%CIAD D HELP1^RGUTLK2 G INP
"RTN","RGUTLKP",104,0)
 I %CIAD=" " D SAME G:%CIAD="" INP2
"RTN","RGUTLKP",105,0)
 I %CIATRP'="",$D(@%CIATRP@(%CIAD)) D  Q %CIAD
"RTN","RGUTLKP",106,0)
 .S %CIASAME=1
"RTN","RGUTLKP",107,0)
 .D:%CIAOPT'["T" DISV^RGUTLK2(%CIAD)
"RTN","RGUTLKP",108,0)
 .S %CIAD2=$G(@%CIATRP@(%CIAD))
"RTN","RGUTLKP",109,0)
 .S:%CIAD2="" %CIAD2=%CIAD
"RTN","RGUTLKP",110,0)
 S:%CIAD="??" %CIAD=""
"RTN","RGUTLKP",111,0)
 I $E(%CIAD,$L(%CIAD))="*" S %CIAXALL=1,%CIAD=$E(%CIAD,1,$L(%CIAD)-1)
"RTN","RGUTLKP",112,0)
 E  S %CIAXALL=%CIAOPT["*"
"RTN","RGUTLKP",113,0)
 S %CIAIEN=$$LKP^RGUTLK2(%CIAD)
"RTN","RGUTLKP",114,0)
INP2 G INP:%CIAIEN=""!$L(%CIAD1)
"RTN","RGUTLKP",115,0)
 Q %CIAIEN
"RTN","RGUTLKP",116,0)
READ S %CIAD=""
"RTN","RGUTLKP",117,0)
 F  Q:%CIAD'=""!(%CIAD1="")  S %CIAD=$P(%CIAD1,";"),%CIAD1=$P(%CIAD1,";",2,999)
"RTN","RGUTLKP",118,0)
 Q:$L(%CIAD)
"RTN","RGUTLKP",119,0)
 S %CIAD=%CIADATA,%CIADATA=""
"RTN","RGUTLKP",120,0)
 W:'%CIAHTML $$XY(0,%CIAY+2),%CIAEOS,$$XY(%CIAX,%CIAY),%CIAPRMP_%CIAEOL
"RTN","RGUTLKP",121,0)
 I %CIAOPT["X" S:%CIAOPT["E" %CIAOPT=$TR(%CIAOPT,"X"),%CIADATA=%CIAD Q
"RTN","RGUTLKP",122,0)
 I %CIAOPT["E" D
"RTN","RGUTLKP",123,0)
 .N %,%1
"RTN","RGUTLKP",124,0)
 .S:%CIAD?1"`"1.N %CIAD=+$E(%CIAD,2,99),%CIAD=$$FMT^RGUTLK2(%CIAD,$P($G(@%CIADIC@(%CIAD,0)),U))
"RTN","RGUTLKP",125,0)
 .S %1=0,%=%CIAX+$L(%CIAPRMP),%=$$ENTRY^RGUTEDT(%CIAD,IOM-%-1,%,%CIAY,"","RHV",,,,,.%1)
"RTN","RGUTLKP",126,0)
 .S:%1=3 %=U
"RTN","RGUTLKP",127,0)
 .S:%="?" %CIADATA=%CIAD
"RTN","RGUTLKP",128,0)
 .S %CIAD=%
"RTN","RGUTLKP",129,0)
 E  I '$L(%CIAD) R %CIAD:DTIME S:'$T %CIAD=U
"RTN","RGUTLKP",130,0)
 I %CIAOPT["M",%CIAD[";" S %CIAD1=%CIAD G READ
"RTN","RGUTLKP",131,0)
 Q
"RTN","RGUTLKP",132,0)
SAME S %CIASAME=0,%CIAIEN="",%CIAD="",%CIASCT=0
"RTN","RGUTLKP",133,0)
 I %CIAMUL'="" D
"RTN","RGUTLKP",134,0)
 .S %=""
"RTN","RGUTLKP",135,0)
 .F  S %=$O(^DISV(DUZ,%CIADISV,%)) Q:%=""  D SM1
"RTN","RGUTLKP",136,0)
 E  S %=$G(^DISV(DUZ,%CIADISV)) D:%'="" SM1
"RTN","RGUTLKP",137,0)
 S:%CIAHTML %CIAIEN=%CIASCT
"RTN","RGUTLKP",138,0)
 Q
"RTN","RGUTLKP",139,0)
SM1 I %CIATRP'="",$D(@%CIATRP@(%)) S %CIAIEN=%,%CIAD=%
"RTN","RGUTLKP",140,0)
 E  I $$VALD^RGUTLK2(%) S %CIAIEN=%
"RTN","RGUTLKP",141,0)
 I  D DISV^RGUTLK2(%CIAIEN) S %CIASCT=%CIASCT+1
"RTN","RGUTLKP",142,0)
 Q
"RTN","RGUTLKP",143,0)
XY(X,Y) Q $$XY^RGUTLK2(.X,.Y)
"RTN","RGUTLKP",144,0)
RM(X) X ^%ZOSF("RM")
"RTN","RGUTLKP",145,0)
 Q
"RTN","RGUTLKP",146,0)
ERROR W:'%CIAHTML $$XY(0,%CIAY+1),*7,%CIAEOL,$$EC^%ZOSV
"RTN","RGUTLKP",147,0)
 S (%CIADATA,%CIAD1,%CIAD2)=""
"RTN","RGUTLKP",148,0)
 G INP
"RTN","RGUTMTL")
0^52^B15092004
"RTN","RGUTMTL",1,0)
RGUTMTL ;RG/IND/DKM - Multi-term lookup support ;04-May-2006 08:19;DKM
"RTN","RGUTMTL",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTMTL",3,0)
 ;;
"RTN","RGUTMTL",4,0)
 ;=================================================================
"RTN","RGUTMTL",5,0)
 ; Parse term into component words (KWIC)
"RTN","RGUTMTL",6,0)
PARSE2(CIATRM,CIARTN,CIAMIN) ;
"RTN","RGUTMTL",7,0)
 N X,L,C,%
"RTN","RGUTMTL",8,0)
 K CIARTN
"RTN","RGUTMTL",9,0)
 S %="CIARTN(I)",X=$$UP^XLFSTR(CIATRM),CIAMIN=+$G(CIAMIN)
"RTN","RGUTMTL",10,0)
 D S^XTLKWIC
"RTN","RGUTMTL",11,0)
 S L="",C=0
"RTN","RGUTMTL",12,0)
 F  S L=$O(CIARTN(L)) Q:L=""  D
"RTN","RGUTMTL",13,0)
 .I $L(L)<CIAMIN K CIARTN(L)
"RTN","RGUTMTL",14,0)
 .E  S C=C+1
"RTN","RGUTMTL",15,0)
 Q C
"RTN","RGUTMTL",16,0)
 ; Parse term into component words
"RTN","RGUTMTL",17,0)
PARSE(CIATRM,CIARTN,CIAMIN) ;
"RTN","RGUTMTL",18,0)
 N X,Y,Z,L,C
"RTN","RGUTMTL",19,0)
 K CIARTN
"RTN","RGUTMTL",20,0)
 S CIATRM=$$UP^XLFSTR(CIATRM),C=0,CIAMIN=+$G(CIAMIN,1),Z=""
"RTN","RGUTMTL",21,0)
 F X=1:1 Q:'$L(CIATRM)  D:$E(CIATRM,X)'?1AN
"RTN","RGUTMTL",22,0)
 .S Y=Z,Z=$E(CIATRM,X),L=$E(CIATRM,1,X-1),CIATRM=$E(CIATRM,X+1,999),X=0
"RTN","RGUTMTL",23,0)
 .I $L(L)'<CIAMIN,L'=+L,'$D(CIARTN(L)) S CIARTN(L)=Y,C=C+1,Y=""
"RTN","RGUTMTL",24,0)
 Q C
"RTN","RGUTMTL",25,0)
 ; Create/delete an MTL cross reference for term
"RTN","RGUTMTL",26,0)
XREF(CIART,CIATRM,CIADA,CIADEL) ;
"RTN","RGUTMTL",27,0)
 N CIAZ,CIAG
"RTN","RGUTMTL",28,0)
 S CIAZ=$L(CIART),CIAG=$S($E(CIART,CIAZ)=")":$E(CIART,1,CIAZ-1)_",",1:CIART_"(")_"CIAZ,",CIAZ=$C(1)
"RTN","RGUTMTL",29,0)
 F  S CIAZ=$O(CIADA(CIAZ),-1) Q:'CIAZ  S CIAG=CIAG_""""_CIADA(CIAZ)_""","
"RTN","RGUTMTL",30,0)
 S CIAG=CIAG_""""_CIADA_""")"
"RTN","RGUTMTL",31,0)
 Q:'$$PARSE(CIATRM,.CIAZ)
"RTN","RGUTMTL",32,0)
 S CIAZ="",CIADEL=''$G(CIADEL)
"RTN","RGUTMTL",33,0)
 L +@CIART:30
"RTN","RGUTMTL",34,0)
 F  S CIAZ=$O(CIAZ(CIAZ)) Q:CIAZ=""  D
"RTN","RGUTMTL",35,0)
 .I ''$D(@CIAG)=CIADEL D
"RTN","RGUTMTL",36,0)
 ..I CIADEL K @CIAG  K:$D(@CIART@(CIAZ))<10 @CIART@(CIAZ)
"RTN","RGUTMTL",37,0)
 ..E  D:'$D(@CIART@(CIAZ)) REFNEW(CIAZ) S @CIAG=""
"RTN","RGUTMTL",38,0)
 ..D REFCNT(CIAZ,$S(CIADEL:-1,1:1))
"RTN","RGUTMTL",39,0)
 L -@CIART
"RTN","RGUTMTL",40,0)
 Q
"RTN","RGUTMTL",41,0)
 ; Increment/decrement reference count for term and its stems
"RTN","RGUTMTL",42,0)
REFCNT(CIAX,CIAI) ;
"RTN","RGUTMTL",43,0)
 Q:'$L(CIAX)
"RTN","RGUTMTL",44,0)
 I $D(@CIART@(CIAX)) D
"RTN","RGUTMTL",45,0)
 .N CIAZ
"RTN","RGUTMTL",46,0)
 .S CIAZ=$G(@CIART@(CIAX))+CIAI
"RTN","RGUTMTL",47,0)
 .I CIAZ<1 K @CIART@(CIAX)
"RTN","RGUTMTL",48,0)
 .E  S @CIART@(CIAX)=CIAZ
"RTN","RGUTMTL",49,0)
 D REFCNT($E(CIAX,1,$L(CIAX)-1),CIAI)
"RTN","RGUTMTL",50,0)
 Q
"RTN","RGUTMTL",51,0)
 ; Create new term reference
"RTN","RGUTMTL",52,0)
REFNEW(CIAX) ;
"RTN","RGUTMTL",53,0)
 N CIAZ,CIAC,CIAABR
"RTN","RGUTMTL",54,0)
 S CIAZ=CIAX,CIAC=0,CIAABR=0
"RTN","RGUTMTL",55,0)
 F  S CIAZ=$$STEM(CIAZ,CIAX) Q:'$L(CIAZ)  S CIAC=CIAC+$G(@CIART@(CIAZ)),CIAZ=CIAZ_$C(255)
"RTN","RGUTMTL",56,0)
 S @CIART@(CIAX)=CIAC
"RTN","RGUTMTL",57,0)
 Q
"RTN","RGUTMTL",58,0)
 ; Lookup a term in an MTL index
"RTN","RGUTMTL",59,0)
 ; CIART  = Root of index (e.g., ^CIACOD(990.9,"AD"))
"RTN","RGUTMTL",60,0)
 ; CIATRM = Term to lookup
"RTN","RGUTMTL",61,0)
 ; CIARTN = Root of returned array (note: killed before populated)
"RTN","RGUTMTL",62,0)
 ; CIAABR = If nonzero, user can abort lookup with ^
"RTN","RGUTMTL",63,0)
LKP(CIART,CIATRM,CIARTN,CIAABR) ;
"RTN","RGUTMTL",64,0)
 N CIAX,CIAY,CIAW,CIAF,CIAIEN,CIAL,CIAM,CIATRM1
"RTN","RGUTMTL",65,0)
 I $$NEWERR^%ZTER N $ET S $ET=""
"RTN","RGUTMTL",66,0)
 K @CIARTN
"RTN","RGUTMTL",67,0)
 S CIAABR=+$G(CIAABR),@$$TRAP^RGUTOS("LKP2^RGUTMTL")
"RTN","RGUTMTL",68,0)
 I $$PARSE(CIATRM,.CIATRM)=1 S CIAW(1,$O(CIATRM("")))=""
"RTN","RGUTMTL",69,0)
 E  D
"RTN","RGUTMTL",70,0)
 .S CIATRM="",CIAM=9999999999
"RTN","RGUTMTL",71,0)
 .F  S CIATRM=$O(CIATRM(CIATRM)) Q:CIATRM=""  D  Q:CIAL<0
"RTN","RGUTMTL",72,0)
 ..S CIAX=CIATRM(CIATRM)["=",CIAY=CIATRM(CIATRM)["~",CIATRM1="",CIAL=$S(CIAY:9999999999,1:-1)
"RTN","RGUTMTL",73,0)
 ..I 'CIAY F  S CIATRM1=$$STEM(CIATRM1,CIATRM,CIAX) Q:CIATRM1=""  D:$D(^(CIATRM1))>1  Q:CIAL>CIAM
"RTN","RGUTMTL",74,0)
 ...S:CIAL=-1 CIAL=0
"RTN","RGUTMTL",75,0)
 ...S CIAL=CIAL+$G(^(CIATRM1))
"RTN","RGUTMTL",76,0)
 ...S CIATRM1=CIATRM1_$C(255)
"RTN","RGUTMTL",77,0)
 ..S CIAW(CIAL,CIATRM)=""
"RTN","RGUTMTL",78,0)
 ..I CIAL>0,CIAL<CIAM S CIAM=CIAL
"RTN","RGUTMTL",79,0)
 ..D:CIAABR ABORT
"RTN","RGUTMTL",80,0)
 Q:$D(CIAW(-1)) 0
"RTN","RGUTMTL",81,0)
 S CIAW="",CIAF=0
"RTN","RGUTMTL",82,0)
 F  S CIAW=$O(CIAW(CIAW)),CIATRM="" Q:CIAW=""  D  Q:CIAF=-1
"RTN","RGUTMTL",83,0)
 .F  S CIATRM=$O(CIAW(CIAW,CIATRM)) Q:CIATRM=""  D  Q:CIAF=-1
"RTN","RGUTMTL",84,0)
 ..S CIAX=CIATRM(CIATRM)["=",CIAY=CIATRM(CIATRM)["~"
"RTN","RGUTMTL",85,0)
 ..I CIAF D
"RTN","RGUTMTL",86,0)
 ...S CIAIEN=0
"RTN","RGUTMTL",87,0)
 ...F  S CIAIEN=$O(@CIARTN@(CIAIEN)),CIATRM1="" Q:'CIAIEN  D  Q:CIAF=-1
"RTN","RGUTMTL",88,0)
 ....F  S CIATRM1=$$STEM(CIATRM1,CIATRM,CIAX) Q:CIATRM1=""  Q:$D(^(CIATRM1,CIAIEN))
"RTN","RGUTMTL",89,0)
 ....I CIAY-(CIATRM1="") K @CIARTN@(CIAIEN) S:$D(@CIARTN)'>1 CIAF=-1
"RTN","RGUTMTL",90,0)
 ..E  D
"RTN","RGUTMTL",91,0)
 ...S CIATRM1="",CIAF=1
"RTN","RGUTMTL",92,0)
 ...F  S CIATRM1=$$STEM(CIATRM1,CIATRM,CIAX) Q:CIATRM1=""  M @CIARTN=^(CIATRM1)
"RTN","RGUTMTL",93,0)
 ...S:$D(@CIARTN)'>1 CIAF=-1
"RTN","RGUTMTL",94,0)
 Q $D(@CIARTN)>1
"RTN","RGUTMTL",95,0)
LKP2 K @CIARTN
"RTN","RGUTMTL",96,0)
 Q -1
"RTN","RGUTMTL",97,0)
 ; Check for user abort
"RTN","RGUTMTL",98,0)
ABORT N CIAZ
"RTN","RGUTMTL",99,0)
 R CIAZ#1:0
"RTN","RGUTMTL",100,0)
 D:CIAZ=U RAISE^RGUTOS()
"RTN","RGUTMTL",101,0)
 Q
"RTN","RGUTMTL",102,0)
 ; Return in successive calls all terms sharing common stem
"RTN","RGUTMTL",103,0)
 ; (sets naked reference)
"RTN","RGUTMTL",104,0)
STEM(CIALAST,CIASTEM,CIAF) ;
"RTN","RGUTMTL",105,0)
 D:CIAABR ABORT
"RTN","RGUTMTL",106,0)
 I CIALAST="" S CIALAST=CIASTEM Q:$D(@CIART@(CIALAST)) CIALAST
"RTN","RGUTMTL",107,0)
 Q:$G(CIAF) ""
"RTN","RGUTMTL",108,0)
 S CIALAST=$O(@CIART@(CIALAST))
"RTN","RGUTMTL",109,0)
 Q $S($E(CIALAST,1,$L(CIASTEM))=CIASTEM:CIALAST,1:"")
"RTN","RGUTNTEG")
0^72^B4457644
"RTN","RGUTNTEG",1,0)
RGUTNTEG ;ISC/XTSUMBLD KERNEL - Package checksum checker ;3070531.172703
"RTN","RGUTNTEG",2,0)
 ;;3.0;RG UTILITIES;;Mar 20,2007;Build 124
"RTN","RGUTNTEG",3,0)
 ;;7.3;3070531.172703
"RTN","RGUTNTEG",4,0)
 S XT4="I 1",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
"RTN","RGUTNTEG",5,0)
CONT F XT1=1:1 S XT2=$T(ROU+XT1) Q:XT2=""  S X=$P(XT2," ",1),XT3=$P(XT2,";",3) X XT4 I $T W !,X X ^%ZOSF("TEST") S:'$T XT3=0 X:XT3 ^%ZOSF("RSUM") W ?10,$S('XT3:"Routine not in UCI",XT3'=Y:"Calculated "_$C(7)_Y_", off by "_(Y-XT3),1:"ok")
"RTN","RGUTNTEG",6,0)
 ;
"RTN","RGUTNTEG",7,0)
 K %1,%2,%3,X,Y,XT1,XT2,XT3,XT4 Q
"RTN","RGUTNTEG",8,0)
ONE S XT4="I $D(^UTILITY($J,X))",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
"RTN","RGUTNTEG",9,0)
 W !,"Check a subset of routines:" K ^UTILITY($J) X ^%ZOSF("RSEL")
"RTN","RGUTNTEG",10,0)
 W ! G CONT
"RTN","RGUTNTEG",11,0)
ROU ;;
"RTN","RGUTNTEG",12,0)
RGUT ;;7860723
"RTN","RGUTNTEG",13,0)
RGUTSTX ;;4121035
"RTN","RGUTNTEG",14,0)
RGUTSTX0 ;;3170389
"RTN","RGUTNTEG",15,0)
RGUTSTX1 ;;5106879
"RTN","RGUTNTEG",16,0)
RGUTALR ;;928023
"RTN","RGUTNTEG",17,0)
RGUTBIG ;;6024487
"RTN","RGUTNTEG",18,0)
RGUTDAT ;;5928509
"RTN","RGUTNTEG",19,0)
RGUTDIC ;;7938841
"RTN","RGUTNTEG",20,0)
RGUTDT ;;3374353
"RTN","RGUTNTEG",21,0)
RGUTEDT ;;16189636
"RTN","RGUTNTEG",22,0)
RGUTIMP ;;4666764
"RTN","RGUTNTEG",23,0)
RGUTIN0 ;;1050344
"RTN","RGUTNTEG",24,0)
RGUTIN16 ;;1582494
"RTN","RGUTNTEG",25,0)
RGUTIN18 ;;1178580
"RTN","RGUTNTEG",26,0)
RGUTIN8 ;;1256732
"RTN","RGUTNTEG",27,0)
RGUTLK2 ;;13861180
"RTN","RGUTNTEG",28,0)
RGUTLKP ;;7525106
"RTN","RGUTNTEG",29,0)
RGUTMTL ;;4714339
"RTN","RGUTNTEG",30,0)
RGUTOS ;;2258460
"RTN","RGUTNTEG",31,0)
RGUTOS1 ;;2630722
"RTN","RGUTNTEG",32,0)
RGUTRPC ;;4585641
"RTN","RGUTNTEG",33,0)
RGUTTSK ;;891526
"RTN","RGUTNTEG",34,0)
RGUTUSR ;;1781283
"RTN","RGUTNTEG",35,0)
RGUTUU ;;1311666
"RTN","RGUTNTEG",36,0)
RGUTINIT ;;3174314
"RTN","RGUTNTEG",37,0)
RGUTHFS ;;2629858
"RTN","RGUTNTEG",38,0)
RGUTDDR ;;9459760
"RTN","RGUTNTEG",39,0)
RGUTRPRT ;;1778623
"RTN","RGUTNTEG",40,0)
RGUTREG ;;578780
"RTN","RGUTNTEG",41,0)
RGUTBC28 ;;2148213
"RTN","RGUTNTEG",42,0)
RGUTBC39 ;;2796261
"RTN","RGUTNTEG",43,0)
RGUTBCDA ;;3981182
"RTN","RGUTNTEG",44,0)
RGUTIN68 ;;1159584
"RTN","RGUTNTEG",45,0)
RGUTIN58 ;;1357669
"RTN","RGUTNTEG",46,0)
RGUT1 ;;508281
"RTN","RGUTOS")
0^53^B7841558
"RTN","RGUTOS",1,0)
RGUTOS ;RG/IND/DKM - Platform-dependent operations;04-May-2006 08:19;DKM
"RTN","RGUTOS",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTOS",3,0)
 ;;
"RTN","RGUTOS",4,0)
 ;=================================================================
"RTN","RGUTOS",5,0)
 ; Return version #
"RTN","RGUTOS",6,0)
VER() Q $P($T(+2),";",3)
"RTN","RGUTOS",7,0)
CVTFN(CIAFIL,CIAROOT) ;
"RTN","RGUTOS",8,0)
 N CIAZ,CIAZ1,CIAD
"RTN","RGUTOS",9,0)
 S CIAD=$$DIRDLM,CIAROOT=$G(CIAROOT)
"RTN","RGUTOS",10,0)
 S:$E(CIAROOT,$L(CIAROOT))=$E(CIAD,3) CIAROOT=$E(CIAROOT,1,$L(CIAROOT)-1)
"RTN","RGUTOS",11,0)
 S CIAZ=$L(CIAFIL,"/"),CIAZ1=$P(CIAFIL,"/",1,CIAZ-1),CIAFIL=$P(CIAFIL,"/",CIAZ)
"RTN","RGUTOS",12,0)
 S:$L(CIAZ1) CIAROOT=CIAROOT_$E(CIAD,$S($L(CIAROOT):2,1:1))_$TR(CIAZ1,"/.-",$E(CIAD,2))
"RTN","RGUTOS",13,0)
 Q CIAROOT_$S($L(CIAROOT):$E(CIAD,3),1:"")_CIAFIL
"RTN","RGUTOS",14,0)
 ; Set right margin
"RTN","RGUTOS",15,0)
RM(X) ;EP
"RTN","RGUTOS",16,0)
 X ^%ZOSF("RM")
"RTN","RGUTOS",17,0)
 Q
"RTN","RGUTOS",18,0)
 ; Test for tag/routine
"RTN","RGUTOS",19,0)
TEST(X) ;EP
"RTN","RGUTOS",20,0)
 N Z
"RTN","RGUTOS",21,0)
 S:X[U Z=$P(X,U),X=$P(X,U,2)
"RTN","RGUTOS",22,0)
 Q:'$L(X)!(X'?.1"%"1.AN) 0
"RTN","RGUTOS",23,0)
 X ^%ZOSF("TEST")
"RTN","RGUTOS",24,0)
 Q $S('$T:0,$G(Z)="":1,Z'?.1"%"1.AN:0,1:$T(@Z^@X)'="")
"RTN","RGUTOS",25,0)
ETRAP() Q $$NEWERR^%ZTER
"RTN","RGUTOS",26,0)
 ; Open a host file
"RTN","RGUTOS",27,0)
OPENX(X1,X2) ;EP
"RTN","RGUTOS",28,0)
 D OPEN(.X1,.X2)
"RTN","RGUTOS",29,0)
 Q X1
"RTN","RGUTOS",30,0)
 ;;
"RTN","RGUTOS",31,0)
 ;=================================================================
"RTN","RGUTOS",32,0)
 ; Open a host file
"RTN","RGUTOS",33,0)
OPEN(X1,X2) ;EP
"RTN","RGUTOS",34,0)
 O X1:$S("Rr"[$G(X2):"RS","Ww"[X2:"WNS","Bb"[X2:"RF",1:""):0
"RTN","RGUTOS",35,0)
 E  ZT "NOPEN"
"RTN","RGUTOS",36,0)
 U X1
"RTN","RGUTOS",37,0)
 S ^TMP("RGUTHFS",$J,X1)=""
"RTN","RGUTOS",38,0)
 Q
"RTN","RGUTOS",39,0)
 ; Close a host file
"RTN","RGUTOS",40,0)
CLOSE(X) ;EP
"RTN","RGUTOS",41,0)
 C X
"RTN","RGUTOS",42,0)
 K ^TMP("RGUTHFS",$J,X)
"RTN","RGUTOS",43,0)
 Q
"RTN","RGUTOS",44,0)
 ; Close all open host files
"RTN","RGUTOS",45,0)
CLOSEALL ;EP
"RTN","RGUTOS",46,0)
 N Z
"RTN","RGUTOS",47,0)
 S Z=""
"RTN","RGUTOS",48,0)
 F  S Z=$O(^TMP("RGUTHFS",$J,Z)) Q:Z=""  C Z
"RTN","RGUTOS",49,0)
 K ^TMP("RGUTHFS",$J)
"RTN","RGUTOS",50,0)
 Q
"RTN","RGUTOS",51,0)
EOF ZT:$ZA=-1 "ENDOFFILE"
"RTN","RGUTOS",52,0)
 Q
"RTN","RGUTOS",53,0)
EOFERR() Q:$ZE["ENDOFFILE"
"RTN","RGUTOS",54,0)
 ; Read a line of data
"RTN","RGUTOS",55,0)
READ(X,Y) ;EP
"RTN","RGUTOS",56,0)
 N $ET
"RTN","RGUTOS",57,0)
 S $ET="",$ZT="READX"
"RTN","RGUTOS",58,0)
 U $G(Y,$I)
"RTN","RGUTOS",59,0)
 Q:$ZEOF 1
"RTN","RGUTOS",60,0)
 R X:5
"RTN","RGUTOS",61,0)
 Q:$T 0
"RTN","RGUTOS",62,0)
READX Q 1
"RTN","RGUTOS",63,0)
 ; Delete a host file
"RTN","RGUTOS",64,0)
DELETE(X) ;EP
"RTN","RGUTOS",65,0)
 S X=$ZF(-1,"rm """_X_"""")
"RTN","RGUTOS",66,0)
 Q
"RTN","RGUTOS",67,0)
 ; Rename a host file
"RTN","RGUTOS",68,0)
RENAME(X1,X2) ;EP
"RTN","RGUTOS",69,0)
 S X1=$ZF(-1,"mv """_X1_""" """_X2_"""")
"RTN","RGUTOS",70,0)
 Q
"RTN","RGUTOS",71,0)
 ; Generate directory listing
"RTN","RGUTOS",72,0)
DIR(X1,X2,X3) ;EP
"RTN","RGUTOS",73,0)
 N Z,Z1,FDLM
"RTN","RGUTOS",74,0)
 S FDLM=$E($$DIRDLM,1)
"RTN","RGUTOS",75,0)
 S X3=$G(X3,$NA(^UTILITY("DIR",$J)))
"RTN","RGUTOS",76,0)
 K @X3
"RTN","RGUTOS",77,0)
 S:'$G(X2) X2=9999999999
"RTN","RGUTOS",78,0)
 F Z=1:1:X2 S Z1=$ZSEARCH(X1),X1="" Q:Z1=""  D
"RTN","RGUTOS",79,0)
 .S Z1=$P(Z1,FDLM,$L(Z1,FDLM))
"RTN","RGUTOS",80,0)
 .S:$TR(Z1,".")'="" @X3@(Z1)=""
"RTN","RGUTOS",81,0)
 Q
"RTN","RGUTOS",82,0)
 ; Return path delimiters
"RTN","RGUTOS",83,0)
DIRDLM() ;EP
"RTN","RGUTOS",84,0)
 Q "///"
"RTN","RGUTOS",85,0)
 ; Return default working directory
"RTN","RGUTOS",86,0)
DEFDIR(X) ;EP
"RTN","RGUTOS",87,0)
 N FDLM
"RTN","RGUTOS",88,0)
 S FDLM=$E($$DIRDLM,1)
"RTN","RGUTOS",89,0)
 S X=$G(X,$P($G(^XTV(8989.3,1,"DEV")),U))
"RTN","RGUTOS",90,0)
 S:$E(X,$L(X))'=FDLM X=X_FDLM
"RTN","RGUTOS",91,0)
 Q X
"RTN","RGUTOS",92,0)
 ; Parse current error
"RTN","RGUTOS",93,0)
ERR(X1,X2,X3) ;EP
"RTN","RGUTOS",94,0)
 S X1=$E($P($ZE,">"),2,99),X2=$P($P($ZE,">",2),":"),X3=X1
"RTN","RGUTOS",95,0)
 S:X2["*" X2=""
"RTN","RGUTOS",96,0)
 S:$E(X1)="Z" X3=$E(X1,2,99),X1="ZTRAP"
"RTN","RGUTOS",97,0)
 Q
"RTN","RGUTOS",98,0)
 ; Raise an exception
"RTN","RGUTOS",99,0)
RAISE(X) ;EP
"RTN","RGUTOS",100,0)
 ZT $G(X)
"RTN","RGUTOS",101,0)
 ; Set error trap
"RTN","RGUTOS",102,0)
TRAP(X) ;EP
"RTN","RGUTOS",103,0)
 Q $S($D(X):"$ZT="""_X_"""",1:"$ZT")
"RTN","RGUTOS",104,0)
 ; Return size of a file
"RTN","RGUTOS",105,0)
SIZE(X) ;EP
"RTN","RGUTOS",106,0)
 Q 0
"RTN","RGUTOS",107,0)
 ; Return free disk space
"RTN","RGUTOS",108,0)
FREE(X) ;EP
"RTN","RGUTOS",109,0)
 Q 0
"RTN","RGUTOS",110,0)
 ; Return host ip address
"RTN","RGUTOS",111,0)
HOSTIP() ;EP
"RTN","RGUTOS",112,0)
 Q $P($P($ZU(131,1),","),":",2)
"RTN","RGUTOS",113,0)
 ; Return host name
"RTN","RGUTOS",114,0)
HOSTNAME() ;EP
"RTN","RGUTOS",115,0)
 Q $P($P($ZU(131,1),","),":")
"RTN","RGUTOS",116,0)
 ; Return client ip address
"RTN","RGUTOS",117,0)
CLIENTIP() ;EP
"RTN","RGUTOS",118,0)
 N IP,$ET
"RTN","RGUTOS",119,0)
 S $ET="S $EC=""""",IP=$ZU(111,0)
"RTN","RGUTOS",120,0)
 Q $A(IP,1)_"."_$A(IP,2)_"."_$A(IP,3)_"."_$A(IP,4)
"RTN","RGUTOS1")
0^54^B10411038
"RTN","RGUTOS1",1,0)
RGUTOS ;RG/IND/DKM - Platform-dependent operations;04-May-2006 08:19;DKM
"RTN","RGUTOS1",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTOS1",3,0)
 ;;
"RTN","RGUTOS1",4,0)
 ;=================================================================
"RTN","RGUTOS1",5,0)
 ; Return version # of RTL
"RTN","RGUTOS1",6,0)
VER() ;EP
"RTN","RGUTOS1",7,0)
 Q +$P($T(RGUTOS+1),";",3)
"RTN","RGUTOS1",8,0)
 ; Set right margin
"RTN","RGUTOS1",9,0)
RM(X) ;EP
"RTN","RGUTOS1",10,0)
 X ^%ZOSF("RM")
"RTN","RGUTOS1",11,0)
 Q
"RTN","RGUTOS1",12,0)
 ; Test for routine/tag
"RTN","RGUTOS1",13,0)
TEST(X) ;EP
"RTN","RGUTOS1",14,0)
 N Z
"RTN","RGUTOS1",15,0)
 S:X[U Z=$P(X,U),X=$P(X,U,2)
"RTN","RGUTOS1",16,0)
 Q:'$L(X)!(X'?.1"%"1.AN) 0
"RTN","RGUTOS1",17,0)
 X ^%ZOSF("TEST")
"RTN","RGUTOS1",18,0)
 Q $S('$T:0,$G(Z)="":1,Z'?.1"%"1.AN:0,1:$T(@Z^@X)'="")
"RTN","RGUTOS1",19,0)
 ; Raise an exception
"RTN","RGUTOS1",20,0)
RAISE(X) ;EP
"RTN","RGUTOS1",21,0)
 ZT $G(X)
"RTN","RGUTOS1",22,0)
 ; Return code to set error trap
"RTN","RGUTOS1",23,0)
TRAP(X) ;EP
"RTN","RGUTOS1",24,0)
 Q $$SUBST^RGUT(^%ZOSF("TRAP"),"X",""""_X_"""")
"RTN","RGUTOS1",25,0)
 ; Check for $ET capability
"RTN","RGUTOS1",26,0)
ETRAP() ;EP
"RTN","RGUTOS1",27,0)
 Q $$NEWERR^%ZTER
"RTN","RGUTOS1",28,0)
 ; Open a file (extrinsic)
"RTN","RGUTOS1",29,0)
OPENX(X1,X2) ;EP
"RTN","RGUTOS1",30,0)
 D OPEN(.X1,.X2)
"RTN","RGUTOS1",31,0)
 Q X1
"RTN","RGUTOS1",32,0)
 ; Open a file
"RTN","RGUTOS1",33,0)
OPEN(X1,X2) ;EP
"RTN","RGUTOS1",34,0)
 N IO,POP,X3
"RTN","RGUTOS1",35,0)
 D PARSE(.X1,.X3),OPEN^%ZISH(X3_X1,X3,X1,$G(X2,"R"),32767)
"RTN","RGUTOS1",36,0)
 I POP ZT "OPEN"
"RTN","RGUTOS1",37,0)
 S ^XTMP("RGUTHFS",$J,IO)=X3_X1,X1=IO
"RTN","RGUTOS1",38,0)
 Q
"RTN","RGUTOS1",39,0)
 ; Close a file
"RTN","RGUTOS1",40,0)
CLOSE(X) ;EP
"RTN","RGUTOS1",41,0)
 N Y
"RTN","RGUTOS1",42,0)
 S Y=$G(^XTMP("RGUTHFS",$J,X)),IO=X
"RTN","RGUTOS1",43,0)
 K ^(X)
"RTN","RGUTOS1",44,0)
 D CLOSE^%ZISH(Y)
"RTN","RGUTOS1",45,0)
 Q
"RTN","RGUTOS1",46,0)
 ; Close all open HFS
"RTN","RGUTOS1",47,0)
CLOSEALL ;EP
"RTN","RGUTOS1",48,0)
 N Z
"RTN","RGUTOS1",49,0)
 S Z=""
"RTN","RGUTOS1",50,0)
 F  S Z=$O(^XTMP("RGUTHFS",$J,Z)) Q:Z=""  D CLOSE(Z)
"RTN","RGUTOS1",51,0)
 Q
"RTN","RGUTOS1",52,0)
 ; Parse out directory from filename
"RTN","RGUTOS1",53,0)
PARSE(X,Y) ;EP
"RTN","RGUTOS1",54,0)
 N D,Z
"RTN","RGUTOS1",55,0)
 S D=$E($$DIRDLM,3),Z=$L(X,D),Y=$P(X,D,1,Z-1),Y=$S($L(Y):Y,1:$$PWD^%ZISH)_$S(Z>1:D,1:""),X=$P(X,D,Z)
"RTN","RGUTOS1",56,0)
 Q
"RTN","RGUTOS1",57,0)
 ; Read a line
"RTN","RGUTOS1",58,0)
READ(X,Y) ;EP
"RTN","RGUTOS1",59,0)
 N IO,%ZA,%ZB,%ZC,%ZL
"RTN","RGUTOS1",60,0)
 S IO=$G(Y,$I)
"RTN","RGUTOS1",61,0)
 D READNXT^%ZISH(.X)
"RTN","RGUTOS1",62,0)
 U IO
"RTN","RGUTOS1",63,0)
 Q $$STATUS^%ZISH&'$L(X)
"RTN","RGUTOS1",64,0)
 ; Delete a file
"RTN","RGUTOS1",65,0)
DELETE(X) ;EP
"RTN","RGUTOS1",66,0)
 N Z
"RTN","RGUTOS1",67,0)
 D PARSE(.X,.Z)
"RTN","RGUTOS1",68,0)
 S:$L(X) Z(X)="",Z=$$DEL^%ZISH(Z,"Z")
"RTN","RGUTOS1",69,0)
 Q
"RTN","RGUTOS1",70,0)
 ; Rename a file
"RTN","RGUTOS1",71,0)
RENAME(X1,X2) ;EP
"RTN","RGUTOS1",72,0)
 N X3,X4
"RTN","RGUTOS1",73,0)
 D PARSE(.X1,.X3),PARSE(.X2,.X4)
"RTN","RGUTOS1",74,0)
 I $$MV^%ZISH(X3,X1,X4,X2)
"RTN","RGUTOS1",75,0)
 Q
"RTN","RGUTOS1",76,0)
 ; List files
"RTN","RGUTOS1",77,0)
DIR(X1,X2,X3) ;EP
"RTN","RGUTOS1",78,0)
 N Z
"RTN","RGUTOS1",79,0)
 D PARSE(.X1,.Z)
"RTN","RGUTOS1",80,0)
 S Z(X1)="",X3=$G(X3,"^UTILITY(""DIR"",$J)")
"RTN","RGUTOS1",81,0)
 K @X3
"RTN","RGUTOS1",82,0)
 I $$LIST^%ZISH(Z,"Z",X3)
"RTN","RGUTOS1",83,0)
 Q
"RTN","RGUTOS1",84,0)
 ; Force error if at EOF
"RTN","RGUTOS1",85,0)
EOF I $$STATUS^%ZISH ZT "EOF"
"RTN","RGUTOS1",86,0)
 Q
"RTN","RGUTOS1",87,0)
 ; Returns true if current error is EOF
"RTN","RGUTOS1",88,0)
EOFERR() ;EP
"RTN","RGUTOS1",89,0)
 Q $$EC^%ZOSV["EOF"
"RTN","RGUTOS1",90,0)
 ; URL format filename-->HFS format
"RTN","RGUTOS1",91,0)
CVTFN(CIAFIL,CIAROOT) ;EP
"RTN","RGUTOS1",92,0)
 N CIAZ,CIAZ1,CIAD
"RTN","RGUTOS1",93,0)
 S CIAD=$$DIRDLM,CIAROOT=$G(CIAROOT)
"RTN","RGUTOS1",94,0)
 S:$E(CIAROOT,$L(CIAROOT))=$E(CIAD,3) CIAROOT=$E(CIAROOT,1,$L(CIAROOT)-1)
"RTN","RGUTOS1",95,0)
 S CIAZ=$L(CIAFIL,"/"),CIAZ1=$P(CIAFIL,"/",1,CIAZ-1),CIAFIL=$P(CIAFIL,"/",CIAZ)
"RTN","RGUTOS1",96,0)
 S:$L(CIAZ1) CIAROOT=CIAROOT_$E(CIAD,$S($L(CIAROOT):2,1:1))_$TR(CIAZ1,"/.-",$E(CIAD,2))
"RTN","RGUTOS1",97,0)
 Q CIAROOT_$S($L(CIAROOT):$E(CIAD,3),1:"")_CIAFIL
"RTN","RGUTOS1",98,0)
 ; Return directory delimiters
"RTN","RGUTOS1",99,0)
DIRDLM() ;EP
"RTN","RGUTOS1",100,0)
 N X
"RTN","RGUTOS1",101,0)
 S X=$$PWD^%ZISH
"RTN","RGUTOS1",102,0)
 Q $S(X["[":"[.]",X["\":"\\\",1:"///")
"RTN","RGUTOS1",103,0)
 ; Parse error data
"RTN","RGUTOS1",104,0)
ERR(X1,X2,X3) ;EP
"RTN","RGUTOS1",105,0)
 N X
"RTN","RGUTOS1",106,0)
 S X=$$EC^%ZOSV,X1=$$VERSION^%ZOSV(1)
"RTN","RGUTOS1",107,0)
 G ERRMSM:X1["MSM",ERRDSM:X1["DSM"
"RTN","RGUTOS1",108,0)
 S (X1,X2,X3)=""
"RTN","RGUTOS1",109,0)
 Q
"RTN","RGUTOS1",110,0)
ERRMSM S X1=$E($P(X,">"),2,99),X2=$P($P(X,">",2),":"),X3=X1
"RTN","RGUTOS1",111,0)
 S:X2["*" X2=""
"RTN","RGUTOS1",112,0)
 S:$E(X1)="Z" X3=$E(X1,2,99),X1="ZTRAP"
"RTN","RGUTOS1",113,0)
 Q
"RTN","RGUTOS1",114,0)
ERRDSM S X1=$P($P(X,", ",2),"-",3),X2=$P($P(X,", "),":"),X3=$$TRIM^RGUT($P(X,", ",$S(X1="ZTRAP":4,1:3)))
"RTN","RGUTOS1",115,0)
 Q
"RTN","RGUTREG")
0^64^B709436
"RTN","RGUTREG",1,0)
RGUTREG ;RG/IND/DKM - Various registration actions ;04-May-2006 08:19;DKM
"RTN","RGUTREG",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTREG",3,0)
 ;;
"RTN","RGUTREG",4,0)
 ;=================================================================
"RTN","RGUTREG",5,0)
 ; Register a protocol to an extended action protocol
"RTN","RGUTREG",6,0)
 ; Input: P-Parent protocol
"RTN","RGUTREG",7,0)
 ;        C-Child protocol
"RTN","RGUTREG",8,0)
REGPROT(P,C,ERR) ;
"RTN","RGUTREG",9,0)
 N IENARY,PIEN,AIEN,FDA
"RTN","RGUTREG",10,0)
 D
"RTN","RGUTREG",11,0)
 .I '$L(P)!('$L(C)) S ERR="Missing input parameter" Q
"RTN","RGUTREG",12,0)
 .S IENARY(1)=$$FIND1^DIC(101,"","",P)
"RTN","RGUTREG",13,0)
 .S AIEN=$$FIND1^DIC(101,"","",C)
"RTN","RGUTREG",14,0)
 .I 'IENARY(1)!'AIEN S ERR="Unknown protocol name" Q
"RTN","RGUTREG",15,0)
 .S FDA(101.01,"?+2,"_IENARY(1)_",",.01)=AIEN
"RTN","RGUTREG",16,0)
 .D UPDATE^DIE("S","FDA","IENARY","ERR")
"RTN","RGUTREG",17,0)
 Q:$Q $G(ERR)=""
"RTN","RGUTREG",18,0)
 Q
"RTN","RGUTRPC")
0^56^B16812427
"RTN","RGUTRPC",1,0)
RGUTRPC ;RG/IND/DKM - RPC Encapsulations for RGUT routines ;04-May-2006 08:19;DKM
"RTN","RGUTRPC",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTRPC",3,0)
 ;;
"RTN","RGUTRPC",4,0)
 ;=================================================================
"RTN","RGUTRPC",5,0)
 ; RPC: RGUTDIC
"RTN","RGUTRPC",6,0)
DIC(CIADATA,CIABM,CIACMD,CIAARG) ;
"RTN","RGUTRPC",7,0)
 S CIADATA(0)=$$ENTRY^RGUTDIC(CIABM,CIACMD)
"RTN","RGUTRPC",8,0)
 Q
"RTN","RGUTRPC",9,0)
 ; RPC: RGUTSTX
"RTN","RGUTRPC",10,0)
MSYNTAX(CIADATA,CIACODE,CIAOPT) ;
"RTN","RGUTRPC",11,0)
 S CIADATA=$$ENTRY^RGUTSTX(CIACODE,.CIAOPT)
"RTN","RGUTRPC",12,0)
 Q
"RTN","RGUTRPC",13,0)
 ; RPC: Return a group of entries from a file
"RTN","RGUTRPC",14,0)
 ; CIAFN   = File #
"RTN","RGUTRPC",15,0)
 ; CIAFROM = Starting entry (default is null)
"RTN","RGUTRPC",16,0)
 ; CIADIR  = Direction (default = 1)
"RTN","RGUTRPC",17,0)
 ; CIASCN  = Screening logic (optional)
"RTN","RGUTRPC",18,0)
 ; CIAMAX  = Maximum entries (default = 20)
"RTN","RGUTRPC",19,0)
 ; CIAXRF  = Cross reference (default = B)
"RTN","RGUTRPC",20,0)
FILGET(CIADATA,CIAFN,CIAFROM,CIADIR,CIASCN,CIAMAX,CIAXRF) ;
"RTN","RGUTRPC",21,0)
 N CIAIEN,CIAGBL,CIATOT,Y
"RTN","RGUTRPC",22,0)
 S CIAFROM=$G(CIAFROM),CIADIR=$S($G(CIADIR)<0:-1,1:1),CIAMAX=$G(CIAMAX,20),CIAXRF=$G(CIAXRF,"B"),CIASCN=$G(CIASCN),CIAGBL=$$ROOT^DILFD(CIAFN,,1),CIATOT=0
"RTN","RGUTRPC",23,0)
 Q:'$L(CIAGBL)
"RTN","RGUTRPC",24,0)
 F  Q:CIATOT'<CIAMAX  S CIAFROM=$O(@CIAGBL@(CIAXRF,CIAFROM),CIADIR),CIAIEN=0 Q:'$L(CIAFROM)  D
"RTN","RGUTRPC",25,0)
 .F  S CIAIEN=$O(@CIAGBL@(CIAXRF,CIAFROM,CIAIEN)) Q:'CIAIEN  D
"RTN","RGUTRPC",26,0)
 ..Q:'$D(@CIAGBL@(CIAIEN,0))
"RTN","RGUTRPC",27,0)
 ..I $L(CIASCN) S Y=CIAIEN X CIASCN E  Q
"RTN","RGUTRPC",28,0)
 ..S CIATOT=CIATOT+1,@CIADATA@(CIATOT)=CIAIEN_U_CIAFROM
"RTN","RGUTRPC",29,0)
 Q
"RTN","RGUTRPC",30,0)
 ; RPC: Show all or selected entries for a file
"RTN","RGUTRPC",31,0)
 ; CIAGBL = File # or closed global reference
"RTN","RGUTRPC",32,0)
 ; CIAIEN = Optional list of IENs to retrieve (default=ALL)
"RTN","RGUTRPC",33,0)
 ;          May be passed as single IEN or array with IENs as subscripts
"RTN","RGUTRPC",34,0)
FILENT(CIADATA,CIAGBL,CIAIEN) ;
"RTN","RGUTRPC",35,0)
 N CIAG,CIAX
"RTN","RGUTRPC",36,0)
 S:CIAGBL=+CIAGBL CIAGBL=$$ROOT^DILFD(CIAGBL,,1)
"RTN","RGUTRPC",37,0)
 S CIADATA=$$TMPGBL
"RTN","RGUTRPC",38,0)
 Q:'$L(CIAGBL)
"RTN","RGUTRPC",39,0)
 S:$G(CIAIEN) CIAIEN(+CIAIEN)=""
"RTN","RGUTRPC",40,0)
 S CIAG=$S($D(CIAIEN):"CIAIEN",1:CIAGBL),CIAIEN=0
"RTN","RGUTRPC",41,0)
 F  S CIAIEN=$O(@CIAG@(CIAIEN)) Q:'CIAIEN  D
"RTN","RGUTRPC",42,0)
 .S CIAX=$P($G(@CIAGBL@(CIAIEN,0)),U)
"RTN","RGUTRPC",43,0)
 .S:$L(CIAX) @CIADATA@(CIAIEN)=CIAIEN_U_CIAX
"RTN","RGUTRPC",44,0)
 Q
"RTN","RGUTRPC",45,0)
 ; RPC: Show IEN of next/previous entry in a file
"RTN","RGUTRPC",46,0)
FILNXT(CIADATA,CIAGBL,CIAIEN) ;
"RTN","RGUTRPC",47,0)
 N CIAD
"RTN","RGUTRPC",48,0)
 S:CIAGBL=+CIAGBL CIAGBL=$$ROOT^DILFD(CIAGBL,,1)
"RTN","RGUTRPC",49,0)
 I CIAIEN<0 S CIAIEN=-CIAIEN,CIAD=-1
"RTN","RGUTRPC",50,0)
 E  S CIAD=1
"RTN","RGUTRPC",51,0)
 S CIADATA=+$O(@CIAGBL@(CIAIEN),CIAD)
"RTN","RGUTRPC",52,0)
 Q
"RTN","RGUTRPC",53,0)
 ; RPC: Convert date input to FM format
"RTN","RGUTRPC",54,0)
STRTODAT(DATA,VAL,FMT) ;
"RTN","RGUTRPC",55,0)
 N %DT,X,Y
"RTN","RGUTRPC",56,0)
 I VAL'["@",VAL[" " S VAL=$TR(VAL," ","@")
"RTN","RGUTRPC",57,0)
 I VAL["@",$TR($P(VAL,"@",2),":0")="" S $P(VAL,"@",2)="00:00:01"
"RTN","RGUTRPC",58,0)
 S %DT=$G(FMT,"TS"),X=VAL
"RTN","RGUTRPC",59,0)
 D ^%DT
"RTN","RGUTRPC",60,0)
 S DATA=$S(Y>0:Y,1:"")
"RTN","RGUTRPC",61,0)
 Q
"RTN","RGUTRPC",62,0)
 ; Return reference to temp global
"RTN","RGUTRPC",63,0)
TMPGBL(X) ;EP
"RTN","RGUTRPC",64,0)
 K ^TMP("RGUTRPC"_$G(X),$J) Q $NA(^($J))
"RTN","RGUTRPC",65,0)
 ; Register/unregister RPCs within a given namespace to a context
"RTN","RGUTRPC",66,0)
REGNMSP(NMSP,CTX,DEL) ;EP
"RTN","RGUTRPC",67,0)
 N RPC,IEN,LEN
"RTN","RGUTRPC",68,0)
 S LEN=$L(NMSP),CTX=+$$GETOPT(CTX)
"RTN","RGUTRPC",69,0)
 I $G(DEL) D
"RTN","RGUTRPC",70,0)
 .S IEN=0
"RTN","RGUTRPC",71,0)
 .F  S IEN=$O(^DIC(19,CTX,"RPC","B",IEN)) Q:'IEN  D
"RTN","RGUTRPC",72,0)
 ..I $E($G(^XWB(8994,IEN,0)),1,LEN)=NMSP,$$REGRPC(IEN,CTX,1)
"RTN","RGUTRPC",73,0)
 E  D
"RTN","RGUTRPC",74,0)
 .Q:LEN<2
"RTN","RGUTRPC",75,0)
 .S RPC=NMSP
"RTN","RGUTRPC",76,0)
 .F  D:$L(RPC)  S RPC=$O(^XWB(8994,"B",RPC)) Q:NMSP'=$E(RPC,1,LEN)
"RTN","RGUTRPC",77,0)
 ..F IEN=0:0 S IEN=$O(^XWB(8994,"B",RPC,IEN)) Q:'IEN  I $$REGRPC(IEN,.CTX)
"RTN","RGUTRPC",78,0)
 Q
"RTN","RGUTRPC",79,0)
 ; Register/unregister an RPC to/from a context
"RTN","RGUTRPC",80,0)
 ; RPC = IEN or name of RPC
"RTN","RGUTRPC",81,0)
 ; CTX = IEN or name of context
"RTN","RGUTRPC",82,0)
 ; DEL = If nonzero, the RPC is unregistered (defaults to 0)
"RTN","RGUTRPC",83,0)
 ; Returns -1 if already registered; 0 if failed; 1 if succeeded
"RTN","RGUTRPC",84,0)
REGRPC(RPC,CTX,DEL) ;EP
"RTN","RGUTRPC",85,0)
 S RPC=+$$GETRPC(RPC)
"RTN","RGUTRPC",86,0)
 Q $S(RPC<1:0,1:$$REGMULT(19.05,"RPC",RPC,.CTX,.DEL))
"RTN","RGUTRPC",87,0)
 ; Add/remove a context to/from the ITEM multiple of another context.
"RTN","RGUTRPC",88,0)
REGCTX(SRC,DST,DEL) ;EP
"RTN","RGUTRPC",89,0)
 S SRC=+$$GETOPT(SRC)
"RTN","RGUTRPC",90,0)
 Q $S('SRC:0,1:$$REGMULT(19.01,10,SRC,.DST,.DEL))
"RTN","RGUTRPC",91,0)
 ; Add/delete an entry to/from a specified OPTION multiple.
"RTN","RGUTRPC",92,0)
 ; SFN = Subfile #
"RTN","RGUTRPC",93,0)
 ; NOD = Subnode for multiple
"RTN","RGUTRPC",94,0)
 ; ITM = Item IEN to add
"RTN","RGUTRPC",95,0)
 ; CTX = Option to add to
"RTN","RGUTRPC",96,0)
 ; DEL = Delete flag (optional)
"RTN","RGUTRPC",97,0)
REGMULT(SFN,NOD,ITM,CTX,DEL) ;
"RTN","RGUTRPC",98,0)
 N FDA,IEN
"RTN","RGUTRPC",99,0)
 S CTX=+$$GETOPT(CTX)
"RTN","RGUTRPC",100,0)
 S DEL=+$G(DEL)
"RTN","RGUTRPC",101,0)
 S IEN=+$O(^DIC(19,CTX,NOD,"B",ITM,0))
"RTN","RGUTRPC",102,0)
 Q:'IEN=DEL -1
"RTN","RGUTRPC",103,0)
 K ^TMP("DIERR",$J)
"RTN","RGUTRPC",104,0)
 I DEL S FDA(SFN,IEN_","_CTX_",",.01)="@"
"RTN","RGUTRPC",105,0)
 E  S FDA(SFN,"+1,"_CTX_",",.01)=ITM
"RTN","RGUTRPC",106,0)
 D UPDATE^DIE("","FDA")
"RTN","RGUTRPC",107,0)
 S FDA='$D(^TMP("DIERR",$J)) K ^($J)
"RTN","RGUTRPC",108,0)
 Q FDA
"RTN","RGUTRPC",109,0)
 ; Register a protocol to an extended action protocol
"RTN","RGUTRPC",110,0)
 ; Input: P-Parent protocol
"RTN","RGUTRPC",111,0)
 ;        C-Child protocol
"RTN","RGUTRPC",112,0)
REGPROT(P,C,ERR) ;EP
"RTN","RGUTRPC",113,0)
 N IENARY,PIEN,AIEN,FDA
"RTN","RGUTRPC",114,0)
 D
"RTN","RGUTRPC",115,0)
 .I '$L(P)!('$L(C)) S ERR="Missing input parameter" Q
"RTN","RGUTRPC",116,0)
 .S IENARY(1)=$$FIND1^DIC(101,"","",P)
"RTN","RGUTRPC",117,0)
 .S AIEN=$$FIND1^DIC(101,"","",C)
"RTN","RGUTRPC",118,0)
 .I 'IENARY(1)!'AIEN S ERR="Unknown protocol name" Q
"RTN","RGUTRPC",119,0)
 .S FDA(101.01,"?+2,"_IENARY(1)_",",.01)=AIEN
"RTN","RGUTRPC",120,0)
 .D UPDATE^DIE("S","FDA","IENARY","ERR")
"RTN","RGUTRPC",121,0)
 Q:$Q $G(ERR)=""
"RTN","RGUTRPC",122,0)
 Q
"RTN","RGUTRPC",123,0)
 ; Remove nonexistent RPCs from context
"RTN","RGUTRPC",124,0)
CLNRPC(CTX) ;EP
"RTN","RGUTRPC",125,0)
 N IEN
"RTN","RGUTRPC",126,0)
 S CTX=+$$GETOPT(CTX)
"RTN","RGUTRPC",127,0)
 F IEN=0:0 S IEN=$O(^DIC(19,CTX,"RPC","B",IEN)) Q:'IEN  D:'$D(^XWB(8994,IEN)) REGRPC(IEN,CTX,1)
"RTN","RGUTRPC",128,0)
 Q
"RTN","RGUTRPC",129,0)
 ; Return IEN of option
"RTN","RGUTRPC",130,0)
GETOPT(X) ;EP
"RTN","RGUTRPC",131,0)
 N Y
"RTN","RGUTRPC",132,0)
 Q:X=+X X
"RTN","RGUTRPC",133,0)
 S Y=$$FIND1^DIC(19,"","X",X)
"RTN","RGUTRPC",134,0)
 W:'Y "Cannot find option "_X,!!
"RTN","RGUTRPC",135,0)
 Q Y
"RTN","RGUTRPC",136,0)
 ; Return IEN of RPC
"RTN","RGUTRPC",137,0)
GETRPC(X) ;EP
"RTN","RGUTRPC",138,0)
 N Y
"RTN","RGUTRPC",139,0)
 Q:X=+X X
"RTN","RGUTRPC",140,0)
 S Y=$$FIND1^DIC(8994,"","X",X)
"RTN","RGUTRPC",141,0)
 W:'Y "Cannot find RPC "_X,!!
"RTN","RGUTRPC",142,0)
 Q Y
"RTN","RGUTRPRT")
0^63^B2852241
"RTN","RGUTRPRT",1,0)
RGUTRPRT ;RG/IND/DKM - Routine Pretty Print Program ;20-Jan-2015 13:23;DKM
"RTN","RGUTRPRT",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTRPRT",3,0)
 ;;
"RTN","RGUTRPRT",4,0)
 ;=================================================================
"RTN","RGUTRPRT",5,0)
 N R,C,D,P,N,M,L,X,Y,B,W,Z,S,A,F,T,Q
"RTN","RGUTRPRT",6,0)
 D HOME^%ZIS,TITLE^RGUT("Routine Pretty Print")
"RTN","RGUTRPRT",7,0)
 X ^%ZOSF("RSEL")
"RTN","RGUTRPRT",8,0)
 I $O(^UTILITY($J,0))="" W "No routines selected.",!! K ^UTILITY($J) Q
"RTN","RGUTRPRT",9,0)
 D ^%ZIS
"RTN","RGUTRPRT",10,0)
 Q:POP
"RTN","RGUTRPRT",11,0)
 X ^%ZOSF("UCI")
"RTN","RGUTRPRT",12,0)
 S A=Y,R=0,C="     >>> ",W=IOM-$L(C)-1,M=$L(C)+1,B=$$UND^RGUT(W),T=$E(IOST,1,2)="C-",F=$S(T:IOF,1:""""""),Q=0
"RTN","RGUTRPRT",13,0)
 F  S R=$O(^UTILITY($J,R)) Q:R=""  D
"RTN","RGUTRPRT",14,0)
 .I IO'=IO(0) U IO(0) W !,"Printing "_R_"..."
"RTN","RGUTRPRT",15,0)
 .U IO
"RTN","RGUTRPRT",16,0)
 .S D=$$ENTRY^RGUTDT($H),P=0,$Y=IOSL,S=0
"RTN","RGUTRPRT",17,0)
 .X "ZL @R F N=1:1 S L=$T(+N) Q:'$L(L)  S ^UTILITY($J,R,N)=L,S=S+$L(L)+2"
"RTN","RGUTRPRT",18,0)
 .S S="("_$$FMTNUM^RGUT(S)_" bytes)"
"RTN","RGUTRPRT",19,0)
 .F N=0:0 S N=$O(^UTILITY($J,R,N)) Q:'N  D  Q:Q
"RTN","RGUTRPRT",20,0)
 ..S L=^(N),X=$P(L," "),L=X_$E("        ",$L(X)+1,8)_" "_$P(L," ",2,999),Z=""
"RTN","RGUTRPRT",21,0)
 ..F  Q:L=""!Q  D
"RTN","RGUTRPRT",22,0)
 ...S X=$E(L,1,W),L=$E(L,W+1,999)
"RTN","RGUTRPRT",23,0)
 ...D:IOSL-2<$Y HDR
"RTN","RGUTRPRT",24,0)
 ...Q:Q
"RTN","RGUTRPRT",25,0)
 ...W Z,?M,X,!
"RTN","RGUTRPRT",26,0)
 ...S Z=C
"RTN","RGUTRPRT",27,0)
 K ^UTILITY($J)
"RTN","RGUTRPRT",28,0)
 D ^%ZISC
"RTN","RGUTRPRT",29,0)
 Q
"RTN","RGUTRPRT",30,0)
HDR I P,T R "Press enter to continue...",Q:$G(DTIME,300) S Q=Q["^"!'$T Q:Q
"RTN","RGUTRPRT",31,0)
 S P=P+1,$Y=0
"RTN","RGUTRPRT",32,0)
 W @F,!?M,A,$$CTR(R),$$RJ("Page "_P),!
"RTN","RGUTRPRT",33,0)
 W ?M,$G(^DD("SITE")),$$CTR(S),$$RJ(D),!
"RTN","RGUTRPRT",34,0)
 W ?M,B,!!
"RTN","RGUTRPRT",35,0)
 S:P=1 F=IOF
"RTN","RGUTRPRT",36,0)
 Q
"RTN","RGUTRPRT",37,0)
CTR(X) W ?(IOM-$L(X)\2+M),X
"RTN","RGUTRPRT",38,0)
 Q ""
"RTN","RGUTRPRT",39,0)
RJ(X) W ?(IOM-$L(X)),X
"RTN","RGUTRPRT",40,0)
 Q ""
"RTN","RGUTSTX")
0^27^B18037383
"RTN","RGUTSTX",1,0)
RGUTSTX ;RG/IND/DKM - M syntax analyzer;04-May-2006 08:19;DKM
"RTN","RGUTSTX",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTSTX",3,0)
 ;;
"RTN","RGUTSTX",4,0)
 ;=================================================================
"RTN","RGUTSTX",5,0)
 ; Perform syntactic analysis of a line of M code.
"RTN","RGUTSTX",6,0)
 ; Inputs:
"RTN","RGUTSTX",7,0)
 ;   CIAM = M statement(s)
"RTN","RGUTSTX",8,0)
 ;   CIAO = Options:
"RTN","RGUTSTX",9,0)
 ;      L = Line label allowed
"RTN","RGUTSTX",10,0)
 ;      . = Dotted syntax allowed
"RTN","RGUTSTX",11,0)
 ;      N = Do not init parsing tables
"RTN","RGUTSTX",12,0)
 ;      D = Do not delete parsing tables
"RTN","RGUTSTX",13,0)
 ;      Z = Process all Z-extensions as valid
"RTN","RGUTSTX",14,0)
 ; Outputs:
"RTN","RGUTSTX",15,0)
 ;   Returns 0 if successfully parsed.  Otherwise returns E^P^M
"RTN","RGUTSTX",16,0)
 ;   where E is an error code (see ERRORS label), P is the
"RTN","RGUTSTX",17,0)
 ;   character position where the error occurred, and M is the
"RTN","RGUTSTX",18,0)
 ;   error message.
"RTN","RGUTSTX",19,0)
 ;=================================================================
"RTN","RGUTSTX",20,0)
ENTRY(CIAM,CIAO) ;
"RTN","RGUTSTX",21,0)
 N CIAPSN,CIALEN,CIAERR,CIARN,CIAQT,CIAF,CIAPID,CIACMD
"RTN","RGUTSTX",22,0)
 S CIAM=$$UP^XLFSTR(CIAM),CIAO=$$UP^XLFSTR($G(CIAO)),CIAPSN=1,CIALEN=$L(CIAM),CIAERR=0,CIAQT="""",CIAF=0,CIAPID="RGUTSTX",U="^"
"RTN","RGUTSTX",23,0)
 D LOAD:CIAO'["N",PARSE:CIALEN
"RTN","RGUTSTX",24,0)
 K:CIAO'["D" ^TMP(CIAPID,$J)
"RTN","RGUTSTX",25,0)
 Q $S(CIAERR:CIAERR_U_$S(CIAPSN>CIALEN:CIALEN,1:CIAPSN)_U_$S(CIAERR<0:$$EC^%ZOSV,1:$P($T(ERRORS+CIAERR),";;",2)),1:0)
"RTN","RGUTSTX",26,0)
PARSE N CIAZ,CIAZ1
"RTN","RGUTSTX",27,0)
 S @$$TRAP^RGUTOS("ERROR^RGUTSTX")
"RTN","RGUTSTX",28,0)
 I CIAO["L" D  Q:CIAERR
"RTN","RGUTSTX",29,0)
 .S:$E(CIAM)'=" " CIAPSN=$$LABEL^RGUTSTX0
"RTN","RGUTSTX",30,0)
 .I $$NEXT^RGUTSTX0("("),'$$NEXT^RGUTSTX0(")") D
"RTN","RGUTSTX",31,0)
 ..F CIAPSN=CIAPSN:1 D  Q:$E(CIAM,CIAPSN)'=","!CIAERR
"RTN","RGUTSTX",32,0)
 ...S CIAPSN=$$NAME^RGUTSTX0(CIAPSN,"L%")
"RTN","RGUTSTX",33,0)
 ..Q:CIAERR
"RTN","RGUTSTX",34,0)
 ..S:'$$NEXT^RGUTSTX0(")") CIAERR=3
"RTN","RGUTSTX",35,0)
 .S:" "'[$E(CIAM,CIAPSN) CIAERR=2
"RTN","RGUTSTX",36,0)
 I CIAO["." F CIAPSN=CIAPSN:1:CIALEN+1 Q:". "'[$E(CIAM,CIAPSN)
"RTN","RGUTSTX",37,0)
 F  Q:CIAERR  D SKPSPC Q:";"[$E(CIAM,CIAPSN)  D
"RTN","RGUTSTX",38,0)
 .S CIACMD=""
"RTN","RGUTSTX",39,0)
 .F CIAPSN=CIAPSN:1 S CIAZ=$E(CIAM,CIAPSN) Q:CIAZ'?1A  S CIACMD=CIACMD_CIAZ
"RTN","RGUTSTX",40,0)
 .I CIACMD="" S CIAERR=4 Q
"RTN","RGUTSTX",41,0)
 .I $D(^TMP(CIAPID,$J,"CMD",CIACMD)) S CIACMD=^(CIACMD)
"RTN","RGUTSTX",42,0)
 .E  I CIAO["Z" S CIACMD="PC;OPT;ARGS("":M"")"
"RTN","RGUTSTX",43,0)
 .E  S CIAERR=4 Q
"RTN","RGUTSTX",44,0)
 .F CIARN=1:1:$L(CIACMD,";") D CMD^RGUTSTX0($P(CIACMD,";",CIARN)) Q:CIAERR!'CIARN
"RTN","RGUTSTX",45,0)
 .I 'CIAERR," "'[$E(CIAM,CIAPSN) S CIAERR=2
"RTN","RGUTSTX",46,0)
 .E  S CIAPSN=CIAPSN+1
"RTN","RGUTSTX",47,0)
 Q
"RTN","RGUTSTX",48,0)
 ; Skip over blanks
"RTN","RGUTSTX",49,0)
SKPSPC F  Q:'$$NEXT^RGUTSTX0(" ")
"RTN","RGUTSTX",50,0)
 Q
"RTN","RGUTSTX",51,0)
 ; Load tables
"RTN","RGUTSTX",52,0)
LOAD N CIAZ,CIAZ1,CIAZ2,CIAL
"RTN","RGUTSTX",53,0)
 K ^TMP(CIAPID,$J)
"RTN","RGUTSTX",54,0)
 F CIAL="CMD","FCN","SYS" D
"RTN","RGUTSTX",55,0)
 .F CIAZ=1:1 S CIAZ1=$P($T(@CIAL+CIAZ),";;",2,999) Q:CIAZ1=""  D
"RTN","RGUTSTX",56,0)
 ..S CIAZ2=$P(CIAZ1,";"),CIAZ1=$P(CIAZ1,";",2,999)
"RTN","RGUTSTX",57,0)
 ..F  Q:CIAZ2=""  D
"RTN","RGUTSTX",58,0)
 ...S ^TMP(CIAPID,$J,CIAL,$P(CIAZ2,","))=CIAZ1,CIAZ2=$P(CIAZ2,",",2,999)
"RTN","RGUTSTX",59,0)
 Q
"RTN","RGUTSTX",60,0)
ERROR S CIAERR=-1
"RTN","RGUTSTX",61,0)
 Q
"RTN","RGUTSTX",62,0)
CMD ;;*Commands*
"RTN","RGUTSTX",63,0)
 ;;B,BREAK;PC;OPT;ARGS()
"RTN","RGUTSTX",64,0)
 ;;C,CLOSE;PC;ARGS(":M")
"RTN","RGUTSTX",65,0)
 ;;D,DO;PC;OPT;LBL(2)
"RTN","RGUTSTX",66,0)
 ;;E,ELSE;NPC;OPT;ARGS()
"RTN","RGUTSTX",67,0)
 ;;F,FOR;NPC;OPT;FOR
"RTN","RGUTSTX",68,0)
 ;;G,GOTO;PC;LBL(1)
"RTN","RGUTSTX",69,0)
 ;;H,HALT,HANG;PC;OPT;EXP()
"RTN","RGUTSTX",70,0)
 ;;I,IF;NPC;OPT;ARGS()
"RTN","RGUTSTX",71,0)
 ;;J,JOB;PC;LBL(2)
"RTN","RGUTSTX",72,0)
 ;;K,KILL;PC;OPT;KILL
"RTN","RGUTSTX",73,0)
 ;;L,LOCK;PC;OPT;LOCK
"RTN","RGUTSTX",74,0)
 ;;M,MERGE;PC;MERGE
"RTN","RGUTSTX",75,0)
 ;;N,NEW;PC;OPT;NEW
"RTN","RGUTSTX",76,0)
 ;;O,OPEN;PC;ARGS(":M")
"RTN","RGUTSTX",77,0)
 ;;Q,QUIT;PC;OPT;EXP()
"RTN","RGUTSTX",78,0)
 ;;R,READ;PC;READ
"RTN","RGUTSTX",79,0)
 ;;S,SET;PC;SET
"RTN","RGUTSTX",80,0)
 ;;U,USE;PC;ARGS(":M")
"RTN","RGUTSTX",81,0)
 ;;V,VIEW;PC;ARGS(":M")
"RTN","RGUTSTX",82,0)
 ;;W,WRITE;PC;WRITE
"RTN","RGUTSTX",83,0)
 ;;X,XECUTE;PC;ARGS(":")
"RTN","RGUTSTX",84,0)
 ;;ZT,ZTRAP;PC;OPT;EXP()
"RTN","RGUTSTX",85,0)
 ;;ZS,ZSAVE;PC;OPT;EXP()
"RTN","RGUTSTX",86,0)
 ;;ZR,ZREMOVE;PC;OPT;LBL(1)
"RTN","RGUTSTX",87,0)
 ;;ZP,ZPRINT
"RTN","RGUTSTX",88,0)
 ;;
"RTN","RGUTSTX",89,0)
FCN ;;*Intrinsic functions*
"RTN","RGUTSTX",90,0)
 ;;A,ASCII;;1-2
"RTN","RGUTSTX",91,0)
 ;;C,CHAR;;1-999
"RTN","RGUTSTX",92,0)
 ;;D,DATA;;1-1;V
"RTN","RGUTSTX",93,0)
 ;;E,EXTRACT;S;1-3
"RTN","RGUTSTX",94,0)
 ;;F,FIND;;2-3
"RTN","RGUTSTX",95,0)
 ;;FN,FNUMBER;;2-3
"RTN","RGUTSTX",96,0)
 ;;G,GET;;1-2;V
"RTN","RGUTSTX",97,0)
 ;;J,JUSTIFY;;1-3
"RTN","RGUTSTX",98,0)
 ;;L,LENGTH;;1-2
"RTN","RGUTSTX",99,0)
 ;;N,NEXT;;1-2
"RTN","RGUTSTX",100,0)
 ;;NA,NAME;;1-2;V
"RTN","RGUTSTX",101,0)
 ;;O,ORDER;;1-2;V
"RTN","RGUTSTX",102,0)
 ;;P,PIECE;S;2-4
"RTN","RGUTSTX",103,0)
 ;;Q,QUERY;;1-2;V
"RTN","RGUTSTX",104,0)
 ;;R,RANDOM;;1-1
"RTN","RGUTSTX",105,0)
 ;;S,SELECT;:;1-999
"RTN","RGUTSTX",106,0)
 ;;T,TEXT;;1-1;L
"RTN","RGUTSTX",107,0)
 ;;TR,TRANSLATE;;2-3
"RTN","RGUTSTX",108,0)
 ;;V,VIEW;;1-999
"RTN","RGUTSTX",109,0)
 ;;
"RTN","RGUTSTX",110,0)
SYS ;;*System variables*
"RTN","RGUTSTX",111,0)
 ;;D,DEVICE
"RTN","RGUTSTX",112,0)
 ;;ET,ETRAP;SN
"RTN","RGUTSTX",113,0)
 ;;H,HOROLOG
"RTN","RGUTSTX",114,0)
 ;;I,IO
"RTN","RGUTSTX",115,0)
 ;;J,JOB
"RTN","RGUTSTX",116,0)
 ;;K,KEY
"RTN","RGUTSTX",117,0)
 ;;P,PRINCIPAL
"RTN","RGUTSTX",118,0)
 ;;S,STORAGE
"RTN","RGUTSTX",119,0)
 ;;SY,SYSTEM
"RTN","RGUTSTX",120,0)
 ;;T,TEST
"RTN","RGUTSTX",121,0)
 ;;TL,TLEVEL
"RTN","RGUTSTX",122,0)
 ;;TR,TRESTART
"RTN","RGUTSTX",123,0)
 ;;X;S
"RTN","RGUTSTX",124,0)
 ;;Y;S
"RTN","RGUTSTX",125,0)
 ;;ZT,ZTRAP;S
"RTN","RGUTSTX",126,0)
 ;;ZE,ZERROR;S
"RTN","RGUTSTX",127,0)
 ;;ES,ESTACK;N
"RTN","RGUTSTX",128,0)
 ;;EC,ECODE;S
"RTN","RGUTSTX",129,0)
ERRORS ;;*Error messages*
"RTN","RGUTSTX",130,0)
 ;;Bad variable name
"RTN","RGUTSTX",131,0)
 ;;Syntax error
"RTN","RGUTSTX",132,0)
 ;;Unbalanced parentheses
"RTN","RGUTSTX",133,0)
 ;;Unrecognized command
"RTN","RGUTSTX",134,0)
 ;;Postconditional not allowed
"RTN","RGUTSTX",135,0)
 ;;Missing operand
"RTN","RGUTSTX",136,0)
 ;;Unrecognized intrinsic function/variable
"RTN","RGUTSTX",137,0)
 ;;Incorrect number of arguments
"RTN","RGUTSTX",138,0)
 ;;Missing closing quote
"RTN","RGUTSTX",139,0)
 ;;Illegal pattern
"RTN","RGUTSTX",140,0)
 ;;Bad label name
"RTN","RGUTSTX",141,0)
 ;;Name too long
"RTN","RGUTSTX",142,0)
 ;;13
"RTN","RGUTSTX0")
0^28^B19756996
"RTN","RGUTSTX0",1,0)
RGUTSTX0 ;RG/IND/DKM - Continuation of RGUTSTX;04-May-2006 08:19;DKM
"RTN","RGUTSTX0",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTSTX0",3,0)
 ;;
"RTN","RGUTSTX0",4,0)
 ;=================================================================
"RTN","RGUTSTX0",5,0)
CMD(CIALBL) ;
"RTN","RGUTSTX0",6,0)
 D:CIALBL'="" @CIALBL
"RTN","RGUTSTX0",7,0)
 Q
"RTN","RGUTSTX0",8,0)
 ; Postconditional
"RTN","RGUTSTX0",9,0)
PC D:$$NEXT(":") EXP()
"RTN","RGUTSTX0",10,0)
 Q:CIAERR
"RTN","RGUTSTX0",11,0)
 I " "'[$E(CIAM,CIAPSN) S CIAERR=2
"RTN","RGUTSTX0",12,0)
 E  S CIAPSN=CIAPSN+1
"RTN","RGUTSTX0",13,0)
 Q
"RTN","RGUTSTX0",14,0)
 ; No postconditional
"RTN","RGUTSTX0",15,0)
NPC I $$NEXT(":") S CIAERR=5
"RTN","RGUTSTX0",16,0)
 E  I " "'[$E(CIAM,CIAPSN) S CIAERR=2
"RTN","RGUTSTX0",17,0)
 E  S CIAPSN=CIAPSN+1
"RTN","RGUTSTX0",18,0)
 Q
"RTN","RGUTSTX0",19,0)
 ; Arguments optional
"RTN","RGUTSTX0",20,0)
OPT S:" "[$E(CIAM,CIAPSN) CIARN=0
"RTN","RGUTSTX0",21,0)
 Q
"RTN","RGUTSTX0",22,0)
 ; Multiple arguments
"RTN","RGUTSTX0",23,0)
ARGS(CIAEX) ;
"RTN","RGUTSTX0",24,0)
 S CIAEX=$G(CIAEX)
"RTN","RGUTSTX0",25,0)
 F  D EXP(CIAEX) Q:CIAERR!'$$NEXT(",")
"RTN","RGUTSTX0",26,0)
 Q
"RTN","RGUTSTX0",27,0)
 ; Expression
"RTN","RGUTSTX0",28,0)
EXP(CIAEX) ;
"RTN","RGUTSTX0",29,0)
 D EXP^RGUTSTX1(.CIAEX)
"RTN","RGUTSTX0",30,0)
 Q
"RTN","RGUTSTX0",31,0)
 ; Label reference
"RTN","RGUTSTX0",32,0)
LBL(CIAA) F  D LBL1(.CIAA) Q:CIAERR!'$$NEXT(",")
"RTN","RGUTSTX0",33,0)
 Q
"RTN","RGUTSTX0",34,0)
LBL1(CIAA) ;
"RTN","RGUTSTX0",35,0)
 S CIAA=+$G(CIAA)
"RTN","RGUTSTX0",36,0)
 D LBL2
"RTN","RGUTSTX0",37,0)
 Q:CIAERR
"RTN","RGUTSTX0",38,0)
 D:$$NEXT("+") EXP(")")
"RTN","RGUTSTX0",39,0)
 Q:CIAERR
"RTN","RGUTSTX0",40,0)
 D:$$NEXT(U) LBL2
"RTN","RGUTSTX0",41,0)
 I 'CIAERR,CIAA=2 D PARAMS(".;0-999")
"RTN","RGUTSTX0",42,0)
 I 'CIAERR,CIAA D EXP(")"):$$NEXT(":")
"RTN","RGUTSTX0",43,0)
 Q
"RTN","RGUTSTX0",44,0)
LBL2 I $$NEXT("@") D
"RTN","RGUTSTX0",45,0)
 .D EXP("=")
"RTN","RGUTSTX0",46,0)
 E  S:$E(CIAM,CIAPSN)?.1AN.1"%" CIAPSN=$$LABEL
"RTN","RGUTSTX0",47,0)
 Q
"RTN","RGUTSTX0",48,0)
 ; Write command
"RTN","RGUTSTX0",49,0)
WRITE F  D  Q:CIAERR!'$$NEXT(",")
"RTN","RGUTSTX0",50,0)
 .I $$NEXT("!#") D  Q:'$$NEXT("?",0)
"RTN","RGUTSTX0",51,0)
 ..F  Q:'$$NEXT("!#")
"RTN","RGUTSTX0",52,0)
 .I $$NEXT("?*")
"RTN","RGUTSTX0",53,0)
 .D EXP()
"RTN","RGUTSTX0",54,0)
 Q
"RTN","RGUTSTX0",55,0)
 ; Read command
"RTN","RGUTSTX0",56,0)
READ N CIAZ
"RTN","RGUTSTX0",57,0)
 F  D  Q:CIAERR!'$$NEXT(",")
"RTN","RGUTSTX0",58,0)
 .I $$NEXT("!#") D  Q:'$$NEXT("?",0)
"RTN","RGUTSTX0",59,0)
 ..F  Q:'$$NEXT("!#")
"RTN","RGUTSTX0",60,0)
 .I $$NEXT("?") D EXP() Q
"RTN","RGUTSTX0",61,0)
 .I $$NEXT(CIAQT) D QT2^RGUTSTX1 Q
"RTN","RGUTSTX0",62,0)
 .S CIAZ=$$NEXT("*")
"RTN","RGUTSTX0",63,0)
 .D LVAL("LGS")
"RTN","RGUTSTX0",64,0)
 .I 'CIAERR,'CIAZ,$$NEXT("#") D EXP()
"RTN","RGUTSTX0",65,0)
 .I 'CIAERR,$$NEXT(":") D EXP()
"RTN","RGUTSTX0",66,0)
 Q
"RTN","RGUTSTX0",67,0)
 ; Lock command
"RTN","RGUTSTX0",68,0)
LOCK D LIST("LG+:","LG")
"RTN","RGUTSTX0",69,0)
 Q
"RTN","RGUTSTX0",70,0)
 ; Set command
"RTN","RGUTSTX0",71,0)
SET D LIST("LGS=","LGS")
"RTN","RGUTSTX0",72,0)
 Q
"RTN","RGUTSTX0",73,0)
 ; New command
"RTN","RGUTSTX0",74,0)
NEW D LIST("N","")
"RTN","RGUTSTX0",75,0)
 Q
"RTN","RGUTSTX0",76,0)
 ; Kill command
"RTN","RGUTSTX0",77,0)
KILL D LIST("KGL","")
"RTN","RGUTSTX0",78,0)
 Q
"RTN","RGUTSTX0",79,0)
 ; Merge command
"RTN","RGUTSTX0",80,0)
MERGE D LIST("LG=")
"RTN","RGUTSTX0",81,0)
 Q
"RTN","RGUTSTX0",82,0)
 ; For command
"RTN","RGUTSTX0",83,0)
FOR D LVAL("LGS")
"RTN","RGUTSTX0",84,0)
 I '$$NEXT("=") S CIAERR=2 Q
"RTN","RGUTSTX0",85,0)
 F  D  Q:" "[$E(CIAM,CIAPSN)  I '$$NEXT(",") S CIAERR=2 Q
"RTN","RGUTSTX0",86,0)
 .D EXP(),EXP():$$NEXT(":"),EXP():$$NEXT(":")
"RTN","RGUTSTX0",87,0)
 Q
"RTN","RGUTSTX0",88,0)
 ; Evaluate L-value
"RTN","RGUTSTX0",89,0)
 ; CIAL: Allowed types:
"RTN","RGUTSTX0",90,0)
 ;     L=Local array
"RTN","RGUTSTX0",91,0)
 ;     G=Global arrays
"RTN","RGUTSTX0",92,0)
 ;     S=Settable intrinsics/system variables
"RTN","RGUTSTX0",93,0)
 ;     N=Newable system variables
"RTN","RGUTSTX0",94,0)
 ;     K=Killable system variables
"RTN","RGUTSTX0",95,0)
LVAL(CIAL) ;
"RTN","RGUTSTX0",96,0)
 I $$NEXT("@",0) D  Q
"RTN","RGUTSTX0",97,0)
 .S CIAL="="
"RTN","RGUTSTX0",98,0)
 .D EXP(.CIAL)
"RTN","RGUTSTX0",99,0)
 S CIAL=$G(CIAL)
"RTN","RGUTSTX0",100,0)
 I CIAL["G",$$NEXT(U) D  Q
"RTN","RGUTSTX0",101,0)
 .N CIAF
"RTN","RGUTSTX0",102,0)
 .D GLBL^RGUTSTX1
"RTN","RGUTSTX0",103,0)
 I $TR(CIAL,"SNK")'=CIAL,$$NEXT("$") D  Q
"RTN","RGUTSTX0",104,0)
 .N CIAZ
"RTN","RGUTSTX0",105,0)
 .S CIAZ=$$INT(.CIAPSN,CIAL)
"RTN","RGUTSTX0",106,0)
 .D:'CIAERR PARAMS(CIAZ)
"RTN","RGUTSTX0",107,0)
 S CIAPSN=$$NAME(CIAPSN,"%")
"RTN","RGUTSTX0",108,0)
 I 'CIAERR,CIAL["L" D PARAMS()
"RTN","RGUTSTX0",109,0)
 Q
"RTN","RGUTSTX0",110,0)
 ; Evaluate parameters/subscripts
"RTN","RGUTSTX0",111,0)
PARAMS(CIAX) ;
"RTN","RGUTSTX0",112,0)
 D:$$NEXT("(") PLIST^RGUTSTX1(.CIAX)
"RTN","RGUTSTX0",113,0)
 Q
"RTN","RGUTSTX0",114,0)
 ; New/Kill/Set/Lock argument list
"RTN","RGUTSTX0",115,0)
LIST(CIAL1,CIAL2) ;
"RTN","RGUTSTX0",116,0)
 N CIAP,CIAI
"RTN","RGUTSTX0",117,0)
 S CIAP=0
"RTN","RGUTSTX0",118,0)
 F  D  Q:CIAERR!'$$NEXT(",")
"RTN","RGUTSTX0",119,0)
 .I 'CIAP,CIAL1["+",$$NEXT("+-")
"RTN","RGUTSTX0",120,0)
 .I $D(CIAL2),$$NEXT("(") D  Q:CIAERR
"RTN","RGUTSTX0",121,0)
 ..I CIAP S CIAERR=2 Q
"RTN","RGUTSTX0",122,0)
 ..E  S CIAP=1
"RTN","RGUTSTX0",123,0)
 .S CIAI=$S(CIAP:CIAL2,1:CIAL1)
"RTN","RGUTSTX0",124,0)
 .D LVAL(.CIAI)
"RTN","RGUTSTX0",125,0)
 .Q:CIAERR
"RTN","RGUTSTX0",126,0)
 .I $$NEXT(")") D  Q:CIAERR
"RTN","RGUTSTX0",127,0)
 ..I CIAP S CIAP=0
"RTN","RGUTSTX0",128,0)
 ..E  S CIAERR=2
"RTN","RGUTSTX0",129,0)
 .I 'CIAP,CIAL1[":",$$NEXT(":") D EXP()
"RTN","RGUTSTX0",130,0)
 .I 'CIAP,CIAL1["=" D
"RTN","RGUTSTX0",131,0)
 ..I '$$NEXT("=") S:CIAI'["@" CIAERR=2
"RTN","RGUTSTX0",132,0)
 ..E  D EXP():$D(CIAL2),LVAL(CIAL1):'$D(CIAL2)
"RTN","RGUTSTX0",133,0)
 I 'CIAERR,CIAP S CIAERR=3
"RTN","RGUTSTX0",134,0)
 Q
"RTN","RGUTSTX0",135,0)
 ; Check for validity of label name
"RTN","RGUTSTX0",136,0)
LABEL(CIAP) ;
"RTN","RGUTSTX0",137,0)
 Q $$NAME(.CIAP,"L%")
"RTN","RGUTSTX0",138,0)
 ; Check for validity of variable/label name
"RTN","RGUTSTX0",139,0)
NAME(CIAP,CIAF) ;
"RTN","RGUTSTX0",140,0)
 N CIAP1
"RTN","RGUTSTX0",141,0)
 S (CIAP,CIAP1)=$G(CIAP,CIAPSN),CIAF=$G(CIAF)
"RTN","RGUTSTX0",142,0)
 I CIAF["$",$E(CIAM,CIAP)="$" S CIAP=CIAP+1,CIAP1=CIAP
"RTN","RGUTSTX0",143,0)
 I CIAF["%",$E(CIAM,CIAP)="%" S CIAP=CIAP+1
"RTN","RGUTSTX0",144,0)
 F CIAP=CIAP:1 Q:$E(CIAM,CIAP)'?@$S(CIAF["L":"1AN",CIAP=CIAP1:"1A",1:"1AN")
"RTN","RGUTSTX0",145,0)
 I CIAP=CIAP1 S CIAERR=$S(CIAF["L":11,1:1)
"RTN","RGUTSTX0",146,0)
 E  S:CIAP-CIAP1>8 CIAERR=12
"RTN","RGUTSTX0",147,0)
 Q CIAP
"RTN","RGUTSTX0",148,0)
 ; Instrinsic function/system variable
"RTN","RGUTSTX0",149,0)
INT(CIAP,CIAL) ;
"RTN","RGUTSTX0",150,0)
 N CIAP2,CIAINT,CIANM
"RTN","RGUTSTX0",151,0)
 S CIAP=$G(CIAP,CIAPSN),CIAP2=$$NAME(CIAP),CIAL=$G(CIAL)
"RTN","RGUTSTX0",152,0)
 Q:CIAERR ""
"RTN","RGUTSTX0",153,0)
 S CIANM=$E(CIAM,CIAP,CIAP2-1)
"RTN","RGUTSTX0",154,0)
 I $E(CIAM,CIAP2)="(" S:$D(^TMP(CIAPID,$J,"FCN",CIANM)) CIAINT=^(CIANM)
"RTN","RGUTSTX0",155,0)
 E  S:$D(^TMP(CIAPID,$J,"SYS",CIANM)) CIAINT=^(CIANM)
"RTN","RGUTSTX0",156,0)
 I '$D(CIAINT),CIAO["Z" S CIAINT=";0-999"
"RTN","RGUTSTX0",157,0)
 I '$D(CIAINT) S CIAERR=7
"RTN","RGUTSTX0",158,0)
 E  I CIAL'="",$TR(CIAL,$P(CIAINT,";"))=CIAL S CIAERR=2,CIAINT=""
"RTN","RGUTSTX0",159,0)
 E  S CIAP=CIAP2
"RTN","RGUTSTX0",160,0)
 Q $G(CIAINT)
"RTN","RGUTSTX0",161,0)
 ; Check next character
"RTN","RGUTSTX0",162,0)
NEXT(CIAC,CIAI) ;
"RTN","RGUTSTX0",163,0)
 I CIAPSN'>CIALEN,CIAC[$E(CIAM,CIAPSN) S CIAPSN=CIAPSN+$G(CIAI,1)
"RTN","RGUTSTX0",164,0)
 Q $T
"RTN","RGUTSTX1")
0^29^B21990330
"RTN","RGUTSTX1",1,0)
RGUTSTX1 ;RG/IND/DKM - Continuation of RGUTSTX;04-May-2006 08:19;DKM
"RTN","RGUTSTX1",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTSTX1",3,0)
 ;;
"RTN","RGUTSTX1",4,0)
 ;=================================================================
"RTN","RGUTSTX1",5,0)
 ; Parse an expression
"RTN","RGUTSTX1",6,0)
EXP(CIAEX) ;
"RTN","RGUTSTX1",7,0)
 N CIAF,CIAC,CIAPN
"RTN","RGUTSTX1",8,0)
 S (CIAF,CIAPN)=0,CIAEX=$G(CIAEX)
"RTN","RGUTSTX1",9,0)
 F  D  Q:CIAF<0!CIAERR
"RTN","RGUTSTX1",10,0)
 .S CIAC=$E(CIAM,CIAPSN),CIAPSN=CIAPSN+1
"RTN","RGUTSTX1",11,0)
 .D @("OP"_CIAF)
"RTN","RGUTSTX1",12,0)
 I 'CIAERR,CIAPN S CIAERR=3
"RTN","RGUTSTX1",13,0)
 S CIAEX=$S($G(CIAPN(CIAPN,"@")):"@",1:"")_CIAEX
"RTN","RGUTSTX1",14,0)
 Q
"RTN","RGUTSTX1",15,0)
 ; Operands
"RTN","RGUTSTX1",16,0)
OP0 I CIAC'=".",CIAEX["." S CIAEX=$TR(CIAEX,".")
"RTN","RGUTSTX1",17,0)
 G:CIAC'="" COLON2:CIAC=":",GLBL:CIAC=U,DOT:CIAC=".",INDIR:CIAC="@",FCN:CIAC="$",UNARY:"'+-"[CIAC,QT:CIAC=CIAQT,NUM:CIAC?1N,OPNPAR:CIAC="(",VAR:CIAC?1A,VAR:CIAC="%"
"RTN","RGUTSTX1",18,0)
 S CIAERR=6
"RTN","RGUTSTX1",19,0)
 Q
"RTN","RGUTSTX1",20,0)
 ; Operators
"RTN","RGUTSTX1",21,0)
OP1 G END:CIAC="",INDIR2:CIAC="@",DONE:CIAEX["="&'CIAPN!(CIAC=" ")
"RTN","RGUTSTX1",22,0)
 K CIAPN(CIAPN,"@")
"RTN","RGUTSTX1",23,0)
 I CIAC="*",$$NEXT(CIAC)
"RTN","RGUTSTX1",24,0)
 G COLON:CIAC=":",CLSPAR:CIAC=")",RBRKT:CIAC="]",BINARY:"!#&*-_+=\/<>["[CIAC,NOT:CIAC="'",PTRN:CIAC="?"
"RTN","RGUTSTX1",25,0)
DONE S CIAPSN=CIAPSN-1
"RTN","RGUTSTX1",26,0)
END S CIAF=-1
"RTN","RGUTSTX1",27,0)
 Q
"RTN","RGUTSTX1",28,0)
 ; Negated operator
"RTN","RGUTSTX1",29,0)
NOT S:'$$NEXT("=<>[]?&!",0) CIAERR=2
"RTN","RGUTSTX1",30,0)
 Q
"RTN","RGUTSTX1",31,0)
 ; Parse a global reference
"RTN","RGUTSTX1",32,0)
GLBL D:$$NEXT("[") PLIST(";1-2","]")
"RTN","RGUTSTX1",33,0)
 Q:CIAERR
"RTN","RGUTSTX1",34,0)
 S:'$$NEXT("(",0) CIAPSN=$$NAME^RGUTSTX0(CIAPSN,"$%")
"RTN","RGUTSTX1",35,0)
 I 'CIAERR,$$NEXT("(") D PLIST(";1-999")
"RTN","RGUTSTX1",36,0)
 S CIAF=1
"RTN","RGUTSTX1",37,0)
 Q
"RTN","RGUTSTX1",38,0)
 ; Indirection (prefix)
"RTN","RGUTSTX1",39,0)
INDIR S CIAPN(CIAPN,"@")=$G(CIAPN(CIAPN,"@"))+1
"RTN","RGUTSTX1",40,0)
 Q
"RTN","RGUTSTX1",41,0)
 ; Indirection (suffix)
"RTN","RGUTSTX1",42,0)
INDIR2 I +$G(CIAPN(CIAPN,"@"))'>0 S CIAERR=2
"RTN","RGUTSTX1",43,0)
 E  I '$$NEXT("(") S CIAERR=2
"RTN","RGUTSTX1",44,0)
 E  D
"RTN","RGUTSTX1",45,0)
 .S CIAPN(CIAPN,"@")=-(CIAPN(CIAPN,"@")>1)
"RTN","RGUTSTX1",46,0)
 .D PLIST()
"RTN","RGUTSTX1",47,0)
 Q
"RTN","RGUTSTX1",48,0)
 ; Intrinsic function/system variable
"RTN","RGUTSTX1",49,0)
FCN G:$$NEXT("$") EXT
"RTN","RGUTSTX1",50,0)
INT N CIAZ,CIAZ1
"RTN","RGUTSTX1",51,0)
 S CIAZ1=$E(CIAM,CIAPSN),CIAZ=$$INT^RGUTSTX0(.CIAPSN),CIAF=1
"RTN","RGUTSTX1",52,0)
 I 'CIAERR,$$NEXT("(") D PLIST(CIAZ)
"RTN","RGUTSTX1",53,0)
 Q
"RTN","RGUTSTX1",54,0)
 ; Extrinsic function
"RTN","RGUTSTX1",55,0)
EXT S:'$$NEXT(U,0) CIAPSN=$$LABEL^RGUTSTX0
"RTN","RGUTSTX1",56,0)
 Q:CIAERR
"RTN","RGUTSTX1",57,0)
 S:$$NEXT(U) CIAPSN=$$LABEL^RGUTSTX0
"RTN","RGUTSTX1",58,0)
 Q:CIAERR
"RTN","RGUTSTX1",59,0)
 D:$$NEXT("(") PLIST(".;0-999")
"RTN","RGUTSTX1",60,0)
 S CIAF=1
"RTN","RGUTSTX1",61,0)
 Q
"RTN","RGUTSTX1",62,0)
 ; Unary operator
"RTN","RGUTSTX1",63,0)
UNARY Q
"RTN","RGUTSTX1",64,0)
 ; String literal
"RTN","RGUTSTX1",65,0)
QT D QT2
"RTN","RGUTSTX1",66,0)
 S CIAF=1
"RTN","RGUTSTX1",67,0)
 Q
"RTN","RGUTSTX1",68,0)
 ; Find matching quote
"RTN","RGUTSTX1",69,0)
QT2 F CIAPSN=CIAPSN:1:CIALEN I $$NEXT(CIAQT),'$$NEXT(CIAQT,0) Q
"RTN","RGUTSTX1",70,0)
 S:$E(CIAM,CIAPSN-1)'=CIAQT CIAERR=9
"RTN","RGUTSTX1",71,0)
 Q
"RTN","RGUTSTX1",72,0)
 ; Numeric constant
"RTN","RGUTSTX1",73,0)
NUM N CIAZ,CIAZ1
"RTN","RGUTSTX1",74,0)
 S CIAZ=0,CIAF=1
"RTN","RGUTSTX1",75,0)
 F CIAPSN=CIAPSN-1:1 S CIAZ1=$E(CIAM,CIAPSN) D @("NUM"_CIAZ) Q:CIAZ<0
"RTN","RGUTSTX1",76,0)
 S:CIAZ=-2 CIAERR=2
"RTN","RGUTSTX1",77,0)
 Q
"RTN","RGUTSTX1",78,0)
NUM0 S CIAZ=$S(CIAZ1?1N:1,CIAZ1=".":2,1:-2)
"RTN","RGUTSTX1",79,0)
 Q
"RTN","RGUTSTX1",80,0)
NUM1 S CIAZ=$S(CIAZ1?1N:1,CIAZ1=".":3,1:-1)
"RTN","RGUTSTX1",81,0)
 Q
"RTN","RGUTSTX1",82,0)
NUM2 S CIAZ=$S(CIAZ1?1N:3,1:-2)
"RTN","RGUTSTX1",83,0)
 Q
"RTN","RGUTSTX1",84,0)
NUM3 S CIAZ=$S(CIAZ1?1N:3,CIAZ1="E":4,1:-1)
"RTN","RGUTSTX1",85,0)
 Q
"RTN","RGUTSTX1",86,0)
NUM4 S CIAZ=$S(CIAZ1="+":5,CIAZ1="-":5,CIAZ1=".":7,CIAZ1?1N:6,1:-2)
"RTN","RGUTSTX1",87,0)
 Q
"RTN","RGUTSTX1",88,0)
NUM5 S CIAZ=$S(CIAZ1?1N:6,CIAZ1=".":7,1:-2)
"RTN","RGUTSTX1",89,0)
 Q
"RTN","RGUTSTX1",90,0)
NUM6 S CIAZ=$S(CIAZ1?1N:6,CIAZ1=".":8,1:-1)
"RTN","RGUTSTX1",91,0)
 Q
"RTN","RGUTSTX1",92,0)
NUM7 S CIAZ=$S(CIAZ1?1N:8,1:-2)
"RTN","RGUTSTX1",93,0)
 Q
"RTN","RGUTSTX1",94,0)
NUM8 S CIAZ=$S(CIAZ1?1N:8,1:-1)
"RTN","RGUTSTX1",95,0)
 Q
"RTN","RGUTSTX1",96,0)
 ; Open parenthesis
"RTN","RGUTSTX1",97,0)
OPNPAR S CIAPN=CIAPN+1
"RTN","RGUTSTX1",98,0)
 K CIAPN(CIAPN)
"RTN","RGUTSTX1",99,0)
 Q
"RTN","RGUTSTX1",100,0)
 ; Period (variable by reference or FP number)
"RTN","RGUTSTX1",101,0)
DOT I CIAEX[".",$E(CIAM,CIAPSN)'?1N D
"RTN","RGUTSTX1",102,0)
 .I '$$NEXT("@") S CIAPSN=$$NAME^RGUTSTX0(CIAPSN,"%"),CIAF=-1
"RTN","RGUTSTX1",103,0)
 .E  D INDIR
"RTN","RGUTSTX1",104,0)
 E  D NUM
"RTN","RGUTSTX1",105,0)
 Q
"RTN","RGUTSTX1",106,0)
 ; Variable name
"RTN","RGUTSTX1",107,0)
VAR S CIAPSN=$$NAME^RGUTSTX0(CIAPSN-1,"%"),CIAF=1
"RTN","RGUTSTX1",108,0)
 D:$$NEXT("(") PLIST()
"RTN","RGUTSTX1",109,0)
 Q
"RTN","RGUTSTX1",110,0)
 ; Closing parenthesis
"RTN","RGUTSTX1",111,0)
CLSPAR I 'CIAPN,CIAEX[")" G DONE
"RTN","RGUTSTX1",112,0)
 I CIAPN S CIAPN=CIAPN-1
"RTN","RGUTSTX1",113,0)
 E  S CIAERR=3
"RTN","RGUTSTX1",114,0)
 Q
"RTN","RGUTSTX1",115,0)
 ; Right bracket (] or ]])
"RTN","RGUTSTX1",116,0)
RBRKT I 'CIAPN,CIAEX["]" G DONE
"RTN","RGUTSTX1",117,0)
 I $$NEXT(CIAC)
"RTN","RGUTSTX1",118,0)
 ; Binary operator
"RTN","RGUTSTX1",119,0)
BINARY S CIAF=0
"RTN","RGUTSTX1",120,0)
 Q
"RTN","RGUTSTX1",121,0)
 ; Colon operand
"RTN","RGUTSTX1",122,0)
COLON2 S:CIAEX'["M" CIAERR=6
"RTN","RGUTSTX1",123,0)
 Q
"RTN","RGUTSTX1",124,0)
 ; Colon operator
"RTN","RGUTSTX1",125,0)
COLON G:CIAEX'[":" DONE
"RTN","RGUTSTX1",126,0)
 S CIAF=0
"RTN","RGUTSTX1",127,0)
 S:CIAEX'["M" CIAEX=$TR(CIAEX,":")
"RTN","RGUTSTX1",128,0)
 Q
"RTN","RGUTSTX1",129,0)
 ; Pattern match
"RTN","RGUTSTX1",130,0)
PTRN N CIAZ,CIAZ1
"RTN","RGUTSTX1",131,0)
 I $$NEXT("@") S CIAF=0 Q
"RTN","RGUTSTX1",132,0)
 S CIAZ=CIAPSN,@$$TRAP^RGUTOS("PERR^RGUTSTX1"),CIAZ1=0
"RTN","RGUTSTX1",133,0)
 F  D  Q:CIAZ1<0!CIAERR
"RTN","RGUTSTX1",134,0)
 .D QT2:$$NEXT(CIAQT),PTRN1:$$NEXT("("),PTRN2:$$NEXT(")")
"RTN","RGUTSTX1",135,0)
 .I CIAZ1,$$NEXT(",")
"RTN","RGUTSTX1",136,0)
 .S:'$$NEXT("ACELNPU.0123456789") CIAZ1=-1
"RTN","RGUTSTX1",137,0)
 S:'CIAERR CIAZ=CIAZ?@$E(CIAM,CIAZ,CIAPSN-1)
"RTN","RGUTSTX1",138,0)
 Q
"RTN","RGUTSTX1",139,0)
PTRN1 S CIAZ1=CIAZ1+1
"RTN","RGUTSTX1",140,0)
 Q
"RTN","RGUTSTX1",141,0)
PTRN2 S CIAZ1=CIAZ1-1
"RTN","RGUTSTX1",142,0)
 S:CIAZ1<0 CIAPSN=CIAPSN-1
"RTN","RGUTSTX1",143,0)
 Q
"RTN","RGUTSTX1",144,0)
PERR S CIAERR=10
"RTN","RGUTSTX1",145,0)
 Q
"RTN","RGUTSTX1",146,0)
 ; Process a parameter list
"RTN","RGUTSTX1",147,0)
PLIST(CIAP,CIAT) ;
"RTN","RGUTSTX1",148,0)
 N CIAC,CIAP1,CIAP2,CIAZ
"RTN","RGUTSTX1",149,0)
 S CIAT=$G(CIAT,")"),CIAP=$G(CIAP,";0-999"),CIAP2=$P(CIAP,";",2),CIAP1=+CIAP2,CIAP2=+$P(CIAP2,"-",2),CIAC=0,CIAZ=$P(CIAP,";")
"RTN","RGUTSTX1",150,0)
 I '$$NEXT(CIAT,0) D
"RTN","RGUTSTX1",151,0)
 .F CIAC=1:1 D  Q:CIAERR!'$$NEXT(",")
"RTN","RGUTSTX1",152,0)
 ..D @("PL"_$P(CIAP,";",CIAC+2))
"RTN","RGUTSTX1",153,0)
 I 'CIAERR,CIAC<CIAP1!(CIAC>CIAP2) S CIAERR=8
"RTN","RGUTSTX1",154,0)
 I 'CIAERR,'$$NEXT(CIAT) S CIAERR=3
"RTN","RGUTSTX1",155,0)
 Q
"RTN","RGUTSTX1",156,0)
PL N CIAEX
"RTN","RGUTSTX1",157,0)
 I CIAZ=".",$$NEXT(",",0) Q
"RTN","RGUTSTX1",158,0)
 S CIAEX=CIAT_CIAZ
"RTN","RGUTSTX1",159,0)
 D EXP(.CIAEX)
"RTN","RGUTSTX1",160,0)
 I CIAZ[":",CIAEX[":" S CIAERR=2
"RTN","RGUTSTX1",161,0)
 Q
"RTN","RGUTSTX1",162,0)
PLV D LVAL^RGUTSTX0("LG")
"RTN","RGUTSTX1",163,0)
 Q
"RTN","RGUTSTX1",164,0)
PLL D LBL1^RGUTSTX0()
"RTN","RGUTSTX1",165,0)
 Q
"RTN","RGUTSTX1",166,0)
 ; Get next character
"RTN","RGUTSTX1",167,0)
NEXT(CIAC,CIAI) ;
"RTN","RGUTSTX1",168,0)
 Q $$NEXT^RGUTSTX0(CIAC,.CIAI)
"RTN","RGUTTSK")
0^57^B1046191
"RTN","RGUTTSK",1,0)
RGUTTSK ;RG/IND/DKM - Encapsulates TaskMan API ;04-May-2006 08:19;DKM
"RTN","RGUTTSK",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTTSK",3,0)
 ;;
"RTN","RGUTTSK",4,0)
 ;=================================================================
"RTN","RGUTTSK",5,0)
QUEUE(ZTRTN,ZTDESC,ZTDTH,ZTSAVE,ZTIO,ZTUCI,ZTPRI) ;
"RTN","RGUTTSK",6,0)
 N %CIAZ,%CIAZ1,%CIAZ2,ZTKIL,ZTSK,ZTCPU
"RTN","RGUTTSK",7,0)
 S:'$G(ZTDTH) ZTDTH=$H
"RTN","RGUTTSK",8,0)
 S:ZTDTH'?1.N1","1.N ZTDTH=$$FMTH^XLFDT(ZTDTH)
"RTN","RGUTTSK",9,0)
 Q:ZTDTH<0 0
"RTN","RGUTTSK",10,0)
 S:$G(ZTUCI)'="" ZTUCI=$TR(ZTUCI,":",","),ZTCPU=$P(ZTUCI,",",2),ZTUCI=$P(ZTUCI,",")
"RTN","RGUTTSK",11,0)
 S ZTSAVE=$G(ZTSAVE),ZTIO=$G(ZTIO),U="^"
"RTN","RGUTTSK",12,0)
 F %CIAZ=1:1:$L(ZTSAVE,U) D
"RTN","RGUTTSK",13,0)
 .S %CIAZ1=$P(ZTSAVE,U,%CIAZ),%CIAZ2=$P(%CIAZ1,"=",2,999),%CIAZ1=$P(%CIAZ1,"=")
"RTN","RGUTTSK",14,0)
 .S:%CIAZ1'="" ZTSAVE(%CIAZ1)=%CIAZ2
"RTN","RGUTTSK",15,0)
 D ^%ZTLOAD
"RTN","RGUTTSK",16,0)
 Q +$G(ZTSK)
"RTN","RGUTUSR")
0^58^B4180510
"RTN","RGUTUSR",1,0)
RGUTUSR ;RG/IND/DKM - Parse recipient list;04-May-2006 08:19;DKM
"RTN","RGUTUSR",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTUSR",3,0)
 ;;
"RTN","RGUTUSR",4,0)
 ;=================================================================
"RTN","RGUTUSR",5,0)
 ; Takes a list of recipients (which may be DUZ #'s, names,
"RTN","RGUTUSR",6,0)
 ; mail groups, or special tokens) as input and produces an
"RTN","RGUTUSR",7,0)
 ; array of DUZ's as output.  If a list element is found in
"RTN","RGUTUSR",8,0)
 ; in the token list CIALST, the value of the token entry will
"RTN","RGUTUSR",9,0)
 ; be substituted.
"RTN","RGUTUSR",10,0)
 ; Inputs:
"RTN","RGUTUSR",11,0)
 ;     RGUTSR = Semicolon-delimited list of recipients
"RTN","RGUTUSR",12,0)
 ;     CIALST = Special token list
"RTN","RGUTUSR",13,0)
 ; Outputs:
"RTN","RGUTUSR",14,0)
 ;     CIAOUT = Local array to receive DUZ list
"RTN","RGUTUSR",15,0)
 ;=================================================================
"RTN","RGUTUSR",16,0)
ENTRY(RGUTSR,CIAOUT,CIALST) ;
"RTN","RGUTUSR",17,0)
 N CIAZ,CIAZ1,CIAZ2
"RTN","RGUTUSR",18,0)
 K CIAOUT
"RTN","RGUTUSR",19,0)
 F CIAZ=1:1:$L(RGUTSR,";") S CIAZ1=$P(RGUTSR,";",CIAZ) D:CIAZ1'=""  S:CIAZ1 CIAOUT(+CIAZ1)=""
"RTN","RGUTUSR",20,0)
 .S:$D(CIALST(CIAZ1)) CIAZ1=CIALST(CIAZ1)
"RTN","RGUTUSR",21,0)
 .Q:CIAZ1?.N
"RTN","RGUTUSR",22,0)
 .I CIAZ1?1"-"1.N D MGRP(-CIAZ1) S CIAZ1=0 Q
"RTN","RGUTUSR",23,0)
 .S CIAZ2=$E(CIAZ1,1,2)
"RTN","RGUTUSR",24,0)
 .I CIAZ2="G." D MGRP($E(CIAZ1,3,999)) Q
"RTN","RGUTUSR",25,0)
 .I CIAZ2="L." D LIST($E(CIAZ1,3,999)) Q
"RTN","RGUTUSR",26,0)
 .S CIAZ1=$$LKP(CIAZ1)
"RTN","RGUTUSR",27,0)
 Q
"RTN","RGUTUSR",28,0)
LKP(CIANAME) ;
"RTN","RGUTUSR",29,0)
 N CIAZ,CIAZ1
"RTN","RGUTUSR",30,0)
 I $D(^VA(200,"B",CIANAME)) S CIAZ=CIANAME G L1
"RTN","RGUTUSR",31,0)
 S CIAZ=$O(^(CIANAME)),CIAZ1=$O(^(CIAZ))
"RTN","RGUTUSR",32,0)
 Q:(CIAZ="")!(CIANAME'=$E(CIAZ,1,$L(CIANAME))) 0
"RTN","RGUTUSR",33,0)
 Q:(CIAZ1'="")&(CIANAME=$E(CIAZ1,1,$L(CIANAME))) 0
"RTN","RGUTUSR",34,0)
L1 S CIAZ1=$O(^(CIAZ,0)),CIAZ=$O(^(CIAZ1))
"RTN","RGUTUSR",35,0)
 Q:'CIAZ1!CIAZ 0
"RTN","RGUTUSR",36,0)
 Q CIAZ1
"RTN","RGUTUSR",37,0)
LIST(CIALIST) ;
"RTN","RGUTUSR",38,0)
 Q:CIALIST=""
"RTN","RGUTUSR",39,0)
 S:CIALIST'=+CIALIST CIALIST=+$O(^CCCDSS(25193.6,"B",CIALIST,0))
"RTN","RGUTUSR",40,0)
 S @$$TRAP^RGUTOS("LERR^RGUTUSR")
"RTN","RGUTUSR",41,0)
 X:$D(^CCCDSS(25193.6,CIALIST,1)) ^(1)
"RTN","RGUTUSR",42,0)
LERR Q
"RTN","RGUTUSR",43,0)
MGRP(CIAMGRP) ;
"RTN","RGUTUSR",44,0)
 N CIAX
"RTN","RGUTUSR",45,0)
 S CIAX(0)=""
"RTN","RGUTUSR",46,0)
 D MGRP2(CIAMGRP)
"RTN","RGUTUSR",47,0)
 Q
"RTN","RGUTUSR",48,0)
MGRP2(CIAMGRP) ;
"RTN","RGUTUSR",49,0)
 N CIAZ,CIAZ1
"RTN","RGUTUSR",50,0)
 Q:CIAMGRP=""
"RTN","RGUTUSR",51,0)
 S:CIAMGRP'=+CIAMGRP CIAMGRP=+$O(^XMB(3.8,"B",CIAMGRP,0))
"RTN","RGUTUSR",52,0)
 Q:$D(CIAX(CIAMGRP))
"RTN","RGUTUSR",53,0)
 S CIAX(CIAMGRP)=""
"RTN","RGUTUSR",54,0)
 F CIAZ=0:0 S CIAZ=+$O(^XMB(3.8,CIAMGRP,1,CIAZ)) Q:'CIAZ  S CIAOUT(+^(CIAZ,0))=""
"RTN","RGUTUSR",55,0)
 F CIAZ=0:0 S CIAZ=+$O(^XMB(3.8,CIAMGRP,5,CIAZ)) Q:'CIAZ  D MGRP2(^(CIAZ,0))
"RTN","RGUTUSR",56,0)
 Q
"RTN","RGUTUU")
0^59^B2050600
"RTN","RGUTUU",1,0)
RGUTUU ;RG/IND/DKM - UUEncode and UUDecode functions.;04-May-2006 08:19;DKM
"RTN","RGUTUU",2,0)
 ;;3.0;RG UTILITIES;;Mar 20, 2007;Build 124
"RTN","RGUTUU",3,0)
 ;;
"RTN","RGUTUU",4,0)
 ;=================================================================
"RTN","RGUTUU",5,0)
ENCODE(X) ;
"RTN","RGUTUU",6,0)
 N CIAZ,CIAZ1,CIAZ2,CIAZ3,CIAZ4,CIAZ5,CIAZ6
"RTN","RGUTUU",7,0)
 S CIAZ=$$INIT,CIAZ1=""
"RTN","RGUTUU",8,0)
 F CIAZ2=1:3:$L(X) D
"RTN","RGUTUU",9,0)
 .S CIAZ3=0,CIAZ6=""
"RTN","RGUTUU",10,0)
 .F CIAZ4=0:1:2 D
"RTN","RGUTUU",11,0)
 ..S CIAZ5=$A(X,CIAZ2+CIAZ4),CIAZ3=CIAZ3*256+$S(CIAZ5<0:0,1:CIAZ5)
"RTN","RGUTUU",12,0)
 .F CIAZ4=1:1:4 S CIAZ6=$E(CIAZ,CIAZ3#64+2)_CIAZ6,CIAZ3=CIAZ3\64
"RTN","RGUTUU",13,0)
 .S CIAZ1=CIAZ1_CIAZ6
"RTN","RGUTUU",14,0)
 S CIAZ2=$L(X)#3
"RTN","RGUTUU",15,0)
 S:CIAZ2 CIAZ3=$L(CIAZ1),$E(CIAZ1,CIAZ3-2+CIAZ2,CIAZ3)=$E("==",CIAZ2,2)
"RTN","RGUTUU",16,0)
 Q CIAZ1
"RTN","RGUTUU",17,0)
DECODE(X) ;
"RTN","RGUTUU",18,0)
 N CIAZ,CIAZ1,CIAZ2,CIAZ3,CIAZ4,CIAZ5,CIAZ6
"RTN","RGUTUU",19,0)
 S CIAZ=$$INIT,CIAZ1=""
"RTN","RGUTUU",20,0)
 F CIAZ2=1:4:$L(X) D
"RTN","RGUTUU",21,0)
 .S CIAZ3=0,CIAZ6=""
"RTN","RGUTUU",22,0)
 .F CIAZ4=0:1:3 D
"RTN","RGUTUU",23,0)
 ..S CIAZ5=$F(CIAZ,$E(X,CIAZ2+CIAZ4))-3
"RTN","RGUTUU",24,0)
 ..S CIAZ3=CIAZ3*64+$S(CIAZ5<0:0,1:CIAZ5)
"RTN","RGUTUU",25,0)
 .F CIAZ4=0:1:2 S CIAZ6=$C(CIAZ3#256)_CIAZ6,CIAZ3=CIAZ3\256
"RTN","RGUTUU",26,0)
 .S CIAZ1=CIAZ1_CIAZ6
"RTN","RGUTUU",27,0)
 Q $E(CIAZ1,1,$L(CIAZ1)-$L(X,"=")+1)
"RTN","RGUTUU",28,0)
INIT() Q "=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
"RTN","RGXY")
1^73
"RTN","RGZOSF")
1^74
"VER")
8.0^22.0
**INSTALL NAME**
CIA RPC BROKER 1.3
"BLD",8484,0)
CIA RPC BROKER 1.3^^0^3150226^n
"BLD",8484,1,0)
^9.61A^1^1^3101115^^^^
"BLD",8484,1,1,0)
CIA's remote procedure call broker.
"BLD",8484,4,0)
^9.64PA^19941.24^5
"BLD",8484,4,19941.2,0)
19941.2
"BLD",8484,4,19941.2,222)
y^y^f^^^^n
"BLD",8484,4,19941.21,0)
19941.21
"BLD",8484,4,19941.21,222)
y^y^f^^^^n
"BLD",8484,4,19941.22,0)
19941.22
"BLD",8484,4,19941.22,222)
y^y^f^^n^^y^o^n
"BLD",8484,4,19941.23,0)
19941.23
"BLD",8484,4,19941.23,222)
y^y^f^^^^n
"BLD",8484,4,19941.24,0)
19941.24
"BLD",8484,4,19941.24,222)
y^y^f^^^^n
"BLD",8484,4,"B",19941.2,19941.2)

"BLD",8484,4,"B",19941.21,19941.21)

"BLD",8484,4,"B",19941.22,19941.22)

"BLD",8484,4,"B",19941.23,19941.23)

"BLD",8484,4,"B",19941.24,19941.24)

"BLD",8484,6.3)
173
"BLD",8484,"INI")
PRE^CIANBINI
"BLD",8484,"INIT")
POST^CIANBINI
"BLD",8484,"KRN",0)
^9.67PA^8994^20
"BLD",8484,"KRN",.4,0)
.4
"BLD",8484,"KRN",.4,"NM",0)
^9.68A^^
"BLD",8484,"KRN",.401,0)
.401
"BLD",8484,"KRN",.402,0)
.402
"BLD",8484,"KRN",.403,0)
.403
"BLD",8484,"KRN",.5,0)
.5
"BLD",8484,"KRN",.84,0)
.84
"BLD",8484,"KRN",.84,"NM",0)
^9.68A^29^29
"BLD",8484,"KRN",.84,"NM",1,0)
199412001^^0
"BLD",8484,"KRN",.84,"NM",2,0)
199412002^^0
"BLD",8484,"KRN",.84,"NM",3,0)
199412003^^0
"BLD",8484,"KRN",.84,"NM",4,0)
199412004^^0
"BLD",8484,"KRN",.84,"NM",5,0)
199412005^^0
"BLD",8484,"KRN",.84,"NM",6,0)
199412006^^0
"BLD",8484,"KRN",.84,"NM",7,0)
199412007^^0
"BLD",8484,"KRN",.84,"NM",8,0)
199412500^^0
"BLD",8484,"KRN",.84,"NM",9,0)
199412501^^0
"BLD",8484,"KRN",.84,"NM",10,0)
199412008^^0
"BLD",8484,"KRN",.84,"NM",11,0)
199412009^^0
"BLD",8484,"KRN",.84,"NM",12,0)
199412010^^0
"BLD",8484,"KRN",.84,"NM",13,0)
199412011^^0
"BLD",8484,"KRN",.84,"NM",14,0)
199412012^^0
"BLD",8484,"KRN",.84,"NM",15,0)
199412013^^0
"BLD",8484,"KRN",.84,"NM",16,0)
199412014^^0
"BLD",8484,"KRN",.84,"NM",17,0)
199412015^^0
"BLD",8484,"KRN",.84,"NM",18,0)
199412016^^0
"BLD",8484,"KRN",.84,"NM",19,0)
199412017^^0
"BLD",8484,"KRN",.84,"NM",20,0)
199412018^^0
"BLD",8484,"KRN",.84,"NM",21,0)
199412019^^0
"BLD",8484,"KRN",.84,"NM",22,0)
199412020^^0
"BLD",8484,"KRN",.84,"NM",23,0)
199412021^^0
"BLD",8484,"KRN",.84,"NM",24,0)
199412022^^0
"BLD",8484,"KRN",.84,"NM",25,0)
199412023^^0
"BLD",8484,"KRN",.84,"NM",26,0)
199412024^^0
"BLD",8484,"KRN",.84,"NM",27,0)
199412025^^0
"BLD",8484,"KRN",.84,"NM",28,0)
199412026^^0
"BLD",8484,"KRN",.84,"NM",29,0)
199412027^^0
"BLD",8484,"KRN",.84,"NM","B",199412001,1)

"BLD",8484,"KRN",.84,"NM","B",199412002,2)

"BLD",8484,"KRN",.84,"NM","B",199412003,3)

"BLD",8484,"KRN",.84,"NM","B",199412004,4)

"BLD",8484,"KRN",.84,"NM","B",199412005,5)

"BLD",8484,"KRN",.84,"NM","B",199412006,6)

"BLD",8484,"KRN",.84,"NM","B",199412007,7)

"BLD",8484,"KRN",.84,"NM","B",199412008,10)

"BLD",8484,"KRN",.84,"NM","B",199412009,11)

"BLD",8484,"KRN",.84,"NM","B",199412010,12)

"BLD",8484,"KRN",.84,"NM","B",199412011,13)

"BLD",8484,"KRN",.84,"NM","B",199412012,14)

"BLD",8484,"KRN",.84,"NM","B",199412013,15)

"BLD",8484,"KRN",.84,"NM","B",199412014,16)

"BLD",8484,"KRN",.84,"NM","B",199412015,17)

"BLD",8484,"KRN",.84,"NM","B",199412016,18)

"BLD",8484,"KRN",.84,"NM","B",199412017,19)

"BLD",8484,"KRN",.84,"NM","B",199412018,20)

"BLD",8484,"KRN",.84,"NM","B",199412019,21)

"BLD",8484,"KRN",.84,"NM","B",199412020,22)

"BLD",8484,"KRN",.84,"NM","B",199412021,23)

"BLD",8484,"KRN",.84,"NM","B",199412022,24)

"BLD",8484,"KRN",.84,"NM","B",199412023,25)

"BLD",8484,"KRN",.84,"NM","B",199412024,26)

"BLD",8484,"KRN",.84,"NM","B",199412025,27)

"BLD",8484,"KRN",.84,"NM","B",199412026,28)

"BLD",8484,"KRN",.84,"NM","B",199412027,29)

"BLD",8484,"KRN",.84,"NM","B",199412500,8)

"BLD",8484,"KRN",.84,"NM","B",199412501,9)

"BLD",8484,"KRN",3.6,0)
3.6
"BLD",8484,"KRN",3.8,0)
3.8
"BLD",8484,"KRN",9.2,0)
9.2
"BLD",8484,"KRN",9.8,0)
9.8
"BLD",8484,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",8484,"KRN",9.8,"NM",1,0)
CIANBACT^^0^B29715389
"BLD",8484,"KRN",9.8,"NM",2,0)
CIANBASY^^0^B5548580
"BLD",8484,"KRN",9.8,"NM",3,0)
CIANBEVT^^0^B59930838
"BLD",8484,"KRN",9.8,"NM",4,0)
CIANBLIS^^0^B80842455
"BLD",8484,"KRN",9.8,"NM",5,0)
CIANBRPC^^0^B61652070
"BLD",8484,"KRN",9.8,"NM",6,0)
CIANBUTL^^0^B38343690
"BLD",8484,"KRN",9.8,"NM",7,0)
CIANBLOG^^0^B10435539
"BLD",8484,"KRN",9.8,"NM",8,0)
CIANBINI^^0^B14896343
"BLD",8484,"KRN",9.8,"NM","B","CIANBACT",1)

"BLD",8484,"KRN",9.8,"NM","B","CIANBASY",2)

"BLD",8484,"KRN",9.8,"NM","B","CIANBEVT",3)

"BLD",8484,"KRN",9.8,"NM","B","CIANBINI",8)

"BLD",8484,"KRN",9.8,"NM","B","CIANBLIS",4)

"BLD",8484,"KRN",9.8,"NM","B","CIANBLOG",7)

"BLD",8484,"KRN",9.8,"NM","B","CIANBRPC",5)

"BLD",8484,"KRN",9.8,"NM","B","CIANBUTL",6)

"BLD",8484,"KRN",19,0)
19
"BLD",8484,"KRN",19,"NM",0)
^9.68A^8^7
"BLD",8484,"KRN",19,"NM",1,0)
CIANB STARTALL^^0
"BLD",8484,"KRN",19,"NM",2,0)
CIANB STOPALL^^0
"BLD",8484,"KRN",19,"NM",3,0)
CIANB MAIN MENU^^0
"BLD",8484,"KRN",19,"NM",5,0)
CIANB PURGE EVENT LOG^^0
"BLD",8484,"KRN",19,"NM",6,0)
CIANB NIGHTLY TASK^^0
"BLD",8484,"KRN",19,"NM",7,0)
CIANB SITE PARAMETERS^^0
"BLD",8484,"KRN",19,"NM",8,0)
CIANB REGISTERED LISTENERS^^0
"BLD",8484,"KRN",19,"NM","B","CIANB MAIN MENU",3)

"BLD",8484,"KRN",19,"NM","B","CIANB NIGHTLY TASK",6)

"BLD",8484,"KRN",19,"NM","B","CIANB PURGE EVENT LOG",5)

"BLD",8484,"KRN",19,"NM","B","CIANB REGISTERED LISTENERS",8)

"BLD",8484,"KRN",19,"NM","B","CIANB SITE PARAMETERS",7)

"BLD",8484,"KRN",19,"NM","B","CIANB STARTALL",1)

"BLD",8484,"KRN",19,"NM","B","CIANB STOPALL",2)

"BLD",8484,"KRN",19.1,0)
19.1
"BLD",8484,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",8484,"KRN",101,0)
101
"BLD",8484,"KRN",101,"NM",0)
^9.68A^^0
"BLD",8484,"KRN",409.61,0)
409.61
"BLD",8484,"KRN",771,0)
771
"BLD",8484,"KRN",779.2,0)
779.2
"BLD",8484,"KRN",870,0)
870
"BLD",8484,"KRN",8989.51,0)
8989.51
"BLD",8484,"KRN",8989.51,"NM",0)
^9.68A^6^6
"BLD",8484,"KRN",8989.51,"NM",1,0)
CIANB ACTIVITY LOGGING^^0
"BLD",8484,"KRN",8989.51,"NM",2,0)
CIANB ACTIVITY RETENTION^^0
"BLD",8484,"KRN",8989.51,"NM",3,0)
CIANB AUTHENTICATION^^0
"BLD",8484,"KRN",8989.51,"NM",4,0)
CIANB POLLING INTERVAL^^0
"BLD",8484,"KRN",8989.51,"NM",5,0)
CIANB RESOURCE DEVICE COUNT^^0
"BLD",8484,"KRN",8989.51,"NM",6,0)
CIANB RESOURCE DEVICE SLOTS^^0
"BLD",8484,"KRN",8989.51,"NM","B","CIANB ACTIVITY LOGGING",1)

"BLD",8484,"KRN",8989.51,"NM","B","CIANB ACTIVITY RETENTION",2)

"BLD",8484,"KRN",8989.51,"NM","B","CIANB AUTHENTICATION",3)

"BLD",8484,"KRN",8989.51,"NM","B","CIANB POLLING INTERVAL",4)

"BLD",8484,"KRN",8989.51,"NM","B","CIANB RESOURCE DEVICE COUNT",5)

"BLD",8484,"KRN",8989.51,"NM","B","CIANB RESOURCE DEVICE SLOTS",6)

"BLD",8484,"KRN",8989.52,0)
8989.52
"BLD",8484,"KRN",8989.52,"NM",0)
^9.68A^1^1
"BLD",8484,"KRN",8989.52,"NM",1,0)
CIANB SITE PARAMETERS^^0
"BLD",8484,"KRN",8989.52,"NM","B","CIANB SITE PARAMETERS",1)

"BLD",8484,"KRN",8994,0)
8994
"BLD",8484,"KRN",8994,"NM",0)
^9.68A^18^16
"BLD",8484,"KRN",8994,"NM",1,0)
CIANBRPC AUTH^^0
"BLD",8484,"KRN",8994,"NM",3,0)
CIANBRPC CVC^^0
"BLD",8484,"KRN",8994,"NM",4,0)
CIANBRPC DIVGET^^0
"BLD",8484,"KRN",8994,"NM",5,0)
CIANBRPC DIVSET^^0
"BLD",8484,"KRN",8994,"NM",7,0)
CIANBRPC DIALOG^^0
"BLD",8484,"KRN",8994,"NM",8,0)
CIANBRPC GETRPCS^^0
"BLD",8484,"KRN",8994,"NM",9,0)
CIANBEVT BCAST^^0
"BLD",8484,"KRN",8994,"NM",10,0)
CIANBEVT GETSUBSC^^0
"BLD",8484,"KRN",8994,"NM",11,0)
CIANBRPC SETVAR^^0
"BLD",8484,"KRN",8994,"NM",12,0)
CIANBRPC GETSESSN^^0
"BLD",8484,"KRN",8994,"NM",13,0)
CIANBASY STOP^^0
"BLD",8484,"KRN",8994,"NM",14,0)
CIANBRPC GETVAR^^0
"BLD",8484,"KRN",8994,"NM",15,0)
CIANBRPC GETINFO^^0
"BLD",8484,"KRN",8994,"NM",16,0)
CIANBRPC CANRUN^^0
"BLD",8484,"KRN",8994,"NM",17,0)
CIANBRPC LOCK^^0
"BLD",8484,"KRN",8994,"NM",18,0)
CIANBRPC LOCKRES^^0
"BLD",8484,"KRN",8994,"NM","B","CIANBASY STOP",13)

"BLD",8484,"KRN",8994,"NM","B","CIANBEVT BCAST",9)

"BLD",8484,"KRN",8994,"NM","B","CIANBEVT GETSUBSC",10)

"BLD",8484,"KRN",8994,"NM","B","CIANBRPC AUTH",1)

"BLD",8484,"KRN",8994,"NM","B","CIANBRPC CANRUN",16)

"BLD",8484,"KRN",8994,"NM","B","CIANBRPC CVC",3)

"BLD",8484,"KRN",8994,"NM","B","CIANBRPC DIALOG",7)

"BLD",8484,"KRN",8994,"NM","B","CIANBRPC DIVGET",4)

"BLD",8484,"KRN",8994,"NM","B","CIANBRPC DIVSET",5)

"BLD",8484,"KRN",8994,"NM","B","CIANBRPC GETINFO",15)

"BLD",8484,"KRN",8994,"NM","B","CIANBRPC GETRPCS",8)

"BLD",8484,"KRN",8994,"NM","B","CIANBRPC GETSESSN",12)

"BLD",8484,"KRN",8994,"NM","B","CIANBRPC GETVAR",14)

"BLD",8484,"KRN",8994,"NM","B","CIANBRPC LOCK",17)

"BLD",8484,"KRN",8994,"NM","B","CIANBRPC LOCKRES",18)

"BLD",8484,"KRN",8994,"NM","B","CIANBRPC SETVAR",11)

"BLD",8484,"KRN","B",.4,.4)

"BLD",8484,"KRN","B",.401,.401)

"BLD",8484,"KRN","B",.402,.402)

"BLD",8484,"KRN","B",.403,.403)

"BLD",8484,"KRN","B",.5,.5)

"BLD",8484,"KRN","B",.84,.84)

"BLD",8484,"KRN","B",3.6,3.6)

"BLD",8484,"KRN","B",3.8,3.8)

"BLD",8484,"KRN","B",9.2,9.2)

"BLD",8484,"KRN","B",9.8,9.8)

"BLD",8484,"KRN","B",19,19)

"BLD",8484,"KRN","B",19.1,19.1)

"BLD",8484,"KRN","B",101,101)

"BLD",8484,"KRN","B",409.61,409.61)

"BLD",8484,"KRN","B",771,771)

"BLD",8484,"KRN","B",779.2,779.2)

"BLD",8484,"KRN","B",870,870)

"BLD",8484,"KRN","B",8989.51,8989.51)

"BLD",8484,"KRN","B",8989.52,8989.52)

"BLD",8484,"KRN","B",8994,8994)

"BLD",8484,"PRE")

"BLD",8484,"PRET")
GBL^CIAVINX
"BLD",8484,"QUES",0)
^9.62^^
"BLD",8484,"REQB",0)
^9.611^^0
"DATA",19941.22,1,0)
CAREWEB^9300
"FIA",19941.2)
CIA AUTHENTICATION
"FIA",19941.2,0)
^CIANB(19941.2,
"FIA",19941.2,0,0)
19941.2AI
"FIA",19941.2,0,1)
y^y^f^^^^n
"FIA",19941.2,0,10)

"FIA",19941.2,0,11)

"FIA",19941.2,0,"RLRO")

"FIA",19941.2,19941.2)
0
"FIA",19941.21)
CIA EVENT TYPE
"FIA",19941.21,0)
^CIANB(19941.21,
"FIA",19941.21,0,0)
19941.21
"FIA",19941.21,0,1)
y^y^f^^^^n
"FIA",19941.21,0,10)

"FIA",19941.21,0,11)

"FIA",19941.21,0,"RLRO")

"FIA",19941.21,19941.21)
0
"FIA",19941.21,19941.212)
0
"FIA",19941.21,19941.2121)
0
"FIA",19941.21,19941.2199)
0
"FIA",19941.22)
CIA LISTENER
"FIA",19941.22,0)
^CIANB(19941.22,
"FIA",19941.22,0,0)
19941.22
"FIA",19941.22,0,1)
y^y^f^^n^^y^o^n
"FIA",19941.22,0,10)

"FIA",19941.22,0,11)

"FIA",19941.22,0,"RLRO")

"FIA",19941.22,19941.22)
0
"FIA",19941.23)
CIA EVENT LOG
"FIA",19941.23,0)
^CIANB(19941.23,
"FIA",19941.23,0,0)
19941.23DI
"FIA",19941.23,0,1)
y^y^f^^^^n
"FIA",19941.23,0,10)

"FIA",19941.23,0,11)

"FIA",19941.23,0,"RLRO")

"FIA",19941.23,19941.23)
0
"FIA",19941.23,19941.232)
0
"FIA",19941.24)
CIA ACTIVITY LOG
"FIA",19941.24,0)
^CIANB(19941.24,
"FIA",19941.24,0,0)
19941.24
"FIA",19941.24,0,1)
y^y^f^^^^n
"FIA",19941.24,0,10)

"FIA",19941.24,0,11)

"FIA",19941.24,0,"RLRO")

"FIA",19941.24,19941.24)
0
"FIA",19941.24,19941.241)
0
"FIA",19941.24,19941.242)
0
"INI")
PRE^CIANBINI
"INIT")
POST^CIANBINI
"KRN",.84,199412001,-1)
0^1
"KRN",.84,199412001,0)
199412001^1^y^CIA NETWORK COMPONENTS^Server error
"KRN",.84,199412001,2,0)
^^5^5^3021028.221459
"KRN",.84,199412001,2,1,0)
The server has reported the following error:
"KRN",.84,199412001,2,2,0)

"KRN",.84,199412001,2,3,0)
|1|
"KRN",.84,199412001,2,4,0)

"KRN",.84,199412001,2,5,0)
A detailed log of the error has been created.
"KRN",.84,199412001,3,0)
^.845^1^1
"KRN",.84,199412001,3,1,0)
1^M error text
"KRN",.84,199412002,-1)
0^2
"KRN",.84,199412002,0)
199412002^1^y^CIA NETWORK COMPONENTS^Unknown context
"KRN",.84,199412002,2,0)
^^1^1^3021016.135912
"KRN",.84,199412002,2,1,0)
The specified RPC context (|1|) could not be found.
"KRN",.84,199412002,3,0)
^.845^1^1
"KRN",.84,199412002,3,1,0)
1^Context name
"KRN",.84,199412003,-1)
0^3
"KRN",.84,199412003,0)
199412003^1^y^CIA NETWORK COMPONENTS^Unknown remote procedure
"KRN",.84,199412003,2,0)
^.844^1^1^3021016.141847
"KRN",.84,199412003,2,1,0)
Unknown remote procedure: |1|
"KRN",.84,199412003,3,0)
^.845^1^1
"KRN",.84,199412003,3,1,0)
1^Remote procedure name
"KRN",.84,199412004,-1)
0^4
"KRN",.84,199412004,0)
199412004^1^y^CIA NETWORK COMPONENTS^Access denied
"KRN",.84,199412004,2,0)
^^1^1^3021016.142047
"KRN",.84,199412004,2,1,0)
Access denied for remote procedure: |1|
"KRN",.84,199412004,3,0)
^.845^1^1
"KRN",.84,199412004,3,1,0)
1^Remote procedure name
"KRN",.84,199412005,-1)
0^5
"KRN",.84,199412005,0)
199412005^1^y^CIA NETWORK COMPONENTS^Inactive remote procedure
"KRN",.84,199412005,2,0)
^.844^1^1^3021016^
"KRN",.84,199412005,2,1,0)
The requested remote procedure is inactive: |1|
"KRN",.84,199412005,3,0)
^.845^1^1
"KRN",.84,199412005,3,1,0)
1^Remote procedure name
"KRN",.84,199412006,-1)
0^6
"KRN",.84,199412006,0)
199412006^1^y^CIA NETWORK COMPONENTS^Invalid remote procedure definition
"KRN",.84,199412006,2,0)
^^1^1^3021016.142346
"KRN",.84,199412006,2,1,0)
The requested remote procedure is improperly defined: |1|
"KRN",.84,199412006,3,0)
^.845^1^1
"KRN",.84,199412006,3,1,0)
1^Remote procedure name
"KRN",.84,199412007,-1)
0^7
"KRN",.84,199412007,0)
199412007^1^y^CIA NETWORK COMPONENTS^Too many arguments
"KRN",.84,199412007,2,0)
^^2^2^3021016.154446
"KRN",.84,199412007,2,1,0)
The number of arguments (|2|) passed to the remote procedure
"KRN",.84,199412007,2,2,0)
|1| exceeds the maximum limit of |3|.
"KRN",.84,199412007,3,0)
^.845^3^3
"KRN",.84,199412007,3,1,0)
1^Remote procedure name
"KRN",.84,199412007,3,2,0)
2^Number of arguments
"KRN",.84,199412007,3,3,0)
3^Maximum number of arguments
"KRN",.84,199412008,-1)
0^10
"KRN",.84,199412008,0)
199412008^1^y^CIA NETWORK COMPONENTS^Async RPC Failed
"KRN",.84,199412008,2,0)
^.844^1^1^3021017^
"KRN",.84,199412008,2,1,0)
Failed to start task for asynchronous RPC: |1|
"KRN",.84,199412008,3,0)
^.845^1^1
"KRN",.84,199412008,3,1,0)
1^Remote procedure name
"KRN",.84,199412009,-1)
0^11
"KRN",.84,199412009,0)
199412009^1^y^CIA NETWORK COMPONENTS^Invalid Server Request
"KRN",.84,199412009,2,0)
^^1^1^3021018.233253
"KRN",.84,199412009,2,1,0)
The server rejected the requested action (|1|).
"KRN",.84,199412009,3,0)
^.845^1^1
"KRN",.84,199412009,3,1,0)
1^Action Code
"KRN",.84,199412010,-1)
0^12
"KRN",.84,199412010,0)
199412010^1^y^CIA NETWORK COMPONENTS^Too Many Users
"KRN",.84,199412010,2,0)
^^1^1^3021021.090207
"KRN",.84,199412010,2,1,0)
There are too many users (|1|) logged on at this time.  Please try again later.
"KRN",.84,199412010,3,0)
^.845^2^2
"KRN",.84,199412010,3,1,0)
1^Number of Active Users
"KRN",.84,199412010,3,2,0)
2^Maximum Active Users
"KRN",.84,199412011,-1)
0^13
"KRN",.84,199412011,0)
199412011^1^^CIA NETWORK COMPONENTS^Unknown Volume Set
"KRN",.84,199412011,2,0)
^^1^1^3021021.084612
"KRN",.84,199412011,2,1,0)
Cannot determine volume set for server child process.
"KRN",.84,199412012,-1)
0^14
"KRN",.84,199412012,0)
199412012^1^^CIA NETWORK COMPONENTS^Cannot Start Child Process
"KRN",.84,199412012,2,0)
^^1^1^3021021.090533
"KRN",.84,199412012,2,1,0)
Unable to start child process.
"KRN",.84,199412013,-1)
0^15
"KRN",.84,199412013,0)
199412013^1^y^CIA NETWORK COMPONENTS^Cannot Subscribe to Event
"KRN",.84,199412013,2,0)
^^1^1^3021021.160356
"KRN",.84,199412013,2,1,0)
You do not have the required key(s) to subscribe to the requested event: (|1|).
"KRN",.84,199412013,3,0)
^.845^1^1
"KRN",.84,199412013,3,1,0)
1^Event Name
"KRN",.84,199412014,-1)
0^16
"KRN",.84,199412014,0)
199412014^1^y^CIA NETWORK COMPONENTS^Unknown UCI
"KRN",.84,199412014,2,0)
^^1^1^3021028.121952
"KRN",.84,199412014,2,1,0)
Unknown UCI: |1|
"KRN",.84,199412014,3,0)
^.845^1^1
"KRN",.84,199412014,3,1,0)
1^UCI Name
"KRN",.84,199412015,-1)
0^17
"KRN",.84,199412015,0)
199412015^1^y^CIA NETWORK COMPONENTS^Unsupported OS
"KRN",.84,199412015,2,0)
^^1^1^3021030.121347
"KRN",.84,199412015,2,1,0)
Unsupported operating system: |1|.
"KRN",.84,199412015,3,0)
^.845^1^1
"KRN",.84,199412015,3,1,0)
1^Operating System Name
"KRN",.84,199412016,-1)
0^18
"KRN",.84,199412016,0)
199412016^1^y^CIA NETWORK COMPONENTS^Mode Not Supported
"KRN",.84,199412016,2,0)
^^1^1^3021030.122454
"KRN",.84,199412016,2,1,0)
Mode |2| not supported by operating system |1|.
"KRN",.84,199412016,3,0)
^.845^2^2
"KRN",.84,199412016,3,1,0)
1^Operating System Name
"KRN",.84,199412016,3,2,0)
2^Mode
"KRN",.84,199412017,-1)
0^19
"KRN",.84,199412017,0)
199412017^1^^CIA NETWORK COMPONENTS^Null Device Error
"KRN",.84,199412017,2,0)
^^1^1^3021030.122543
"KRN",.84,199412017,2,1,0)
The NULL device has not been properly setup.
"KRN",.84,199412018,-1)
0^20
"KRN",.84,199412018,0)
199412018^1^y^CIA NETWORK COMPONENTS^Unknown Application
"KRN",.84,199412018,2,0)
^^1^1^3021104.094347
"KRN",.84,199412018,2,1,0)
Unknown application: |1|
"KRN",.84,199412018,3,0)
^.845^1^1
"KRN",.84,199412018,3,1,0)
1^Application Name
"KRN",.84,199412019,-1)
0^21
"KRN",.84,199412019,0)
199412019^1^y^CIA NETWORK COMPONENTS^Logins Disabled
"KRN",.84,199412019,2,0)
^.844^1^1^3021203^
"KRN",.84,199412019,2,1,0)
Logins are disabled: |1|
"KRN",.84,199412019,3,0)
^.845^1^1
"KRN",.84,199412019,3,1,0)
1^Disable Message
"KRN",.84,199412020,-1)
0^22
"KRN",.84,199412020,0)
199412020^1^y^CIA NETWORK COMPONENTS^Invalid option type
"KRN",.84,199412020,2,0)
^.844^1^1^3031209^
"KRN",.84,199412020,2,1,0)
The option specified (|1|) was not of the expected type (|2|).
"KRN",.84,199412020,3,0)
^.845^2^2
"KRN",.84,199412020,3,1,0)
1^Option name
"KRN",.84,199412020,3,2,0)
2^Expected type
"KRN",.84,199412021,-1)
0^23
"KRN",.84,199412021,0)
199412021^1^y^CIA NETWORK COMPONENTS^Reverse key denies access
"KRN",.84,199412021,2,0)
^.844^1^1^3031209^^
"KRN",.84,199412021,2,1,0)
The |2| key prohibits access to the |1| option.
"KRN",.84,199412021,3,0)
^.845^2^2
"KRN",.84,199412021,3,1,0)
1^Option name
"KRN",.84,199412021,3,2,0)
2^Key name
"KRN",.84,199412022,-1)
0^24
"KRN",.84,199412022,0)
199412022^1^y^CIA NETWORK COMPONENTS^Access requires key
"KRN",.84,199412022,2,0)
^.844^1^1^3031209^
"KRN",.84,199412022,2,1,0)
Access to the |1| option requires the |2| key.
"KRN",.84,199412022,3,0)
^.845^2^2
"KRN",.84,199412022,3,1,0)
1^Option name
"KRN",.84,199412022,3,2,0)
2^Key name
"KRN",.84,199412023,-1)
0^25
"KRN",.84,199412023,0)
199412023^1^y^CIA NETWORK COMPONENTS^Access prohibited
"KRN",.84,199412023,2,0)
^.844^1^1^3031209^^
"KRN",.84,199412023,2,1,0)
Access to option |1| prohibited at this time.
"KRN",.84,199412023,3,0)
^.845^1^1
"KRN",.84,199412023,3,1,0)
1^Option name
"KRN",.84,199412024,-1)
0^26
"KRN",.84,199412024,0)
199412024^1^y^CIA NETWORK COMPONENTS^Prohibited UCI
"KRN",.84,199412024,2,0)
^.844^1^1^3031209^
"KRN",.84,199412024,2,1,0)
Logins prohibited on |1|.
"KRN",.84,199412024,3,0)
^.845^1^1
"KRN",.84,199412024,3,1,0)
1^UCI name
"KRN",.84,199412025,-1)
0^27
"KRN",.84,199412025,0)
199412025^1^y^CIA NETWORK COMPONENTS^Session context unavailable
"KRN",.84,199412025,2,0)
^^1^1^3031226.132723
"KRN",.84,199412025,2,1,0)
The reconnection attempt for session #|1| has failed.  The session context no longer exists.
"KRN",.84,199412025,3,0)
^.845^1^1
"KRN",.84,199412025,3,1,0)
1^Session ID
"KRN",.84,199412026,-1)
0^28
"KRN",.84,199412026,0)
199412026^1^y^CIA NETWORK COMPONENTS^Session context locked
"KRN",.84,199412026,2,0)
^^1^1^3031226.132737
"KRN",.84,199412026,2,1,0)
The reconnection attempt for session #|1| has failed.  The session context is in use. 
"KRN",.84,199412026,3,0)
^.845^1^1
"KRN",.84,199412026,3,1,0)
1^Session ID
"KRN",.84,199412027,-1)
0^29
"KRN",.84,199412027,0)
199412027^1^y^CIA NETWORK COMPONENTS^Session context invalid
"KRN",.84,199412027,2,0)
^^1^1^3031226.132749
"KRN",.84,199412027,2,1,0)
The reconnection attempt for session #|1| has failed.  The session was authenticated for a different user. 
"KRN",.84,199412027,3,0)
^.845^1^1
"KRN",.84,199412027,3,1,0)
1^Session ID
"KRN",.84,199412500,-1)
0^8
"KRN",.84,199412500,0)
199412500^3^^CIA NETWORK COMPONENTS^AV Help
"KRN",.84,199412500,2,0)
^^5^5^3021017.111201
"KRN",.84,199412500,2,1,0)
Enter 6-20 characters mixed alphanumeric.
"KRN",.84,199412500,2,2,0)

"KRN",.84,199412500,2,3,0)
For example,  12ABC44Z
"KRN",.84,199412500,2,4,0)

"KRN",.84,199412500,2,5,0)
Verify codes are not case sensitive.
"KRN",.84,199412501,-1)
0^9
"KRN",.84,199412501,0)
199412501^3^^CIA NETWORK COMPONENTS^Division Help
"KRN",.84,199412501,2,0)
^.844^4^4^3060307^
"KRN",.84,199412501,2,1,0)
Select a division from the list and click OK.
"KRN",.84,199412501,2,2,0)

"KRN",.84,199412501,2,3,0)
A division must be selected in order to continue with your signon.
"KRN",.84,199412501,2,4,0)
To abort your signon, click Cancel.
"KRN",19,11311,-1)
0^1
"KRN",19,11311,0)
CIANB STARTALL^Start All Registered Listeners^^A^^^^^^^^^^1
"KRN",19,11311,1,0)
^^1^1^3030113.101517
"KRN",19,11311,1,1,0)
Starts all enabled listener processes registered in the CIA LISTENER file.
"KRN",19,11311,20)
D MNUEXEC^CIAU("D STARTALL^CIANBLIS",1)
"KRN",19,11311,25)

"KRN",19,11311,"U")
START ALL REGISTERED LISTENERS
"KRN",19,11312,-1)
0^2
"KRN",19,11312,0)
CIANB STOPALL^Stop All Registered Listeners^^A^^^^^^^^^^1
"KRN",19,11312,1,0)
^^1^1^3030113.101632
"KRN",19,11312,1,1,0)
Stops all listeners registered in the CIA LISTENER file. 
"KRN",19,11312,20)
D MNUEXEC^CIAU("D STOPALL^CIANBLIS",1)
"KRN",19,11312,25)

"KRN",19,11312,"U")
STOP ALL REGISTERED LISTENERS
"KRN",19,11313,-1)
0^3
"KRN",19,11313,0)
CIANB MAIN MENU^CIA Broker Main Menu^^M^^^^^^^^CIA NETWORK COMPONENTS^^^^^1
"KRN",19,11313,10,0)
^19.01IP^5^5
"KRN",19,11313,10,1,0)
11316^1^10
"KRN",19,11313,10,1,"^")
CIANB SITE PARAMETERS
"KRN",19,11313,10,2,0)
11311^2^20
"KRN",19,11313,10,2,"^")
CIANB STARTALL
"KRN",19,11313,10,3,0)
11312^3^30
"KRN",19,11313,10,3,"^")
CIANB STOPALL
"KRN",19,11313,10,4,0)
11314^4^40
"KRN",19,11313,10,4,"^")
CIANB PURGE EVENT LOG
"KRN",19,11313,10,5,0)
11317^5^
"KRN",19,11313,10,5,"^")
CIANB REGISTERED LISTENERS
"KRN",19,11313,15)

"KRN",19,11313,20)

"KRN",19,11313,26)
D MNUHDR^CIAU()
"KRN",19,11313,99)
63265,61696
"KRN",19,11313,"U")
CIA BROKER MAIN MENU
"KRN",19,11314,-1)
0^5
"KRN",19,11314,0)
CIANB PURGE EVENT LOG^Purge Event Log^^A^^^^^^^^^^1^
"KRN",19,11314,1,0)
^^1^1^3030611.123339
"KRN",19,11314,1,1,0)
Tasks the nightly purge of the CIA Broker event log file.
"KRN",19,11314,15)

"KRN",19,11314,20)
D MNUEXEC^CIAU("D TASKPRG^CIANBEVT",1)
"KRN",19,11314,25)

"KRN",19,11314,"U")
PURGE EVENT LOG
"KRN",19,11315,-1)
0^6
"KRN",19,11315,0)
CIANB NIGHTLY TASK^Submit Cleanup Task^^R^^^^^^^^CIA NETWORK COMPONENTS^^1^
"KRN",19,11315,15)

"KRN",19,11315,20)
D MNUHDR^CIAU()
"KRN",19,11315,25)
NIGHTLY^CIANBUTL
"KRN",19,11315,200.9)
y
"KRN",19,11315,"U")
SUBMIT CLEANUP TASK
"KRN",19,11316,-1)
0^7
"KRN",19,11316,0)
CIANB SITE PARAMETERS^Edit CIA Broker Package Parameters^^A^^^^^^^^^^1
"KRN",19,11316,20)
D MNUTEMPL^CIAU()
"KRN",19,11316,"U")
EDIT CIA BROKER PACKAGE PARAME
"KRN",19,11317,-1)
0^8
"KRN",19,11317,0)
CIANB REGISTERED LISTENERS^Edit Registered Listeners^^E^^^^^^^^^^1^
"KRN",19,11317,15)

"KRN",19,11317,20)
D MNUHDR^CIAU()
"KRN",19,11317,30)
CIANB(19941.22,
"KRN",19,11317,31)
AELM
"KRN",19,11317,50)
19941.22
"KRN",19,11317,51)
.01;1;1.5;2
"KRN",19,11317,"U")
EDIT REGISTERED LISTENERS
"KRN",8989.51,120,-1)
0^3
"KRN",8989.51,120,0)
CIANB AUTHENTICATION^Authentication method^1^UCI^Authentication method
"KRN",8989.51,120,1)
S^0:Normal;1:Client Cached;2:Server Cached
"KRN",8989.51,120,6)
F
"KRN",8989.51,120,20,0)
^8989.512^5^5^3061024^^^^
"KRN",8989.51,120,20,1,0)
Dictates authentication method used.
"KRN",8989.51,120,20,2,0)

"KRN",8989.51,120,20,3,0)
Normal        - No password caching is used.
"KRN",8989.51,120,20,4,0)
Client Cached - Username and password are encrypted and cached in NT user profile.
"KRN",8989.51,120,20,5,0)
Server Cached - User SID (security identifier) cached on server. 
"KRN",8989.51,120,30,0)
^8989.513I^1^1
"KRN",8989.51,120,30,1,0)
100^4.2
"KRN",8989.51,202,-1)
0^4
"KRN",8989.51,202,0)
CIANB POLLING INTERVAL^Host polling interval^0^Interval^Host Polling Interval
"KRN",8989.51,202,1)
N^^Number of seconds (1-60) between polls.
"KRN",8989.51,202,2)
S Y=Y\1 S:Y<1 Y=1 S:Y>60 Y=60
"KRN",8989.51,202,20,0)
^8989.512^4^4^3070607^^
"KRN",8989.51,202,20,1,0)
This is the interval in seconds that the client will poll the server for 
"KRN",8989.51,202,20,2,0)
signaled events or asynchronous remote procedure calls.  
"KRN",8989.51,202,20,3,0)

"KRN",8989.51,202,20,4,0)
Range should be 1-60, inclusive.  Typical values are 3-5 seconds.
"KRN",8989.51,202,30,0)
^8989.513I^1^1
"KRN",8989.51,202,30,1,0)
100^4.2
"KRN",8989.51,207,-1)
0^5
"KRN",8989.51,207,0)
CIANB RESOURCE DEVICE COUNT^Maximum number of resource devices^0^Count^Resource Device Count
"KRN",8989.51,207,1)
N^^The maximum number (1-20) of resource devices that may be created.
"KRN",8989.51,207,2)
S Y=Y\1 S:Y<1 Y=1 S:Y>20 Y=20
"KRN",8989.51,207,20,0)
^8989.512^4^4^3061024^
"KRN",8989.51,207,20,1,0)
This is the maximum number of resource devices that can be used by the package.
"KRN",8989.51,207,20,2,0)
Must be between 1 and 20, inclusive.  Higher values will increase server load,
"KRN",8989.51,207,20,3,0)
but improve application response to asynchronous remote procedure calls and 
"KRN",8989.51,207,20,4,0)
host-signalled events
"KRN",8989.51,207,30,0)
^8989.513I^1^1
"KRN",8989.51,207,30,1,0)
100^4.2
"KRN",8989.51,208,-1)
0^6
"KRN",8989.51,208,0)
CIANB RESOURCE DEVICE SLOTS^Number of resource slots to allocate^0^Slots^Resource Device Slots
"KRN",8989.51,208,1)
N^^Maximum number (1-20) of slots per resource device.
"KRN",8989.51,208,2)
S Y=Y\1 S:Y<1 Y=1 S:Y>20 Y=20 D SETSLOTS^CIANBUTL(Y)
"KRN",8989.51,208,20,0)
^8989.512^4^4^3061024^
"KRN",8989.51,208,20,1,0)
This is the maximum number of slots that will be allocated to resource devices
"KRN",8989.51,208,20,2,0)
used by the package. Must be between 1 and 20, inclusive.  Higher values will 
"KRN",8989.51,208,20,3,0)
increase server load, but improve application performance for asynchronous 
"KRN",8989.51,208,20,4,0)
remote procedure calls.
"KRN",8989.51,208,30,0)
^8989.513I^1^1
"KRN",8989.51,208,30,1,0)
100^4.2
"KRN",8989.51,249,-1)
0^1
"KRN",8989.51,249,0)
CIANB ACTIVITY LOGGING^Enable logging of session activities^1^Application^Enable activity logging
"KRN",8989.51,249,1)
Y
"KRN",8989.51,249,6)
P^19
"KRN",8989.51,249,20,0)
^8989.512^3^3^3080104^^
"KRN",8989.51,249,20,1,0)
If activated, results in logging session activities such as remote procedure 
"KRN",8989.51,249,20,2,0)
calls and events to the CIA ACTIVITY LOG file.  Activating this feature may 
"KRN",8989.51,249,20,3,0)
have significant adverse impact on application performance and disk usage. 
"KRN",8989.51,249,30,0)
^8989.513I^3^3
"KRN",8989.51,249,30,1,0)
400^4.2
"KRN",8989.51,249,30,2,0)
200^4
"KRN",8989.51,249,30,3,0)
100^200
"KRN",8989.51,260,-1)
0^2
"KRN",8989.51,260,0)
CIANB ACTIVITY RETENTION^Retention period for logged activities.^^^Retention period (days)
"KRN",8989.51,260,1)
N^1:9999999^Enter retention period in days for logged activities.
"KRN",8989.51,260,20,0)
^8989.512^1^1^3080104^
"KRN",8989.51,260,20,1,0)
This controls how long entries in the CIA ACTIVITY LOG file are retained.
"KRN",8989.51,260,30,0)
^8989.513I^1^1
"KRN",8989.51,260,30,1,0)
400^4.2
"KRN",8989.52,209,-1)
0^1
"KRN",8989.52,209,0)
CIANB SITE PARAMETERS^CIA RPC Broker Site Parameters^4.2
"KRN",8989.52,209,10,0)
^8989.521IA^7^4
"KRN",8989.52,209,10,3,0)
10.1^CIANB POLLING INTERVAL
"KRN",8989.52,209,10,5,0)
20.1^CIANB RESOURCE DEVICE COUNT
"KRN",8989.52,209,10,6,0)
20.2^CIANB RESOURCE DEVICE SLOTS
"KRN",8989.52,209,10,7,0)
30.1^CIANB AUTHENTICATION
"KRN",8994,2590,-1)
0^1
"KRN",8994,2590,0)
CIANBRPC AUTH^AUTH^CIANBRPC^2
"KRN",8994,2591,-1)
0^5
"KRN",8994,2591,0)
CIANBRPC DIVSET^DIVSET^CIANBRPC^1
"KRN",8994,2592,-1)
0^4
"KRN",8994,2592,0)
CIANBRPC DIVGET^DIVGET^CIANBRPC^2
"KRN",8994,2593,-1)
0^7
"KRN",8994,2593,0)
CIANBRPC DIALOG^DIALOG^CIANBRPC^2
"KRN",8994,2594,-1)
0^8
"KRN",8994,2594,0)
CIANBRPC GETRPCS^GETRPCS^CIANBRPC^4
"KRN",8994,2595,-1)
0^11
"KRN",8994,2595,0)
CIANBRPC SETVAR^SETVAR^CIANBRPC^1
"KRN",8994,2596,-1)
0^9
"KRN",8994,2596,0)
CIANBEVT BCAST^BCAST^CIANBEVT^1
"KRN",8994,2597,-1)
0^10
"KRN",8994,2597,0)
CIANBEVT GETSUBSC^GETSUBSC^CIANBEVT^4^^^^1
"KRN",8994,2598,-1)
0^12
"KRN",8994,2598,0)
CIANBRPC GETSESSN^GETSESSN^CIANBRPC^4^^^^1
"KRN",8994,2599,-1)
0^13
"KRN",8994,2599,0)
CIANBASY STOP^STOP^CIANBASY^1
"KRN",8994,2600,-1)
0^14
"KRN",8994,2600,0)
CIANBRPC GETVAR^GETVAR^CIANBRPC^2^^^^1
"KRN",8994,2601,-1)
0^15
"KRN",8994,2601,0)
CIANBRPC GETINFO^GETINFO^CIANBRPC^4^^^^1
"KRN",8994,2602,-1)
0^16
"KRN",8994,2602,0)
CIANBRPC CANRUN^CANRUN^CIANBRPC^1
"KRN",8994,2603,-1)
0^17
"KRN",8994,2603,0)
CIANBRPC LOCK^LOCK^CIANBRPC^1
"KRN",8994,2604,-1)
0^18
"KRN",8994,2604,0)
CIANBRPC LOCKRES^LOCKRES^CIANBRPC^4^^^^1
"KRN",8994,2605,-1)
0^3
"KRN",8994,2605,0)
CIANBRPC CVC^CVC^CIANBRPC^1^^^^1
"MBREQ")
1
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"ORD",21,8989.52)
8989.52;21;1;;PAR2E1^XPDTA2;PAR2F1^XPDIA3;PAR2E1^XPDIA3;PAR2F2^XPDIA3;;PAR2DEL^XPDIA3(%)
"ORD",21,8989.52,0)
PARAMETER TEMPLATE
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","CIANBACT")
0^1^B29715389
"RTN","CIANBACT",1,0)
CIANBACT ;MSC/IND/DKM - MSC RPC Broker Actions;29-Jan-2015 12:27;DKM
"RTN","CIANBACT",2,0)
 ;;1.3;CIA NETWORK COMPONENTS;;Sep 18, 2007;Build 173
"RTN","CIANBACT",3,0)
 ;;Copyright 2000-2008, Medsphere Systems Corporation
"RTN","CIANBACT",4,0)
 ;=================================================================
"RTN","CIANBACT",5,0)
 ; Connect action
"RTN","CIANBACT",6,0)
 ; CIADATA is returned to client as:
"RTN","CIANBACT",7,0)
 ;   callback flag^authentication method^server version^case sensitive^context cached^encryption type
"RTN","CIANBACT",8,0)
ACTC N X,Y,VOL,UCI,PORT,IP,AUTH
"RTN","CIANBACT",9,0)
 S Y=$$GETUCI,UCI(0)=Y,UCI=$$UP^XLFSTR($G(CIA("UCI"),Y)),VOL=$P(UCI,",",2)
"RTN","CIANBACT",10,0)
 S:'$L(UCI) UCI=Y
"RTN","CIANBACT",11,0)
 S:'$L(VOL) VOL=$P(Y,",",2),$P(UCI,",",2)=VOL
"RTN","CIANBACT",12,0)
 I UCI'=UCI(0),$$ERRCHK(0[$$UCICHECK^%ZOSV(UCI),14,UCI) Q
"RTN","CIANBACT",13,0)
 Q:$$ERRCHK('$L(VOL),11)
"RTN","CIANBACT",14,0)
 S AUTH=$$AUTHMETH(UCI),CIADATA="0^"_AUTH_"^1.1^"_$$GET^XPAR("SYS","XU VC CASE SENSITIVE")_"^1^"_$E($P($T(Z+1^XUSRB1),";;",2,999),1,4)
"RTN","CIANBACT",15,0)
 Q:$$ERRCHK('$L(AUTH),24,UCI)
"RTN","CIANBACT",16,0)
 I $D(^%ZOSF("ACTJ")) D  Q:$$ERRCHK(X'>Y&X,10,Y,X)
"RTN","CIANBACT",17,0)
 .; Y=# active jobs, X=max active jobs
"RTN","CIANBACT",18,0)
 .X ^%ZOSF("ACTJ")
"RTN","CIANBACT",19,0)
 .S X=+$O(^XTV(8989.3,1,4,"B",VOL,0)),X=$S(X:+$P($G(^XTV(8989.3,1,4,X,0)),U,3),1:0)
"RTN","CIANBACT",20,0)
 S PORT=CIA("LP"),X=$$CLIENTIP^CIAUOS,IP=$S(CIAMODE=2:CIAIP,$L(X):X,1:CIA("IP"))
"RTN","CIANBACT",21,0)
 D:$G(CIA("VER"))'<1.7 INTRO^XUS1A("CIADATA")
"RTN","CIANBACT",22,0)
 S @("X=$$JOB"_CIAOS)
"RTN","CIANBACT",23,0)
 D ERRCHK('X,12)
"RTN","CIANBACT",24,0)
 Q
"RTN","CIANBACT",25,0)
 ; Disconnect action
"RTN","CIANBACT",26,0)
ACTD D RESET^CIANBRPC()
"RTN","CIANBACT",27,0)
 S CIADATA=1,CIAQUIT=1
"RTN","CIANBACT",28,0)
 Q
"RTN","CIANBACT",29,0)
 ; Query action
"RTN","CIANBACT",30,0)
ACTQ Q:$$ASYCHK^CIANBASY
"RTN","CIANBACT",31,0)
 Q:$$EVTCHK^CIANBEVT
"RTN","CIANBACT",32,0)
 ; Ping action
"RTN","CIANBACT",33,0)
ACTP S DT=$$NOW^XLFDT,CIADATA=$$PARAM^CIANBUTL("CIANB POLLING INTERVAL",1,60)_U_DT,DT=DT\1
"RTN","CIANBACT",34,0)
 Q
"RTN","CIANBACT",35,0)
 ; Subscribe action
"RTN","CIANBACT",36,0)
ACTS S CIADATA=1
"RTN","CIANBACT",37,0)
 Q:$$ERRCHK('$$SUBSCR^CIANBEVT(CIA("EVT"),1),13,CIA("EVT"))
"RTN","CIANBACT",38,0)
 Q
"RTN","CIANBACT",39,0)
 ; Unsubscribe action
"RTN","CIANBACT",40,0)
ACTU S CIADATA=$$SUBSCR^CIANBEVT(CIA("EVT"),0)
"RTN","CIANBACT",41,0)
 Q
"RTN","CIANBACT",42,0)
 ; RPC action
"RTN","CIANBACT",43,0)
ACTR N RPC,RTN,CIAD,XWBWRAP,XWBPTYPE,I
"RTN","CIANBACT",44,0)
 I '$D(CIA("CTX")) S CIA("CTX")=$$GETVAR^CIANBUTL("CTX")
"RTN","CIANBACT",45,0)
 E  D SETVAR^CIANBUTL("CTX",CIA("CTX"))
"RTN","CIANBACT",46,0)
 S:CIA("CTX")="" CIA("CTX")=$$GETVAR^CIANBUTL("AID")
"RTN","CIANBACT",47,0)
 S RPC=$$FIND1^DIC(8994,,"QX",$G(CIA("RPC")))
"RTN","CIANBACT",48,0)
 Q:$$ERRCHK('RPC,3)
"RTN","CIANBACT",49,0)
 S I=$G(^XWB(8994,RPC,0)),RTN=$P(I,U,2,3),XWBWRAP=+$P(I,U,8),XWBPTYPE=$P(I,U,4)
"RTN","CIANBACT",50,0)
 Q:$$ERRCHK($S($E($P(RTN,U,2),1,5)="CIANB":0,1:'$$CANRUN(RPC,CIA("CTX"))),4,CIA("RPC"),CIA("CTX"))
"RTN","CIANBACT",51,0)
 Q:$$ERRCHK("03"'[$P(I,U,6),5)
"RTN","CIANBACT",52,0)
 Q:$$ERRCHK(RTN'?.8AN1"^"1.8AN,6)
"RTN","CIANBACT",53,0)
 Q:$$ERRCHK("^1^2^3^4^5^H^"'[(U_XWBPTYPE_U),6)
"RTN","CIANBACT",54,0)
 Q:$$ERRCHK(ARG>40,7,,ARG,40)
"RTN","CIANBACT",55,0)
 I $G(CIA("ASY")) D
"RTN","CIANBACT",56,0)
 .N RD
"RTN","CIANBACT",57,0)
 .S RD="CIANB THREAD RESOURCE #"_$$GETVAR^CIANBUTL("RDEV")
"RTN","CIANBACT",58,0)
 .S CIAD=$$QUEUE^CIAUTSK("TASK^CIANBASY","ASYNC RPC: "_CIA("RPC"),,"RTN^XWBWRAP^XWBPTYPE^ARG^ARG(^CIA(^XWBOS^P*",RD)
"RTN","CIANBACT",59,0)
 .Q:$$ERRCHK(CIAD<1,8)
"RTN","CIANBACT",60,0)
 .S ^XTMP("CIA",CIA("UID"),"T",CIAD)=""
"RTN","CIANBACT",61,0)
 .D REPLY^CIANBLIS(CIAD)
"RTN","CIANBACT",62,0)
 E  D
"RTN","CIANBACT",63,0)
 .S:XWBPTYPE=4 CIAD=$$TMPGBL^CIANBRPC("X")
"RTN","CIANBACT",64,0)
 .D STREST^CIANBLIS(1),DORPC,DATAOUT
"RTN","CIANBACT",65,0)
 Q
"RTN","CIANBACT",66,0)
 ; Builds the RPC entry code and executes it
"RTN","CIANBACT",67,0)
DORPC N I,P,XWBAPVER,XQY,CIAQUIT,ALOG,$ET
"RTN","CIANBACT",68,0)
 S RTN=RTN_"(.CIAD",XWBAPVER=$G(CIA("VER")),XQY=$$GETVAR^CIANBUTL("AID0")
"RTN","CIANBACT",69,0)
 S ALOG=$$ISACTIVE^CIANBLOG,ALOG(0)=$S(ALOG:$$LOG^CIANBLOG(ALOG,1,CIA("RPC")),1:0)
"RTN","CIANBACT",70,0)
 F I=1:1:ARG D
"RTN","CIANBACT",71,0)
 .S RTN=RTN_","
"RTN","CIANBACT",72,0)
 .Q:'$D(ARG(I))
"RTN","CIANBACT",73,0)
 .S P="P"_I,RTN=RTN_"."_P
"RTN","CIANBACT",74,0)
 .S:$D(@P)=10 @P=""
"RTN","CIANBACT",75,0)
 .D:ALOG(0) ADD^CIANBLOG(ALOG,ALOG(0),P,1)
"RTN","CIANBACT",76,0)
 S RTN=RTN_")"
"RTN","CIANBACT",77,0)
 D
"RTN","CIANBACT",78,0)
 .N ALOG
"RTN","CIANBACT",79,0)
 .D @RTN
"RTN","CIANBACT",80,0)
 I ALOG(0) D
"RTN","CIANBACT",81,0)
 .N VAL,ARY
"RTN","CIANBACT",82,0)
 .S VAL=$C(13)_"Return Data:"_$C(13)
"RTN","CIANBACT",83,0)
 .D ADD^CIANBLOG(ALOG,ALOG(0),"VAL")
"RTN","CIANBACT",84,0)
 .I XWBPTYPE=1 S VAL=$G(CIAD),ARY="VAL"
"RTN","CIANBACT",85,0)
 .E  I XWBPTYPE=2 S ARY="CIAD"
"RTN","CIANBACT",86,0)
 .E  I XWBPTYPE=3 S ARY="CIAD"
"RTN","CIANBACT",87,0)
 .E  I XWBPTYPE=4 S ARY=CIAD
"RTN","CIANBACT",88,0)
 .E  I XWBPTYPE=5 S VAL=$G(@CIAD),ARY="VAL"
"RTN","CIANBACT",89,0)
 .E  I XWBPTYPE="H" S VAL=CIAD,ARY="VAL"
"RTN","CIANBACT",90,0)
 .E  Q
"RTN","CIANBACT",91,0)
 .D ADD^CIANBLOG(ALOG,ALOG(0),ARY)
"RTN","CIANBACT",92,0)
 Q
"RTN","CIANBACT",93,0)
 ; Test for error condition
"RTN","CIANBACT",94,0)
 ; TEST = If true, setup the error
"RTN","CIANBACT",95,0)
 ; ERR  = Error code
"RTN","CIANBACT",96,0)
 ; Pn   = Optional parameters (up to 3)
"RTN","CIANBACT",97,0)
ERRCHK(TEST,ERR,P1,P2,P3) ;
"RTN","CIANBACT",98,0)
 I TEST,'$G(CIAERR(0)) D
"RTN","CIANBACT",99,0)
 .D GETDLG^CIANBUTL(ERR,.CIAERR,.P1,.P2,.P3)
"RTN","CIANBACT",100,0)
 .S CIAERR(0)=ERR
"RTN","CIANBACT",101,0)
 Q:$Q +$G(CIAERR(0))
"RTN","CIANBACT",102,0)
 Q
"RTN","CIANBACT",103,0)
 ; Writes return data to TCP stream
"RTN","CIANBACT",104,0)
DATAOUT D TCPUSE^CIANBLIS
"RTN","CIANBACT",105,0)
 W $C(0)
"RTN","CIANBACT",106,0)
 I XWBPTYPE=1 D TCPWRITE^CIANBLIS(.CIAD) Q
"RTN","CIANBACT",107,0)
 I XWBPTYPE=2 D ARYOUT^CIANBLIS("CIAD",1) Q
"RTN","CIANBACT",108,0)
 I XWBPTYPE=3 D ARYOUT^CIANBLIS("CIAD",XWBWRAP) Q
"RTN","CIANBACT",109,0)
 I XWBPTYPE=4 D ARYOUT^CIANBLIS(CIAD,XWBWRAP) Q
"RTN","CIANBACT",110,0)
 I XWBPTYPE=5 D TCPWRITE^CIANBLIS($G(@CIAD)) Q
"RTN","CIANBACT",111,0)
 I XWBPTYPE="H" D HFSOUT^CIANBLIS(CIAD,XWBWRAP) Q
"RTN","CIANBACT",112,0)
 Q
"RTN","CIANBACT",113,0)
 ; Returns true if RPC can run in current context
"RTN","CIANBACT",114,0)
CANRUN(RPC,CTX) ;
"RTN","CIANBACT",115,0)
 Q:'$G(DUZ)!'RPC 0
"RTN","CIANBACT",116,0)
 S CTX(0)=$$OPTLKP^CIANBUTL(CTX)
"RTN","CIANBACT",117,0)
 Q:$$ERRCHK('$L(CTX(0)),2,CTX) 0
"RTN","CIANBACT",118,0)
 D:'$G(^XTMP("CIA",CIA("UID"),"C",CTX(0))) BLDCTX(CTX(0))
"RTN","CIANBACT",119,0)
 Q:$$KCHK^XUSRB("XUPROGMODE") 1
"RTN","CIANBACT",120,0)
 Q $D(^XTMP("CIA",CIA("UID"),"C",CTX(0),RPC))
"RTN","CIANBACT",121,0)
 ; Build RPC context table
"RTN","CIANBACT",122,0)
BLDCTX(OPT,CTX) ;
"RTN","CIANBACT",123,0)
 N X
"RTN","CIANBACT",124,0)
 I '$D(CTX) K ^XTMP("CIA",CIA("UID"),"C",OPT) S ^(OPT)=1,CTX=OPT
"RTN","CIANBACT",125,0)
 Q:$D(^XTMP("CIA",CIA("UID"),"C",CTX,0,OPT))  S ^(OPT)=""
"RTN","CIANBACT",126,0)
 Q:$$OPTCHK^CIANBUTL(OPT,"B")
"RTN","CIANBACT",127,0)
 M ^XTMP("CIA",CIA("UID"),"C",CTX)=^DIC(19,OPT,"RPC","B")
"RTN","CIANBACT",128,0)
 F X=0:0 S X=$O(^DIC(19,OPT,10,"B",X)) Q:'X  D BLDCTX(X,CTX)
"RTN","CIANBACT",129,0)
 K:CTX=OPT ^XTMP("CIA",CIA("UID"),"C",CTX,0)
"RTN","CIANBACT",130,0)
 Q
"RTN","CIANBACT",131,0)
 ; OS-specific job commands
"RTN","CIANBACT",132,0)
JOB1() I CIAMODE=2 D MODE2 Q 1
"RTN","CIANBACT",133,0)
 X "J EN^CIANBLIS(PORT,IP,1)[UCI]::15"
"RTN","CIANBACT",134,0)
 Q $T
"RTN","CIANBACT",135,0)
JOB2() I CIAMODE=2 D MODE2 Q 1
"RTN","CIANBACT",136,0)
 X "J EN^CIANBLIS(PORT,IP,1)[UCI]:100000:15"
"RTN","CIANBACT",137,0)
 Q $T
"RTN","CIANBACT",138,0)
JOB3() I $G(CIA("DBG"))!($G(CIA("VER"))<1.5) X "J EN^CIANBLIS(PORT,IP,1)[$P(UCI,"","")]::15" Q $T
"RTN","CIANBACT",139,0)
 S $P(CIADATA,U)=1
"RTN","CIANBACT",140,0)
 D REPLY^CIANBLIS(.CIADATA)
"RTN","CIANBACT",141,0)
 X "J EN^CIANBLIS(CIAPORT,CIAIP,2)[$P(UCI,"","")]:(:4:CIATDEV:CIATDEV):15"
"RTN","CIANBACT",142,0)
 Q $T
"RTN","CIANBACT",143,0)
JOB4() I CIAMODE=2 D MODE2 Q 1
"RTN","CIANBACT",144,0)
 J EN^CIANBLIS(PORT,IP,1)
"RTN","CIANBACT",145,0)
 Q $T
"RTN","CIANBACT",146,0)
 ; Mode 2 support for MSM, DSM & GT.M
"RTN","CIANBACT",147,0)
MODE2 D:UCI'=UCI(0) SETUCI(UCI)
"RTN","CIANBACT",148,0)
 S UCI(0)=UCI
"RTN","CIANBACT",149,0)
 I '$G(CIA("DBG")),$G(CIA("VER"))'<1.5 S $P(CIADATA,U)=1,CIAMODE=1
"RTN","CIANBACT",150,0)
 E  S CIAQUIT=1 D REPLY^CIANBLIS(),TCPCLOSE^CIANBLIS,EN^CIANBLIS(PORT,IP,1)
"RTN","CIANBACT",151,0)
 Q
"RTN","CIANBACT",152,0)
 ; Return current UCI
"RTN","CIANBACT",153,0)
GETUCI() N Y
"RTN","CIANBACT",154,0)
 D UCI^%ZOSV
"RTN","CIANBACT",155,0)
 Q Y
"RTN","CIANBACT",156,0)
 ; Change UCI
"RTN","CIANBACT",157,0)
SETUCI(X) D SWAP^%XUCI
"RTN","CIANBACT",158,0)
 Q
"RTN","CIANBACT",159,0)
 ; Get authentication method for target UCI
"RTN","CIANBACT",160,0)
AUTHMETH(UCI) ;
"RTN","CIANBACT",161,0)
 N X,PC
"RTN","CIANBACT",162,0)
 F PC=2,1 D  Q:$L(X)
"RTN","CIANBACT",163,0)
 .S X=$$GET^XPAR("ALL","CIANB AUTHENTICATION",$P(UCI,",",1,PC))
"RTN","CIANBACT",164,0)
 Q X
"RTN","CIANBASY")
0^2^B5548580
"RTN","CIANBASY",1,0)
CIANBASY ;MSC/IND/DKM - Asynchronous RPC calls ;26-Jan-2015 14:18;DKM
"RTN","CIANBASY",2,0)
 ;;1.3;CIA NETWORK COMPONENTS;;Sep 18, 2007;Build 173
"RTN","CIANBASY",3,0)
 ;;Copyright 2000-2012, Medsphere Systems Corporation
"RTN","CIANBASY",4,0)
 ;=================================================================
"RTN","CIANBASY",5,0)
 ; Background task for executing an asynchronous RPC
"RTN","CIANBASY",6,0)
TASK N CIAD,TGT,$ET,$ES
"RTN","CIANBASY",7,0)
 S $ET="D ERROR^CIANBASY",ZTREQ="@"
"RTN","CIANBASY",8,0)
 K ^XTMP("CIA",CIA("UID"),"T",ZTSK)
"RTN","CIANBASY",9,0)
 Q:$$S^%ZTLOAD
"RTN","CIANBASY",10,0)
 S ^XTMP("CIA",CIA("UID"),"T",ZTSK)=0,TGT=$NA(^(ZTSK,0))
"RTN","CIANBASY",11,0)
 S:XWBPTYPE=4 CIAD=TGT
"RTN","CIANBASY",12,0)
 D DORPC^CIANBACT
"RTN","CIANBASY",13,0)
 I XWBPTYPE=1 S @TGT@(0)=CIAD
"RTN","CIANBASY",14,0)
 E  I XWBPTYPE>1,XWBPTYPE<4 M @TGT=CIAD S:XWBPTYPE=2 XWBWRAP=1
"RTN","CIANBASY",15,0)
 E  I XWBPTYPE=4,$L(CIAD),CIAD'=TGT M @TGT=@CIAD K @CIAD
"RTN","CIANBASY",16,0)
 E  I XWBPTYPE=5 S @TGT@(0)=$G(@CIAD)
"RTN","CIANBASY",17,0)
 E  I XWBPTYPE="H" D
"RTN","CIANBASY",18,0)
 .N X,Y,FIL,DIR
"RTN","CIANBASY",19,0)
 .S X=$E($$DIRDLM^CIAUOS,3),Y=$L(CIAD,X),DIR=$P(CIAD,X,1,Y-1),FIL=$P(CIAD,X,Y)
"RTN","CIANBASY",20,0)
 .I '$$FTG^%ZISH(DIR,FIL,$NA(@TGT@(0)),$QL(TGT)+1)
"RTN","CIANBASY",21,0)
 .D DELETE^CIAUOS(CIAD)
"RTN","CIANBASY",22,0)
 I $$S^%ZTLOAD K ^XTMP("CIA",CIA("UID"),"T",ZTSK)
"RTN","CIANBASY",23,0)
 E  S ^XTMP("CIA",CIA("UID"),"T",ZTSK)=ZTSK_"^0^"_XWBWRAP
"RTN","CIANBASY",24,0)
 Q
"RTN","CIANBASY",25,0)
ERROR D SETERR(-1,$$EC^%ZOSV)
"RTN","CIANBASY",26,0)
 D ^%ZTER,UNWIND^%ZTER
"RTN","CIANBASY",27,0)
 Q
"RTN","CIANBASY",28,0)
 ; Retrieve specified routine line
"RTN","CIANBASY",29,0)
RTNTEXT(RTN) ;
"RTN","CIANBASY",30,0)
 N TAG
"RTN","CIANBASY",31,0)
 S TAG=$P(RTN,U),RTN=$P(RTN,U,2)
"RTN","CIANBASY",32,0)
 Q $S('$L(RTN):$T(^@TAG),$L(TAG):$T(@TAG^@RTN),1:$T(^@RTN))
"RTN","CIANBASY",33,0)
 ; Set error info to return to client
"RTN","CIANBASY",34,0)
SETERR(CODE,TEXT) ;
"RTN","CIANBASY",35,0)
 K ^XTMP("CIA",CIA("UID"),"T",ZTSK) M ^(ZTSK,0,0)=TEXT
"RTN","CIANBASY",36,0)
 S ^XTMP("CIA",CIA("UID"),"T",ZTSK)=ZTSK_U_CODE_"^1"
"RTN","CIANBASY",37,0)
 Q
"RTN","CIANBASY",38,0)
 ; RPC to check for completed tasks
"RTN","CIANBASY",39,0)
 ; Results[0] at the client end will contain the TaskMan ID of the
"RTN","CIANBASY",40,0)
 ; completed RPC. The remainder of the Result will be the data
"RTN","CIANBASY",41,0)
 ; returned by the RPC.
"RTN","CIANBASY",42,0)
ASYCHK() N ZTSK,CIAD,X
"RTN","CIANBASY",43,0)
 S ZTSK=0
"RTN","CIANBASY",44,0)
 F  S ZTSK=+$O(^XTMP("CIA",CIA("UID"),"T",ZTSK)) Q:'ZTSK  S X=$G(^(ZTSK)),CIAD=$NA(^(ZTSK,0)) I X D  Q
"RTN","CIANBASY",45,0)
 .D TCPWRITE^CIANBLIS($C(2)_X_$C(13))
"RTN","CIANBASY",46,0)
 .D ARYOUT^CIANBLIS(CIAD,$P(X,U,3))
"RTN","CIANBASY",47,0)
 .K ^XTMP("CIA",CIA("UID"),"T",ZTSK)
"RTN","CIANBASY",48,0)
 Q ZTSK
"RTN","CIANBASY",49,0)
 ; RPC: Stop a task
"RTN","CIANBASY",50,0)
 ; Signals to a backround task that it should stop running.  Cleans up
"RTN","CIANBASY",51,0)
 ; any output generated by completed tasks.
"RTN","CIANBASY",52,0)
STOP(CIAD,ZTSK) ;
"RTN","CIANBASY",53,0)
 S CIAD=''$D(^XTMP("CIA",CIA("UID"),"T",ZTSK)) K:CIAD ^(ZTSK)
"RTN","CIANBASY",54,0)
 Q:'$D(^%ZTSK(ZTSK))
"RTN","CIANBASY",55,0)
 S $P(^%ZTSK(ZTSK,.1),U,10)=$P($G(^VA(200,DUZ,0)),U)
"RTN","CIANBASY",56,0)
 D DQ^%ZTLOAD
"RTN","CIANBASY",57,0)
 I $G(ZTSK(0)) D KILL^%ZTLOAD
"RTN","CIANBASY",58,0)
 Q
"RTN","CIANBASY",59,0)
 ; Stop all tasks in task list
"RTN","CIANBASY",60,0)
STOPALL N ZTSK
"RTN","CIANBASY",61,0)
 S ZTSK=0
"RTN","CIANBASY",62,0)
 F  S ZTSK=$O(^XTMP("CIA",CIA("UID"),"T",ZTSK)) Q:'ZTSK  D STOP(,ZTSK)
"RTN","CIANBASY",63,0)
 K ^XTMP("CIA",CIA("UID"),"T")
"RTN","CIANBASY",64,0)
 Q
"RTN","CIANBEVT")
0^3^B59930838
"RTN","CIANBEVT",1,0)
CIANBEVT ;MSC/IND/DKM - Event Support ;26-Jan-2015 14:18;DKM
"RTN","CIANBEVT",2,0)
 ;;1.3;CIA NETWORK COMPONENTS;;Sep 18, 2007;Build 173
"RTN","CIANBEVT",3,0)
 ;;Copyright 2000-2008, Medsphere Systems Corporation
"RTN","CIANBEVT",4,0)
 ;=================================================================
"RTN","CIANBEVT",5,0)
 ; Check for the occurrence of host events
"RTN","CIANBEVT",6,0)
EVTCHK() ;EP
"RTN","CIANBEVT",7,0)
 N RTN,$ET,X
"RTN","CIANBEVT",8,0)
 S $ET="",X="ERR1^CIANBEVT",@^%ZOSF("TRAP")
"RTN","CIANBEVT",9,0)
 L +^XTMP("CIA",CIA("UID"),"E"):0
"RTN","CIANBEVT",10,0)
 E  Q 0
"RTN","CIANBEVT",11,0)
 S RTN=+$O(^XTMP("CIA",CIA("UID"),"E",0)),X=$NA(^(RTN))
"RTN","CIANBEVT",12,0)
 I RTN D
"RTN","CIANBEVT",13,0)
 .D TCPUSE^CIANBLIS
"RTN","CIANBEVT",14,0)
 .W $C(3)
"RTN","CIANBEVT",15,0)
 .D ARYOUT^CIANBLIS(X)
"RTN","CIANBEVT",16,0)
ERR1 L -^XTMP("CIA",CIA("UID"),"E")
"RTN","CIANBEVT",17,0)
 Q $G(RTN)
"RTN","CIANBEVT",18,0)
 ; Start monitor in background if not already running
"RTN","CIANBEVT",19,0)
MONSTART ;EP
"RTN","CIANBEVT",20,0)
 I '$$MONCHECK,$$QUEUE^CIAUTSK("MONITOR^CIANBEVT","VueCentric Event Monitor")
"RTN","CIANBEVT",21,0)
 Q
"RTN","CIANBEVT",22,0)
 ; Returns true if event monitor is running
"RTN","CIANBEVT",23,0)
 ;   LOCK = If specified and true, do not release lock.
"RTN","CIANBEVT",24,0)
MONCHECK(LOCK) ;EP
"RTN","CIANBEVT",25,0)
 L +^XTMP("CIANBEVT MONITOR"):0
"RTN","CIANBEVT",26,0)
 E  Q 1
"RTN","CIANBEVT",27,0)
 L:'$G(LOCK) -^XTMP("CIANBEVT MONITOR")
"RTN","CIANBEVT",28,0)
 Q 0
"RTN","CIANBEVT",29,0)
 ; Taskman entry point for background event monitor
"RTN","CIANBEVT",30,0)
MONITOR ;EP
"RTN","CIANBEVT",31,0)
 N IEN,TYPE,EXE,IDLE,PMETH,X
"RTN","CIANBEVT",32,0)
 S ZTREQ="@",IDLE=360
"RTN","CIANBEVT",33,0)
 Q:$$MONCHECK(1)
"RTN","CIANBEVT",34,0)
 F  D  Q:IDLE<1!$$S^%ZTLOAD
"RTN","CIANBEVT",35,0)
 .H 5
"RTN","CIANBEVT",36,0)
 .F IEN=0:0 S IEN=$O(^CIANB(19941.21,IEN)) Q:'IEN  D
"RTN","CIANBEVT",37,0)
 ..S X=$G(^(IEN,0)),TYPE=$P(X,U),PMETH=$P(X,U,6),EXE=$G(^(1))          ; Note: NR set above
"RTN","CIANBEVT",38,0)
 ..I $L(EXE),'$P(X,U,2),$$CHKINT(+$P(X,U,3)) D
"RTN","CIANBEVT",39,0)
 ...I PMETH D EXEMON Q
"RTN","CIANBEVT",40,0)
 ...N UID
"RTN","CIANBEVT",41,0)
 ...F  Q:'$$NXTUID^CIANBUTL(.UID)  D EXEUID(UID,TYPE)
"RTN","CIANBEVT",42,0)
 .S IDLE=$S($$NXTUID^CIANBUTL:360,1:IDLE-1)
"RTN","CIANBEVT",43,0)
 L -^XTMP("CIANBEVT MONITOR")
"RTN","CIANBEVT",44,0)
 Q
"RTN","CIANBEVT",45,0)
 ; Execute an event monitor in session context
"RTN","CIANBEVT",46,0)
EXEUID(UID,TYPE) ;EP
"RTN","CIANBEVT",47,0)
 Q:'$$ISSUBSCR(UID,TYPE)
"RTN","CIANBEVT",48,0)
 N CIA,DUZ
"RTN","CIANBEVT",49,0)
 S CIA("UID")=UID,DUZ=$$EXEVAR("DUZ"),DUZ(0)=$$EXEVAR("DUZ0"),DUZ(2)=$$EXEVAR("DUZ2")
"RTN","CIANBEVT",50,0)
 D EXEMON
"RTN","CIANBEVT",51,0)
 Q
"RTN","CIANBEVT",52,0)
 ; Execute the event monitor
"RTN","CIANBEVT",53,0)
EXEMON N X,$ET
"RTN","CIANBEVT",54,0)
 S X="EXEERR^CIANBEVT",@^%ZOSF("TRAP"),$ET=""
"RTN","CIANBEVT",55,0)
 D EXERUN
"RTN","CIANBEVT",56,0)
 Q
"RTN","CIANBEVT",57,0)
EXERUN N IEN,IDLE
"RTN","CIANBEVT",58,0)
 X EXE
"RTN","CIANBEVT",59,0)
 Q
"RTN","CIANBEVT",60,0)
 ; Log any errors
"RTN","CIANBEVT",61,0)
EXEERR N ERT,ERD,X
"RTN","CIANBEVT",62,0)
 S ERT=$TR($$EC^%ZOSV,U,"~"),ERD=$$NOW^XLFDT
"RTN","CIANBEVT",63,0)
 S X=$G(^CIANB(19941.21,IEN,100)),^(100)=ERD_U_ERT
"RTN","CIANBEVT",64,0)
 D:(ERD\1'=(X\1))!($P(X,U,2)'=ERT) ^%ZTER
"RTN","CIANBEVT",65,0)
 Q
"RTN","CIANBEVT",66,0)
EXEVAR(VAR) ;
"RTN","CIANBEVT",67,0)
 Q $$GETVAR^CIANBUTL(VAR,,,UID)
"RTN","CIANBEVT",68,0)
 ; Check nominal polling interval.  Return true if event needs to be polled.
"RTN","CIANBEVT",69,0)
CHKINT(INT) ;EP
"RTN","CIANBEVT",70,0)
 Q:'INT 1
"RTN","CIANBEVT",71,0)
 N NXT,NOW,CHK
"RTN","CIANBEVT",72,0)
 S NOW=$H,NOW=NOW*86400+$P(NOW,",",2)
"RTN","CIANBEVT",73,0)
 S NXT=$G(IEN(IEN),NOW),CHK=NOW'<NXT
"RTN","CIANBEVT",74,0)
 S:CHK IEN(IEN)=NOW+INT
"RTN","CIANBEVT",75,0)
 Q CHK
"RTN","CIANBEVT",76,0)
 ; RPC: Broadcast an event to some or all active users
"RTN","CIANBEVT",77,0)
BCAST(DATA,EVENT,STUB,LST,AID) ;
"RTN","CIANBEVT",78,0)
 S DATA=$$BRDCAST(.EVENT,.STUB,.LST,.AID)
"RTN","CIANBEVT",79,0)
 Q
"RTN","CIANBEVT",80,0)
 ; Called by event monitor to signal an event to client
"RTN","CIANBEVT",81,0)
SIGNAL(STUB) ;
"RTN","CIANBEVT",82,0)
 D QUEUE(TYPE,.STUB)
"RTN","CIANBEVT",83,0)
 Q
"RTN","CIANBEVT",84,0)
 ; Add an event to a process event queue
"RTN","CIANBEVT",85,0)
QUEUE(TYPE,STUB,UID) ;EP
"RTN","CIANBEVT",86,0)
 N Q
"RTN","CIANBEVT",87,0)
 S:'$D(UID) UID=$G(CIA("UID"))
"RTN","CIANBEVT",88,0)
 I '$$ISSUBSCR(UID,TYPE) Q:$Q 0 Q
"RTN","CIANBEVT",89,0)
 L +^XTMP("CIA",UID,"E"):5
"RTN","CIANBEVT",90,0)
 E  Q:$Q 0 Q
"RTN","CIANBEVT",91,0)
 S Q=1+$O(^XTMP("CIA",UID,"E",$C(1)),-1),^(Q,0)=TYPE_$C(13) M ^(1)=STUB
"RTN","CIANBEVT",92,0)
 L -^XTMP("CIA",UID,"E")
"RTN","CIANBEVT",93,0)
 Q:$Q 1
"RTN","CIANBEVT",94,0)
 Q
"RTN","CIANBEVT",95,0)
 ; Lookup event type, returning IEN
"RTN","CIANBEVT",96,0)
EVENTIEN(TYPE) ;EP
"RTN","CIANBEVT",97,0)
 N X,Y
"RTN","CIANBEVT",98,0)
 Q:TYPE=+TYPE!'$L(TYPE) +TYPE
"RTN","CIANBEVT",99,0)
 S X=$E(TYPE,1,30),Y=0
"RTN","CIANBEVT",100,0)
 F  S Y=+$O(^CIANB(19941.21,"B",X,Y)) Q:'Y!($P($G(^CIANB(19941.21,Y,0)),U)=TYPE)
"RTN","CIANBEVT",101,0)
 Q $S(Y:Y,1:$$EVENTIEN($P(TYPE,".",1,$L(TYPE,".")-1)))
"RTN","CIANBEVT",102,0)
 ; Return event name, given IEN
"RTN","CIANBEVT",103,0)
EVENTNAM(IEN) ;EP
"RTN","CIANBEVT",104,0)
 Q $P($G(^CIANB(19941.21,+IEN,0)),U)
"RTN","CIANBEVT",105,0)
 ; Check to see if an event type is disabled
"RTN","CIANBEVT",106,0)
DISABLED(TYPE) ;EP
"RTN","CIANBEVT",107,0)
 N X,Y
"RTN","CIANBEVT",108,0)
 S X=$$EVENTIEN(TYPE),Y=$G(^CIANB(19941.21,+X,0)),TYPE=$P(Y,U),Y=+$P(Y,U,2)
"RTN","CIANBEVT",109,0)
 S:'Y Y=$$KEYCHECK(X,20)
"RTN","CIANBEVT",110,0)
 Q $S(Y:Y,'X:0,1:$$DISABLED($P(TYPE,".",1,$L(TYPE,".")-1)))
"RTN","CIANBEVT",111,0)
 ; Check to see if event type is protected by security key(s)
"RTN","CIANBEVT",112,0)
 ; Returns true if user does not have required keys
"RTN","CIANBEVT",113,0)
 ;   SB=20: Publication keys; SB=21: Subscription keys
"RTN","CIANBEVT",114,0)
KEYCHECK(TYPE,SB) ;EP
"RTN","CIANBEVT",115,0)
 N X,Y,Z
"RTN","CIANBEVT",116,0)
 S X=$$EVENTIEN(TYPE),(Y,Z)=0
"RTN","CIANBEVT",117,0)
 F  S Z=$O(^CIANB(19941.21,X,SB,"B",Z)) Q:'Z  D  Q:'Y
"RTN","CIANBEVT",118,0)
 .S Y='$$HASKEY(Z)
"RTN","CIANBEVT",119,0)
 Q Y
"RTN","CIANBEVT",120,0)
 ; Return true if user has key
"RTN","CIANBEVT",121,0)
HASKEY(KEY) ;EP
"RTN","CIANBEVT",122,0)
 S:KEY=+KEY KEY=$$LKUP^XPDKEY(KEY)
"RTN","CIANBEVT",123,0)
 Q $S($L(KEY):''$$KCHK^XUSRB(KEY),1:0)
"RTN","CIANBEVT",124,0)
 ; Signal an event to all or selected sessions
"RTN","CIANBEVT",125,0)
 ; If called as extrinsic, returns # of events broadcast
"RTN","CIANBEVT",126,0)
BRDCAST(TYPE,STUB,USR,AID) ;EP
"RTN","CIANBEVT",127,0)
 N X,C
"RTN","CIANBEVT",128,0)
 S C=0
"RTN","CIANBEVT",129,0)
 I '$$DISABLED(TYPE) D
"RTN","CIANBEVT",130,0)
 .I $D(USR("DUZ"))>1 D
"RTN","CIANBEVT",131,0)
 ..F  Q:'$$NXTUID^CIANBUTL(.X,-1,.AID)  D
"RTN","CIANBEVT",132,0)
 ...S:$D(USR("DUZ",+$$GETVAR^CIANBUTL("DUZ",,,X))) USR("UID",X)=""
"RTN","CIANBEVT",133,0)
 .S X=""
"RTN","CIANBEVT",134,0)
 .F  D  Q:'X
"RTN","CIANBEVT",135,0)
 ..I $D(USR)>1 S X=$O(USR("UID",X))
"RTN","CIANBEVT",136,0)
 ..E  D NXTUID^CIANBUTL(.X,-1,.AID)
"RTN","CIANBEVT",137,0)
 ..S:X C=C+$$QUEUE(.TYPE,.STUB,X)
"RTN","CIANBEVT",138,0)
 .D LOG(TYPE,.STUB)
"RTN","CIANBEVT",139,0)
 .D FPRTCOL(TYPE,.STUB)
"RTN","CIANBEVT",140,0)
 Q:$Q C
"RTN","CIANBEVT",141,0)
 Q
"RTN","CIANBEVT",142,0)
 ; Fire Associated Event Protocol
"RTN","CIANBEVT",143,0)
FPRTCOL(TYPE,STUB) ;
"RTN","CIANBEVT",144,0)
 N EVT,X
"RTN","CIANBEVT",145,0)
 S EVT=$$EVENTIEN(TYPE)
"RTN","CIANBEVT",146,0)
 Q:'EVT
"RTN","CIANBEVT",147,0)
 S X=$P($G(^CIANB(19941.21,+EVT,0)),U,7)_";ORD(101,"
"RTN","CIANBEVT",148,0)
 Q:'X
"RTN","CIANBEVT",149,0)
 D EN^XQOR
"RTN","CIANBEVT",150,0)
 Q
"RTN","CIANBEVT",151,0)
 ; Subscribe to / unsubscribe from a named event
"RTN","CIANBEVT",152,0)
 ; Returns new subscription state
"RTN","CIANBEVT",153,0)
SUBSCR(TYPE,SUBSCR) ;EP
"RTN","CIANBEVT",154,0)
 I '$L(TYPE) Q:$Q 0 Q
"RTN","CIANBEVT",155,0)
 N CURRNT
"RTN","CIANBEVT",156,0)
 S CURRNT=''$D(^XTMP("CIA",CIA("UID"),"S",TYPE)),SUBSCR=''$G(SUBSCR)
"RTN","CIANBEVT",157,0)
 I CURRNT'=SUBSCR D
"RTN","CIANBEVT",158,0)
 .I SUBSCR D  Q:'SUBSCR
"RTN","CIANBEVT",159,0)
 ..I $$KEYCHECK(TYPE,21) S SUBSCR=0
"RTN","CIANBEVT",160,0)
 ..E  S ^XTMP("CIA",CIA("UID"),"S",TYPE)=""
"RTN","CIANBEVT",161,0)
 .E  D
"RTN","CIANBEVT",162,0)
 ..K ^XTMP("CIA",CIA("UID"),"S",TYPE)
"RTN","CIANBEVT",163,0)
 ..D CLRVAR^CIANBUTL("EVENT."_TYPE)
"RTN","CIANBEVT",164,0)
 .D BRDCAST($S(SUBSCR:"",1:"UN")_"SUBSCRIBE."_TYPE,$$SESSION^CIANBUTL)
"RTN","CIANBEVT",165,0)
 Q:$Q SUBSCR
"RTN","CIANBEVT",166,0)
 Q
"RTN","CIANBEVT",167,0)
 ; Unsubscribe from all events (done at logout)
"RTN","CIANBEVT",168,0)
UNSUBALL ;EP
"RTN","CIANBEVT",169,0)
 N TYPE
"RTN","CIANBEVT",170,0)
 S TYPE=""
"RTN","CIANBEVT",171,0)
 F  S TYPE=$O(^XTMP("CIA",CIA("UID"),"S",TYPE)) Q:'$L(TYPE)  D
"RTN","CIANBEVT",172,0)
 .D SUBSCR(TYPE,0)
"RTN","CIANBEVT",173,0)
 Q
"RTN","CIANBEVT",174,0)
 ; Returns true if session is a subscriber
"RTN","CIANBEVT",175,0)
ISSUBSCR(UID,TYPE) ;EP
"RTN","CIANBEVT",176,0)
 Q $S('$$ISACTIVE^CIANBUTL(UID):0,1:$$ISSUBX(TYPE))
"RTN","CIANBEVT",177,0)
ISSUBX(TYPE) ;
"RTN","CIANBEVT",178,0)
 Q $S('$L(TYPE):0,$D(^XTMP("CIA",UID,"S",TYPE)):1,1:$$ISSUBX($P(TYPE,".",1,$L(TYPE,".")-1)))
"RTN","CIANBEVT",179,0)
 ; Returns list of subscribers to a given event type
"RTN","CIANBEVT",180,0)
GETSUBSC(DATA,TYPE) ;EP
"RTN","CIANBEVT",181,0)
 N Z
"RTN","CIANBEVT",182,0)
 D GETSESSN^CIANBRPC(.DATA)
"RTN","CIANBEVT",183,0)
 F Z=0:0 S Z=$O(@DATA@(Z)) Q:'Z  K:'$$ISSUBSCR(+@DATA@(Z),TYPE) @DATA@(Z)
"RTN","CIANBEVT",184,0)
 Q
"RTN","CIANBEVT",185,0)
 ; Returns number of days to retain log entries for an event type.
"RTN","CIANBEVT",186,0)
ISLOGGED(TYPE) ;EP
"RTN","CIANBEVT",187,0)
 N X,Y
"RTN","CIANBEVT",188,0)
 S TYPE=$$EVENTIEN(TYPE)
"RTN","CIANBEVT",189,0)
 S:TYPE X=^CIANB(19941.21,TYPE,0),Y=$P(X,U,4),X=$P(X,U)
"RTN","CIANBEVT",190,0)
 Q $S('TYPE:0,'$L(Y):$$ISLOGGED($P(X,".",$L(X,".")-1)),1:Y)
"RTN","CIANBEVT",191,0)
 ; Log an event
"RTN","CIANBEVT",192,0)
LOG(TYPE,STUB) ;EP
"RTN","CIANBEVT",193,0)
 N IEN,FDA,ERR,STB,X
"RTN","CIANBEVT",194,0)
 S IEN=$$ISACTIVE^CIANBLOG
"RTN","CIANBEVT",195,0)
 I IEN D
"RTN","CIANBEVT",196,0)
 .S X=$$LOG^CIANBLOG(IEN,2,TYPE)
"RTN","CIANBEVT",197,0)
 .D:X ADD^CIANBLOG(IEN,X,"STUB")
"RTN","CIANBEVT",198,0)
 Q:'$$ISLOGGED(TYPE)
"RTN","CIANBEVT",199,0)
 S FDA=$NA(FDA(19941.23,"+1,")),STB="STUB",X=0
"RTN","CIANBEVT",200,0)
 F  D  Q:'$L(STB)
"RTN","CIANBEVT",201,0)
 .S:$D(@STB)#2 X=X+1,STB(X)=@STB
"RTN","CIANBEVT",202,0)
 .S STB=$Q(@STB)
"RTN","CIANBEVT",203,0)
 S @FDA@(.01)=$$NOW^XLFDT
"RTN","CIANBEVT",204,0)
 S @FDA@(1)=TYPE
"RTN","CIANBEVT",205,0)
 S @FDA@(2)=DUZ
"RTN","CIANBEVT",206,0)
 S @FDA@(3)=$$GETUID^CIANBUTL
"RTN","CIANBEVT",207,0)
 S:X @FDA@(10)="STB"
"RTN","CIANBEVT",208,0)
 D UPDATE^DIE("U","FDA",,"ERR")
"RTN","CIANBEVT",209,0)
 Q
"RTN","CIANBEVT",210,0)
 ; Purge event log.  Specify at least one of:
"RTN","CIANBEVT",211,0)
 ;   DATE = Date before which entries will be purged.
"RTN","CIANBEVT",212,0)
 ;   TYPE = Event type to be purged.
"RTN","CIANBEVT",213,0)
 ;   FLAG = If set, purges child events as well.
"RTN","CIANBEVT",214,0)
PURGELOG(DATE,TYPE,FLAG) ;EP
"RTN","CIANBEVT",215,0)
 N IEN,CNT
"RTN","CIANBEVT",216,0)
 S CNT=0,TYPE=$G(TYPE),FLAG=$S($G(FLAG):12,1:1)
"RTN","CIANBEVT",217,0)
 S:TYPE=+TYPE TYPE=$$EVENTNAM(TYPE)
"RTN","CIANBEVT",218,0)
 I $G(DATE) D
"RTN","CIANBEVT",219,0)
 .F  S DATE=$O(^CIANB(19941.23,"B",DATE),-1),IEN=0 Q:'DATE  D
"RTN","CIANBEVT",220,0)
 ..F  S IEN=$O(^CIANB(19941.23,"B",DATE,IEN)) Q:'IEN  D
"RTN","CIANBEVT",221,0)
 ...I $L(TYPE),FLAG'[$$RELATES(TYPE,$P(^CIANB(19941.23,IEN,0),U,2)) Q
"RTN","CIANBEVT",222,0)
 ...S CNT=CNT+$$DELLOG(IEN)
"RTN","CIANBEVT",223,0)
 E  D
"RTN","CIANBEVT",224,0)
 .N TYP
"RTN","CIANBEVT",225,0)
 .S IEN=0,TYP=TYPE
"RTN","CIANBEVT",226,0)
 .F  Q:'$L(TYPE)  D
"RTN","CIANBEVT",227,0)
 ..F  S IEN=$O(^CIANB(19941.23,"C",TYPE,IEN)) Q:'IEN  S CNT=CNT+$$DELLOG(IEN)
"RTN","CIANBEVT",228,0)
 ..S TYPE=$O(^CIANB(19941.23,"C",TYPE))
"RTN","CIANBEVT",229,0)
 ..S:FLAG'[$$RELATES(TYP,TYPE) TYPE=""
"RTN","CIANBEVT",230,0)
 Q:$Q CNT
"RTN","CIANBEVT",231,0)
 Q
"RTN","CIANBEVT",232,0)
 ; Delete log entry corresponding to IEN
"RTN","CIANBEVT",233,0)
DELLOG(IEN) ;EP
"RTN","CIANBEVT",234,0)
 N FDA,ERR
"RTN","CIANBEVT",235,0)
 S FDA(19941.23,IEN_",",.01)="@"
"RTN","CIANBEVT",236,0)
 D FILE^DIE(,"FDA","ERR")
"RTN","CIANBEVT",237,0)
 Q:$Q '$D(ERR)
"RTN","CIANBEVT",238,0)
 Q
"RTN","CIANBEVT",239,0)
 ; Task purge in background
"RTN","CIANBEVT",240,0)
TASKPRG ;EP
"RTN","CIANBEVT",241,0)
 N ZTSK
"RTN","CIANBEVT",242,0)
 S ZTSK=$$QUEUE^CIAUTSK("DOPURGE^CIANBEVT(1)","Purge CIA EVENT LOG")
"RTN","CIANBEVT",243,0)
 I ZTSK>0 W !,"CIA EVENT LOG purge submitted as task #",ZTSK,!!
"RTN","CIANBEVT",244,0)
 E  W !,"Error submitting CIA EVENT LOG purge.",!!
"RTN","CIANBEVT",245,0)
 Q
"RTN","CIANBEVT",246,0)
 ; Purges event log according to retention settings
"RTN","CIANBEVT",247,0)
DOPURGE(SILENT) ;EP
"RTN","CIANBEVT",248,0)
 N IEN,TPNM,TPEN,DATE,CNT,TOT
"RTN","CIANBEVT",249,0)
 S TPNM="",SILENT=+$G(SILENT),TOT=0
"RTN","CIANBEVT",250,0)
 F  S TPNM=$O(^CIANB(19941.23,"C",TPNM)) Q:'$L(TPNM)  D
"RTN","CIANBEVT",251,0)
 .S TPEN=$$EVENTIEN(TPNM),DATE=+$P($G(^CIANB(19941.21,TPEN,0)),U,5)
"RTN","CIANBEVT",252,0)
 .S DATE=$$FMADD^XLFDT(DT,$S(DATE:1-DATE,1:-13))
"RTN","CIANBEVT",253,0)
 .S CNT=$$PURGELOG(DATE,TPNM),TOT=TOT+CNT
"RTN","CIANBEVT",254,0)
 .I CNT,'SILENT W $$SNGPLR^CIAU(CNT,"event")," purged for ",TPNM,!
"RTN","CIANBEVT",255,0)
 W:'SILENT !,"Total events purged: ",TOT,!!
"RTN","CIANBEVT",256,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","CIANBEVT",257,0)
 Q
"RTN","CIANBEVT",258,0)
 ; Returns the relationship between event types
"RTN","CIANBEVT",259,0)
 ;   0 = none
"RTN","CIANBEVT",260,0)
 ;   1 = same
"RTN","CIANBEVT",261,0)
 ;   2 = A is parent of B
"RTN","CIANBEVT",262,0)
 ;   3 = B is parent of A
"RTN","CIANBEVT",263,0)
RELATES(EVA,EVB) ;EP
"RTN","CIANBEVT",264,0)
 N SWP,X
"RTN","CIANBEVT",265,0)
 S:EVA=+EVA EVA=$$EVENTNAM(EVA)
"RTN","CIANBEVT",266,0)
 S:EVB=+EVB EVB=$$EVENTNAM(EVB)
"RTN","CIANBEVT",267,0)
 S:$L(EVA)>$L(EVB) SWP=EVA,EVA=EVB,EVB=SWP
"RTN","CIANBEVT",268,0)
 Q:EVA=EVB 1
"RTN","CIANBEVT",269,0)
 F  D  Q:'$L(EVB)!(EVA=EVB)
"RTN","CIANBEVT",270,0)
 .S EVB=$P(EVB,".",1,$L(EVB,".")-1)
"RTN","CIANBEVT",271,0)
 Q $S(EVA'=EVB:0,$D(SWP):3,1:2)
"RTN","CIANBINI")
0^8^B14896343
"RTN","CIANBINI",1,0)
CIANBINI ;MSC/IND/DKM - MSC RPC Broker Installation ;26-Jan-2015 14:18;DKM
"RTN","CIANBINI",2,0)
 ;;1.3;CIA NETWORK COMPONENTS;;Sep 18, 2007;Build 173
"RTN","CIANBINI",3,0)
 ;;Copyright 2000-2012, Medsphere Systems Corporation
"RTN","CIANBINI",4,0)
 ;=================================================================
"RTN","CIANBINI",5,0)
 ; Environment check
"RTN","CIANBINI",6,0)
EC D PATCH("XPAREDT2","26,35,52","KERNEL TOOLKIT")
"RTN","CIANBINI",7,0)
 D RTNTST("CIAU",1.2,"CIA UTILITIES 1.2")
"RTN","CIANBINI",8,0)
 D OBJCHK
"RTN","CIANBINI",9,0)
 I '$G(XPDQUIT),$G(XPDENV)=1 D
"RTN","CIANBINI",10,0)
 .N X
"RTN","CIANBINI",11,0)
 .L +^XTMP("CIANBLIS"):0
"RTN","CIANBINI",12,0)
 .I  L -^XTMP("CIANBLIS") Q
"RTN","CIANBINI",13,0)
 .D MES("One or more broker processes are currently running."),MES()
"RTN","CIANBINI",14,0)
 .I '$$ASK^CIAU("   Do you wish to continue the installation") S XPDABORT=2
"RTN","CIANBINI",15,0)
 .E  D:$L($T(+0^CIANBLIS)) STOPALL^CIANBLIS
"RTN","CIANBINI",16,0)
 .F X="XPI1","XPO1","XPZ1" S XPDDIQ(X)=0
"RTN","CIANBINI",17,0)
 .S XPDNOQUE=1
"RTN","CIANBINI",18,0)
 Q
"RTN","CIANBINI",19,0)
 ; Check if specified routine is installed
"RTN","CIANBINI",20,0)
RTNTST(RTN,VN,MSG) ;
"RTN","CIANBINI",21,0)
 D:$$RTNVER(RTN)<VN MES(MSG_" must be installed before proceeding.",2)
"RTN","CIANBINI",22,0)
 Q
"RTN","CIANBINI",23,0)
 ; Get version # for specified routine
"RTN","CIANBINI",24,0)
RTNVER(RTN) ;
"RTN","CIANBINI",25,0)
 Q $P($T(+2^@RTN),";",3)
"RTN","CIANBINI",26,0)
 ; Check patch #s for specified routine
"RTN","CIANBINI",27,0)
PATCH(RTN,PN,MSG) ;
"RTN","CIANBINI",28,0)
 N X,Y,L,F
"RTN","CIANBINI",29,0)
 F X=1:1:$L(PN,",") D
"RTN","CIANBINI",30,0)
 .S Y=$P(PN,",",X),F=0
"RTN","CIANBINI",31,0)
 .F L=2,3 D  Q:F
"RTN","CIANBINI",32,0)
 ..S F=$TR($P($T(+L^@RTN),";",5),"*",",")[(","_Y_",")
"RTN","CIANBINI",33,0)
 .D:'F MES(MSG_" patch #"_Y_" must be installed before proceeding.",2)
"RTN","CIANBINI",34,0)
 Q
"RTN","CIANBINI",35,0)
 ; Check binary version against M system
"RTN","CIANBINI",36,0)
OBJCHK ; EP
"RTN","CIANBINI",37,0)
 N VER,MSYS
"RTN","CIANBINI",38,0)
 D GETMSYS(.MSYS,.VER)
"RTN","CIANBINI",39,0)
 Q:'$D(MSYS)
"RTN","CIANBINI",40,0)
 I '$D(VER) D
"RTN","CIANBINI",41,0)
 .D MES("This package contains object code that is not supported on "_MSYS_" installations.",2)
"RTN","CIANBINI",42,0)
 E  I VER="" D
"RTN","CIANBINI",43,0)
 .D MES("This package does not contain object code for this version of "_MSYS_" installations.",2)
"RTN","CIANBINI",44,0)
 Q
"RTN","CIANBINI",45,0)
 ; Get M system type and target version
"RTN","CIANBINI",46,0)
GETMSYS(MSYS,VER) ;
"RTN","CIANBINI",47,0)
 K MSYS,VER
"RTN","CIANBINI",48,0)
 Q:'$D(@XPDGREF@("OBJ"))
"RTN","CIANBINI",49,0)
 S MSYS=$$UP^XLFSTR($P($$VERSION^%ZOSV(1)," ")),MSYS(0)=$S(MSYS="CACHE":1,MSYS="JUMPS":2,1:0)
"RTN","CIANBINI",50,0)
 Q:'$D(@XPDGREF@("OBJ",MSYS(0)))
"RTN","CIANBINI",51,0)
 S VER=$TR($$VERSION^%ZOSV()," ")
"RTN","CIANBINI",52,0)
 F  Q:'$L(VER)  Q:$D(@XPDGREF@("OBJ",MSYS(0),VER))  S VER=$P(VER,".",1,$L(VER,".")-1)
"RTN","CIANBINI",53,0)
 Q
"RTN","CIANBINI",54,0)
 ; Display message in MSG and optionally set quit flag to QUIT
"RTN","CIANBINI",55,0)
MES(MSG,QUIT) ;
"RTN","CIANBINI",56,0)
 D BMES^XPDUTL("  "_$G(MSG))
"RTN","CIANBINI",57,0)
 S:$G(QUIT) XPDQUIT=QUIT
"RTN","CIANBINI",58,0)
 Q
"RTN","CIANBINI",59,0)
 ; Pre-init
"RTN","CIANBINI",60,0)
PRE S @XPDGREF@("NEW")=$D(^CIANB)<10
"RTN","CIANBINI",61,0)
 D OBJINST
"RTN","CIANBINI",62,0)
 X $G(@XPDGREF@("INITIAL"))
"RTN","CIANBINI",63,0)
 Q
"RTN","CIANBINI",64,0)
 ; Post-init
"RTN","CIANBINI",65,0)
POST X ^%ZOSF("EON"),^%ZOSF("TRMOFF")
"RTN","CIANBINI",66,0)
 D CVT,DEFPAR
"RTN","CIANBINI",67,0)
 X $G(@XPDGREF@("FINAL"))
"RTN","CIANBINI",68,0)
 ;D:$G(@XPDGREF@("NEW")) TEDH^XPAREDIT("CIANB SITE PARAMETERS","BA")
"RTN","CIANBINI",69,0)
 D CLEANUP^CIANBUTL,STARTALL^CIANBLIS
"RTN","CIANBINI",70,0)
 K ^DIC(19941.24,0,"RD")
"RTN","CIANBINI",71,0)
 Q
"RTN","CIANBINI",72,0)
 ; Convert entries from old event file
"RTN","CIANBINI",73,0)
CVT N X,FN
"RTN","CIANBINI",74,0)
 S FN=19941.21
"RTN","CIANBINI",75,0)
 Q:$O(^CIANB(FN,0))!'$O(^CIAVEVT(0))
"RTN","CIANBINI",76,0)
 S X=$P(^CIANB(FN,0),U,1,2)
"RTN","CIANBINI",77,0)
 M ^CIANB(FN)=^CIAVEVT
"RTN","CIANBINI",78,0)
 S $P(^CIANB(FN,0),U,1,2)=X,X=0
"RTN","CIANBINI",79,0)
 F  S X=$O(^CIANB(FN,X)) Q:'X  D
"RTN","CIANBINI",80,0)
 .D CVTX(2,99,99)
"RTN","CIANBINI",81,0)
 .D CVTX(3,20,"2P")
"RTN","CIANBINI",82,0)
 Q
"RTN","CIANBINI",83,0)
 ; Move multiples to new nodes and fix sfn
"RTN","CIANBINI",84,0)
CVTX(NF,NT,SN) ;
"RTN","CIANBINI",85,0)
 M ^CIANB(FN,X,NT)=^CIANB(FN,X,NF)
"RTN","CIANBINI",86,0)
 K ^CIANB(FN,X,NF)
"RTN","CIANBINI",87,0)
 S $P(^CIANB(FN,X,NT,0),U,2)=FN_SN
"RTN","CIANBINI",88,0)
 Q
"RTN","CIANBINI",89,0)
 ; Initializes default parameter values.  Does not affect existing entries.
"RTN","CIANBINI",90,0)
DEFPAR N PAR,VAL,INST,LP,Y
"RTN","CIANBINI",91,0)
 D MES("Setting up default site parameters...")
"RTN","CIANBINI",92,0)
 F LP=0:0 S LP=$O(@XPDGREF@("PARAM",LP)) Q:'LP  K VAL M VAL=^(LP) D
"RTN","CIANBINI",93,0)
 .S Y=VAL,VAL=$$MSG^CIAU($P(Y,U,3,999),"|",0),PAR=$P(Y,U),INST=$$MSG^CIAU($P(Y,U,2),"|")
"RTN","CIANBINI",94,0)
 .D ADD^XPAR("SYS",PAR,INST,.VAL)
"RTN","CIANBINI",95,0)
 Q
"RTN","CIANBINI",96,0)
 ; Install routine binaries
"RTN","CIANBINI",97,0)
OBJINST ; EP
"RTN","CIANBINI",98,0)
 N MSYS,RTN,OBJ,SUB,GBL
"RTN","CIANBINI",99,0)
 D GETMSYS(.MSYS,.VER)
"RTN","CIANBINI",100,0)
 Q:'$D(MSYS)
"RTN","CIANBINI",101,0)
 Q:$D(@XPDGREF@("OBJ",MSYS(0)))<10
"RTN","CIANBINI",102,0)
 S RTN=""
"RTN","CIANBINI",103,0)
 D MES("Installing Routine Binaries...")
"RTN","CIANBINI",104,0)
 F  S RTN=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN)) Q:'$L(RTN)  D
"RTN","CIANBINI",105,0)
 .X "ZR  ZS @RTN"
"RTN","CIANBINI",106,0)
 .S OBJ="",SUB=0,GBL=$NA(@$S(MSYS(0)=1:"^rOBJ(RTN)",1:"^$R(RTN,""OBJECT"")"))
"RTN","CIANBINI",107,0)
 .F  S SUB=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN,SUB)) Q:'SUB  S OBJ=OBJ_^(SUB,0)
"RTN","CIANBINI",108,0)
 .S @GBL=$S(MSYS(0)=1:$$DECODE^CIAUUU(OBJ),1:OBJ)
"RTN","CIANBINI",109,0)
 .D MES("  "_RTN_" installed.")
"RTN","CIANBINI",110,0)
 Q
"RTN","CIANBLIS")
0^4^B80842455
"RTN","CIANBLIS",1,0)
CIANBLIS ;MSC/IND/DKM - MSC RPC Broker ;29-Jan-2015 12:27;DKM
"RTN","CIANBLIS",2,0)
 ;;1.3;CIA NETWORK COMPONENTS;;Sep 18, 2007;Build 173
"RTN","CIANBLIS",3,0)
 ;;Copyright 2000-2011, Medsphere Systems Corporation
"RTN","CIANBLIS",4,0)
 ;=================================================================
"RTN","CIANBLIS",5,0)
 ; Start listener process (primary and secondary)
"RTN","CIANBLIS",6,0)
 ;   CIAPORT = Listener port
"RTN","CIANBLIS",7,0)
 ;   CIAIP = IP address of client
"RTN","CIANBLIS",8,0)
 ;   CIAMODE = Connection type:
"RTN","CIANBLIS",9,0)
 ;     0: primary listener - dispatches connections
"RTN","CIANBLIS",10,0)
 ;     1: secondary listener - services individual clients
"RTN","CIANBLIS",11,0)
 ;     2: secondary listener - concurrent mode
"RTN","CIANBLIS",12,0)
 ;
"RTN","CIANBLIS",13,0)
EN(CIAPORT,CIAIP,CIAMODE) ;PEP - See above
"RTN","CIANBLIS",14,0)
 N CIAVER,CIAOS,CIATDEV,CIAQUIT,CIALN,CIAXUT,CIAUCI,CIARETRY,XWBOS,X,Y,$ET,$ES
"RTN","CIANBLIS",15,0)
 S U="^",CIAMODE=+$G(CIAMODE),CIAIP=$G(CIAIP),(CIAQUIT,CIARETRY)=0,CIAOS=$$GETOS
"RTN","CIANBLIS",16,0)
 D:'CIAOS RAISE(15,CIAOS)
"RTN","CIANBLIS",17,0)
 I CIAOS'=4 D
"RTN","CIANBLIS",18,0)
 .D UCI^%ZOSV
"RTN","CIANBLIS",19,0)
 .S CIAUCI=$P(Y,",")
"RTN","CIANBLIS",20,0)
 D MONSTART^CIANBEVT                                                   ; Start background event monitor if not already running
"RTN","CIANBLIS",21,0)
 S:'$G(CIAPORT) CIAPORT=9000                                           ; Default service port
"RTN","CIANBLIS",22,0)
 Q:'$$STATE(1)                                                         ; Quit if listener already running
"RTN","CIANBLIS",23,0)
 D CLEANUP,STSAVE(0),NULLOPEN,STSAVE(1)
"RTN","CIANBLIS",24,0)
 D:CIAMODE=1 LOGRSRC^%ZOSV("$BROKER HANDLER$",2,1)                     ; Start RUM for Broker Handler
"RTN","CIANBLIS",25,0)
 D CHPRN("CIA"_$S($L(CIAIP):$P(CIAIP,".",3,4)_":"_CIAPORT,1:CIAPORT))  ; Change process name
"RTN","CIANBLIS",26,0)
 D LISTEN                                                              ; Main loop
"RTN","CIANBLIS",27,0)
 D:CIAMODE=1 LOGRSRC^%ZOSV("$BROKER HANDLER$",2,2)                     ; Stop RUM for handler
"RTN","CIANBLIS",28,0)
 D:CIAQUIT>0!'CIAMODE STATE(0),STREST(1),^%ZISC,STREST(0),CLEANUP,LOGOUT^XUSRB:$G(DUZ)
"RTN","CIANBLIS",29,0)
 I 'CIAMODE,'CIAQUIT J EN^CIANBLIS(CIAPORT)                            ; Restart primary listener after fatal error
"RTN","CIANBLIS",30,0)
 Q
"RTN","CIANBLIS",31,0)
GETOS() N X,Y
"RTN","CIANBLIS",32,0)
 S Y=$P($G(^%ZOSF("OS")),U),X=0
"RTN","CIANBLIS",33,0)
 F XWBOS="DSM","MSM","OpenM","GT.M" S X=X+1 I Y[XWBOS S Y=X Q
"RTN","CIANBLIS",34,0)
 Q Y
"RTN","CIANBLIS",35,0)
 ; Entry point for interactive debugging
"RTN","CIANBLIS",36,0)
DEBUG N CIAPORT,CIAIP
"RTN","CIANBLIS",37,0)
 W !!,"Debug Mode Support",!!
"RTN","CIANBLIS",38,0)
 S CIAIP=$$PMPT("Addr","Enter callback IP address.","127.0.0.1")
"RTN","CIANBLIS",39,0)
 Q:U[CIAIP
"RTN","CIANBLIS",40,0)
 S CIAPORT=$$PMPT("Port","Enter callback port.")
"RTN","CIANBLIS",41,0)
 Q:U[CIAPORT
"RTN","CIANBLIS",42,0)
 I $L($T(^%Serenji)),$$ASK^CIAU("Use Serenji Debugger","Y") D  Q
"RTN","CIANBLIS",43,0)
 .N SRJIP,SRJPORT
"RTN","CIANBLIS",44,0)
 .S SRJIP=$$PMPT("Serenji Listener Addr","Enter Serenji listener address",CIAIP)
"RTN","CIANBLIS",45,0)
 .Q:U[SRJIP
"RTN","CIANBLIS",46,0)
 .S SRJPORT=$$PMPT("Serenji Listener Port","Enter Serenji listener port",4321)
"RTN","CIANBLIS",47,0)
 .Q:U[SRJPORT
"RTN","CIANBLIS",48,0)
 .D DEBUG^%Serenji("EN^CIANBLIS(CIAPORT,CIAIP,1)",SRJIP,SRJPORT)
"RTN","CIANBLIS",49,0)
 W !
"RTN","CIANBLIS",50,0)
 D EN(CIAPORT,CIAIP,1)
"RTN","CIANBLIS",51,0)
 Q
"RTN","CIANBLIS",52,0)
PMPT(PMPT,HELP,DFLT) ;
"RTN","CIANBLIS",53,0)
 N RET
"RTN","CIANBLIS",54,0)
PMPTX W PMPT,": ",$S($D(DFLT):DFLT_"// ",1:"")
"RTN","CIANBLIS",55,0)
 R RET:$G(DTIME,30)
"RTN","CIANBLIS",56,0)
 E  S RET=U
"RTN","CIANBLIS",57,0)
 I $D(DFLT),'$L(RET) S RET=DFLT W DFLT
"RTN","CIANBLIS",58,0)
 W !
"RTN","CIANBLIS",59,0)
 I RET["?" W !,HELP,!! G PMPTX
"RTN","CIANBLIS",60,0)
 Q RET
"RTN","CIANBLIS",61,0)
 ; Entry point for MSERVER process (MSM only)
"RTN","CIANBLIS",62,0)
MSERVER D EN(%("PORT"),%("ADDRESS"),2)
"RTN","CIANBLIS",63,0)
 Q
"RTN","CIANBLIS",64,0)
 ; Entry point for GTM process (GTM only)
"RTN","CIANBLIS",65,0)
GSERVER N X,Y,Z
"RTN","CIANBLIS",66,0)
 ZSHOW "D":X
"RTN","CIANBLIS",67,0)
 F Y=0:0 S Y=$O(X("D",Y)) Q:'Y  S Z=$P($P(X("D",Y),"REMOTE=",2)," ") Q:$L(Z)
"RTN","CIANBLIS",68,0)
 D EN($P(Z,"@",2),$P(Z,"@"),2)
"RTN","CIANBLIS",69,0)
 Q
"RTN","CIANBLIS",70,0)
 ; Entry point for UCX process (DSM only)
"RTN","CIANBLIS",71,0)
USERVER D EN($P(%,":",2),$P(%,":"),2)
"RTN","CIANBLIS",72,0)
 Q
"RTN","CIANBLIS",73,0)
 ; Start primary listener
"RTN","CIANBLIS",74,0)
START(CIAPORT) ;EP
"RTN","CIANBLIS",75,0)
 D SSLIS(,CIAPORT,,1),CLEANUP^CIANBUTL
"RTN","CIANBLIS",76,0)
 Q
"RTN","CIANBLIS",77,0)
 ; Stop primary or secondary listener
"RTN","CIANBLIS",78,0)
STOP(CIAPORT,CIAIP) ;EP
"RTN","CIANBLIS",79,0)
 D SSLIS(.CIAIP,CIAPORT,,0)
"RTN","CIANBLIS",80,0)
 Q
"RTN","CIANBLIS",81,0)
 ; Start all primary listeners
"RTN","CIANBLIS",82,0)
STARTALL ;PEP - see above
"RTN","CIANBLIS",83,0)
 D SSALL(1)
"RTN","CIANBLIS",84,0)
 Q
"RTN","CIANBLIS",85,0)
 ; Stop all primary listeners
"RTN","CIANBLIS",86,0)
STOPALL ;PEP - see above
"RTN","CIANBLIS",87,0)
 D SSALL(0)
"RTN","CIANBLIS",88,0)
 Q
"RTN","CIANBLIS",89,0)
 ; Restart all primary listeners
"RTN","CIANBLIS",90,0)
RESTART ; PEP - see above
"RTN","CIANBLIS",91,0)
 D STOPALL,STARTALL
"RTN","CIANBLIS",92,0)
 Q
"RTN","CIANBLIS",93,0)
 ; Start/stop all registered listeners
"RTN","CIANBLIS",94,0)
SSALL(SS,SL) ;
"RTN","CIANBLIS",95,0)
 Q:$$GETOS=4
"RTN","CIANBLIS",96,0)
 N IEN,X
"RTN","CIANBLIS",97,0)
 S SL=$G(SL,$D(ZTQUEUED)),U="^"
"RTN","CIANBLIS",98,0)
 F IEN=0:0 S IEN=$O(^CIANB(19941.22,IEN)) Q:'IEN  S X=^(IEN,0) D
"RTN","CIANBLIS",99,0)
 .I SS,$P(X,U,3) Q
"RTN","CIANBLIS",100,0)
 .W:'SL !,$P(X,U),": "
"RTN","CIANBLIS",101,0)
 .D SSLIS(,$P(X,U,2),$P(X,U,4),SS,SL)
"RTN","CIANBLIS",102,0)
 Q
"RTN","CIANBLIS",103,0)
 ; Start/stop primary listener
"RTN","CIANBLIS",104,0)
SSLIS(CIAIP,CIAPORT,CIAUCI,SS,SL) ;
"RTN","CIANBLIS",105,0)
 N CIALN,X,P1,P2,$ET
"RTN","CIANBLIS",106,0)
 S SL=$G(SL,$D(ZTQUEUED))
"RTN","CIANBLIS",107,0)
 S:'SL $ET="D SSERR^CIANBLIS"
"RTN","CIANBLIS",108,0)
 S P1=$S(SS:"start",1:"stop"),P2=P1_$S(SS:"ed",1:"ped")
"RTN","CIANBLIS",109,0)
 I $$STATE=SS W:'SL "Listener ",$S(SS:"already",1:"not")," running on port ",CIAPORT,!! Q
"RTN","CIANBLIS",110,0)
 I 'SS S @$$LOCKNODE=1
"RTN","CIANBLIS",111,0)
 E  I $L($G(CIAUCI)) D
"RTN","CIANBLIS",112,0)
 .X "J EN^CIANBLIS(CIAPORT)[CIAUCI]"
"RTN","CIANBLIS",113,0)
 E  J EN^CIANBLIS(CIAPORT)
"RTN","CIANBLIS",114,0)
 Q:SL
"RTN","CIANBLIS",115,0)
 W "Waiting for listener to ",P1,"..."
"RTN","CIANBLIS",116,0)
 F X=1:1:5 D
"RTN","CIANBLIS",117,0)
 .H 2
"RTN","CIANBLIS",118,0)
 .W "."
"RTN","CIANBLIS",119,0)
 .S:$$STATE=SS X=99
"RTN","CIANBLIS",120,0)
 I X<99 W "Listener failed to ",P1,!
"RTN","CIANBLIS",121,0)
 E  W "Listener ",P2," on port ",CIAPORT,!
"RTN","CIANBLIS",122,0)
 Q
"RTN","CIANBLIS",123,0)
SSERR W:'$G(SL) "Listener failed to ",P1,": ",$$EC^%ZOSV,!
"RTN","CIANBLIS",124,0)
 S $ET="D UNWIND^%ZTER"
"RTN","CIANBLIS",125,0)
 Q
"RTN","CIANBLIS",126,0)
 ; Main loop
"RTN","CIANBLIS",127,0)
LISTEN N $ET,$ES
"RTN","CIANBLIS",128,0)
 S $ET="D ETRAP1^CIANBLIS",CIARETRY=0,CIAQUIT='$$TCPOPEN
"RTN","CIANBLIS",129,0)
 F  Q:$$QUIT  D
"RTN","CIANBLIS",130,0)
 .N $ET,$ES
"RTN","CIANBLIS",131,0)
 .S:$$DOACTION($S(CIAMODE=2&(CIAOS'=3):"C",CIAMODE:"DPQRSU",1:"C")) CIARETRY=0
"RTN","CIANBLIS",132,0)
 D TCPCLOSE
"RTN","CIANBLIS",133,0)
 Q
"RTN","CIANBLIS",134,0)
 ; Read action and params
"RTN","CIANBLIS",135,0)
 ;  VAC = List of valid action codes
"RTN","CIANBLIS",136,0)
 ; Returns true if valid inputs
"RTN","CIANBLIS",137,0)
DOACTION(VAC) ;
"RTN","CIANBLIS",138,0)
 N NM,SB,RT,VL,PR,CIA,ACT,SEQ,ARG,CIAERR,CIADATA,X
"RTN","CIANBLIS",139,0)
 S CIAERR(0)=0
"RTN","CIANBLIS",140,0)
 D TCPUSE
"RTN","CIANBLIS",141,0)
 S X=$$TCPREAD(8,10)
"RTN","CIANBLIS",142,0)
 Q:$E(X,1,5)'="{CIA}" 0
"RTN","CIANBLIS",143,0)
 S ARG=0,CIA("EOD")=$E(X,6),SEQ=$E(X,7),ACT=$E(X,8)
"RTN","CIANBLIS",144,0)
 F  S NM=$$TCPREADL Q:'$L(NM)  S PR=NM=+NM,RT=$S(PR:"P"_NM,1:"CIA("""_NM_"""") N:PR&'$D(ARG(NM)) @RT D
"RTN","CIANBLIS",145,0)
 .S:PR ARG=$S(NM>ARG:NM,1:ARG),ARG(NM)=""
"RTN","CIANBLIS",146,0)
 .S SB=$$TCPREADL,VL=$$TCPREADL
"RTN","CIANBLIS",147,0)
 .I $L(SB) S RT=RT_$S(PR:"(",1:",")_SB_")"
"RTN","CIANBLIS",148,0)
 .E  S:'PR RT=RT_")"
"RTN","CIANBLIS",149,0)
 .S @RT=VL
"RTN","CIANBLIS",150,0)
 W SEQ
"RTN","CIANBLIS",151,0)
 I '$$ERRCHK^CIANBACT(VAC'[ACT,9,ACT) D
"RTN","CIANBLIS",152,0)
 .N $ET,$ES
"RTN","CIANBLIS",153,0)
 .S $ET="D ETRAP2^CIANBLIS"
"RTN","CIANBLIS",154,0)
 .D @("ACT"_ACT_"^CIANBACT")
"RTN","CIANBLIS",155,0)
 I CIAERR(0) D
"RTN","CIANBLIS",156,0)
 .D SNDERR
"RTN","CIANBLIS",157,0)
 E  I $D(CIADATA) D
"RTN","CIANBLIS",158,0)
 .D REPLY(.CIADATA)
"RTN","CIANBLIS",159,0)
 E  D SNDEOD
"RTN","CIANBLIS",160,0)
 D:'CIAMODE TCPREL
"RTN","CIANBLIS",161,0)
 Q 1
"RTN","CIANBLIS",162,0)
 ; Cleanup environment
"RTN","CIANBLIS",163,0)
CLEANUP K ^TMP("CIANBRPC",$J),^TMP("CIANBLIS",$J),^XUTL("XQ",$J),@$$LOCKNODE
"RTN","CIANBLIS",164,0)
 Q
"RTN","CIANBLIS",165,0)
 ; Returns true if listener should quit
"RTN","CIANBLIS",166,0)
QUIT() S:'CIAQUIT CIAQUIT=+$G(@$$LOCKNODE)
"RTN","CIANBLIS",167,0)
 Q CIARETRY>5!CIAQUIT
"RTN","CIANBLIS",168,0)
 ; Save application state
"RTN","CIANBLIS",169,0)
STSAVE(ST) ;
"RTN","CIANBLIS",170,0)
 D SAVE^XUS1
"RTN","CIANBLIS",171,0)
 K ^TMP("CIANBLIS",$J,ST)
"RTN","CIANBLIS",172,0)
 M ^TMP("CIANBLIS",$J,ST)=^XUTL("XQ",$J)
"RTN","CIANBLIS",173,0)
 Q
"RTN","CIANBLIS",174,0)
 ; Restore application state
"RTN","CIANBLIS",175,0)
STREST(ST) ;
"RTN","CIANBLIS",176,0)
 K ^XUTL("XQ",$J)
"RTN","CIANBLIS",177,0)
 M ^XUTL("XQ",$J)=^TMP("CIANBLIS",$J,ST)
"RTN","CIANBLIS",178,0)
 K IO
"RTN","CIANBLIS",179,0)
 D RESETVAR^%ZIS
"RTN","CIANBLIS",180,0)
 I ST,$D(IO)#2 D
"RTN","CIANBLIS",181,0)
 .N $ET
"RTN","CIANBLIS",182,0)
 .S $ET="S $EC="""" D NULLOPEN^CIANBLIS"
"RTN","CIANBLIS",183,0)
 .U IO
"RTN","CIANBLIS",184,0)
 Q
"RTN","CIANBLIS",185,0)
 ; Establish null device as default IO device
"RTN","CIANBLIS",186,0)
NULLOPEN N %ZIS,IOP,POP
"RTN","CIANBLIS",187,0)
 S %ZIS="0H",IOP="NULL"
"RTN","CIANBLIS",188,0)
 D ^%ZIS,RAISE(16):POP
"RTN","CIANBLIS",189,0)
 U IO
"RTN","CIANBLIS",190,0)
 Q
"RTN","CIANBLIS",191,0)
 ; Open TCP listener port
"RTN","CIANBLIS",192,0)
 ; Returns true if successful
"RTN","CIANBLIS",193,0)
TCPOPEN() ;
"RTN","CIANBLIS",194,0)
 N POP
"RTN","CIANBLIS",195,0)
 S POP=0
"RTN","CIANBLIS",196,0)
 I CIAMODE=2 D
"RTN","CIANBLIS",197,0)
 .S CIATDEV=$S(CIAOS=1:"SYS$NET",CIAOS=2:56,1:$P)
"RTN","CIANBLIS",198,0)
 .I CIAOS=1 X "O CIATDEV:TCPDEV:5 S POP='$T"
"RTN","CIANBLIS",199,0)
 .I CIAOS=4 D
"RTN","CIANBLIS",200,0)
 ..S @"$ZINTERRUPT=""I $$JOBEXAM^ZU($ZPOSITION)""",IO("GTM-IP")=CIAIP
"RTN","CIANBLIS",201,0)
 ..X "U CIATDEV:(nowrap:nodelimiter:ioerror=""ETRAP1^CIANBLIS"")" Q
"RTN","CIANBLIS",202,0)
 I CIAMODE=1 D
"RTN","CIANBLIS",203,0)
 .D CALL^%ZISTCP(CIAIP,CIAPORT)
"RTN","CIANBLIS",204,0)
 .Q:POP
"RTN","CIANBLIS",205,0)
 .S CIATDEV=IO,IO(0)=IO
"RTN","CIANBLIS",206,0)
 .D:$T(SHARELIC^%ZOSV)'="" SHARELIC^%ZOSV(1)
"RTN","CIANBLIS",207,0)
 I 'CIAMODE D
"RTN","CIANBLIS",208,0)
 .I CIAOS=1 D
"RTN","CIANBLIS",209,0)
 ..S CIATDEV=CIAPORT
"RTN","CIANBLIS",210,0)
 ..X "O CIATDEV:TCPCHAN:5"
"RTN","CIANBLIS",211,0)
 ..S POP='$T
"RTN","CIANBLIS",212,0)
 .I CIAOS=2 S CIATDEV=56
"RTN","CIANBLIS",213,0)
 .I CIAOS=3 D
"RTN","CIANBLIS",214,0)
 ..S CIATDEV="|TCP|"_CIAPORT
"RTN","CIANBLIS",215,0)
 ..X "O CIATDEV:(:CIAPORT:""DS""):5"
"RTN","CIANBLIS",216,0)
 ..S POP='$T
"RTN","CIANBLIS",217,0)
 Q 'POP
"RTN","CIANBLIS",218,0)
 ; Use TCP listener port
"RTN","CIANBLIS",219,0)
TCPUSE I CIAOS=1 U CIATDEV Q
"RTN","CIANBLIS",220,0)
 I CIAOS=2 D  Q
"RTN","CIANBLIS",221,0)
 .I CIAMODE U CIATDEV S:$ZC CIAQUIT=1 Q
"RTN","CIANBLIS",222,0)
 .O CIATDEV
"RTN","CIANBLIS",223,0)
 .X "U CIATDEV::""TCP"""
"RTN","CIANBLIS",224,0)
 .X "W /SOCKET("""",CIAPORT)"
"RTN","CIANBLIS",225,0)
 I CIAOS=3 U CIATDEV Q
"RTN","CIANBLIS",226,0)
 I CIAOS=4 U CIATDEV Q
"RTN","CIANBLIS",227,0)
 Q
"RTN","CIANBLIS",228,0)
 ; Close TCP listener port
"RTN","CIANBLIS",229,0)
TCPCLOSE C:$D(CIATDEV) CIATDEV
"RTN","CIANBLIS",230,0)
 Q
"RTN","CIANBLIS",231,0)
 ; Release TCP port
"RTN","CIANBLIS",232,0)
TCPREL I CIAOS=1 X "U CIATDEV:DISCONNECT" Q
"RTN","CIANBLIS",233,0)
 I CIAOS=2 C CIATDEV Q
"RTN","CIANBLIS",234,0)
 I CIAOS=3 W *-3,*-2
"RTN","CIANBLIS",235,0)
 Q
"RTN","CIANBLIS",236,0)
 ; Read from listener port
"RTN","CIANBLIS",237,0)
TCPREAD(CNT,TMO) ;
"RTN","CIANBLIS",238,0)
 N X,Y
"RTN","CIANBLIS",239,0)
 S Y="",TMO=$G(TMO,60)
"RTN","CIANBLIS",240,0)
 F  Q:CNT'>0  D
"RTN","CIANBLIS",241,0)
 .R X#CNT:TMO
"RTN","CIANBLIS",242,0)
 .I '$L(X) S Y="",CNT=0 S:CIAMODE=2 CIARETRY=CIARETRY+.5
"RTN","CIANBLIS",243,0)
 .E  S Y=Y_X,CNT=CNT-$L(X)
"RTN","CIANBLIS",244,0)
 Q Y
"RTN","CIANBLIS",245,0)
 ; Read byte from listener port
"RTN","CIANBLIS",246,0)
TCPREADB() ;
"RTN","CIANBLIS",247,0)
 Q $A($$TCPREAD(1))
"RTN","CIANBLIS",248,0)
 ; Read length-prefixed data from input stream
"RTN","CIANBLIS",249,0)
TCPREADL() ;
"RTN","CIANBLIS",250,0)
 N X,L,I,N
"RTN","CIANBLIS",251,0)
 S X=$$TCPREADB
"RTN","CIANBLIS",252,0)
 Q:$C(X)=CIA("EOD") ""
"RTN","CIANBLIS",253,0)
 S N=X#16,X=$$TCPREAD(X\16),L=0
"RTN","CIANBLIS",254,0)
 F I=1:1:$L(X) S L=L*256+$A(X,I)
"RTN","CIANBLIS",255,0)
 Q $$TCPREAD(L*16+N)
"RTN","CIANBLIS",256,0)
 ; Write data to socket
"RTN","CIANBLIS",257,0)
TCPWRITE(DATA,EOD) ;
"RTN","CIANBLIS",258,0)
 D TCPUSE
"RTN","CIANBLIS",259,0)
 S DATA=$G(DATA)_$S($G(EOD):$$CTL("EOD"),1:"")
"RTN","CIANBLIS",260,0)
 W:$L(DATA) DATA,!
"RTN","CIANBLIS",261,0)
 Q
"RTN","CIANBLIS",262,0)
 ; Write array (local or global) to TCP stream
"RTN","CIANBLIS",263,0)
ARYOUT(ARY,EOL) ;
"RTN","CIANBLIS",264,0)
 N X,L,K
"RTN","CIANBLIS",265,0)
 S K=$E(ARY)'="~"
"RTN","CIANBLIS",266,0)
 S:'K ARY=$E(ARY,2,999)
"RTN","CIANBLIS",267,0)
 Q:'$L(ARY)
"RTN","CIANBLIS",268,0)
 S ARY=$NA(@ARY)
"RTN","CIANBLIS",269,0)
 S X=ARY,L=$QL(ARY),EOL=$S($G(EOL):$C(13),1:"")
"RTN","CIANBLIS",270,0)
 F  S X=$Q(@X) Q:'$L(X)  Q:$NA(@X,L)'=ARY  D TCPWRITE(@X_EOL)
"RTN","CIANBLIS",271,0)
 K:K @ARY
"RTN","CIANBLIS",272,0)
 Q
"RTN","CIANBLIS",273,0)
 ; Write contents of HFS to TCP stream
"RTN","CIANBLIS",274,0)
HFSOUT(HFS,EOL) ;
"RTN","CIANBLIS",275,0)
 N X
"RTN","CIANBLIS",276,0)
 S EOL=$S($G(EOL):$C(13),1:"")
"RTN","CIANBLIS",277,0)
 D OPEN^CIAUOS(.HFS,"R")
"RTN","CIANBLIS",278,0)
 F  Q:$$READ^CIAUOS(.X,HFS)  D TCPWRITE(X_EOL)
"RTN","CIANBLIS",279,0)
 D CLOSE^CIAUOS(.HFS),DELETE^CIAUOS(HFS)
"RTN","CIANBLIS",280,0)
 Q
"RTN","CIANBLIS",281,0)
 ; Raise an exception
"RTN","CIANBLIS",282,0)
RAISE(MSG,P1,P2) ;
"RTN","CIANBLIS",283,0)
 D GETDLG^CIANBUTL(MSG,.MSG,.P1,.P2)
"RTN","CIANBLIS",284,0)
 S $EC=MSG(1)
"RTN","CIANBLIS",285,0)
 Q
"RTN","CIANBLIS",286,0)
 ; Communication error
"RTN","CIANBLIS",287,0)
ETRAP1 N ECSAV
"RTN","CIANBLIS",288,0)
 S $ET="D UNWIND^CIANBLIS Q:$Q 0 Q",ECSAV=$EC,CIARETRY=CIARETRY+1
"RTN","CIANBLIS",289,0)
 D:CIARETRY=1&(ECSAV'["READ"!(ECSAV'["Z150376602")) ^%ZTER             ; VEN/SMH - add GT.M READ error code.
"RTN","CIANBLIS",290,0)
 S $EC=ECSAV
"RTN","CIANBLIS",291,0)
 Q
"RTN","CIANBLIS",292,0)
 ; Unwind stack
"RTN","CIANBLIS",293,0)
UNWIND Q:$ES>1
"RTN","CIANBLIS",294,0)
 S $EC=""
"RTN","CIANBLIS",295,0)
 Q
"RTN","CIANBLIS",296,0)
 ; Trapped error, send error info to client
"RTN","CIANBLIS",297,0)
ETRAP2 N ECSAV
"RTN","CIANBLIS",298,0)
 S $ET="D UNWIND^CIANBLIS Q:$Q 0 Q",ECSAV=$$EC^%ZOSV,CIARETRY=CIARETRY+1
"RTN","CIANBLIS",299,0)
 D:CIARETRY=1 ^%ZTER,ERRCHK^CIANBACT(1,1,ECSAV)
"RTN","CIANBLIS",300,0)
 S $EC=ECSAV
"RTN","CIANBLIS",301,0)
 Q
"RTN","CIANBLIS",302,0)
 ; Send a reply
"RTN","CIANBLIS",303,0)
REPLY(DATA,ACK) ;
"RTN","CIANBLIS",304,0)
 N MORE
"RTN","CIANBLIS",305,0)
 S MORE=$D(DATA)\10
"RTN","CIANBLIS",306,0)
 D TCPWRITE($C(+$G(ACK))_$G(DATA)_$S(MORE:$C(13),1:""),'MORE)
"RTN","CIANBLIS",307,0)
 D:MORE ARYOUT("DATA",1),SNDEOD
"RTN","CIANBLIS",308,0)
 K DATA
"RTN","CIANBLIS",309,0)
 Q
"RTN","CIANBLIS",310,0)
 ; Send error information
"RTN","CIANBLIS",311,0)
SNDERR N X
"RTN","CIANBLIS",312,0)
 D TCPUSE
"RTN","CIANBLIS",313,0)
 W $C(1)
"RTN","CIANBLIS",314,0)
 D ARYOUT("CIAERR",1),SNDEOD
"RTN","CIANBLIS",315,0)
 S CIAERR(0)=0
"RTN","CIANBLIS",316,0)
 Q
"RTN","CIANBLIS",317,0)
SNDEOD D TCPWRITE(,1)
"RTN","CIANBLIS",318,0)
 Q
"RTN","CIANBLIS",319,0)
 ; Return control byte
"RTN","CIANBLIS",320,0)
CTL(X) I $D(CIA(X)) N Y S Y=CIA(X) K CIA(X) Q Y
"RTN","CIANBLIS",321,0)
 Q ""
"RTN","CIANBLIS",322,0)
 ; Lock/Unlock listener
"RTN","CIANBLIS",323,0)
 ; CIAACT:  1 = lock, 0 = unlock, missing = return status
"RTN","CIANBLIS",324,0)
 ; Returns true if locked, false if not.
"RTN","CIANBLIS",325,0)
STATE(CIAACT) ;
"RTN","CIANBLIS",326,0)
 N RES,Y
"RTN","CIANBLIS",327,0)
 S Y=$$LOCKNODE
"RTN","CIANBLIS",328,0)
 I '$D(CIAACT) D
"RTN","CIANBLIS",329,0)
 .L +@Y:0
"RTN","CIANBLIS",330,0)
 .S RES='$T
"RTN","CIANBLIS",331,0)
 .L:'RES -@Y
"RTN","CIANBLIS",332,0)
 E  I CIAACT D
"RTN","CIANBLIS",333,0)
 .L +@Y:1
"RTN","CIANBLIS",334,0)
 .S RES=$T
"RTN","CIANBLIS",335,0)
 E  D
"RTN","CIANBLIS",336,0)
 .L -@Y
"RTN","CIANBLIS",337,0)
 .S RES=0
"RTN","CIANBLIS",338,0)
 Q:$Q RES
"RTN","CIANBLIS",339,0)
 Q
"RTN","CIANBLIS",340,0)
 ; Get global reference for lock node
"RTN","CIANBLIS",341,0)
LOCKNODE(LN) ;
"RTN","CIANBLIS",342,0)
 S:'$D(LN) LN=$NA(^[$G(CIAUCI)]XTMP("CIANBLIS",$G(CIAIP)_":"_CIAPORT_$S($G(CIAMODE)=2:":"_$J,1:"")))
"RTN","CIANBLIS",343,0)
 Q:$Q LN
"RTN","CIANBLIS",344,0)
 Q
"RTN","CIANBLIS",345,0)
 ; Change process name to X
"RTN","CIANBLIS",346,0)
CHPRN(X) D SETNM^%ZOSV($E(X,1,15))
"RTN","CIANBLIS",347,0)
 Q
"RTN","CIANBLOG")
0^7^B10435539
"RTN","CIANBLOG",1,0)
CIANBLOG ;MSC/IND/DKM - MSC RPC Broker Activity Log Support ;26-Jan-2015 14:18;DKM
"RTN","CIANBLOG",2,0)
 ;;1.3;CIA NETWORK COMPONENTS;;Jan 3, 2008;Build 173
"RTN","CIANBLOG",3,0)
 ;;Copyright 2000-2008, Medsphere Systems Corporation
"RTN","CIANBLOG",4,0)
 ;=================================================================
"RTN","CIANBLOG",5,0)
 ; Open a log entry.  The return value is the IEN of the new entry.
"RTN","CIANBLOG",6,0)
 ;   UID  = Unique session id
"RTN","CIANBLOG",7,0)
 ;   USER = User IEN
"RTN","CIANBLOG",8,0)
 ;   WID  = Workstation id
"RTN","CIANBLOG",9,0)
OPEN(UID,USER,WID) ;EP
"RTN","CIANBLOG",10,0)
 N IEN,NOW,X
"RTN","CIANBLOG",11,0)
 S NOW=$$NOW^XLFDT
"RTN","CIANBLOG",12,0)
 S:$G(WID)="" WID="UNKNOWN"
"RTN","CIANBLOG",13,0)
 L +^CIANB(19941.24,0):2
"RTN","CIANBLOG",14,0)
 S X=1+$P(^CIANB(19941.24,0),U,3),IEN=$O(^($C(1)),-1)+1,$P(^(0),U,3,4)=X_U_IEN,^(IEN,0)=UID_U_USER_U_WID_U_NOW_U_U_DUZ(2)
"RTN","CIANBLOG",15,0)
 L -^CIANB(19941.24,0)
"RTN","CIANBLOG",16,0)
 S ^CIANB(19941.24,"B",UID,IEN)=""
"RTN","CIANBLOG",17,0)
 S ^CIANB(19941.24,"BUSER",USER,IEN)=""
"RTN","CIANBLOG",18,0)
 S ^CIANB(19941.24,"BWID",WID,IEN)=""
"RTN","CIANBLOG",19,0)
 S ^CIANB(19941.24,"BLOGIN",NOW,IEN)=""
"RTN","CIANBLOG",20,0)
 S ^CIANB(19941.24,"BDIV",DUZ(2),IEN)=""
"RTN","CIANBLOG",21,0)
 Q IEN
"RTN","CIANBLOG",22,0)
 ; Close a log entry.
"RTN","CIANBLOG",23,0)
 ;  IEN = IEN of the entry.
"RTN","CIANBLOG",24,0)
CLOSE(IEN) ;EP
"RTN","CIANBLOG",25,0)
 N NOW
"RTN","CIANBLOG",26,0)
 S NOW=$$NOW^XLFDT
"RTN","CIANBLOG",27,0)
 S:$D(^CIANB(19941.24,+IEN,0)) $P(^(0),U,5)=NOW,^CIANB(19941.24,"BLOGOUT",NOW,IEN)=""
"RTN","CIANBLOG",28,0)
 Q
"RTN","CIANBLOG",29,0)
 ; Log an activity
"RTN","CIANBLOG",30,0)
 ;  IEN  = IEN of log entry
"RTN","CIANBLOG",31,0)
 ;  TYPE = Type of log entry (1=RPC, 2=Event)
"RTN","CIANBLOG",32,0)
 ;  NAME = Text name associated with activity
"RTN","CIANBLOG",33,0)
 ;  Returns subfile IEN
"RTN","CIANBLOG",34,0)
LOG(IEN,TYPE,NAME) ;EP
"RTN","CIANBLOG",35,0)
 N SUB,NOW
"RTN","CIANBLOG",36,0)
 Q:'$D(^CIANB(19941.24,IEN)) 0
"RTN","CIANBLOG",37,0)
 S NOW=$$NOW^XLFDT
"RTN","CIANBLOG",38,0)
 S SUB=$O(^CIANB(19941.24,IEN,10,$C(1)),-1)+1,^(0)="^19941.241D^"_SUB_U_SUB,^(SUB,0)=NOW_U_TYPE_U_NAME
"RTN","CIANBLOG",39,0)
 Q SUB
"RTN","CIANBLOG",40,0)
 ; Add an entry to the specified activity
"RTN","CIANBLOG",41,0)
 ;  IEN = IEN of log entry
"RTN","CIANBLOG",42,0)
 ;  SUB = IEN of subfile entry
"RTN","CIANBLOG",43,0)
 ;  ARY = Array or global root
"RTN","CIANBLOG",44,0)
 ;  INC = Include variable name with output (optional)
"RTN","CIANBLOG",45,0)
ADD(IEN,SUB,ARY,INC) ;EP
"RTN","CIANBLOG",46,0)
 N ROOT,WP,A,L,P,X,Y,Z
"RTN","CIANBLOG",47,0)
 S ROOT=$NA(^CIANB(19941.24,IEN,10,SUB,10))
"RTN","CIANBLOG",48,0)
 S WP=$O(@ROOT@($C(1)),-1),WP(0)=WP,INC=+$G(INC),(A,ARY)=$NA(@ARY),L=$QL(ARY)
"RTN","CIANBLOG",49,0)
 F  D:$D(@A)#2  S A=$Q(@A) Q:'$L(A)  Q:$NA(@A,L)'=ARY
"RTN","CIANBLOG",50,0)
 .S X=@A,P=$S(INC:A_" = ",1:"")
"RTN","CIANBLOG",51,0)
 .F  Q:'$L(X)  D
"RTN","CIANBLOG",52,0)
 ..S Y=$F(X,$C(13))
"RTN","CIANBLOG",53,0)
 ..S:'Y!(Y>200) Y=200
"RTN","CIANBLOG",54,0)
 ..S Z=$TR($E(X,1,Y-1),$C(13,10)),X=$E(X,Y,999999)
"RTN","CIANBLOG",55,0)
 ..S WP=WP+1,@ROOT@(WP,0)=P_Z,P=$S(INC:">>> ",1:"")
"RTN","CIANBLOG",56,0)
 S:WP'=WP(0) @ROOT@(0)="^^"_WP_U_WP_U_$$NOW^XLFDT
"RTN","CIANBLOG",57,0)
 Q
"RTN","CIANBLOG",58,0)
 ; Delete a log entry
"RTN","CIANBLOG",59,0)
DELETE(DA) ;
"RTN","CIANBLOG",60,0)
 Q:'$D(^CIANB(19941.24,DA))
"RTN","CIANBLOG",61,0)
 N DIK
"RTN","CIANBLOG",62,0)
 S DIK="^CIANB(19941.24,"
"RTN","CIANBLOG",63,0)
 D ^DIK
"RTN","CIANBLOG",64,0)
 Q
"RTN","CIANBLOG",65,0)
 ; Task purge in background
"RTN","CIANBLOG",66,0)
TASKPRG N ZTSK
"RTN","CIANBLOG",67,0)
 S ZTSK=$$QUEUE^CIAUTSK("DOPURGE^CIANBLOG","Purge CIA ACTIVITY LOG")
"RTN","CIANBLOG",68,0)
 I ZTSK>0 W !,"CIA ACTIVITY LOG purge submitted as task #",ZTSK,!!
"RTN","CIANBLOG",69,0)
 E  W !,"Error submitting CIA ACTIVITY LOG purge.",!!
"RTN","CIANBLOG",70,0)
 Q
"RTN","CIANBLOG",71,0)
 ; Purge log entries according to retention criteria
"RTN","CIANBLOG",72,0)
DOPURGE N DAYS,LP,IEN
"RTN","CIANBLOG",73,0)
 S DAYS=$$GET^XPAR("ALL","CIANB ACTIVITY RETENTION")
"RTN","CIANBLOG",74,0)
 Q:'DAYS
"RTN","CIANBLOG",75,0)
 S LP=$$FMADD^XLFDT(DT,-DAYS)
"RTN","CIANBLOG",76,0)
 F  S LP=$O(^CIANB(19941.24,"BLOGIN",LP),-1) Q:'LP  D
"RTN","CIANBLOG",77,0)
 .S IEN=0
"RTN","CIANBLOG",78,0)
 .F  S IEN=$O(^CIANB(19941.24,"BLOGIN",LP,IEN)) Q:'IEN  D
"RTN","CIANBLOG",79,0)
 ..D DELETE(IEN)
"RTN","CIANBLOG",80,0)
 Q
"RTN","CIANBLOG",81,0)
 ; Returns true if activity logging is active
"RTN","CIANBLOG",82,0)
 ; Creates a log entry if one does not already exist
"RTN","CIANBLOG",83,0)
ISACTIVE() ;
"RTN","CIANBLOG",84,0)
 N RTN,DUZ2
"RTN","CIANBLOG",85,0)
 Q:'$D(CIA("UID")) 0
"RTN","CIANBLOG",86,0)
 Q:'CIA("UID") 0
"RTN","CIANBLOG",87,0)
 S DUZ2=$$GETVAR^CIANBUTL("DUZ2")
"RTN","CIANBLOG",88,0)
 S RTN=$$GETVAR^CIANBUTL("ALOG"_$S(DUZ2:":"_DUZ2,1:""))
"RTN","CIANBLOG",89,0)
 I RTN="" D
"RTN","CIANBLOG",90,0)
 .S RTN=+$$GET^XPAR("ALL","CIANB ACTIVITY LOGGING","`"_$$GETVAR^CIANBUTL("AID0"))
"RTN","CIANBLOG",91,0)
 .S:RTN RTN=$$OPEN(CIA("UID"),DUZ,$$GETVAR^CIANBUTL("WID"))
"RTN","CIANBLOG",92,0)
 .D SETVAR^CIANBUTL("ALOG"_$S(DUZ2:":"_DUZ2,1:""),RTN)
"RTN","CIANBLOG",93,0)
 Q RTN
"RTN","CIANBRPC")
0^5^B61652070
"RTN","CIANBRPC",1,0)
CIANBRPC ;MSC/IND/DKM - MSC RPC Broker Privileged RPCs;29-Jan-2015 08:41;DKM
"RTN","CIANBRPC",2,0)
 ;;1.3;CIA NETWORK COMPONENTS;;Sep 18, 2007;Build 173
"RTN","CIANBRPC",3,0)
 ;;Copyright 2000-2008, Medsphere Systems Corporation
"RTN","CIANBRPC",4,0)
 ;=================================================================
"RTN","CIANBRPC",5,0)
 ; RPC: User authentication
"RTN","CIANBRPC",6,0)
 ; AID = Application ID
"RTN","CIANBRPC",7,0)
 ; WID = Workstation ID
"RTN","CIANBRPC",8,0)
 ; SID = NT Security ID
"RTN","CIANBRPC",9,0)
 ; AVC = AV Code
"RTN","CIANBRPC",10,0)
 ; WIP = Workstation IP address
"RTN","CIANBRPC",11,0)
 ; DIV = Login division (optional)
"RTN","CIANBRPC",12,0)
 ; Returns:
"RTN","CIANBRPC",13,0)
 ;  DATA(0)=Status code^Status text
"RTN","CIANBRPC",14,0)
 ;  where Status code is one of:
"RTN","CIANBRPC",15,0)
 ;   0 = success                 (Params=UID^net name^div name^DUZ)
"RTN","CIANBRPC",16,0)
 ;   1 = success, verify expired (Params=same as success)
"RTN","CIANBRPC",17,0)
 ;   2 = logins inhibited        (Params=null)
"RTN","CIANBRPC",18,0)
 ;   3 = locked                  (Params=null)
"RTN","CIANBRPC",19,0)
 ;   4 = authentication failure  (Params=server^volume^UCI^port)
"RTN","CIANBRPC",20,0)
 ;   5 = other error             (Params=null)
"RTN","CIANBRPC",21,0)
 ;  DATA(1)=Params
"RTN","CIANBRPC",22,0)
 ;  DATA(2,n)=Greeting message
"RTN","CIANBRPC",23,0)
AUTH(DATA,AID,WID,SID,AVC,WIP,DIV) ;
"RTN","CIANBRPC",24,0)
 N XOPT,XUT,XUTEXT,XOPT,XUEON,XUEOFF,XUTT,XUDEV,XUSER,XUNOW,X
"RTN","CIANBRPC",25,0)
 K DUZ,DATA,^TMP($J),^UTILITY($J)
"RTN","CIANBRPC",26,0)
 D SET1^XUS(0)
"RTN","CIANBRPC",27,0)
 S (DUZ,XUT)=0,DUZ(0)="",XUDEV=0,DATA(0)=4,DATA(1)=""
"RTN","CIANBRPC",28,0)
 S AID(0)=$$OPTLKP^CIANBUTL(.AID),WID=$$ID(.WID),SID=$G(SID),WIP=$G(WIP)
"RTN","CIANBRPC",29,0)
 I '$L(AID(0)),$$CHK(18,5,.AID) Q
"RTN","CIANBRPC",30,0)
 S X=$$OPTMSG^CIANBUTL(AID(0))
"RTN","CIANBRPC",31,0)
 I $L(X),$$CHK(19,2,X) Q
"RTN","CIANBRPC",32,0)
 I '$L($G(AVC)) S DUZ=+$$AUTOLOG(SID),CIAXUT=0
"RTN","CIANBRPC",33,0)
 E  D
"RTN","CIANBRPC",34,0)
 .I $E(AVC,1,2)="~1" S DUZ=$$CHKASH^XUSRB4(AVC)
"RTN","CIANBRPC",35,0)
 .S:'DUZ DUZ=$$CHECKAV^XUS($$DECRYP^XUSRB1(AVC)),CIAXUT=$G(CIAXUT)+1
"RTN","CIANBRPC",36,0)
 .I 'DUZ,CIAXUT>$P(XOPT,U,2),$$CHK(-7,3) Q
"RTN","CIANBRPC",37,0)
 .I 'DUZ,$$CHK(-4,4)
"RTN","CIANBRPC",38,0)
 I DUZ D
"RTN","CIANBRPC",39,0)
 .S DATA(0)=0,XUNOW=$$NOW^XLFDT,X=$$OPTCHK^CIANBUTL(AID)
"RTN","CIANBRPC",40,0)
 .Q:$$CHK(+X,2,$P(X,U,2),$P(X,U,3),$P(X,U,4))
"RTN","CIANBRPC",41,0)
 .Q:$$CHK(-$$INHIBIT^XUSRB,2)
"RTN","CIANBRPC",42,0)
 .I XUT>$P(XOPT,U,2),$$CHK(-7,3) Q
"RTN","CIANBRPC",43,0)
 .D USER^XUS(DUZ)
"RTN","CIANBRPC",44,0)
 .Q:$$CHK(-$$UVALID^XUS(),4)
"RTN","CIANBRPC",45,0)
 .Q:$$CHK(-$$USER^XUS1A,4)
"RTN","CIANBRPC",46,0)
 .F X=0:0 S X=$O(XUTEXT(X)) Q:'X  S DATA(2,X)=$E(XUTEXT(X),2,9999)
"RTN","CIANBRPC",47,0)
 .D DUZ^XUS1A,SAVE^XUS1,LOG^XUS1,ABT^XQ12
"RTN","CIANBRPC",48,0)
 .I $$VCVALID^XUSRB,$$CHK(-12,1)
"RTN","CIANBRPC",49,0)
 .I $G(CIA("UID")) D
"RTN","CIANBRPC",50,0)
 ..N UID
"RTN","CIANBRPC",51,0)
 ..S UID=CIA("UID"),CIA("UID")=0
"RTN","CIANBRPC",52,0)
 ..I '$D(^XTMP("CIA",UID)),$$CHK(25,5,UID) Q
"RTN","CIANBRPC",53,0)
 ..I $$SESSION^CIANBUTL(UID,"DUZ")'=DUZ,$$CHK(27,4,UID) Q
"RTN","CIANBRPC",54,0)
 ..D:$$ISACTIVE^CIANBUTL(UID) FORCEEX(CIAPORT_":"_$$GETVAR^CIANBUTL("JOB"))
"RTN","CIANBRPC",55,0)
 ..I $$ISACTIVE^CIANBUTL(UID,1,60),$$CHK(26,4,UID) Q
"RTN","CIANBRPC",56,0)
 ..S CIA("UID")=UID
"RTN","CIANBRPC",57,0)
 ..D RESVAR^CIANBUTL,SETVAR^CIANBUTL("JOB",$J)
"RTN","CIANBRPC",58,0)
 ..D BRDCAST^CIANBEVT("LOGIN",$$SESSION^CIANBUTL)
"RTN","CIANBRPC",59,0)
 .E  D
"RTN","CIANBRPC",60,0)
 ..S CIA("UID")=$$UID^CIANBUTL
"RTN","CIANBRPC",61,0)
 ..D:$G(DIV) DIVSET(,DIV)
"RTN","CIANBRPC",62,0)
 ..D RESET(1)
"RTN","CIANBRPC",63,0)
 .S DATA(1)=CIA("UID")_U_$G(^XMB("NETNAME"))_U_$$GET1^DIQ(4,DUZ(2),".01")_U_DUZ
"RTN","CIANBRPC",64,0)
 .S:AID(0) ^XUTL("XQ",$J,1)=AID(0)_U_$G(^DIC(19,AID(0),0)),^("T")=1
"RTN","CIANBRPC",65,0)
 .D AUTOSET(SID),STSAVE^CIANBLIS(1)
"RTN","CIANBRPC",66,0)
 I +DATA(0)=4 D
"RTN","CIANBRPC",67,0)
 .S DATA(1)=$P(XUENV,U,3)_U_$P(XUVOL,U)_U_XUCI_U_+CIAPORT
"RTN","CIANBRPC",68,0)
 .D:$G(CIA("VER"))<1.7 INTRO^XUS1A("DATA(2)")
"RTN","CIANBRPC",69,0)
 Q
"RTN","CIANBRPC",70,0)
 ; Force exit disconnected broker session
"RTN","CIANBRPC",71,0)
FORCEEX(CIAPORT) ;
"RTN","CIANBRPC",72,0)
 S @$$LOCKNODE^CIANBLIS=-1
"RTN","CIANBRPC",73,0)
 Q
"RTN","CIANBRPC",74,0)
 ; Transform ID values
"RTN","CIANBRPC",75,0)
ID(ID) Q $E($TR($G(ID),U,"~"),1,40)
"RTN","CIANBRPC",76,0)
 ; RPC: Change verify code
"RTN","CIANBRPC",77,0)
CVC(DATA,OLD,NEW) ;
"RTN","CIANBRPC",78,0)
 S DATA=$$BRCVC^XUS2($$DECRYP^XUSRB1(OLD),$$DECRYP^XUSRB1(NEW))
"RTN","CIANBRPC",79,0)
 S:'DATA DATA="0^Your verify code has been changed."
"RTN","CIANBRPC",80,0)
 Q
"RTN","CIANBRPC",81,0)
 ; RPC: Get division list
"RTN","CIANBRPC",82,0)
DIVGET(DATA) ;
"RTN","CIANBRPC",83,0)
 N X,P,G
"RTN","CIANBRPC",84,0)
 S X=0,G=$S(DUZ:$NA(^VA(200,DUZ,2)),1:$NA(^DG(40.8,"AD"))),P=0
"RTN","CIANBRPC",85,0)
 F  S X=$O(@G@(X)) Q:'X  S:DUZ P=$P(^(X,0),U,2) D
"RTN","CIANBRPC",86,0)
 .N X0,X99
"RTN","CIANBRPC",87,0)
 .S X0=$G(^DIC(4,X,0)),X99=$G(^(99))
"RTN","CIANBRPC",88,0)
 .S DATA(X)=X_U_$P(X0,U)_U_$P(X99,U)_U_$P(X0,U,5)
"RTN","CIANBRPC",89,0)
 .S:P DATA(0)=X
"RTN","CIANBRPC",90,0)
 S:'$D(DATA(0)) DATA(0)=+$O(DATA(0))
"RTN","CIANBRPC",91,0)
 I 'DATA(0),$G(DUZ(2)) S DATA(0)=DUZ(2),DATA(DUZ(2))=DUZ(2)_U_$$NS^XUAF4(DUZ(2))
"RTN","CIANBRPC",92,0)
 D:DATA(0) DIVSET(,DATA(0))
"RTN","CIANBRPC",93,0)
 Q
"RTN","CIANBRPC",94,0)
 ; RPC: Set division
"RTN","CIANBRPC",95,0)
DIVSET(DATA,DIV) ;
"RTN","CIANBRPC",96,0)
 S DUZ(2)=+DIV,DATA=1
"RTN","CIANBRPC",97,0)
 D SETVAR^CIANBUTL("DUZ2",DUZ(2))
"RTN","CIANBRPC",98,0)
 D SETVAR^CIANBUTL("DUZ(2)",DUZ(2),-1)
"RTN","CIANBRPC",99,0)
 Q
"RTN","CIANBRPC",100,0)
 ; RPC: Get dialog text
"RTN","CIANBRPC",101,0)
DIALOG(DATA,DLG,P1,P2,P3) ;
"RTN","CIANBRPC",102,0)
 D GETDLG^CIANBUTL(DLG,.DATA,.P1,.P2,.P3)
"RTN","CIANBRPC",103,0)
 Q
"RTN","CIANBRPC",104,0)
 ; RPC: Reset session
"RTN","CIANBRPC",105,0)
RESET(LOGIN) ;
"RTN","CIANBRPC",106,0)
 Q:'$G(CIA("UID"))
"RTN","CIANBRPC",107,0)
 D STOPALL^CIANBASY,UNSUBALL^CIANBEVT
"RTN","CIANBRPC",108,0)
 S LOGIN=+$G(LOGIN)
"RTN","CIANBRPC",109,0)
 N DUZ2
"RTN","CIANBRPC",110,0)
 S DUZ2=$$GETVAR^CIANBUTL("DUZ2")
"RTN","CIANBRPC",111,0)
 I 'LOGIN D
"RTN","CIANBRPC",112,0)
 .D CLOSE^CIANBLOG($$GETVAR^CIANBUTL("ALOG"_$S(DUZ2:":"_DUZ2,1:"")))
"RTN","CIANBRPC",113,0)
 .S IO("IP")=$$GETVAR^CIANBUTL("WIP")
"RTN","CIANBRPC",114,0)
 .D BRDCAST^CIANBEVT("LOGOUT",$$SESSION^CIANBUTL)
"RTN","CIANBRPC",115,0)
 .K ^XTMP("CIA",CIA("UID"))
"RTN","CIANBRPC",116,0)
 .L -^XTMP("CIA",CIA("UID"),0)
"RTN","CIANBRPC",117,0)
 .D BYE^XUSCLEAN
"RTN","CIANBRPC",118,0)
 E  D
"RTN","CIANBRPC",119,0)
 .N ENV,X,Y,V
"RTN","CIANBRPC",120,0)
 .K ^XTMP("CIA",CIA("UID"))
"RTN","CIANBRPC",121,0)
 .F ENV=0:1 S X=$P($T(ENVDATA+ENV),";;",2) Q:'$L(X)  D
"RTN","CIANBRPC",122,0)
 ..S V=$P(X,";",2),@("Y="_V)
"RTN","CIANBRPC",123,0)
 ..D SETVAR^CIANBUTL($P(X,";"),Y)
"RTN","CIANBRPC",124,0)
 ..D:$P(X,";",3) SETVAR^CIANBUTL(V,Y,-1)
"RTN","CIANBRPC",125,0)
 .D BRDCAST^CIANBEVT("LOGIN",$$SESSION^CIANBUTL)
"RTN","CIANBRPC",126,0)
 .S IO("IP")=$$GETVAR^CIANBUTL("WIP")
"RTN","CIANBRPC",127,0)
 .I $$ISACTIVE^CIANBLOG
"RTN","CIANBRPC",128,0)
 .D LOG^XUS1                                                           ;creates handle with client agent
"RTN","CIANBRPC",129,0)
 Q
"RTN","CIANBRPC",130,0)
 ; Environment data to save
"RTN","CIANBRPC",131,0)
 ;;Name;Value;Local
"RTN","CIANBRPC",132,0)
ENVDATA ;;DUZ;DUZ
"RTN","CIANBRPC",133,0)
 ;;DUZ0;DUZ(0);1
"RTN","CIANBRPC",134,0)
 ;;DUZ2;DUZ(2);1
"RTN","CIANBRPC",135,0)
 ;;USER;$P($G(^VA(200,DUZ,0)),U)
"RTN","CIANBRPC",136,0)
 ;;RDEV;$$RESDEV^CIANBUTL
"RTN","CIANBRPC",137,0)
 ;;LDT;$H
"RTN","CIANBRPC",138,0)
 ;;JOB;$J
"RTN","CIANBRPC",139,0)
 ;;AID;AID
"RTN","CIANBRPC",140,0)
 ;;AID0;AID(0)
"RTN","CIANBRPC",141,0)
 ;;WID;WID
"RTN","CIANBRPC",142,0)
 ;;WIP;WIP
"RTN","CIANBRPC",143,0)
 ;;UID;CIA("UID")
"RTN","CIANBRPC",144,0)
 ;;
"RTN","CIANBRPC",145,0)
 ; Check error code
"RTN","CIANBRPC",146,0)
CHK(ERR,RTN,P1,P2,P3) ;
"RTN","CIANBRPC",147,0)
 I ERR S DATA(0)=RTN_U_$S(ERR<0:$$TXT^XUS3(-ERR),1:$$GETDLG^CIANBUTL(ERR,,.P1,.P2,.P3)) S:RTN>1 DUZ=0
"RTN","CIANBRPC",148,0)
 Q ERR
"RTN","CIANBRPC",149,0)
 ; Attempt autoauthenticate using SID
"RTN","CIANBRPC",150,0)
 ; Returns DUZ if SID has been authenticated, 0 if prohibited from
"RTN","CIANBRPC",151,0)
 ; being authenticated, or null if never been authenticated.
"RTN","CIANBRPC",152,0)
AUTOLOG(SID) ;
"RTN","CIANBRPC",153,0)
 S SID=$S($L($G(SID))<3:"",1:$$DECRYP^XUSRB1(SID))
"RTN","CIANBRPC",154,0)
 Q:$E(SID,1,9)'="S-1-5-21-" 0
"RTN","CIANBRPC",155,0)
 S SID=$E(SID,10,999)
"RTN","CIANBRPC",156,0)
 Q:SID<1000 0
"RTN","CIANBRPC",157,0)
 N X
"RTN","CIANBRPC",158,0)
 S X=$$FIND1^DIC(19941.2,"","QX",SID)
"RTN","CIANBRPC",159,0)
 Q $S(X:+$P($G(^CIANB(19941.2,X,0)),U,2),1:"")
"RTN","CIANBRPC",160,0)
 ; Cache NT authentication information
"RTN","CIANBRPC",161,0)
AUTOSET(SID) ;
"RTN","CIANBRPC",162,0)
 Q:$$AUTOLOG(.SID)'=""
"RTN","CIANBRPC",163,0)
 N FLD
"RTN","CIANBRPC",164,0)
 S FLD(19941.2,"+1,",.01)=SID
"RTN","CIANBRPC",165,0)
 S FLD(19941.2,"+1,",1)=DUZ
"RTN","CIANBRPC",166,0)
 S FLD(19941.2,"+1,",2)=$$NOW^XLFDT
"RTN","CIANBRPC",167,0)
 D UPDATE^DIE("","FLD")
"RTN","CIANBRPC",168,0)
 Q
"RTN","CIANBRPC",169,0)
 ; RPC: Get list of active RPCs
"RTN","CIANBRPC",170,0)
GETRPCS(DATA) ;
"RTN","CIANBRPC",171,0)
 N X
"RTN","CIANBRPC",172,0)
 D LIST^DIC(8994,,".01","Q",,,,,"I ""03""[$P(^(0),U,6)",,.DATA)
"RTN","CIANBRPC",173,0)
 S X=""
"RTN","CIANBRPC",174,0)
 F  S X=$O(@DATA@(X)) Q:'$L(X)  K:X'="ID" @DATA@(X)
"RTN","CIANBRPC",175,0)
 Q
"RTN","CIANBRPC",176,0)
 ; RPC: Can RPC be executed in current context
"RTN","CIANBRPC",177,0)
CANRUN(DATA,RPC) ;
"RTN","CIANBRPC",178,0)
 S DATA=$$CANRUN^CIANBACT($$FIND1^DIC(8994,,"QX",RPC),CIA("CTX"))
"RTN","CIANBRPC",179,0)
 Q
"RTN","CIANBRPC",180,0)
 ; RPC: Retrieve list of active sessions
"RTN","CIANBRPC",181,0)
GETSESSN(DATA,VAR,AID) ;
"RTN","CIANBRPC",182,0)
 N X,Z,C
"RTN","CIANBRPC",183,0)
 S DATA=$$TMPGBL
"RTN","CIANBRPC",184,0)
 F C=1:1 Q:'$$NXTUID^CIANBUTL(.X,,.AID)  S @DATA@(C)=$$SESSION^CIANBUTL(X,.VAR)
"RTN","CIANBRPC",185,0)
 Q
"RTN","CIANBRPC",186,0)
 ; RPC: Get stored variable(s)
"RTN","CIANBRPC",187,0)
GETVAR(DATA,LIST,NMSP) ;
"RTN","CIANBRPC",188,0)
 N CNT
"RTN","CIANBRPC",189,0)
 S:$L($G(LIST)) LIST(-99)=LIST
"RTN","CIANBRPC",190,0)
 S LIST="",CNT=0
"RTN","CIANBRPC",191,0)
 S:0[$G(NMSP) NMSP="@"
"RTN","CIANBRPC",192,0)
 F  S LIST=$O(LIST(LIST)) Q:'$L(LIST)  D
"RTN","CIANBRPC",193,0)
 .S CNT=CNT+1,DATA(CNT)=LIST(LIST)_"="_$$GETVAR^CIANBUTL(LIST(LIST),,NMSP)
"RTN","CIANBRPC",194,0)
 Q
"RTN","CIANBRPC",195,0)
 ; RPC: Set stored variable(s)
"RTN","CIANBRPC",196,0)
SETVAR(DATA,LIST,NMSP,RESET) ;
"RTN","CIANBRPC",197,0)
 S:$L($G(LIST)) LIST(-99)=LIST
"RTN","CIANBRPC",198,0)
 S LIST="",DATA=0
"RTN","CIANBRPC",199,0)
 S:0[$G(NMSP) NMSP="@"
"RTN","CIANBRPC",200,0)
 D:$G(RESET) CLRVAR^CIANBUTL(NMSP)
"RTN","CIANBRPC",201,0)
 F  S LIST=$O(LIST(LIST)) Q:'$L(LIST)  D
"RTN","CIANBRPC",202,0)
 .S DATA=DATA+1
"RTN","CIANBRPC",203,0)
 .D SETVAR^CIANBUTL($P(LIST(LIST),"="),$P(LIST(LIST),"=",2,9999),NMSP)
"RTN","CIANBRPC",204,0)
 Q
"RTN","CIANBRPC",205,0)
 ; RPC: Get requested session info
"RTN","CIANBRPC",206,0)
 ; TYPE = 0=subscriptions, 1=local vars, 2=session vars, 3=locks, 4=pending async RPCs
"RTN","CIANBRPC",207,0)
 ; UID  = Session ID (defaults to current session)
"RTN","CIANBRPC",208,0)
GETINFO(DATA,TYPE,UID) ;
"RTN","CIANBRPC",209,0)
 S UID=$G(UID,$G(CIA("UID")))
"RTN","CIANBRPC",210,0)
 I TYPE=0 D  Q
"RTN","CIANBRPC",211,0)
 .N EV,CN
"RTN","CIANBRPC",212,0)
 .S EV="",CN=0
"RTN","CIANBRPC",213,0)
 .F  S EV=$O(^XTMP("CIA",UID,"S",EV)) Q:'$L(EV)  D
"RTN","CIANBRPC",214,0)
 ..S CN=CN+1,@DATA@(CN)=EV
"RTN","CIANBRPC",215,0)
 I TYPE=1 D  Q
"RTN","CIANBRPC",216,0)
 .D CAPTURE^CIAUHFS("ZWRITE  N X F X=""$ET"",""$EC"",""$ES"",""$J"",""$ZE"",""$ZT"" W !,X,""="",@X",DATA,99999)
"RTN","CIANBRPC",217,0)
 I TYPE=2 D  Q
"RTN","CIANBRPC",218,0)
 .N NS,VN,VL,CN
"RTN","CIANBRPC",219,0)
 .S NS="",CN=0
"RTN","CIANBRPC",220,0)
 .F  S NS=$O(^XTMP("CIA",UID,"V",NS)),VN="" Q:'$L(NS)  D
"RTN","CIANBRPC",221,0)
 ..F  S VN=$O(^XTMP("CIA",UID,"V",NS,VN)) Q:'$L(VN)  S VL=$G(^(VN)) D
"RTN","CIANBRPC",222,0)
 ...S CN=CN+1,@DATA@(CN)=$S(NS=0:"<default>",NS=-1:"<mapped>",1:NS)_U_VN_U_VL
"RTN","CIANBRPC",223,0)
 I TYPE=3 D  Q
"RTN","CIANBRPC",224,0)
 .N GBL,CN,VL
"RTN","CIANBRPC",225,0)
 .S GBL="",CN=0
"RTN","CIANBRPC",226,0)
 .F  S GBL=$O(^XTMP("CIA",UID,"L",GBL)) Q:'$L(GBL)  S VL=$G(^(GBL)) D
"RTN","CIANBRPC",227,0)
 ..S CN=CN+1,@DATA@(CN)=$TR(GBL,U,"~")_U_VL
"RTN","CIANBRPC",228,0)
 I TYPE=4 D  Q
"RTN","CIANBRPC",229,0)
 .N TSK,CN
"RTN","CIANBRPC",230,0)
 .S (TSK,CN)=0
"RTN","CIANBRPC",231,0)
 .F  S TSK=$O(^XTMP("CIA",UID,"T",TSK)) Q:'TSK  D
"RTN","CIANBRPC",232,0)
 ..S CN=CN+1,@DATA@(CN)=TSK_U_$G(^%ZTSK(TSK,.03),"Unknown")
"RTN","CIANBRPC",233,0)
 S @DATA@(1)="Unknown request type: "_TYPE
"RTN","CIANBRPC",234,0)
 Q
"RTN","CIANBRPC",235,0)
 ; Lock/unlock global reference
"RTN","CIANBRPC",236,0)
 ; GBL  = Global reference
"RTN","CIANBRPC",237,0)
 ; OPR  = Operation to perform:
"RTN","CIANBRPC",238,0)
 ;        >=0: Value is timeout for lock operation.  Returns success.
"RTN","CIANBRPC",239,0)
 ;         <0: Returns # of active locks for node.
"RTN","CIANBRPC",240,0)
 ;    missing: Performs unlock operation.  Returns success.
"RTN","CIANBRPC",241,0)
 ; DATA = Returns status according to value of OPR.
"RTN","CIANBRPC",242,0)
LOCK(DATA,GBL,OPR) ;
"RTN","CIANBRPC",243,0)
 N LCK
"RTN","CIANBRPC",244,0)
 S LCK=$D(OPR),OPR=+$G(OPR),GBL=$NA(@GBL)
"RTN","CIANBRPC",245,0)
 I OPR<0 S DATA=$$LOCKCNT(GBL)
"RTN","CIANBRPC",246,0)
 E  I LCK D
"RTN","CIANBRPC",247,0)
 .L +@GBL:OPR
"RTN","CIANBRPC",248,0)
 .S DATA=$T
"RTN","CIANBRPC",249,0)
 .I DATA,$$LOCKCNT(GBL,1)
"RTN","CIANBRPC",250,0)
 E  D
"RTN","CIANBRPC",251,0)
 .S DATA=''$$LOCKCNT(GBL,-1)
"RTN","CIANBRPC",252,0)
 .L:DATA -@GBL
"RTN","CIANBRPC",253,0)
 Q
"RTN","CIANBRPC",254,0)
 ; RPC: Restore locks (after reconnect)
"RTN","CIANBRPC",255,0)
 ; Data returns list of locks that could not be restored.
"RTN","CIANBRPC",256,0)
LOCKRES(DATA) ;
"RTN","CIANBRPC",257,0)
 N GBL,CNT,X
"RTN","CIANBRPC",258,0)
 S GBL="",X=0
"RTN","CIANBRPC",259,0)
 F  S GBL=$O(^XTMP("CIA",CIA("UID"),"L",GBL)) Q:'$L(GBL)  S CNT=+$G(^(GBL))  D
"RTN","CIANBRPC",260,0)
 .F CNT=CNT:-1:1 L +@GBL:1 E  D  Q
"RTN","CIANBRPC",261,0)
 ..S X=X+1,@DATA@(X)=GBL
"RTN","CIANBRPC",262,0)
 ..K ^XTMP("CIA",CIA("UID"),"L",GBL)
"RTN","CIANBRPC",263,0)
 Q
"RTN","CIANBRPC",264,0)
 ; Return lock count.  Optionally increment/decrement afterwards.
"RTN","CIANBRPC",265,0)
 ; Note use of naked reference.
"RTN","CIANBRPC",266,0)
LOCKCNT(GBL,INC) ;
"RTN","CIANBRPC",267,0)
 N X,Y
"RTN","CIANBRPC",268,0)
 S X=+$G(^XTMP("CIA",CIA("UID"),"L",GBL)),Y=X+$G(INC)                  ; Sets naked reference
"RTN","CIANBRPC",269,0)
 I Y>0 S ^(GBL)=Y
"RTN","CIANBRPC",270,0)
 E  K ^(GBL)
"RTN","CIANBRPC",271,0)
 Q X
"RTN","CIANBRPC",272,0)
 ; Get temp global reference
"RTN","CIANBRPC",273,0)
TMPGBL(X) ;
"RTN","CIANBRPC",274,0)
 K ^TMP("CIANBTMP"_$G(X),$J) Q $NA(^($J))
"RTN","CIANBUTL")
0^6^B38343690
"RTN","CIANBUTL",1,0)
CIANBUTL ;MSC/IND/DKM - MSC RPC Broker Utilities ;26-Jan-2015 14:18;DKM
"RTN","CIANBUTL",2,0)
 ;;1.3;CIA NETWORK COMPONENTS;;Sep 18, 2007;Build 173
"RTN","CIANBUTL",3,0)
 ;;Copyright 2000-2008, Medsphere Systems Corporation
"RTN","CIANBUTL",4,0)
 ;=================================================================
"RTN","CIANBUTL",5,0)
 ; Cleanup stray global nodes
"RTN","CIANBUTL",6,0)
CLEANUP ;EP
"RTN","CIANBUTL",7,0)
 N UID
"RTN","CIANBUTL",8,0)
 F  Q:'$$NXTUID(.UID,0)  K ^XTMP("CIA",UID)
"RTN","CIANBUTL",9,0)
 Q
"RTN","CIANBUTL",10,0)
 ; Force RPC context tables to be rebuilt for all active sessions
"RTN","CIANBUTL",11,0)
REBLDCTX ;EP
"RTN","CIANBUTL",12,0)
 N UID,CTX
"RTN","CIANBUTL",13,0)
 F  Q:'$$NXTUID(.UID)  D
"RTN","CIANBUTL",14,0)
 .F CTX=0:0 S CTX=$O(^XTMP("CIA",UID,"C",CTX)) Q:'CTX  S ^(CTX)=0
"RTN","CIANBUTL",15,0)
 Q
"RTN","CIANBUTL",16,0)
 ; Get globally unique instance ID
"RTN","CIANBUTL",17,0)
UID() N UID,FLG
"RTN","CIANBUTL",18,0)
 L +^XTMP("CIA",0):5
"RTN","CIANBUTL",19,0)
 E  Q "-3^Cannot initialize environment"
"RTN","CIANBUTL",20,0)
 S FLG=0
"RTN","CIANBUTL",21,0)
 F UID=$P($G(^XTMP("CIA",0)),U,3)+1:1 D  Q:(UID<1)!(FLG=2)
"RTN","CIANBUTL",22,0)
 .I (UID<1)!(UID>999999) D  Q:UID<1
"RTN","CIANBUTL",23,0)
 ..S UID=$S('FLG:1,1:"-4^Lock table is full"),FLG=1
"RTN","CIANBUTL",24,0)
 .S:'$$ISACTIVE(UID,1) FLG=2
"RTN","CIANBUTL",25,0)
 S:UID>0 ^XTMP("CIA",0)=(DT+10000)_U_DT_U_UID
"RTN","CIANBUTL",26,0)
 L -^XTMP("CIA",0)
"RTN","CIANBUTL",27,0)
 Q UID
"RTN","CIANBUTL",28,0)
 ; Verifies that a session is truly active
"RTN","CIANBUTL",29,0)
 ;   UID = Unique id of session
"RTN","CIANBUTL",30,0)
 ;   LCK = If nonzero, leave lock active (defaults to 0)
"RTN","CIANBUTL",31,0)
 ;   TMO = Optional lock timeout (defaults to 0)
"RTN","CIANBUTL",32,0)
ISACTIVE(UID,LCK,TMO) ;EP
"RTN","CIANBUTL",33,0)
 Q:'$G(UID) 0
"RTN","CIANBUTL",34,0)
 Q:UID=$G(CIA("UID")) 1
"RTN","CIANBUTL",35,0)
 L +^XTMP("CIA",UID,0):+$G(TMO)
"RTN","CIANBUTL",36,0)
 E  Q 1
"RTN","CIANBUTL",37,0)
 L:'$G(LCK) -^XTMP("CIA",UID,0)
"RTN","CIANBUTL",38,0)
 Q 0
"RTN","CIANBUTL",39,0)
 ; Gets the session ID associated with this process
"RTN","CIANBUTL",40,0)
 ; If not in session context, attempt answerback from client
"RTN","CIANBUTL",41,0)
GETUID() ;EP
"RTN","CIANBUTL",42,0)
 I '$D(CIA("UID")) D
"RTN","CIANBUTL",43,0)
 .S CIA("UID")=""
"RTN","CIANBUTL",44,0)
 .Q:$D(ZTQUEUED)
"RTN","CIANBUTL",45,0)
 .N X,UID,I
"RTN","CIANBUTL",46,0)
 .S I=$I,UID=""
"RTN","CIANBUTL",47,0)
 .U $S($D(IO(0)):IO(0),1:$P)                                           ; Use home device
"RTN","CIANBUTL",48,0)
 .X ^%ZOSF("EOFF")                                                     ; Suppress echo
"RTN","CIANBUTL",49,0)
 .F  R X#1:0 Q:'$T                                                     ; Flush keyboard buffer
"RTN","CIANBUTL",50,0)
 .W $C(5)                                                              ; Send answerback request
"RTN","CIANBUTL",51,0)
 .F  R X:4 Q:'$T&'$L(X)  S UID=UID_X                                   ; Listen for response
"RTN","CIANBUTL",52,0)
 .S UID=$P(UID,"CIA#",2)
"RTN","CIANBUTL",53,0)
 .X ^%ZOSF("EON")                                                      ; Restore echo
"RTN","CIANBUTL",54,0)
 .U I                                                                  ; Restore previous device
"RTN","CIANBUTL",55,0)
 .I $$ISACTIVE(UID),$$GETVAR("DUZ",,,UID)=DUZ S CIA("UID")=UID
"RTN","CIANBUTL",56,0)
 .E  S CIA("UID")=""
"RTN","CIANBUTL",57,0)
 Q:$Q CIA("UID")
"RTN","CIANBUTL",58,0)
 Q
"RTN","CIANBUTL",59,0)
 ; Retrieve next session ID from list
"RTN","CIANBUTL",60,0)
 ;   UID passed as last ID processed, returned as next ID or null
"RTN","CIANBUTL",61,0)
 ;   FLT = <0=all; 0=inactive only; >0=active only (default)
"RTN","CIANBUTL",62,0)
 ;   AID = Application ID (optional)
"RTN","CIANBUTL",63,0)
 ;   Return value is true if ID found
"RTN","CIANBUTL",64,0)
NXTUID(UID,FLT,AID) ;EP
"RTN","CIANBUTL",65,0)
 N PFX,FND,ALL,ACT
"RTN","CIANBUTL",66,0)
 S FLT=+$G(FLT,1),FND=0,ALL=FLT<0,ACT=FLT>0,AID=$$OPTLKP(.AID),UID=+$G(UID)
"RTN","CIANBUTL",67,0)
 I $L(AID) F  S UID=$O(^XTMP("CIA",UID)) Q:'UID  D  Q:FND
"RTN","CIANBUTL",68,0)
 .I AID,$$GETVAR("AID0",,,UID)'=AID Q
"RTN","CIANBUTL",69,0)
 .I 'ALL,$$ISACTIVE(UID)'=ACT Q
"RTN","CIANBUTL",70,0)
 .S FND=1
"RTN","CIANBUTL",71,0)
 S:'FND UID=""
"RTN","CIANBUTL",72,0)
 Q:$Q FND
"RTN","CIANBUTL",73,0)
 Q
"RTN","CIANBUTL",74,0)
 ; Retrieve a package parameter value
"RTN","CIANBUTL",75,0)
PARAM(PAR,MIN,MAX) ;EP
"RTN","CIANBUTL",76,0)
 S VAL=+$$GET^XPAR("ALL",PAR)
"RTN","CIANBUTL",77,0)
 S:VAL<MIN VAL=MIN
"RTN","CIANBUTL",78,0)
 S:VAL>MAX VAL=MAX
"RTN","CIANBUTL",79,0)
 Q VAL
"RTN","CIANBUTL",80,0)
 ; Return free resource device
"RTN","CIANBUTL",81,0)
RESDEV() ;EP
"RTN","CIANBUTL",82,0)
 N RD,MX,SL,UID,X,C
"RTN","CIANBUTL",83,0)
 S MX=$$PARAM("CIANB RESOURCE DEVICE COUNT",1,20)
"RTN","CIANBUTL",84,0)
 S SL=$$PARAM("CIANB RESOURCE DEVICE SLOTS",1,20)
"RTN","CIANBUTL",85,0)
 F  Q:'$$NXTUID(.UID)  D
"RTN","CIANBUTL",86,0)
 .S RD=$$GETVAR("RDEV",,,UID)
"RTN","CIANBUTL",87,0)
 .S:RD RD(RD)=$G(RD(RD))+1
"RTN","CIANBUTL",88,0)
 S RD=1,C=999999
"RTN","CIANBUTL",89,0)
 F X=1:1:MX S:+$G(RD(X))<C RD=X,C=+$G(RD(X))
"RTN","CIANBUTL",90,0)
 S X=$$RES^XUDHSET("CIANB THREAD RESOURCE #"_RD,,SL,"CIA Broker Asynchronous Callbacks")
"RTN","CIANBUTL",91,0)
 Q RD
"RTN","CIANBUTL",92,0)
 ; Set maximum slots for resource devices
"RTN","CIANBUTL",93,0)
SETSLOTS(CNT) ;EP
"RTN","CIANBUTL",94,0)
 N RES,IEN,FDA,X,Y
"RTN","CIANBUTL",95,0)
 Q:CNT<2!(CNT>20)
"RTN","CIANBUTL",96,0)
 D FIND^DIC(3.5,,"@","UP","CIANB THREAD RESOURCE #",,"B")
"RTN","CIANBUTL",97,0)
 F RES=0:0 S RES=$O(^TMP("DILIST",$J,RES)) Q:'RES  S IEN=+$G(^(RES,0)) D:IEN
"RTN","CIANBUTL",98,0)
 .S FDA(3.5,IEN_",",35)=CNT
"RTN","CIANBUTL",99,0)
 D FILE^DIE("K","FDA")
"RTN","CIANBUTL",100,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J)
"RTN","CIANBUTL",101,0)
 Q
"RTN","CIANBUTL",102,0)
 ; Return info for session
"RTN","CIANBUTL",103,0)
SESSION(UID,VAR) ;EP
"RTN","CIANBUTL",104,0)
 N X,Y,Z
"RTN","CIANBUTL",105,0)
 S (X,Y)=""
"RTN","CIANBUTL",106,0)
 S:'$L($G(VAR)) VAR="UID^WID^AID^DUZ^USER^LDT^JOB"
"RTN","CIANBUTL",107,0)
 F Z=1:1:$L(VAR,U) S X=X_Y_$$GETVAR($P(VAR,U,Z),,,.UID),Y=U
"RTN","CIANBUTL",108,0)
 Q X
"RTN","CIANBUTL",109,0)
 ; Show active sessions
"RTN","CIANBUTL",110,0)
 ;   AID = optional application id
"RTN","CIANBUTL",111,0)
 ;   FLT = <0=all; 0=inactive only; >0=active only (default)
"RTN","CIANBUTL",112,0)
SHOWSESS(AID,FLT) ;EP
"RTN","CIANBUTL",113,0)
 N C,X,Z
"RTN","CIANBUTL",114,0)
 F C=0:1 Q:'$$NXTUID(.X,.FLT,.AID)  D
"RTN","CIANBUTL",115,0)
 .W "#",X,?10,$$HTE^XLFDT($$GETVAR("LDT",,,X)),?40,$$GETVAR("WID",,,X),?60,$$GETVAR("USER",,,X),!
"RTN","CIANBUTL",116,0)
 W !,$S('C:"No sessions are",C=1:"One session is",1:C_" sessions are")," ",$S(FLT>0:"active",FLT<0:"present",1:"inactive"),".",!
"RTN","CIANBUTL",117,0)
 Q:$Q C
"RTN","CIANBUTL",118,0)
 Q
"RTN","CIANBUTL",119,0)
 ; Fetch an environment variable
"RTN","CIANBUTL",120,0)
 ;   NAME = Variable name
"RTN","CIANBUTL",121,0)
 ;   DFLT = Optional default value
"RTN","CIANBUTL",122,0)
 ;   NMSP = Optional namespace (defaults to global)
"RTN","CIANBUTL",123,0)
 ;   UID  = Optional session id (default to current)
"RTN","CIANBUTL",124,0)
GETVAR(NAME,DFLT,NMSP,UID) ;EP
"RTN","CIANBUTL",125,0)
 D FMTVAR(.UID,.NMSP,.NAME)
"RTN","CIANBUTL",126,0)
 Q $S('UID:"",1:$G(^XTMP("CIA",UID,"V",NMSP,NAME),$G(DFLT)))
"RTN","CIANBUTL",127,0)
 ; Save an environment variable
"RTN","CIANBUTL",128,0)
 ;   NAME = Variable name
"RTN","CIANBUTL",129,0)
 ;   VALUE = Value to be assigned (if not specified, entry is deleted)
"RTN","CIANBUTL",130,0)
 ;   NMSP = Optional namespace (defaults to global)
"RTN","CIANBUTL",131,0)
SETVAR(NAME,VALUE,NMSP,UID) ;EP
"RTN","CIANBUTL",132,0)
 N $ET
"RTN","CIANBUTL",133,0)
 S $ET="S $EC="""" G ERRVAR^CIANBUTL"
"RTN","CIANBUTL",134,0)
 D FMTVAR(.UID,.NMSP,.NAME)
"RTN","CIANBUTL",135,0)
 I 'UID Q:$Q 0 Q
"RTN","CIANBUTL",136,0)
 L +^XTMP("CIA",UID,"V",NMSP,NAME):1
"RTN","CIANBUTL",137,0)
 ;E  Q:$Q 0 Q
"RTN","CIANBUTL",138,0)
 I $D(VALUE) S:NMSP=-1 @NAME=VALUE S ^XTMP("CIA",UID,"V",NMSP,NAME)=VALUE
"RTN","CIANBUTL",139,0)
 E  K:NMSP=-1 @NAME K ^XTMP("CIA",UID,"V",NMSP,NAME)
"RTN","CIANBUTL",140,0)
 L -^XTMP("CIA",UID,"V",NMSP,NAME)
"RTN","CIANBUTL",141,0)
 Q:$Q 1
"RTN","CIANBUTL",142,0)
 Q
"RTN","CIANBUTL",143,0)
 ; Clear all variables in a namespace
"RTN","CIANBUTL",144,0)
CLRVAR(NMSP,UID) ;EP
"RTN","CIANBUTL",145,0)
 N NAME,RES
"RTN","CIANBUTL",146,0)
 D FMTVAR(.UID,.NMSP)
"RTN","CIANBUTL",147,0)
 L +^XTMP("CIA",UID,"V",NMSP):1
"RTN","CIANBUTL",148,0)
 ;E  Q:$Q 0 Q
"RTN","CIANBUTL",149,0)
 S NAME="",RES=1
"RTN","CIANBUTL",150,0)
 F  S NAME=$O(^XTMP("CIA",UID,"V",NMSP,NAME)) Q:'$L(NAME)  S RES=RES&$$SETVAR(NAME,,NMSP,UID)
"RTN","CIANBUTL",151,0)
 L -^XTMP("CIA",UID,"V",NMSP)
"RTN","CIANBUTL",152,0)
 Q:$Q RES
"RTN","CIANBUTL",153,0)
 Q
"RTN","CIANBUTL",154,0)
 ; Restore variables from local variable namespace
"RTN","CIANBUTL",155,0)
RESVAR N NAME,UID
"RTN","CIANBUTL",156,0)
 D FMTVAR(.UID)
"RTN","CIANBUTL",157,0)
 S NAME=""
"RTN","CIANBUTL",158,0)
 F  S NAME=$O(^XTMP("CIA",UID,"V",-1,NAME)) Q:'$L(NAME)  S @NAME=^(NAME)
"RTN","CIANBUTL",159,0)
 Q
"RTN","CIANBUTL",160,0)
 ; Error handler for var calls
"RTN","CIANBUTL",161,0)
ERRVAR L -^XTMP("CIA",UID,"V",NMSP,NAME)
"RTN","CIANBUTL",162,0)
 Q:$Q 0
"RTN","CIANBUTL",163,0)
 Q
"RTN","CIANBUTL",164,0)
 ; Format arguments for var calls
"RTN","CIANBUTL",165,0)
FMTVAR(UID,NMSP,NAME) ;
"RTN","CIANBUTL",166,0)
 S UID=$G(UID,$G(CIA("UID")))
"RTN","CIANBUTL",167,0)
 S NMSP=$$UP^XLFSTR($G(NMSP,0))
"RTN","CIANBUTL",168,0)
 S NAME=$$UP^XLFSTR($G(NAME))
"RTN","CIANBUTL",169,0)
 S:NMSP=-1&$L(NAME) NAME=$NA(@NAME)
"RTN","CIANBUTL",170,0)
 Q
"RTN","CIANBUTL",171,0)
 ; Retrieve dialog text
"RTN","CIANBUTL",172,0)
 ;  NUM = Dialog number (relative or absolute)
"RTN","CIANBUTL",173,0)
 ; .DLG = Array to receive text
"RTN","CIANBUTL",174,0)
 ;  Pn  = Optional parameters (up to 3)
"RTN","CIANBUTL",175,0)
GETDLG(NUM,DLG,P1,P2,P3) ;
"RTN","CIANBUTL",176,0)
 N PAR
"RTN","CIANBUTL",177,0)
 K DLG
"RTN","CIANBUTL",178,0)
 S:NUM<10000 NUM=NUM+199412000
"RTN","CIANBUTL",179,0)
 S PAR(1)=$G(P1,$G(CIA("RPC"))),PAR(2)=$G(P2),PAR(3)=$G(P3)
"RTN","CIANBUTL",180,0)
 D BLD^DIALOG(NUM,.PAR,,"DLG")
"RTN","CIANBUTL",181,0)
 Q:$Q $G(DLG(1))
"RTN","CIANBUTL",182,0)
 Q
"RTN","CIANBUTL",183,0)
 ; Lookup option, returning IEN
"RTN","CIANBUTL",184,0)
OPTLKP(OPT) ;EP
"RTN","CIANBUTL",185,0)
 Q $S('$L($G(OPT)):0,OPT=+OPT:OPT,1:$O(^DIC(19,"B",OPT,0)))
"RTN","CIANBUTL",186,0)
 ; Get/set out-of-order message for option
"RTN","CIANBUTL",187,0)
 ;   MSG = New message (if passed, a set is performed, otherwise a get)
"RTN","CIANBUTL",188,0)
 ;   Returns current message text
"RTN","CIANBUTL",189,0)
OPTMSG(OPT,MSG) ;EP
"RTN","CIANBUTL",190,0)
 S OPT=+$$OPTLKP(.OPT)
"RTN","CIANBUTL",191,0)
 I OPT,$D(^DIC(19,OPT,0)) D                                            ; Sets naked ref
"RTN","CIANBUTL",192,0)
 .I $D(MSG) S $P(^(0),U,3)=MSG
"RTN","CIANBUTL",193,0)
 .E  S MSG=$P(^(0),U,3)
"RTN","CIANBUTL",194,0)
 E  S MSG=""
"RTN","CIANBUTL",195,0)
 Q:$Q MSG
"RTN","CIANBUTL",196,0)
 Q
"RTN","CIANBUTL",197,0)
 ; Check option for valid access
"RTN","CIANBUTL",198,0)
 ;   OPT=Option IEN or name
"RTN","CIANBUTL",199,0)
 ;   TYP=Optional option type to check
"RTN","CIANBUTL",200,0)
 ;   Returns 0 if OK, <err code>^<err param> otherwise
"RTN","CIANBUTL",201,0)
OPTCHK(OPT,TYP) ;EP
"RTN","CIANBUTL",202,0)
 N XQY,X,Y,Z
"RTN","CIANBUTL",203,0)
 S XQY=$S(OPT=+OPT:OPT,1:$$OPTLKP(OPT))
"RTN","CIANBUTL",204,0)
 Q:XQY'>0 "2^"_OPT
"RTN","CIANBUTL",205,0)
 S X=$G(^DIC(19,XQY,0)),Y=$P($G(^(3)),U),Z=$P(X,U,3)
"RTN","CIANBUTL",206,0)
 Q:$L(Z) "19^"_Z
"RTN","CIANBUTL",207,0)
 I $L($G(TYP)),$P(X,U,4)'=TYP Q "20^"_OPT_U_TYP
"RTN","CIANBUTL",208,0)
 I $P(X,U,16),$L(Y),$$KCHK^XUSRB(Y) Q "21^"_OPT_U_Y
"RTN","CIANBUTL",209,0)
 S Y=$P(X,U,6)
"RTN","CIANBUTL",210,0)
 I $L(Y),'$$KCHK^XUSRB(Y) Q "22^"_OPT_U_Y
"RTN","CIANBUTL",211,0)
 S X=$$NOW^XLFDT
"RTN","CIANBUTL",212,0)
 D ENTRY^XQ92
"RTN","CIANBUTL",213,0)
 Q:'X "23^"_OPT
"RTN","CIANBUTL",214,0)
 Q 0
"RTN","CIANBUTL",215,0)
 ; Nightly task to perform various cleanup procedures.
"RTN","CIANBUTL",216,0)
NIGHTLY ;EP
"RTN","CIANBUTL",217,0)
 D CLEANUP
"RTN","CIANBUTL",218,0)
 D DOPURGE^CIANBEVT(1)
"RTN","CIANBUTL",219,0)
 D DOPURGE^CIANBLOG
"RTN","CIANBUTL",220,0)
 Q
"SEC","^DIC",19941.2,19941.2,0,"AUDIT")
@
"SEC","^DIC",19941.2,19941.2,0,"DD")
@
"SEC","^DIC",19941.2,19941.2,0,"DEL")
@
"SEC","^DIC",19941.2,19941.2,0,"LAYGO")
@
"SEC","^DIC",19941.2,19941.2,0,"RD")
@
"SEC","^DIC",19941.2,19941.2,0,"WR")
@
"SEC","^DIC",19941.21,19941.21,0,"AUDIT")
@
"SEC","^DIC",19941.21,19941.21,0,"DD")
@
"SEC","^DIC",19941.21,19941.21,0,"DEL")
@
"SEC","^DIC",19941.21,19941.21,0,"LAYGO")
@
"SEC","^DIC",19941.21,19941.21,0,"RD")
@
"SEC","^DIC",19941.21,19941.21,0,"WR")
@
"SEC","^DIC",19941.22,19941.22,0,"AUDIT")
@
"SEC","^DIC",19941.22,19941.22,0,"DD")
@
"SEC","^DIC",19941.22,19941.22,0,"DEL")
@
"SEC","^DIC",19941.22,19941.22,0,"LAYGO")
@
"SEC","^DIC",19941.22,19941.22,0,"RD")
@
"SEC","^DIC",19941.22,19941.22,0,"WR")
@
"SEC","^DIC",19941.23,19941.23,0,"AUDIT")
@
"SEC","^DIC",19941.23,19941.23,0,"DD")
@
"SEC","^DIC",19941.23,19941.23,0,"DEL")
@
"SEC","^DIC",19941.23,19941.23,0,"LAYGO")
@
"SEC","^DIC",19941.23,19941.23,0,"RD")
@
"SEC","^DIC",19941.23,19941.23,0,"WR")
@
"SEC","^DIC",19941.24,19941.24,0,"AUDIT")
@
"SEC","^DIC",19941.24,19941.24,0,"DD")
@
"SEC","^DIC",19941.24,19941.24,0,"DEL")
@
"SEC","^DIC",19941.24,19941.24,0,"LAYGO")
@
"SEC","^DIC",19941.24,19941.24,0,"WR")
@
"TEMP","EC")

"TEMP","FINAL")

"TEMP","INITIAL")

"TEMP","PARAM",1)
CIANB AUTHENTICATION^|$$GETUCI~CIANBACT|^0
"TEMP","PARAM",2)
CIANB POLLING INTERVAL^1^3
"TEMP","PARAM",3)
CIANB RESOURCE DEVICE COUNT^1^4
"TEMP","PARAM",4)
CIANB RESOURCE DEVICE SLOTS^1^4
"TEMP","PARAM",5)
CIANB ACTIVITY RETENTION^1^30
"TEMP","PTRS",19941.212)
20^19941.21^19.1
"TEMP","PTRS",19941.2121)
21^19941.21^19.1
"TEMP","TGT")
2
"VER")
8.0^22.0
"^DD",19941.2,19941.2,0)
FIELD^^2^3
"^DD",19941.2,19941.2,0,"DT")
3021009
"^DD",19941.2,19941.2,0,"ID",1)
S %I=Y,Y=$S('$D(^(0)):"",$D(^VA(200,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(200,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",19941.2,19941.2,0,"IX","B",19941.2,.01)

"^DD",19941.2,19941.2,0,"NM","CIA AUTHENTICATION")

"^DD",19941.2,19941.2,0,"VRPK")
CIA RPC BROKER
"^DD",19941.2,19941.2,.01,0)
SID^RF^^0;1^K:$L(X)>200!($L(X)<3) X
"^DD",19941.2,19941.2,.01,1,0)
^.1
"^DD",19941.2,19941.2,.01,1,1,0)
19941.2^B
"^DD",19941.2,19941.2,.01,1,1,1)
S ^CIANB(19941.2,"B",$E(X,1,30),DA)=""
"^DD",19941.2,19941.2,.01,1,1,2)
K ^CIANB(19941.2,"B",$E(X,1,30),DA)
"^DD",19941.2,19941.2,.01,3)
Answer must be 3-200 characters in length.
"^DD",19941.2,19941.2,.01,"DT")
3021009
"^DD",19941.2,19941.2,1,0)
USER^P200'^VA(200,^0;2^Q
"^DD",19941.2,19941.2,1,"DT")
3021009
"^DD",19941.2,19941.2,2,0)
CREATED^D^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.2,19941.2,2,"DT")
3021009
"^DD",19941.21,19941.21,0)
FIELD^^7^14
"^DD",19941.21,19941.21,0,"DT")
3091007
"^DD",19941.21,19941.21,0,"IX","B",19941.21,.01)

"^DD",19941.21,19941.21,0,"NM","CIA EVENT TYPE")

"^DD",19941.21,19941.21,0,"PT",999.995,.01)

"^DD",19941.21,19941.21,0,"PT",19930.995,.01)

"^DD",19941.21,19941.21,0,"PT",19941.23,1)

"^DD",19941.21,19941.21,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19941.21,19941.21,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",19941.21,19941.21,.01,1,0)
^.1
"^DD",19941.21,19941.21,.01,1,1,0)
19941.21^B
"^DD",19941.21,19941.21,.01,1,1,1)
S ^CIANB(19941.21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.21,.01,1,1,2)
K ^CIANB(19941.21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.21,.01,3)
Answer must be 3-100 characters in length.
"^DD",19941.21,19941.21,.01,"DT")
3030611
"^DD",19941.21,19941.21,1,0)
MONITOR^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,1,3)
M code to invoke monitor for this event type
"^DD",19941.21,19941.21,1,9)
@
"^DD",19941.21,19941.21,1,"DT")
3021021
"^DD",19941.21,19941.21,2,0)
DISABLE^S^0:NO;1:YES;^0;2^Q
"^DD",19941.21,19941.21,2,3)
Enter YES to disable this event type.
"^DD",19941.21,19941.21,2,21,0)
^.001^3^3^3030810^
"^DD",19941.21,19941.21,2,21,1,0)
If set to YES, this event type is disabled.  Once disabled, any attempt to 
"^DD",19941.21,19941.21,2,21,2,0)
enqueue the event will be ignored.  Disabling an event does not affect events
"^DD",19941.21,19941.21,2,21,3,0)
already in the queue. 
"^DD",19941.21,19941.21,2,"DT")
3030810
"^DD",19941.21,19941.21,3,0)
INTERVAL^NJ11,0X^^0;3^K:X<0!(X\1'=X) X
"^DD",19941.21,19941.21,3,3)
Enter the nominal polling interval in seconds.
"^DD",19941.21,19941.21,3,21,0)
^^10^10^3021021.152235
"^DD",19941.21,19941.21,3,21,1,0)
This is the nominal polling interval for the event in seconds.
"^DD",19941.21,19941.21,3,21,2,0)
The actual polling interval is dependent on the event polling
"^DD",19941.21,19941.21,3,21,3,0)
interval set for the client application as a site parameter.
"^DD",19941.21,19941.21,3,21,4,0)
The nominal polling interval guarantees that polling for this
"^DD",19941.21,19941.21,3,21,5,0)
event will not occur more frequently than this setting.
"^DD",19941.21,19941.21,3,21,6,0)
 
"^DD",19941.21,19941.21,3,21,7,0)
For events that are infrequent and/or do not require real time
"^DD",19941.21,19941.21,3,21,8,0)
notification, higher values may be selected for this field to
"^DD",19941.21,19941.21,3,21,9,0)
mitigate impact on system load. 
"^DD",19941.21,19941.21,3,21,10,0)

"^DD",19941.21,19941.21,3,"DT")
3021021
"^DD",19941.21,19941.21,4,0)
LOG EVENT^S^0:NO;1:YES;^0;4^Q
"^DD",19941.21,19941.21,4,3)
Enter YES to enable logging of this event.
"^DD",19941.21,19941.21,4,"DT")
3030611
"^DD",19941.21,19941.21,5,0)
LOG RETENTION^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.21,19941.21,5,3)
Number of days to retain log entries.
"^DD",19941.21,19941.21,5,"DT")
3030611
"^DD",19941.21,19941.21,6,0)
POLLING METHOD^S^0:PER SESSION;1:PER INTERVAL;^0;6^Q
"^DD",19941.21,19941.21,6,3)
Determines how a monitored event is polled.
"^DD",19941.21,19941.21,6,21,0)
^^11^11^3030810.175145
"^DD",19941.21,19941.21,6,21,1,0)
For monitored events, this setting determines how the monitor is invoked
"^DD",19941.21,19941.21,6,21,2,0)
when the polling interval has been reached.  PER SESSION causes the event
"^DD",19941.21,19941.21,6,21,3,0)
monitor to be invoked for each active session, setting the user and
"^DD",19941.21,19941.21,6,21,4,0)
session context prior to each call.  PER INTERVAL cause the event monitor
"^DD",19941.21,19941.21,6,21,5,0)
to be invoked only once per interval.  No user or session context information
"^DD",19941.21,19941.21,6,21,6,0)
is available to the monitor in this case.
"^DD",19941.21,19941.21,6,21,7,0)

"^DD",19941.21,19941.21,6,21,8,0)
PER SESSION is appropriate for events that depend upon a specific user or
"^DD",19941.21,19941.21,6,21,9,0)
session (e.g., notifications).  PER INTERVAL is appropriate for events 
"^DD",19941.21,19941.21,6,21,10,0)
that are independent of a user or session (e.g., status events to display
"^DD",19941.21,19941.21,6,21,11,0)
the host date/time).
"^DD",19941.21,19941.21,6,"DT")
3030810
"^DD",19941.21,19941.21,7,0)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",19941.21,19941.21,7,12)
Restricts to Extended Action Protocols starting with CIAV
"^DD",19941.21,19941.21,7,12.1)
S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X"""
"^DD",19941.21,19941.21,7,"DT")
3091007
"^DD",19941.21,19941.21,10,0)
DISPLAY LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,10,3)
Logic to display stub info in log viewer.
"^DD",19941.21,19941.21,10,9)
@
"^DD",19941.21,19941.21,10,"DT")
3030611
"^DD",19941.21,19941.21,20,0)
PUBLICATION KEY^19941.212P^^20;0
"^DD",19941.21,19941.21,21,0)
SUBSCRIPTION KEY^19941.2121P^^21;0
"^DD",19941.21,19941.21,99,0)
DESCRIPTION^19941.2199^^99;0
"^DD",19941.21,19941.21,100,0)
ERROR DATE/TIME^D^^100;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.21,19941.21,100,3)
Date and time of last error
"^DD",19941.21,19941.21,100,"DT")
3061129
"^DD",19941.21,19941.21,101,0)
ERROR TEXT^F^^100;2^K:$L(X)>240!($L(X)<1) X
"^DD",19941.21,19941.21,101,3)
Answer must be 1-240 characters in length.
"^DD",19941.21,19941.21,101,"DT")
3061129
"^DD",19941.21,19941.212,0)
PUBLICATION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.212,0,"DT")
3021021
"^DD",19941.21,19941.212,0,"IX","B",19941.212,.01)

"^DD",19941.21,19941.212,0,"NM","PUBLICATION KEY")

"^DD",19941.21,19941.212,0,"UP")
19941.21
"^DD",19941.21,19941.212,.01,0)
PUBLICATION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.212,.01,1,0)
^.1
"^DD",19941.21,19941.212,.01,1,1,0)
19941.212^B
"^DD",19941.21,19941.212,.01,1,1,1)
S ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.212,.01,1,1,2)
K ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.212,.01,3)
Security keys required to fire this event.
"^DD",19941.21,19941.212,.01,21,0)
^^2^2^3021021.152715
"^DD",19941.21,19941.212,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.212,.01,21,2,0)
the listed keys in order to fire an event of this type.
"^DD",19941.21,19941.212,.01,"DT")
3040310
"^DD",19941.21,19941.2121,0)
SUBSCRIPTION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.2121,0,"DT")
3021021
"^DD",19941.21,19941.2121,0,"IX","B",19941.2121,.01)

"^DD",19941.21,19941.2121,0,"NM","SUBSCRIPTION KEY")

"^DD",19941.21,19941.2121,0,"UP")
19941.21
"^DD",19941.21,19941.2121,.01,0)
SUBSCRIPTION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.2121,.01,1,0)
^.1
"^DD",19941.21,19941.2121,.01,1,1,0)
19941.2121^B
"^DD",19941.21,19941.2121,.01,1,1,1)
S ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.2121,.01,1,1,2)
K ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.2121,.01,3)
Security keys required to receive this event type.
"^DD",19941.21,19941.2121,.01,21,0)
^^2^2^3021021.153002
"^DD",19941.21,19941.2121,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.2121,.01,21,2,0)
the listed keys in order subscribe to an event of this type. 
"^DD",19941.21,19941.2121,.01,"DT")
3040310
"^DD",19941.21,19941.2199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",19941.21,19941.2199,0,"DT")
3021021
"^DD",19941.21,19941.2199,0,"NM","DESCRIPTION")

"^DD",19941.21,19941.2199,0,"UP")
19941.21
"^DD",19941.21,19941.2199,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",19941.21,19941.2199,.01,3)
Enter a detailed description of this event type.
"^DD",19941.21,19941.2199,.01,"DT")
3021021
"^DD",19941.22,19941.22,0)
FIELD^^2^4
"^DD",19941.22,19941.22,0,"DT")
3031102
"^DD",19941.22,19941.22,0,"IX","B",19941.22,.01)

"^DD",19941.22,19941.22,0,"NM","CIA LISTENER")

"^DD",19941.22,19941.22,0,"VRPK")
CIA RPC BROKER
"^DD",19941.22,19941.22,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",19941.22,19941.22,.01,1,0)
^.1
"^DD",19941.22,19941.22,.01,1,1,0)
19941.22^B
"^DD",19941.22,19941.22,.01,1,1,1)
S ^CIANB(19941.22,"B",$E(X,1,30),DA)=""
"^DD",19941.22,19941.22,.01,1,1,2)
K ^CIANB(19941.22,"B",$E(X,1,30),DA)
"^DD",19941.22,19941.22,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",19941.22,19941.22,1,0)
PORT^NJ5,0^^0;2^K:+X'=X!(X>32767)!(X<1000)!(X?.E1"."1N.N) X
"^DD",19941.22,19941.22,1,3)
Enter TCP port # for this listener.
"^DD",19941.22,19941.22,1,"DT")
3030113
"^DD",19941.22,19941.22,1.5,0)
UCI^FX^^0;4^K:0[$$UCICHECK^%ZOSV(X) X
"^DD",19941.22,19941.22,1.5,3)
Enter UCI where listener will start.
"^DD",19941.22,19941.22,1.5,"DT")
3031210
"^DD",19941.22,19941.22,2,0)
DISABLE^S^0:NO;1:YES;^0;3^Q
"^DD",19941.22,19941.22,2,"DT")
3030113
"^DD",19941.23,19941.23,0)
FIELD^^10^5
"^DD",19941.23,19941.23,0,"DT")
3030611
"^DD",19941.23,19941.23,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",19941.23,19941.23,0,"IX","B",19941.23,.01)

"^DD",19941.23,19941.23,0,"IX","C",19941.23,1)

"^DD",19941.23,19941.23,0,"IX","D",19941.23,2)

"^DD",19941.23,19941.23,0,"IX","E",19941.23,3)

"^DD",19941.23,19941.23,0,"NM","CIA EVENT LOG")

"^DD",19941.23,19941.23,0,"VRPK")
CIA RPC BROKER
"^DD",19941.23,19941.23,.01,0)
TIMESTAMP^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.23,19941.23,.01,1,0)
^.1
"^DD",19941.23,19941.23,.01,1,1,0)
19941.23^B
"^DD",19941.23,19941.23,.01,1,1,1)
S ^CIANB(19941.23,"B",$E(X,1,30),DA)=""
"^DD",19941.23,19941.23,.01,1,1,2)
K ^CIANB(19941.23,"B",$E(X,1,30),DA)
"^DD",19941.23,19941.23,.01,3)
Time event was logged.
"^DD",19941.23,19941.23,.01,"DT")
3030611
"^DD",19941.23,19941.23,1,0)
EVENT NAME^RF^^0;2^K:$L(X)>100!($L(X)<1) X
"^DD",19941.23,19941.23,1,1,0)
^.1
"^DD",19941.23,19941.23,1,1,1,0)
19941.23^C
"^DD",19941.23,19941.23,1,1,1,1)
S ^CIANB(19941.23,"C",$E(X,1,30),DA)=""
"^DD",19941.23,19941.23,1,1,1,2)
K ^CIANB(19941.23,"C",$E(X,1,30),DA)
"^DD",19941.23,19941.23,1,1,1,"DT")
3030611
"^DD",19941.23,19941.23,1,3)
Name of event.
"^DD",19941.23,19941.23,1,"DT")
3030611
"^DD",19941.23,19941.23,2,0)
USER^P200'^VA(200,^0;3^Q
"^DD",19941.23,19941.23,2,1,0)
^.1
"^DD",19941.23,19941.23,2,1,1,0)
19941.23^D
"^DD",19941.23,19941.23,2,1,1,1)
S ^CIANB(19941.23,"D",$E(X,1,30),DA)=""
"^DD",19941.23,19941.23,2,1,1,2)
K ^CIANB(19941.23,"D",$E(X,1,30),DA)
"^DD",19941.23,19941.23,2,1,1,"DT")
3030611
"^DD",19941.23,19941.23,2,3)
User originating the event.
"^DD",19941.23,19941.23,2,"DT")
3030611
"^DD",19941.23,19941.23,3,0)
SESSION^NJ15,0^^0;4^K:+X'=X!(X>999999999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.23,19941.23,3,1,0)
^.1
"^DD",19941.23,19941.23,3,1,1,0)
19941.23^E
"^DD",19941.23,19941.23,3,1,1,1)
S ^CIANB(19941.23,"E",$E(X,1,30),DA)=""
"^DD",19941.23,19941.23,3,1,1,2)
K ^CIANB(19941.23,"E",$E(X,1,30),DA)
"^DD",19941.23,19941.23,3,1,1,"DT")
3030611
"^DD",19941.23,19941.23,3,3)
Session originating the event.
"^DD",19941.23,19941.23,3,"DT")
3030611
"^DD",19941.23,19941.23,10,0)
EVENT STUB^19941.232^^10;0
"^DD",19941.23,19941.232,0)
EVENT STUB SUB-FIELD^^.01^1
"^DD",19941.23,19941.232,0,"DT")
3030611
"^DD",19941.23,19941.232,0,"NM","EVENT STUB")

"^DD",19941.23,19941.232,0,"UP")
19941.23
"^DD",19941.23,19941.232,.01,0)
EVENT STUB^WL^^0;1^Q
"^DD",19941.23,19941.232,.01,3)
Data associated with event.
"^DD",19941.23,19941.232,.01,"DT")
3030611
"^DD",19941.24,19941.24,0)
FIELD^^10^7
"^DD",19941.24,19941.24,0,"DDA")
N
"^DD",19941.24,19941.24,0,"DT")
3080104
"^DD",19941.24,19941.24,0,"IX","B",19941.24,.01)

"^DD",19941.24,19941.24,0,"IX","BDIV",19941.24,5)

"^DD",19941.24,19941.24,0,"IX","BLOGIN",19941.24,3)

"^DD",19941.24,19941.24,0,"IX","BLOGOUT",19941.24,4)

"^DD",19941.24,19941.24,0,"IX","BUSER",19941.24,1)

"^DD",19941.24,19941.24,0,"IX","BWKID",19941.24,2)

"^DD",19941.24,19941.24,0,"NM","CIA ACTIVITY LOG")

"^DD",19941.24,19941.24,0,"VRPK")
CIA RPC BROKER
"^DD",19941.24,19941.24,.01,0)
SESSION ID^RNJ9,0^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.24,19941.24,.01,1,0)
^.1
"^DD",19941.24,19941.24,.01,1,1,0)
19941.24^B
"^DD",19941.24,19941.24,.01,1,1,1)
S ^CIANB(19941.24,"B",$E(X,1,30),DA)=""
"^DD",19941.24,19941.24,.01,1,1,2)
K ^CIANB(19941.24,"B",$E(X,1,30),DA)
"^DD",19941.24,19941.24,.01,3)
This is the unique identifier for the session.
"^DD",19941.24,19941.24,.01,"DT")
3080103
"^DD",19941.24,19941.24,1,0)
USER^P200'^VA(200,^0;2^Q
"^DD",19941.24,19941.24,1,1,0)
^.1
"^DD",19941.24,19941.24,1,1,1,0)
19941.24^BUSER
"^DD",19941.24,19941.24,1,1,1,1)
S ^CIANB(19941.24,"BUSER",$E(X,1,30),DA)=""
"^DD",19941.24,19941.24,1,1,1,2)
K ^CIANB(19941.24,"BUSER",$E(X,1,30),DA)
"^DD",19941.24,19941.24,1,1,1,"DT")
3080103
"^DD",19941.24,19941.24,1,3)
User associated with this session.
"^DD",19941.24,19941.24,1,"DT")
3080103
"^DD",19941.24,19941.24,2,0)
WORKSTATION ID^F^^0;3^K:$L(X)>50!($L(X)<1) X
"^DD",19941.24,19941.24,2,1,0)
^.1
"^DD",19941.24,19941.24,2,1,1,0)
19941.24^BWKID
"^DD",19941.24,19941.24,2,1,1,1)
S ^CIANB(19941.24,"BWKID",$E(X,1,30),DA)=""
"^DD",19941.24,19941.24,2,1,1,2)
K ^CIANB(19941.24,"BWKID",$E(X,1,30),DA)
"^DD",19941.24,19941.24,2,1,1,"DT")
3080103
"^DD",19941.24,19941.24,2,3)
Name of the workstation originating this session.
"^DD",19941.24,19941.24,2,"DT")
3080103
"^DD",19941.24,19941.24,3,0)
LOGIN TIME^D^^0;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.24,19941.24,3,1,0)
^.1
"^DD",19941.24,19941.24,3,1,1,0)
19941.24^BLOGIN
"^DD",19941.24,19941.24,3,1,1,1)
S ^CIANB(19941.24,"BLOGIN",$E(X,1,30),DA)=""
"^DD",19941.24,19941.24,3,1,1,2)
K ^CIANB(19941.24,"BLOGIN",$E(X,1,30),DA)
"^DD",19941.24,19941.24,3,1,1,"DT")
3080103
"^DD",19941.24,19941.24,3,3)
Time of initial login.
"^DD",19941.24,19941.24,3,"DT")
3080103
"^DD",19941.24,19941.24,4,0)
LOGOUT TIME^D^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.24,19941.24,4,1,0)
^.1
"^DD",19941.24,19941.24,4,1,1,0)
19941.24^BLOGOUT
"^DD",19941.24,19941.24,4,1,1,1)
S ^CIANB(19941.24,"BLOGOUT",$E(X,1,30),DA)=""
"^DD",19941.24,19941.24,4,1,1,2)
K ^CIANB(19941.24,"BLOGOUT",$E(X,1,30),DA)
"^DD",19941.24,19941.24,4,1,1,"DT")
3080103
"^DD",19941.24,19941.24,4,3)
Time of final logout.
"^DD",19941.24,19941.24,4,"DT")
3080103
"^DD",19941.24,19941.24,5,0)
DIVISION^P4'^DIC(4,^0;6^Q
"^DD",19941.24,19941.24,5,1,0)
^.1
"^DD",19941.24,19941.24,5,1,1,0)
19941.24^BDIV
"^DD",19941.24,19941.24,5,1,1,1)
S ^CIANB(19941.24,"BDIV",$E(X,1,30),DA)=""
"^DD",19941.24,19941.24,5,1,1,2)
K ^CIANB(19941.24,"BDIV",$E(X,1,30),DA)
"^DD",19941.24,19941.24,5,1,1,"DT")
3080104
"^DD",19941.24,19941.24,5,3)
Division user has logged into.
"^DD",19941.24,19941.24,5,"DT")
3080104
"^DD",19941.24,19941.24,10,0)
ACTIVITY^19941.241D^^10;0
"^DD",19941.24,19941.241,0)
ACTIVITY SUB-FIELD^^10^4
"^DD",19941.24,19941.241,0,"DT")
3080103
"^DD",19941.24,19941.241,0,"IX","B",19941.241,.01)

"^DD",19941.24,19941.241,0,"NM","ACTIVITY")

"^DD",19941.24,19941.241,0,"UP")
19941.24
"^DD",19941.24,19941.241,.01,0)
DATE/TIME^MD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.24,19941.241,.01,1,0)
^.1
"^DD",19941.24,19941.241,.01,1,1,0)
19941.241^B
"^DD",19941.24,19941.241,.01,1,1,1)
S ^CIANB(19941.24,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",19941.24,19941.241,.01,1,1,2)
K ^CIANB(19941.24,DA(1),10,"B",$E(X,1,30),DA)
"^DD",19941.24,19941.241,.01,"DT")
3080103
"^DD",19941.24,19941.241,1,0)
TYPE^S^1:RPC;2:EVENT;^0;2^Q
"^DD",19941.24,19941.241,1,"DT")
3080103
"^DD",19941.24,19941.241,2,0)
NAME^F^^0;3^K:$L(X)>150!($L(X)<1) X
"^DD",19941.24,19941.241,2,3)
Answer must be 1-150 characters in length.
"^DD",19941.24,19941.241,2,"DT")
3080103
"^DD",19941.24,19941.241,10,0)
LOG^19941.242^^10;0
"^DD",19941.24,19941.242,0)
LOG SUB-FIELD^^.01^1
"^DD",19941.24,19941.242,0,"DT")
3080103
"^DD",19941.24,19941.242,0,"NM","LOG")

"^DD",19941.24,19941.242,0,"UP")
19941.241
"^DD",19941.24,19941.242,.01,0)
LOG^WL^^0;1^Q
"^DD",19941.24,19941.242,.01,"DT")
3080103
"^DIC",19941.2,19941.2,0)
CIA AUTHENTICATION^19941.2
"^DIC",19941.2,19941.2,0,"GL")
^CIANB(19941.2,
"^DIC",19941.2,"B","CIA AUTHENTICATION",19941.2)

"^DIC",19941.21,19941.21,0)
CIA EVENT TYPE^19941.21
"^DIC",19941.21,19941.21,0,"GL")
^CIANB(19941.21,
"^DIC",19941.21,"B","CIA EVENT TYPE",19941.21)

"^DIC",19941.22,19941.22,0)
CIA LISTENER^19941.22
"^DIC",19941.22,19941.22,0,"GL")
^CIANB(19941.22,
"^DIC",19941.22,"B","CIA LISTENER",19941.22)

"^DIC",19941.23,19941.23,0)
CIA EVENT LOG^19941.23
"^DIC",19941.23,19941.23,0,"GL")
^CIANB(19941.23,
"^DIC",19941.23,"B","CIA EVENT LOG",19941.23)

"^DIC",19941.24,19941.24,0)
CIA ACTIVITY LOG^19941.24
"^DIC",19941.24,19941.24,0,"GL")
^CIANB(19941.24,
"^DIC",19941.24,19941.24,"%",0)
^1.005^^0
"^DIC",19941.24,19941.24,"%D",0)
^^1^1^3080103.095644
"^DIC",19941.24,19941.24,"%D",1,0)
This file logs session activities such as RPC calls and remote events.
"^DIC",19941.24,"B","CIA ACTIVITY LOG",19941.24)

**INSTALL NAME**
CAREWEB FRAMEWORK 1.0
"BLD",8485,0)
CAREWEB FRAMEWORK 1.0^CAREWEB FRAMEWORK^0^3150226^n
"BLD",8485,4,0)
^9.64PA^19941.1^3
"BLD",8485,4,999.1,0)
999.1
"BLD",8485,4,999.1,222)
y^y^f^^n^^y^o^n
"BLD",8485,4,999.1,224)
I $$SCRN^RGCWKDTP(Y,1)
"BLD",8485,4,19941.1,0)
19941.1
"BLD",8485,4,19941.1,222)
n^n^f^^n^^y^o^n
"BLD",8485,4,19941.1,224)
I $P(^(0),U)="FHIR"
"BLD",8485,4,19941.21,0)
19941.21
"BLD",8485,4,19941.21,222)
n^y^f^^y^^y^o^n
"BLD",8485,4,19941.21,224)
I $$SCRN^RGCWKDTP(Y,5)
"BLD",8485,4,"B",999.1,999.1)

"BLD",8485,4,"B",19941.1,19941.1)

"BLD",8485,4,"B",19941.21,19941.21)

"BLD",8485,6.3)
150
"BLD",8485,"ABPKG")
n
"BLD",8485,"INI")
PRE^RGCWKDIN
"BLD",8485,"INIT")
POST^RGCWKDIN
"BLD",8485,"KRN",0)
^9.67PA^8994^20
"BLD",8485,"KRN",.4,0)
.4
"BLD",8485,"KRN",.401,0)
.401
"BLD",8485,"KRN",.402,0)
.402
"BLD",8485,"KRN",.403,0)
.403
"BLD",8485,"KRN",.5,0)
.5
"BLD",8485,"KRN",.84,0)
.84
"BLD",8485,"KRN",3.6,0)
3.6
"BLD",8485,"KRN",3.8,0)
3.8
"BLD",8485,"KRN",9.2,0)
9.2
"BLD",8485,"KRN",9.8,0)
9.8
"BLD",8485,"KRN",9.8,"NM",0)
^9.68A^12^11
"BLD",8485,"KRN",9.8,"NM",1,0)
RGCWFPAR^^0^B11632488
"BLD",8485,"KRN",9.8,"NM",2,0)
RGCWFRPC^^0^B3411017
"BLD",8485,"KRN",9.8,"NM",4,0)
RGCWFUSR^^0^B13581745
"BLD",8485,"KRN",9.8,"NM",5,0)
RGCWFUTL^^0^B7704054
"BLD",8485,"KRN",9.8,"NM",6,0)
RGCWSEFR^^0^B40580756
"BLD",8485,"KRN",9.8,"NM",7,0)
RGCWSEJN^^0^B3886991
"BLD",8485,"KRN",9.8,"NM",8,0)
RGCWSER^^0^B285513777
"BLD",8485,"KRN",9.8,"NM",9,0)
RGCWSERD^^0^B6264901
"BLD",8485,"KRN",9.8,"NM",10,0)
RGCWSEF0^^0^B2599920
"BLD",8485,"KRN",9.8,"NM",11,0)
RGCWSEFL^^0^B12587723
"BLD",8485,"KRN",9.8,"NM",12,0)
RGCWSEFV^^0^B11635800
"BLD",8485,"KRN",9.8,"NM","B","RGCWFPAR",1)

"BLD",8485,"KRN",9.8,"NM","B","RGCWFRPC",2)

"BLD",8485,"KRN",9.8,"NM","B","RGCWFUSR",4)

"BLD",8485,"KRN",9.8,"NM","B","RGCWFUTL",5)

"BLD",8485,"KRN",9.8,"NM","B","RGCWSEF0",10)

"BLD",8485,"KRN",9.8,"NM","B","RGCWSEFL",11)

"BLD",8485,"KRN",9.8,"NM","B","RGCWSEFR",6)

"BLD",8485,"KRN",9.8,"NM","B","RGCWSEFV",12)

"BLD",8485,"KRN",9.8,"NM","B","RGCWSEJN",7)

"BLD",8485,"KRN",9.8,"NM","B","RGCWSER",8)

"BLD",8485,"KRN",9.8,"NM","B","RGCWSERD",9)

"BLD",8485,"KRN",19,0)
19
"BLD",8485,"KRN",19,"NM",0)
^9.68A^6^5
"BLD",8485,"KRN",19,"NM",2,0)
RGCWF MANAGER^^0
"BLD",8485,"KRN",19,"NM",3,0)
RGCWF SHOW USERS^^0
"BLD",8485,"KRN",19,"NM",4,0)
RGCWF SHUTDOWN ABORT^^0
"BLD",8485,"KRN",19,"NM",5,0)
RGCWF SHUTDOWN START^^0
"BLD",8485,"KRN",19,"NM",6,0)
RGCWF CAREWEB FRAMEWORK^^0
"BLD",8485,"KRN",19,"NM","B","RGCWF CAREWEB FRAMEWORK",6)

"BLD",8485,"KRN",19,"NM","B","RGCWF MANAGER",2)

"BLD",8485,"KRN",19,"NM","B","RGCWF SHOW USERS",3)

"BLD",8485,"KRN",19,"NM","B","RGCWF SHUTDOWN ABORT",4)

"BLD",8485,"KRN",19,"NM","B","RGCWF SHUTDOWN START",5)

"BLD",8485,"KRN",19.1,0)
19.1
"BLD",8485,"KRN",19.1,"NM",0)
^9.68A^2^2
"BLD",8485,"KRN",19.1,"NM",1,0)
RGCWF DESIGNER^^0
"BLD",8485,"KRN",19.1,"NM",2,0)
RGCWF MANAGER^^0
"BLD",8485,"KRN",19.1,"NM","B","RGCWF DESIGNER",1)

"BLD",8485,"KRN",19.1,"NM","B","RGCWF MANAGER",2)

"BLD",8485,"KRN",101,0)
101
"BLD",8485,"KRN",101,"NM",0)
^9.68A^^0
"BLD",8485,"KRN",409.61,0)
409.61
"BLD",8485,"KRN",771,0)
771
"BLD",8485,"KRN",779.2,0)
779.2
"BLD",8485,"KRN",870,0)
870
"BLD",8485,"KRN",8989.51,0)
8989.51
"BLD",8485,"KRN",8989.51,"NM",0)
^9.68A^14^13
"BLD",8485,"KRN",8989.51,"NM",1,0)
RGCWF.INITIAL.SECTION^^0
"BLD",8485,"KRN",8989.51,"NM",2,0)
RGCWF.LAYOUT.ASSOCIATION^^0
"BLD",8485,"KRN",8989.51,"NM",3,0)
RGCWF.LAYOUT.PRIVATE^^0
"BLD",8485,"KRN",8989.51,"NM",4,0)
RGCWF.LAYOUT.SHARED^^0
"BLD",8485,"KRN",8989.51,"NM",6,0)
RGCWF.PATIENT.FORCE.SELECT^^0
"BLD",8485,"KRN",8989.51,"NM",7,0)
RGCWF.PATIENT.LIST.DATES^^0
"BLD",8485,"KRN",8989.51,"NM",8,0)
RGCWF.PATIENT.LIST.FAVORITES^^0
"BLD",8485,"KRN",8989.51,"NM",9,0)
RGCWF.PATIENT.LIST.MRU^^0
"BLD",8485,"KRN",8989.51,"NM",10,0)
RGCWF.PATIENT.LIST.MRU.SIZE^^0
"BLD",8485,"KRN",8989.51,"NM",11,0)
RGCWF.PATIENT.LIST.PERSONAL^^0
"BLD",8485,"KRN",8989.51,"NM",12,0)
RGCWF.SAVED.RESPONSES^^0
"BLD",8485,"KRN",8989.51,"NM",13,0)
RGCWF.THEME^^0
"BLD",8485,"KRN",8989.51,"NM",14,0)
RGCWF.DESIGN.FAVORITES^^0
"BLD",8485,"KRN",8989.51,"NM","B","RGCWF.DESIGN.FAVORITES",14)

"BLD",8485,"KRN",8989.51,"NM","B","RGCWF.INITIAL.SECTION",1)

"BLD",8485,"KRN",8989.51,"NM","B","RGCWF.LAYOUT.ASSOCIATION",2)

"BLD",8485,"KRN",8989.51,"NM","B","RGCWF.LAYOUT.PRIVATE",3)

"BLD",8485,"KRN",8989.51,"NM","B","RGCWF.LAYOUT.SHARED",4)

"BLD",8485,"KRN",8989.51,"NM","B","RGCWF.PATIENT.FORCE.SELECT",6)

"BLD",8485,"KRN",8989.51,"NM","B","RGCWF.PATIENT.LIST.DATES",7)

"BLD",8485,"KRN",8989.51,"NM","B","RGCWF.PATIENT.LIST.FAVORITES",8)

"BLD",8485,"KRN",8989.51,"NM","B","RGCWF.PATIENT.LIST.MRU",9)

"BLD",8485,"KRN",8989.51,"NM","B","RGCWF.PATIENT.LIST.MRU.SIZE",10)

"BLD",8485,"KRN",8989.51,"NM","B","RGCWF.PATIENT.LIST.PERSONAL",11)

"BLD",8485,"KRN",8989.51,"NM","B","RGCWF.SAVED.RESPONSES",12)

"BLD",8485,"KRN",8989.51,"NM","B","RGCWF.THEME",13)

"BLD",8485,"KRN",8989.52,0)
8989.52
"BLD",8485,"KRN",8989.52,"NM",0)
^9.68A^^0
"BLD",8485,"KRN",8994,0)
8994
"BLD",8485,"KRN",8994,"NM",0)
^9.68A^28^25
"BLD",8485,"KRN",8994,"NM",1,0)
RGCWFPAR GETPAR^^0
"BLD",8485,"KRN",8994,"NM",2,0)
RGCWFPAR GETPARLI^^0
"BLD",8485,"KRN",8994,"NM",3,0)
RGCWFPAR GETPARPF^^0
"BLD",8485,"KRN",8994,"NM",4,0)
RGCWFPAR GETPARWP^^0
"BLD",8485,"KRN",8994,"NM",5,0)
RGCWFPAR SETPAR^^0
"BLD",8485,"KRN",8994,"NM",6,0)
RGCWFRPC DISV^^0
"BLD",8485,"KRN",8994,"NM",7,0)
RGCWFRPC GETIDX^^0
"BLD",8485,"KRN",8994,"NM",8,0)
RGCWFRPC GETVAR^^0
"BLD",8485,"KRN",8994,"NM",9,0)
RGCWFRPC PATCH^^0
"BLD",8485,"KRN",8994,"NM",10,0)
RGCWFRPC SETVAR^^0
"BLD",8485,"KRN",8994,"NM",11,0)
RGCWFPAR GETINST^^0
"BLD",8485,"KRN",8994,"NM",12,0)
RGCWFRPC VERSION^^0
"BLD",8485,"KRN",8994,"NM",16,0)
RGCWFUSR GETALRTS^^0
"BLD",8485,"KRN",8994,"NM",17,0)
RGCWFUSR GETPRIV^^0
"BLD",8485,"KRN",8994,"NM",18,0)
RGCWFUSR HASESIG^^0
"BLD",8485,"KRN",8994,"NM",19,0)
RGCWFUSR HASFMCD^^0
"BLD",8485,"KRN",8994,"NM",20,0)
RGCWFUSR HASKEYS^^0
"BLD",8485,"KRN",8994,"NM",21,0)
RGCWFUSR LOOKUP^^0
"BLD",8485,"KRN",8994,"NM",22,0)
RGCWFUSR STORESIG^^0
"BLD",8485,"KRN",8994,"NM",23,0)
RGCWFUSR VALIDPSW^^0
"BLD",8485,"KRN",8994,"NM",24,0)
RGCWFUSR VALIDSIG^^0
"BLD",8485,"KRN",8994,"NM",25,0)
RGCWFUSR VALINSIG^^0
"BLD",8485,"KRN",8994,"NM",26,0)
RGCWFPAR GETTMPL^^0
"BLD",8485,"KRN",8994,"NM",27,0)
RGCWSER FETCH^^0
"BLD",8485,"KRN",8994,"NM",28,0)
RGCWSER REST^^0
"BLD",8485,"KRN",8994,"NM","B","RGCWFPAR GETINST",11)

"BLD",8485,"KRN",8994,"NM","B","RGCWFPAR GETPAR",1)

"BLD",8485,"KRN",8994,"NM","B","RGCWFPAR GETPARLI",2)

"BLD",8485,"KRN",8994,"NM","B","RGCWFPAR GETPARPF",3)

"BLD",8485,"KRN",8994,"NM","B","RGCWFPAR GETPARWP",4)

"BLD",8485,"KRN",8994,"NM","B","RGCWFPAR GETTMPL",26)

"BLD",8485,"KRN",8994,"NM","B","RGCWFPAR SETPAR",5)

"BLD",8485,"KRN",8994,"NM","B","RGCWFRPC DISV",6)

"BLD",8485,"KRN",8994,"NM","B","RGCWFRPC GETIDX",7)

"BLD",8485,"KRN",8994,"NM","B","RGCWFRPC GETVAR",8)

"BLD",8485,"KRN",8994,"NM","B","RGCWFRPC PATCH",9)

"BLD",8485,"KRN",8994,"NM","B","RGCWFRPC SETVAR",10)

"BLD",8485,"KRN",8994,"NM","B","RGCWFRPC VERSION",12)

"BLD",8485,"KRN",8994,"NM","B","RGCWFUSR GETALRTS",16)

"BLD",8485,"KRN",8994,"NM","B","RGCWFUSR GETPRIV",17)

"BLD",8485,"KRN",8994,"NM","B","RGCWFUSR HASESIG",18)

"BLD",8485,"KRN",8994,"NM","B","RGCWFUSR HASFMCD",19)

"BLD",8485,"KRN",8994,"NM","B","RGCWFUSR HASKEYS",20)

"BLD",8485,"KRN",8994,"NM","B","RGCWFUSR LOOKUP",21)

"BLD",8485,"KRN",8994,"NM","B","RGCWFUSR STORESIG",22)

"BLD",8485,"KRN",8994,"NM","B","RGCWFUSR VALIDPSW",23)

"BLD",8485,"KRN",8994,"NM","B","RGCWFUSR VALIDSIG",24)

"BLD",8485,"KRN",8994,"NM","B","RGCWFUSR VALINSIG",25)

"BLD",8485,"KRN",8994,"NM","B","RGCWSER FETCH",27)

"BLD",8485,"KRN",8994,"NM","B","RGCWSER REST",28)

"BLD",8485,"KRN","B",.4,.4)

"BLD",8485,"KRN","B",.401,.401)

"BLD",8485,"KRN","B",.402,.402)

"BLD",8485,"KRN","B",.403,.403)

"BLD",8485,"KRN","B",.5,.5)

"BLD",8485,"KRN","B",.84,.84)

"BLD",8485,"KRN","B",3.6,3.6)

"BLD",8485,"KRN","B",3.8,3.8)

"BLD",8485,"KRN","B",9.2,9.2)

"BLD",8485,"KRN","B",9.8,9.8)

"BLD",8485,"KRN","B",19,19)

"BLD",8485,"KRN","B",19.1,19.1)

"BLD",8485,"KRN","B",101,101)

"BLD",8485,"KRN","B",409.61,409.61)

"BLD",8485,"KRN","B",771,771)

"BLD",8485,"KRN","B",779.2,779.2)

"BLD",8485,"KRN","B",870,870)

"BLD",8485,"KRN","B",8989.51,8989.51)

"BLD",8485,"KRN","B",8989.52,8989.52)

"BLD",8485,"KRN","B",8994,8994)

"BLD",8485,"PRE")
RGCWKDIN
"BLD",8485,"PRET")
PRETRANS^RGCWKDTP
"BLD",8485,"QUES",0)
^9.62^^
"BLD",8485,"REQB",0)
^9.611^^
"DATA",999.1,1,0)
DSTU1^text/xml^RGCWSEFR
"DATA",999.1,1,10,0)
^999.11^40^40
"DATA",999.1,1,10,1,0)
Binary
"DATA",999.1,1,10,1,10)
D COMPID^RGCWSER
"DATA",999.1,1,10,2,0)
Binary_8925^1^8925
"DATA",999.1,1,10,2,30,0)
^999.12I^1^1
"DATA",999.1,1,10,2,30,1,0)
content:text/plain^^C^10
"DATA",999.1,1,10,2,30,1,10)
N TXT,ERR D TGET^TIUSRVR1(.TXT,IEN) S ERR='$D(@TXT) D ADDARY^RGCWSER(TXT,"BL"):'ERR,SETERR^RGCWSER(404,"Not found"):ERR K @TXT
"DATA",999.1,1,10,3,0)
Condition^^9000011
"DATA",999.1,1,10,3,30,0)
^999.12I^8^8
"DATA",999.1,1,10,3,30,1,0)
subject^.02^C^10
"DATA",999.1,1,10,3,30,1,10)
D REF(PN,"Patient",.VL)
"DATA",999.1,1,10,3,30,2,0)
code:start^^C^20
"DATA",999.1,1,10,3,30,2,10)
D ADDTAG(PN)
"DATA",999.1,1,10,3,30,3,0)
coding^.01^O^20.1
"DATA",999.1,1,10,3,30,3,10)
*/ICD9
"DATA",999.1,1,10,3,30,4,0)
code:end^.05^C^20.2
"DATA",999.1,1,10,3,30,4,10)
D PUT("text",VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,3,30,5,0)
category^^C^30
"DATA",999.1,1,10,3,30,6,0)
status^^C^40
"DATA",999.1,1,10,3,30,7,0)
onsetDate^.13^D^50
"DATA",999.1,1,10,3,30,8,0)
abatementDate^1.07^D^60
"DATA",999.1,1,10,3,40,0)
^999.13I^4^4
"DATA",999.1,1,10,3,40,1,0)
subject^.02^N^10
"DATA",999.1,1,10,3,40,1,20)
S X=$$COHORT(PN,$NA(^AUPNPROB("AC")))
"DATA",999.1,1,10,3,40,2,0)
onset^.13^D^20
"DATA",999.1,1,10,3,40,3,0)
subject:Patient^.02^N^10
"DATA",999.1,1,10,3,40,3,20)
S X=$$COHORT(PN,$NA(^AUPNPROB("AC")))
"DATA",999.1,1,10,3,40,4,0)
_id^.001^N^30
"DATA",999.1,1,10,4,0)
DocumentReference^^8925
"DATA",999.1,1,10,4,30,0)
^999.12I^11^11
"DATA",999.1,1,10,4,30,1,0)
description^1701^F^10
"DATA",999.1,1,10,4,30,2,0)
type^.01^C^30
"DATA",999.1,1,10,4,30,2,10)
D ADDTAG(PN),CODING("#8925.1",VL("I"),VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,4,30,3,0)
subject^.02^C^60
"DATA",999.1,1,10,4,30,3,10)
D REF(PN,"Patient",.VL)
"DATA",999.1,1,10,4,30,4,0)
author^1202^C^70
"DATA",999.1,1,10,4,30,4,10)
D REF(PN,"Practitioner",.VL)
"DATA",999.1,1,10,4,30,5,0)
mimeType^^F^90
"DATA",999.1,1,10,4,30,5,10)
D PUT(PN,"text/plain")
"DATA",999.1,1,10,4,30,6,0)
created^1201^D^100
"DATA",999.1,1,10,4,30,7,0)
period:start^.07^C^110
"DATA",999.1,1,10,4,30,7,10)
D ADDTAG("context"),ADDTAG(PN),PUTDT(PN(1),VL("I"))
"DATA",999.1,1,10,4,30,8,0)
period:end^.08^C^110.1
"DATA",999.1,1,10,4,30,8,10)
D PUTDT(PN(1),VL("I")),ENDTAG("context")
"DATA",999.1,1,10,4,30,9,0)
location^.001^C^130
"DATA",999.1,1,10,4,30,9,10)
D PUT(PN,$$HOST^RGCWSER("*/Binary/8925:"_VL("I")))
"DATA",999.1,1,10,4,30,10,0)
masterIdentifier^.001^C^140
"DATA",999.1,1,10,4,30,10,10)
D ADDTAG(PN),PUT("value",$$SYSUUID^RGCWSER_"/Document/"_VL("I")),ENDTAG(PN)
"DATA",999.1,1,10,4,30,11,0)
status^.05^C^40
"DATA",999.1,1,10,4,40,0)
^999.13I^6^6
"DATA",999.1,1,10,4,40,1,0)
subject:Patient^.02^R^10
"DATA",999.1,1,10,4,40,1,20)
S X=$$COHORT(PN,$NA(^TIU(8925,"C")))
"DATA",999.1,1,10,4,40,2,0)
period^1301^D^20
"DATA",999.1,1,10,4,40,3,0)
type^.01^T^30
"DATA",999.1,1,10,4,40,4,0)
author^1202^R^40
"DATA",999.1,1,10,4,40,5,0)
_id^.001^N^50
"DATA",999.1,1,10,4,40,6,0)
indexed^1301^D^60
"DATA",999.1,1,10,5,0)
Encounter^^9000010
"DATA",999.1,1,10,5,30,0)
^999.12I^9^9
"DATA",999.1,1,10,5,30,1,0)
status^^C^10
"DATA",999.1,1,10,5,30,1,10)
D PUT(PN,"finished")
"DATA",999.1,1,10,5,30,2,0)
class^.07^C^20
"DATA",999.1,1,10,5,30,2,10)
N X S X=VL("I") D PUT(PN,$S(X="H":"inpatient",X="A":"ambulatory",X="T":"virtual",1:""))
"DATA",999.1,1,10,5,30,3,0)
subject^.05^C^30
"DATA",999.1,1,10,5,30,3,10)
D REF(PN,"Patient",.VL)
"DATA",999.1,1,10,5,30,4,0)
period:start^.01^C^40
"DATA",999.1,1,10,5,30,4,10)
D ADDTAG(PN),PUTDT(PN(1),VL("I"))
"DATA",999.1,1,10,5,30,5,0)
period:end^.18^C^40.1
"DATA",999.1,1,10,5,30,5,10)
D PUTDT(PN(1),VL("I")),ENDTAG(PN)
"DATA",999.1,1,10,5,30,6,0)
location^.22^C^60
"DATA",999.1,1,10,5,30,6,10)
D:VL("I") ADDTAG(PN),REF(PN,"Location",.VL),ENDTAG(PN)
"DATA",999.1,1,10,5,30,7,0)
visitid^15001^C^70
"DATA",999.1,1,10,5,30,7,10)
D IDENT("@identifiers/visits",VL("I"),PN,"official")
"DATA",999.1,1,10,5,30,8,0)
type^.07^C^80
"DATA",999.1,1,10,5,30,8,10)
D ADDTAG(PN),ADDTAG("coding"),PUT("system",$$LOCALSYS^RGCWSER("types/visits")),PUT("code",VL("I")),PUT("display",VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,5,30,9,0)
participant^^C^90
"DATA",999.1,1,10,5,30,9,10)
N PRV F PRV=0:0 S PRV=$O(^AUPNVPRV("AD",IEN,PRV)) Q:'PRV  D FETCH^RGCWSER(.DATA,"*/Encounter_Participant",PRV,PN)
"DATA",999.1,1,10,5,40,0)
^999.13I^5^5
"DATA",999.1,1,10,5,40,1,0)
subject^.05^R^10
"DATA",999.1,1,10,5,40,1,20)
S X=$$COHORT(PN,$NA(^AUPNVSIT("C")))
"DATA",999.1,1,10,5,40,2,0)
type^.07^T^20
"DATA",999.1,1,10,5,40,3,0)
date^.01,.18^D^20
"DATA",999.1,1,10,5,40,4,0)
subject:Patient^.05^R^10
"DATA",999.1,1,10,5,40,4,20)
S X=$$COHORT(PN,$NA(^AUPNVSIT("C")))
"DATA",999.1,1,10,5,40,5,0)
_id^.001^N^30
"DATA",999.1,1,10,6,0)
Encounter_Participant^1^9000010.06
"DATA",999.1,1,10,6,30,0)
^999.12I^3^3
"DATA",999.1,1,10,6,30,1,0)
type^.04^C^10
"DATA",999.1,1,10,6,30,1,10)
D:VL ADDTAG(PN),ADDTAG("coding"),PUT("system","http://hl7.org/fhir/v3/ParticipationType"),PUT("code",VL("I")_"PRF"),ENDTAG(PN)
"DATA",999.1,1,10,6,30,2,0)
individual^.01^C^20
"DATA",999.1,1,10,6,30,2,10)
D REF(PN,"Practitioner",.VL)
"DATA",999.1,1,10,6,30,3,0)
type^.05^C^10.1
"DATA",999.1,1,10,6,30,3,10)
D:VL ADDTAG(PN),ADDTAG("coding"),PUT("system","http://hl7.org/fhir/v3/ParticipationType"),PUT("code",$S(VL("I")="A":"ATND",1:"PRF")),ENDTAG(PN)
"DATA",999.1,1,10,7,0)
ICD9^1^80
"DATA",999.1,1,10,7,30,0)
^999.12^3^3
"DATA",999.1,1,10,7,30,1,0)
system^^C^20
"DATA",999.1,1,10,7,30,1,10)
D PUT("system","http://hl7.org/fhir/sid/icd-9")
"DATA",999.1,1,10,7,30,2,0)
code^.01^F^30
"DATA",999.1,1,10,7,30,3,0)
display^3^F^40
"DATA",999.1,1,10,8,0)
Location^^44
"DATA",999.1,1,10,8,30,0)
^999.12I^4^4
"DATA",999.1,1,10,8,30,1,0)
name^.01^F^10
"DATA",999.1,1,10,8,30,2,0)
description^10^F^20
"DATA",999.1,1,10,8,30,3,0)
managingOrganization^3^C^30
"DATA",999.1,1,10,8,30,3,10)
D REF(PN,"Organization",.VL)
"DATA",999.1,1,10,8,30,4,0)
telecom:phone:work^99^C^40
"DATA",999.1,1,10,8,30,4,10)
D TELECOM
"DATA",999.1,1,10,8,40,0)
^999.13I^1^1
"DATA",999.1,1,10,8,40,1,0)
_id^.001^N^10
"DATA",999.1,1,10,9,0)
Observation
"DATA",999.1,1,10,9,20)
D RETRIEVE^RGCWSEF0
"DATA",999.1,1,10,9,30,0)
^999.12I^19^19
"DATA",999.1,1,10,9,30,1,0)
issued^issued^D^60
"DATA",999.1,1,10,9,30,2,0)
status^status^F^70
"DATA",999.1,1,10,9,30,3,0)
reliability^reliability^F^80
"DATA",999.1,1,10,9,30,4,0)
subject^patient^C^120
"DATA",999.1,1,10,9,30,4,10)
D REF(PN,"Patient",.VL)
"DATA",999.1,1,10,9,30,5,0)
referenceRange^low^C^150
"DATA",999.1,1,10,9,30,5,10)
D ADDTAG(PN) D:$D(VL("I")) ADDTAG("low"),PUT("value",VL("I")),ENDTAG("low")
"DATA",999.1,1,10,9,30,6,0)
referenceRange^high^C^150.1
"DATA",999.1,1,10,9,30,6,10)
D:$D(VL("I")) ADDTAG("high"),PUT("value",VL("I")),ENDTAG("high") D ENDTAG(PN)
"DATA",999.1,1,10,9,30,7,0)
comments^comments^F^40
"DATA",999.1,1,10,9,30,8,0)
appliesDateTime^collected^D^50
"DATA",999.1,1,10,9,30,9,0)
identifier^id^C^110
"DATA",999.1,1,10,9,30,9,10)
D ADDTAG(PN),PUT("system",$$LOCALSYS^RGCWSER("observation")),PUT("value",VL("I")),ENDTAG(PN)
"DATA",999.1,1,10,9,30,10,0)
name^name_system^C^10
"DATA",999.1,1,10,9,30,10,10)
D ADDTAG(PN),ADDTAG("coding"),PUT("system",VL("E"))
"DATA",999.1,1,10,9,30,11,0)
valueQuantity^value,units^C^20
"DATA",999.1,1,10,9,30,11,10)
I $D(VL("I")),$$ISQUANT^RGCWSEF0(VL("I")) D ADDTAG(PN),PUT("value",VL("I")) D:$D(VL(2,"I")) PUT("units",VL(2,"I")) D ENDTAG(PN)
"DATA",999.1,1,10,9,30,12,0)
interpretation^interpretation^C^30
"DATA",999.1,1,10,9,30,12,10)
D:$D(VL("E")) ADDTAG(PN),PUT("text",VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,9,30,13,0)
bodySite^^C^90
"DATA",999.1,1,10,9,30,14,0)
method^^C^100
"DATA",999.1,1,10,9,30,15,0)
specimen^^C^130
"DATA",999.1,1,10,9,30,16,0)
performer^^C^140
"DATA",999.1,1,10,9,30,17,0)
name^name^C^10.1
"DATA",999.1,1,10,9,30,17,10)
D PUT("code",VL("I")),PUT("display",VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,9,30,18,0)
valueString^value^C^20.1
"DATA",999.1,1,10,9,30,18,10)
I $D(VL("I")),'$$ISQUANT^RGCWSEF0(VL("I")) D ADDTAG(PN),PUT("value",VL("I")),ENDTAG(PN)
"DATA",999.1,1,10,9,30,19,0)
@id^id^C^1
"DATA",999.1,1,10,9,40,0)
^999.13I^2^2
"DATA",999.1,1,10,9,40,1,0)
subject:Patient^patient^R^10
"DATA",999.1,1,10,9,40,1,10)

"DATA",999.1,1,10,9,40,1,20)
S X=$$OBS^RGCWSEF0(PARAMS("subject:Patient",1,1))
"DATA",999.1,1,10,9,40,2,0)
name^name^T^10
"DATA",999.1,1,10,10,0)
Organization^^4
"DATA",999.1,1,10,10,30,0)
^999.12^3^3
"DATA",999.1,1,10,10,30,1,0)
name^.01^F^20
"DATA",999.1,1,10,10,30,2,0)
active^^C^10
"DATA",999.1,1,10,10,30,2,10)
D PUT(PN,"true")
"DATA",999.1,1,10,10,30,3,0)
address^.001^O^40
"DATA",999.1,1,10,10,30,3,10)
*/Organization_Address
"DATA",999.1,1,10,11,0)
Organization_Address^1^4
"DATA",999.1,1,10,11,30,0)
^999.12^6^6
"DATA",999.1,1,10,11,30,1,0)
use^^C^10
"DATA",999.1,1,10,11,30,1,10)
D PUT(PN,"official")
"DATA",999.1,1,10,11,30,2,0)
line:1^1.01^F^20
"DATA",999.1,1,10,11,30,3,0)
line:2^1.02^F^20.1
"DATA",999.1,1,10,11,30,4,0)
city^1.03^F^50
"DATA",999.1,1,10,11,30,5,0)
state:state^.02^F^60
"DATA",999.1,1,10,11,30,6,0)
zip^1.04^F^80
"DATA",999.1,1,10,12,0)
Organization_Reference^1^4
"DATA",999.1,1,10,12,30,0)
^999.12^2^2
"DATA",999.1,1,10,12,30,1,0)
reference^^C^10
"DATA",999.1,1,10,12,30,1,10)
D PUT(PN,"Organization/"_IEN)
"DATA",999.1,1,10,12,30,2,0)
display^.01^F^20
"DATA",999.1,1,10,13,0)
Patient^^2
"DATA",999.1,1,10,13,30,0)
^999.12I^14^14
"DATA",999.1,1,10,13,30,1,0)
name^.01^C^10
"DATA",999.1,1,10,13,30,1,10)
D NAME(VL("I"))
"DATA",999.1,1,10,13,30,2,0)
gender^.02^C^20
"DATA",999.1,1,10,13,30,2,10)
D:VL ADDTAG(PN),ADDTAG("coding"),PUT("system","http://hl7.org/fhir/v3/AdministrativeGender"),PUT("code",VL("I")),PUT("display",VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,13,30,3,0)
birthDate^.03^D^30
"DATA",999.1,1,10,13,30,4,0)
deceasedDateTime^.351^D^50
"DATA",999.1,1,10,13,30,5,0)
MRN^^C^60
"DATA",999.1,1,10,13,30,5,10)
D IDENT("@identifiers/patients",$$HRN^RGCWPTCX(IEN),PN)
"DATA",999.1,1,10,13,30,6,0)
managingOrganization^^C^80
"DATA",999.1,1,10,13,30,6,10)
D FETCH^RGCWSER(.DATA,"*/Organization_Reference",DUZ(2),PN)
"DATA",999.1,1,10,13,30,7,0)
photo^^C^80
"DATA",999.1,1,10,13,30,7,10)
Q:'$L($T(^MAGGTIG))  N X,Y D PHOTOS^MAGGTIG(.X,IEN) F Y=0:0 S Y=$O(X(Y)) Q:'Y  S X=$P(X(Y),U,3) I $E(X,1,4)="http" D ADDTAG(PN),PUT("contentType","image/"_$P(X,".",$L(X,"."))),PUT("url",X),ENDTAG(PN)
"DATA",999.1,1,10,13,30,8,0)
telecom:phone:home^.131^C^100
"DATA",999.1,1,10,13,30,8,10)
D TELECOM
"DATA",999.1,1,10,13,30,9,0)
telecom:phone:mobile^.134^C^110
"DATA",999.1,1,10,13,30,9,10)
D TELECOM
"DATA",999.1,1,10,13,30,10,0)
telecom:phone:work^.132^C^120
"DATA",999.1,1,10,13,30,10,10)
D TELECOM
"DATA",999.1,1,10,13,30,11,0)
address^.001^O^130
"DATA",999.1,1,10,13,30,11,10)
*/Patient_Address_Home
"DATA",999.1,1,10,13,30,12,0)
telecom:fax:home^.136^C^140
"DATA",999.1,1,10,13,30,12,10)
D TELECOM
"DATA",999.1,1,10,13,30,13,0)
extension url="http\://hl7.org/fhir/Profile/us-core#race"^2^M^1
"DATA",999.1,1,10,13,30,13,10)
*/Patient_Race
"DATA",999.1,1,10,13,30,14,0)
SSN^.09^C^60
"DATA",999.1,1,10,13,30,14,10)
D IDENT("http://hl7.org/fhir/sid/us-ssn",VL("E"),PN)
"DATA",999.1,1,10,13,40,0)
^999.13I^6^6
"DATA",999.1,1,10,13,40,1,0)
_id^.001^N^10
"DATA",999.1,1,10,13,40,2,0)
family^.01^S^20
"DATA",999.1,1,10,13,40,2,10)
D OPRNAME(VL("E"),1) K PVAL
"DATA",999.1,1,10,13,40,2,20)
S X="$$NAMEITER^RGCWPTCX"
"DATA",999.1,1,10,13,40,3,0)
given^.01^S^30
"DATA",999.1,1,10,13,40,3,10)
D OPRNAME(VL("E"),2) K PVAL
"DATA",999.1,1,10,13,40,4,0)
gender^.02^T^40
"DATA",999.1,1,10,13,40,5,0)
birthdate^.03^D^15
"DATA",999.1,1,10,13,40,6,0)
identifier^.09^T^5
"DATA",999.1,1,10,13,40,6,10)
S MATCH=PVAL=$$HRN^RGCWPTCX(IEN),PVAL=$TR(PVAL,"-") S:MATCH TP=""
"DATA",999.1,1,10,14,0)
Patient/#/Condition
"DATA",999.1,1,10,14,10)
D COMPRT($NA(^AUPNPROB("AC")))
"DATA",999.1,1,10,15,0)
Patient/#/DocumentReference
"DATA",999.1,1,10,15,10)
D COMPRT($NA(^TIU(8925,"C")))
"DATA",999.1,1,10,16,0)
Patient/#/Encounter
"DATA",999.1,1,10,16,10)
D COMPRT($NA(^AUPNVSIT("C")))
"DATA",999.1,1,10,17,0)
Patient/#/Observation
"DATA",999.1,1,10,17,10)
D COMPRT($$OBS^RGCWSEF0($P(PATH,"/",3)),1)
"DATA",999.1,1,10,18,0)
Patient_Address_Home^1^2
"DATA",999.1,1,10,18,30,0)
^999.12^9^9
"DATA",999.1,1,10,18,30,1,0)
use^^C^10
"DATA",999.1,1,10,18,30,1,10)
D PUT(PN,"home")
"DATA",999.1,1,10,18,30,2,0)
line:1^.111^F^20
"DATA",999.1,1,10,18,30,3,0)
line:2^.112^F^20.1
"DATA",999.1,1,10,18,30,4,0)
line:3^.113^F^20.2
"DATA",999.1,1,10,18,30,5,0)
city^.114^F^50
"DATA",999.1,1,10,18,30,6,0)
state:state^6^F^60
"DATA",999.1,1,10,18,30,7,0)
state:province^.1171^F^70
"DATA",999.1,1,10,18,30,8,0)
zip^.116^F^80
"DATA",999.1,1,10,18,30,9,0)
country^.1173^F^90
"DATA",999.1,1,10,19,0)
Patient_Race^1^2.02
"DATA",999.1,1,10,19,30,0)
^999.12^1^1
"DATA",999.1,1,10,19,30,1,0)
valueCodeableConcept^.01^C^10
"DATA",999.1,1,10,19,30,1,10)
D:VL ADDTAG(PN),PUT("text",VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,20,0)
Practitioner^^200
"DATA",999.1,1,10,20,30,0)
^999.12^8^8
"DATA",999.1,1,10,20,30,1,0)
name^.01^C^10
"DATA",999.1,1,10,20,30,1,10)
D NAME(VL("I"))
"DATA",999.1,1,10,20,30,2,0)
telecom:phone:home^.132^C^20
"DATA",999.1,1,10,20,30,2,10)
D TELECOM
"DATA",999.1,1,10,20,30,3,0)
telecom:phone:work^.131^C^30
"DATA",999.1,1,10,20,30,3,10)
D TELECOM
"DATA",999.1,1,10,20,30,4,0)
telecom:fax:work^.136^C^40
"DATA",999.1,1,10,20,30,4,10)
D TELECOM
"DATA",999.1,1,10,20,30,5,0)
DEA^53.2^C^50
"DATA",999.1,1,10,20,30,5,10)
D IDENT("",VL("E"),PN,"official")
"DATA",999.1,1,10,20,30,6,0)
gender^4^C^40
"DATA",999.1,1,10,20,30,6,10)
D:VL ADDTAG(PN),ADDTAG("coding"),PUT("system","http://hl7.org/fhir/v3/AdministrativeGender"),PUT("code",VL("I")),PUT("display",VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,20,30,7,0)
SSN^9^C^50
"DATA",999.1,1,10,20,30,7,10)
D IDENT("http://hl7.org/fhir/sid/us-ssn",VL("E"),PN)
"DATA",999.1,1,10,20,30,8,0)
NPI^41.99^C^50
"DATA",999.1,1,10,20,30,8,10)
D IDENT("urn:oid:2.16.840.1.113883.4.6",VL("E"),PN)
"DATA",999.1,1,10,20,40,0)
^999.13I^3^3
"DATA",999.1,1,10,20,40,1,0)
family^.01^S^20
"DATA",999.1,1,10,20,40,1,10)
D OPRNAME(VL("E"),1) K PVAL
"DATA",999.1,1,10,20,40,1,20)
S X="$$NAMEITER^RGCWFUSR"
"DATA",999.1,1,10,20,40,2,0)
given^.01^S^30
"DATA",999.1,1,10,20,40,2,10)
D OPRNAME(VL("E"),2) K PVAL
"DATA",999.1,1,10,20,40,3,0)
_id^.001^N^40
"DATA",999.1,1,10,21,0)
User^^200
"DATA",999.1,1,10,21,30,0)
^999.12^6^6
"DATA",999.1,1,10,21,30,1,0)
name^.01^C^10
"DATA",999.1,1,10,21,30,1,10)
D NAME(VL("I"))
"DATA",999.1,1,10,21,30,2,0)
birthDate^5^D^20
"DATA",999.1,1,10,21,30,3,0)
extension url="http\://www.carewebframework.org/fhir/extension/user/organization"^^C^30
"DATA",999.1,1,10,21,30,3,10)
D ADDTAG(PN),ADDTAG("valueResource"),PUT("reference","Organization/"_DUZ(2)),ENDTAG(PN)
"DATA",999.1,1,10,21,30,4,0)
telecom:phone:work^.132^C^40
"DATA",999.1,1,10,21,30,4,10)
D TELECOM
"DATA",999.1,1,10,21,30,5,0)
telecom:phone:home^.131^C^50
"DATA",999.1,1,10,21,30,5,10)
D TELECOM
"DATA",999.1,1,10,21,30,6,0)
telecom:fax:work^.136^C^60
"DATA",999.1,1,10,21,30,6,10)
D TELECOM
"DATA",999.1,1,10,21,40,0)
^999.13I^1^1
"DATA",999.1,1,10,21,40,1,0)
_id^.001^N^10
"DATA",999.1,1,10,22,0)
ValueSet^^999.11
"DATA",999.1,1,10,22,20)
S IENS=IENS_DATA("SER")_","
"DATA",999.1,1,10,22,30,0)
^999.12I^5^5
"DATA",999.1,1,10,22,30,1,0)
define^.01^C^100
"DATA",999.1,1,10,22,30,1,10)
D ADDTAG(PN),FETCH^RGCWSER(.DATA,"*/"_VL("E"),,"concept"),ENDTAG(PN)
"DATA",999.1,1,10,22,30,2,0)
identifier^^F^10
"DATA",999.1,1,10,22,30,3,0)
name^.01^C^20
"DATA",999.1,1,10,22,30,3,10)
D PUT(PN,$P(VL("E"),"_",2,99))
"DATA",999.1,1,10,22,30,4,0)
description^99^F^30
"DATA",999.1,1,10,22,30,5,0)
status^^C^40
"DATA",999.1,1,10,22,30,5,10)
D PUT(PN,"active")
"DATA",999.1,1,10,22,40,0)
^999.13I^3^3
"DATA",999.1,1,10,22,40,1,0)
_id^.001^N^1
"DATA",999.1,1,10,22,40,2,0)
name^.01^T^10
"DATA",999.1,1,10,22,40,2,10)
S MATCH=VL("E")=("ValueSet_"_PVAL) K PVAL
"DATA",999.1,1,10,22,40,3,0)
@selector^.01^T^1
"DATA",999.1,1,10,22,40,3,10)
S MATCH="ValueSet_"=$E(VL("E"),1,9)
"DATA",999.1,1,10,22,40,3,20)
S X="$$ITERVS^RGCWSEFR"
"DATA",999.1,1,10,23,0)
ValueSet_DocumentType^1^8925.1
"DATA",999.1,1,10,23,30,0)
^999.12I^2^2
"DATA",999.1,1,10,23,30,1,0)
code^.001^R^20
"DATA",999.1,1,10,23,30,2,0)
display^.01^F^30
"DATA",999.1,1,10,23,99)
List of document categories by which documents may be classified.
"DATA",999.1,1,10,24,0)
ValueSet_EncounterType^1
"DATA",999.1,1,10,24,10)
K XSER I '$D(DATA("SVCCAT")) N SC,X S (SLCT,DATA("SVCCAT"))=$$TMPGBL,TP=1 D GETLST^XPAR(.SC,"ALL","RGCWENCX VISIT TYPES","I") M @SLCT=SC
"DATA",999.1,1,10,24,20)
D RETRIEVE(DATA("SVCCAT"),IEN,"~")
"DATA",999.1,1,10,24,30,0)
^999.12I^3^3
"DATA",999.1,1,10,24,30,1,0)
display^2^R^20
"DATA",999.1,1,10,24,30,2,0)
code^1^R^30
"DATA",999.1,1,10,24,30,3,0)
definition^3^R^40
"DATA",999.1,1,10,25,0)
Medication^^50
"DATA",999.1,1,10,25,30,0)
^999.12I^7^7
"DATA",999.1,1,10,25,30,1,0)
name^.01^F^10
"DATA",999.1,1,10,25,30,2,0)
code:start^^C^20
"DATA",999.1,1,10,25,30,2,10)
D ADDTAG(PN)
"DATA",999.1,1,10,25,30,3,0)
code:end^^C^20.9
"DATA",999.1,1,10,25,30,3,10)
D ENDTAG(PN)
"DATA",999.1,1,10,25,30,4,0)
coding:NDC^31^C^20.1
"DATA",999.1,1,10,25,30,4,10)
D:VL CODING("ndc",VL("E"))
"DATA",999.1,1,10,25,30,5,0)
product:start^^C^30
"DATA",999.1,1,10,25,30,5,10)
D ADDTAG(PN)
"DATA",999.1,1,10,25,30,6,0)
product:end^^C^30.9
"DATA",999.1,1,10,25,30,6,10)
D ENDTAG(PN)
"DATA",999.1,1,10,25,30,7,0)
form^14.5^C^30.1
"DATA",999.1,1,10,25,30,7,10)
D:VL ADDTAG(PN),CODING^RGCWSEFR("dispense_unit",,VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,25,40,0)
^999.13I^3^3
"DATA",999.1,1,10,25,40,1,0)
code^31^T^10
"DATA",999.1,1,10,25,40,2,0)
name^.01^S^20
"DATA",999.1,1,10,25,40,3,0)
_id^.001^N^30
"DATA",999.1,1,10,26,0)
MedicationPrescription^^52
"DATA",999.1,1,10,26,30,0)
^999.12I^8^8
"DATA",999.1,1,10,26,30,1,0)
patient^2^C^40
"DATA",999.1,1,10,26,30,1,10)
D REF(PN,"Patient",.VL)
"DATA",999.1,1,10,26,30,2,0)
prescriber^4^C^50
"DATA",999.1,1,10,26,30,2,10)
D REF(PN,"Practitioner",.VL)
"DATA",999.1,1,10,26,30,3,0)
medication^6^C^80
"DATA",999.1,1,10,26,30,3,10)
D REF(PN,"Medication",.VL)
"DATA",999.1,1,10,26,30,4,0)
dateWritten^1^D^20
"DATA",999.1,1,10,26,30,5,0)
dosageInstruction:start^^C^90
"DATA",999.1,1,10,26,30,5,10)
D ADDTAG(PN)
"DATA",999.1,1,10,26,30,6,0)
dosageInstruction:end^^C^90.9
"DATA",999.1,1,10,26,30,6,10)
D ENDTAG(PN)
"DATA",999.1,1,10,26,30,7,0)
@text^10.2^M^90.001
"DATA",999.1,1,10,26,30,7,10)
*/MedicationPrescription_Sig
"DATA",999.1,1,10,26,30,8,0)
@dosing^113^M^90.002
"DATA",999.1,1,10,26,30,8,10)
*/MedicationPrescription_Dosing
"DATA",999.1,1,10,26,40,0)
^999.13I^2^2
"DATA",999.1,1,10,26,40,1,0)
patient^2^R^10
"DATA",999.1,1,10,26,40,1,20)
S X=$$COHORT(PN,$NA(^PS(55,"*","P","A")),1)
"DATA",999.1,1,10,26,40,2,0)
_id^.001^N^20
"DATA",999.1,1,10,27,0)
MedicationPrescription_Sig^1^52.04
"DATA",999.1,1,10,27,30,0)
^999.12^1^1
"DATA",999.1,1,10,27,30,1,0)
text^.01^F^10
"DATA",999.1,1,10,28,0)
MedicationPrescription_Dosing^1^52.0113
"DATA",999.1,1,10,28,30,0)
^999.12^1^1
"DATA",999.1,1,10,28,30,1,0)
route^6^C^10
"DATA",999.1,1,10,28,30,1,10)
D:VL ADDTAG(PN),CODING^RGCWSEFR("@medication_route",VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,29,0)
Patient/#/MedicationPrescription
"DATA",999.1,1,10,29,10)
D COMPRT($$COHORT2($P(PATH,"/",3),$NA(^PS(55,"*","P","A")),1),1)
"DATA",999.1,1,10,30,0)
AdverseReaction^^120.8
"DATA",999.1,1,10,30,30,0)
^999.12I^9^7
"DATA",999.1,1,10,30,30,1,0)
identifier^^C^10
"DATA",999.1,1,10,30,30,2,0)
date^4^D^20
"DATA",999.1,1,10,30,30,3,0)
subject^.01^C^30
"DATA",999.1,1,10,30,30,3,10)
D REF(PN,"Patient",.VL)
"DATA",999.1,1,10,30,30,4,0)
didNotOccurFlag^^C^40
"DATA",999.1,1,10,30,30,4,10)
D PUT(PN,"false")
"DATA",999.1,1,10,30,30,5,0)
recorder^5^C^50
"DATA",999.1,1,10,30,30,5,10)
D REF(PN,"Practitioner",.VL)
"DATA",999.1,1,10,30,30,6,0)
symptom^10^M^60
"DATA",999.1,1,10,30,30,6,10)
*/AdverseReaction_Symptom
"DATA",999.1,1,10,30,30,9,0)
exposure^1,.02^C^70.2
"DATA",999.1,1,10,30,30,9,10)
S:'VL VL("E")=VL(2,"E") S VL("I")=$$VP2ID(VL("I")) D ADDTAG(PN),REF("substance","Substance",.VL),ENDTAG(PN)
"DATA",999.1,1,10,30,40,0)
^999.13I^3^3
"DATA",999.1,1,10,30,40,1,0)
subject^.01^N^10
"DATA",999.1,1,10,30,40,1,20)
S X=$$COHORT(PN,$NA(^GMR(120.8,"B")))
"DATA",999.1,1,10,30,40,2,0)
subject:Patient^.01^N^10
"DATA",999.1,1,10,30,40,2,20)
S X=$$COHORT(PN,$NA(^GMR(120.8,"B")))
"DATA",999.1,1,10,30,40,3,0)
_id^.001^N^20
"DATA",999.1,1,10,31,0)
AdverseReaction_Symptom^1^120.81
"DATA",999.1,1,10,31,30,0)
^999.12I^2^2
"DATA",999.1,1,10,31,30,1,0)
code^.01^C^10
"DATA",999.1,1,10,31,30,1,10)
D ADDTAG(PN),CODING^RGCWSEFR("#120.83",VL("I"),VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,31,30,2,0)
severity^^C^20
"DATA",999.1,1,10,32,0)
AdverseReaction_Ingredient^1^120.802
"DATA",999.1,1,10,32,30,0)
^999.12I^4^4
"DATA",999.1,1,10,32,30,1,0)
date^^D^10
"DATA",999.1,1,10,32,30,2,0)
type^^C^20
"DATA",999.1,1,10,32,30,2,10)
D PUT(PN,"drugadmin")
"DATA",999.1,1,10,32,30,3,0)
causalityExpectation^^C^30
"DATA",999.1,1,10,32,30,4,0)
substance^.01^C^40
"DATA",999.1,1,10,32,30,4,10)
D REF(PN,"Substance",.VL,"50.416:")
"DATA",999.1,1,10,33,0)
AdverseReaction_Class^1^120.803
"DATA",999.1,1,10,33,30,0)
^999.12I^4^4
"DATA",999.1,1,10,33,30,1,0)
date^^D^10
"DATA",999.1,1,10,33,30,2,0)
type^^C^20
"DATA",999.1,1,10,33,30,2,10)
D PUT(PN,"drugadmin")
"DATA",999.1,1,10,33,30,3,0)
causalityExpectation^^C^30
"DATA",999.1,1,10,33,30,4,0)
substance^.01^C^40
"DATA",999.1,1,10,33,30,4,10)
D REF(PN,"Substance",.VL,"50.605:")
"DATA",999.1,1,10,34,0)
Substance
"DATA",999.1,1,10,34,10)
D COMPID^RGCWSER
"DATA",999.1,1,10,35,0)
Patient/#/AdverseReaction
"DATA",999.1,1,10,35,10)
D COMPRT($NA(^GMR(120.8,"B")))
"DATA",999.1,1,10,36,0)
Substance_50^1^50
"DATA",999.1,1,10,36,30,0)
^999.12I^4^4
"DATA",999.1,1,10,36,30,1,0)
type^.01^C^10
"DATA",999.1,1,10,36,30,1,10)
D ADDTAG(PN),CODING($$SYSTEM^RGCWSER("#"_FILE),IEN,VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,36,30,2,0)
description^^W^20
"DATA",999.1,1,10,36,30,3,0)
instance^^C^30
"DATA",999.1,1,10,36,30,4,0)
ingredient^^C^40
"DATA",999.1,1,10,37,0)
Substance_50.416^1^50.416
"DATA",999.1,1,10,37,30,0)
^999.12I^4^4
"DATA",999.1,1,10,37,30,1,0)
type^.01^C^10
"DATA",999.1,1,10,37,30,1,10)
D ADDTAG(PN),CODING($$SYSTEM^RGCWSER("#"_FILE),IEN,VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,37,30,2,0)
description^^W^20
"DATA",999.1,1,10,37,30,3,0)
instance^^C^30
"DATA",999.1,1,10,37,30,4,0)
ingredient^^C^40
"DATA",999.1,1,10,38,0)
Substance_50.6^1^50.6
"DATA",999.1,1,10,38,30,0)
^999.12I^4^4
"DATA",999.1,1,10,38,30,1,0)
type^.01^C^10
"DATA",999.1,1,10,38,30,1,10)
D ADDTAG(PN),CODING($$SYSTEM^RGCWSER("#"_FILE),IEN,VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,38,30,2,0)
description^^W^20
"DATA",999.1,1,10,38,30,3,0)
instance^^C^30
"DATA",999.1,1,10,38,30,4,0)
ingredient^^C^40
"DATA",999.1,1,10,39,0)
Substance_50.605^1^50.605
"DATA",999.1,1,10,39,30,0)
^999.12I^4^4
"DATA",999.1,1,10,39,30,1,0)
type^.01^C^10
"DATA",999.1,1,10,39,30,1,10)
D ADDTAG(PN),CODING($$SYSTEM^RGCWSER("#"_FILE),IEN,VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,39,30,2,0)
description^^W^20
"DATA",999.1,1,10,39,30,3,0)
instance^^C^30
"DATA",999.1,1,10,39,30,4,0)
ingredient^^C^40
"DATA",999.1,1,10,40,0)
Substance_120.82^1^120.82
"DATA",999.1,1,10,40,30,0)
^999.12I^4^4
"DATA",999.1,1,10,40,30,1,0)
type^.01^C^10
"DATA",999.1,1,10,40,30,1,10)
D ADDTAG(PN),CODING($$SYSTEM^RGCWSER("#"_FILE),IEN,VL("E")),ENDTAG(PN)
"DATA",999.1,1,10,40,30,2,0)
description^^W^20
"DATA",999.1,1,10,40,30,3,0)
instance^^C^30
"DATA",999.1,1,10,40,30,4,0)
ingredient^^C^40
"DATA",999.1,2,0)
VISTA^json^RGCWSEJN
"DATA",999.1,2,10,0)
^999.11^1^1
"DATA",999.1,2,10,1,0)
PropDefinition^^8989.51
"DATA",999.1,2,10,1,30,0)
^999.12^6^6
"DATA",999.1,2,10,1,30,1,0)
name^.01^F^10
"DATA",999.1,2,10,1,30,2,0)
displayName^.02^F^20
"DATA",999.1,2,10,1,30,3,0)
multiValued^.03^B^30
"DATA",999.1,2,10,1,30,4,0)
readOnly^.06^B^40
"DATA",999.1,2,10,1,30,5,0)
dataType^1.1^R^50
"DATA",999.1,2,10,1,30,6,0)
description^20^W^60
"DATA",999.1,2,10,1,40,0)
^999.13^1^1
"DATA",999.1,2,10,1,40,1,0)
_id^.001^N^10
"DATA",19941.1,1,0)
FHIR^9999^^^^^localhost
"DATA",19941.1,1,3,0)
^19941.103^1^1
"DATA",19941.1,1,3,1,0)
REST^1
"DATA",19941.1,1,3,1,1)
D WEBMAN^RGCWSER
"DATA",19941.21,1,0)
STATUS^0^60^^^1
"DATA",19941.21,1,1)
D BRDCAST^CIANBEVT(TYPE,$$ENTRY^CIAUDT($H))
"DATA",19941.21,1,99,0)
^19941.2199^2^2^3021028^^^^
"DATA",19941.21,1,99,1,0)
Sample VistAtion event monitor:  returns system date/time as a STATUS event.
"DATA",19941.21,1,99,2,0)
Causes system date/time to be displayed on status line in application.
"DATA",19941.21,2,0)
TRACE
"DATA",19941.21,4,0)
MESSAGE
"DATA",19941.21,4,99,1,0)
Causes the Visual Interface Manager to display the associated message text in
"DATA",19941.21,4,99,2,0)
a modeless dialog.  The event stub format is:
"DATA",19941.21,4,99,3,0)

"DATA",19941.21,4,99,4,0)
    <caption text>^<message text>
"DATA",19941.21,4,99,5,0)

"DATA",19941.21,4,99,6,0)
where caption text appears in the dialog's title bar and message text appears
"DATA",19941.21,4,99,7,0)
in a scrollable region within the dialog.
"DATA",19941.21,5,0)
DESKTOP.SHUTDOWN
"DATA",19941.21,5,20,0)
^19941.212P^1^1
"DATA",19941.21,5,20,1,0)
512
"DATA",19941.21,5,99,0)
^19941.2199^14^14^3140319^
"DATA",19941.21,5,99,1,0)
Causes a CareWeb application to initiate or abort an automatic shutdown
"DATA",19941.21,5,99,2,0)
sequence.  
"DATA",19941.21,5,99,3,0)

"DATA",19941.21,5,99,4,0)
To initiate a shutdown send the following event:
"DATA",19941.21,5,99,5,0)

"DATA",19941.21,5,99,6,0)
DESKTOP.SHUTDOWN.START     <delay>
"DATA",19941.21,5,99,7,0)

"DATA",19941.21,5,99,8,0)
Where delay is the delay in milliseconds before the shutdown is executed.
"DATA",19941.21,5,99,9,0)

"DATA",19941.21,5,99,10,0)
To abort a shutdown in progress, send the following event:
"DATA",19941.21,5,99,11,0)

"DATA",19941.21,5,99,12,0)
DESKTOP.SHUTDOWN.ABORT     <message>
"DATA",19941.21,5,99,13,0)

"DATA",19941.21,5,99,14,0)
Where message is the popup message that is displayed to the user.
"DATA",19941.21,7,0)
LOGIN^^^1^5^^
"DATA",19941.21,7,99,0)
^19941.2199^13^13^3021105^
"DATA",19941.21,7,99,1,0)
Broadcast to all sessions when a new session logs in.
"DATA",19941.21,7,99,2,0)

"DATA",19941.21,7,99,3,0)
Stub format consists of the following ^-delimited fields:
"DATA",19941.21,7,99,4,0)

"DATA",19941.21,7,99,5,0)
       Session Identifier
"DATA",19941.21,7,99,6,0)
       Session Expiration Date (FM)
"DATA",19941.21,7,99,7,0)
       Session Creation Date (FM)
"DATA",19941.21,7,99,8,0)
       User DUZ
"DATA",19941.21,7,99,9,0)
       Workstation ID
"DATA",19941.21,7,99,10,0)
       User's Full Name
"DATA",19941.21,7,99,11,0)
       Assigned Resource Device
"DATA",19941.21,7,99,12,0)
       Login Date/Time ($H)
"DATA",19941.21,7,99,13,0)

"DATA",19941.21,8,0)
LOGOUT^^^1^5^^
"DATA",19941.21,8,99,0)
^^13^13^3001117.084247
"DATA",19941.21,8,99,1,0)
Broadcast to all sessions when a session logs out.
"DATA",19941.21,8,99,2,0)

"DATA",19941.21,8,99,3,0)
Stub format consists of the following ^-delimited fields:
"DATA",19941.21,8,99,4,0)

"DATA",19941.21,8,99,5,0)
       Session Identifier
"DATA",19941.21,8,99,6,0)
       Session Expiration Date (FM)
"DATA",19941.21,8,99,7,0)
       Session Creation Date (FM)
"DATA",19941.21,8,99,8,0)
       User DUZ
"DATA",19941.21,8,99,9,0)
       Workstation ID
"DATA",19941.21,8,99,10,0)
       User's Full Name
"DATA",19941.21,8,99,11,0)
       Assigned Resource Device
"DATA",19941.21,8,99,12,0)
       Login Date/Time ($H)
"DATA",19941.21,8,99,13,0)

"DATA",19941.21,11,0)
CCOW^1
"DATA",19941.21,11,99,0)
^^1^1^3010328.222333
"DATA",19941.21,11,99,1,0)
Used internally to notify subscribers of changes in CCOW status.
"DATA",19941.21,13,0)
SUBSCRIBE^^^^^^
"DATA",19941.21,13,99,0)
^19941.2199^4^4^3020416^^
"DATA",19941.21,13,99,1,0)
Broadcast whenever a session subscribes to any event.  The format is:
"DATA",19941.21,13,99,2,0)
 
"DATA",19941.21,13,99,3,0)
Event type: SUBSCRIBE.<event name>
"DATA",19941.21,13,99,4,0)
Event stub: <session id>^<session data>
"DATA",19941.21,14,0)
UNSUBSCRIBE^^^^^^
"DATA",19941.21,14,99,0)
^^4^4^3020311^
"DATA",19941.21,14,99,1,0)
Broadcast whenever a sessions unsubscribes from any event.  The format is:
"DATA",19941.21,14,99,2,0)
 
"DATA",19941.21,14,99,3,0)
Event type: UNSUBSCRIBE.<event name>
"DATA",19941.21,14,99,4,0)
Event stub: <session id>^<session data>
"DATA",19941.21,15,0)
BRINGTOFRONT
"DATA",19941.21,15,99,0)
^^3^3^3020311^
"DATA",19941.21,15,99,1,0)
Causes the Visual Interface Manager to bring the requested component
"DATA",19941.21,15,99,2,0)
to the forefront of the user interface.  The event stub is the 
"DATA",19941.21,15,99,3,0)
programmatic identifier of the affected component.
"DATA",19941.21,16,0)
INFO
"DATA",19941.21,16,99,0)
^^23^23^3060221.004532
"DATA",19941.21,16,99,1,0)
Causes the Visual Interface Manager to display a balloon alert.  The
"DATA",19941.21,16,99,2,0)
event stub format is:
"DATA",19941.21,16,99,3,0)
 
"DATA",19941.21,16,99,4,0)
  EventType^EventData^Hint|Caption|Icon|Duration^Text
"DATA",19941.21,16,99,5,0)
 
"DATA",19941.21,16,99,6,0)
where
"DATA",19941.21,16,99,7,0)

"DATA",19941.21,16,99,8,0)
EventType is the event to be fired when the user chooses to act upon the 
"DATA",19941.21,16,99,9,0)
alert.
"DATA",19941.21,16,99,10,0)

"DATA",19941.21,16,99,11,0)
EventData is the data associated with the above EventType.
"DATA",19941.21,16,99,12,0)

"DATA",19941.21,16,99,13,0)
Hint is the hint text displayed when the mouse cursor hovers over the action
"DATA",19941.21,16,99,14,0)
button.
"DATA",19941.21,16,99,15,0)

"DATA",19941.21,16,99,16,0)
Caption is the optional caption text that appears above the message text.
"DATA",19941.21,16,99,17,0)

"DATA",19941.21,16,99,18,0)
Icon is the type of icon to be displayed where I=information, W=warning, and
"DATA",19941.21,16,99,19,0)
E=Error.
"DATA",19941.21,16,99,20,0)

"DATA",19941.21,16,99,21,0)
Duration is the time in seconds that the alert will persist if not acted upon.
"DATA",19941.21,16,99,22,0)

"DATA",19941.21,16,99,23,0)
Text is the text of the message to be displayed.
"DATA",19941.21,21,0)
CONTEXT
"DATA",19941.21,21,99,0)
^19941.2199^12^12^3020822^
"DATA",19941.21,21,99,1,0)
Fire this event to request a context change for the specified context.
"DATA",19941.21,21,99,2,0)

"DATA",19941.21,21,99,3,0)
This event may be used by the server process to control the client's context.  
"DATA",19941.21,21,99,4,0)
Note that the client has the option of rejecting any context change request. 
"DATA",19941.21,21,99,5,0)
Therefore, the server cannot assume that context change request was honored.
"DATA",19941.21,21,99,6,0)

"DATA",19941.21,21,99,7,0)
The following subtypes are currently supported for this event:
"DATA",19941.21,21,99,8,0)

"DATA",19941.21,21,99,9,0)
       Subtype              Stub                       Description
"DATA",19941.21,21,99,10,0)
       -------              ----                       -----------
"DATA",19941.21,21,99,11,0)
   CONTEXT.PATIENT       Patient IEN             Changes the patient context.
"DATA",19941.21,21,99,12,0)
   CONTEXT.ENCOUNTER     Visit IEN or VisitStr   Changes the encounter context.
"FIA",999.1)
CAREWEB SERIALIZATION
"FIA",999.1,0)
^RGCWF(999.1,
"FIA",999.1,0,0)
999.1I
"FIA",999.1,0,1)
y^y^f^^n^^y^o^n
"FIA",999.1,0,10)

"FIA",999.1,0,11)
I $$SCRN^RGCWKDTP(Y,1)
"FIA",999.1,0,"RLRO")

"FIA",999.1,0,"VR")
1.0^CAREWEB FRAMEWORK
"FIA",999.1,999.1)
0
"FIA",999.1,999.11)
0
"FIA",999.1,999.12)
0
"FIA",999.1,999.13)
0
"FIA",19941.1)
WEBMAN REALM
"FIA",19941.1,0)
^CIANW(19941.1,
"FIA",19941.1,0,0)
19941.1
"FIA",19941.1,0,1)
n^n^f^^n^^y^o^n
"FIA",19941.1,0,10)

"FIA",19941.1,0,11)
I $P(^(0),U)="FHIR"
"FIA",19941.1,0,"RLRO")

"FIA",19941.1,0,"VR")
1.0^CAREWEB FRAMEWORK
"FIA",19941.1,19941.1)
0
"FIA",19941.1,19941.101)
0
"FIA",19941.1,19941.102)
0
"FIA",19941.1,19941.1021)
0
"FIA",19941.1,19941.103)
0
"FIA",19941.1,19941.1032)
0
"FIA",19941.1,19941.111)
0
"FIA",19941.21)
CIA EVENT TYPE
"FIA",19941.21,0)
^CIANB(19941.21,
"FIA",19941.21,0,0)
19941.21
"FIA",19941.21,0,1)
n^y^f^^y^^y^o^n
"FIA",19941.21,0,10)

"FIA",19941.21,0,11)
I $$SCRN^RGCWKDTP(Y,5)
"FIA",19941.21,0,"RLRO")

"FIA",19941.21,0,"VR")
1.0^CAREWEB FRAMEWORK
"FIA",19941.21,19941.21)
0
"FIA",19941.21,19941.212)
0
"FIA",19941.21,19941.2121)
0
"FIA",19941.21,19941.2199)
0
"INI")
PRE^RGCWKDIN
"INIT")
POST^RGCWKDIN
"KRN",19,11318,-1)
0^6
"KRN",19,11318,0)
RGCWF CAREWEB FRAMEWORK^CareWeb Framework^^B^^^^^^^^
"KRN",19,11318,99)
63265,61715
"KRN",19,11318,99.1)
58703,41699
"KRN",19,11318,"RPC",0)
^19.05P^^0
"KRN",19,11318,"U")
CAREWEB FRAMEWORK
"KRN",19,11319,-1)
0^2
"KRN",19,11319,0)
RGCWF MANAGER^CareWeb Management^^M^^RGCWF MANAGER^^^^^^^^^^^1
"KRN",19,11319,10,0)
^19.01IP^4^4
"KRN",19,11319,10,2,0)
11320^1^1
"KRN",19,11319,10,2,"^")
RGCWF SHOW USERS
"KRN",19,11319,10,3,0)
11321^2^2
"KRN",19,11319,10,3,"^")
RGCWF SHUTDOWN ABORT
"KRN",19,11319,10,4,0)
11322^3^3
"KRN",19,11319,10,4,"^")
RGCWF SHUTDOWN START
"KRN",19,11319,26)
D MNUHDR^CIAU()
"KRN",19,11319,99)
63265,61715
"KRN",19,11319,"U")
CAREWEB MANAGEMENT
"KRN",19,11320,-1)
0^3
"KRN",19,11320,0)
RGCWF SHOW USERS^Show Current CareWeb Users^^A^^^^^^^^^^1
"KRN",19,11320,20)
D MNUEXEC^CIAU("D ^%ZIS Q:POP  D SHOWSESS^RGCWFUTL(),^%ZISC",1)
"KRN",19,11320,"U")
SHOW CURRENT CAREWEB USERS
"KRN",19,11321,-1)
0^4
"KRN",19,11321,0)
RGCWF SHUTDOWN ABORT^Abort CareWeb Shutdown^^A^^RGCWF MANAGER^^^^^^^^1
"KRN",19,11321,20)
D MNUEXEC^CIAU("D ABORTSD^RGCWFUTL",1)
"KRN",19,11321,"U")
ABORT CAREWEB SHUTDOWN
"KRN",19,11322,-1)
0^5
"KRN",19,11322,0)
RGCWF SHUTDOWN START^Shutdown CareWeb^^A^^RGCWF MANAGER^^^^^^^^1
"KRN",19,11322,20)
D MNUEXEC^CIAU("D SHUTDOWN^RGCWFUTL",1)
"KRN",19,11322,25)

"KRN",19,11322,"U")
SHUTDOWN CAREWEB
"KRN",19.1,511,-1)
0^1
"KRN",19.1,511,0)
RGCWF DESIGNER^CWF design mode access.
"KRN",19.1,512,-1)
0^2
"KRN",19.1,512,0)
RGCWF MANAGER^CareWeb management access.
"KRN",8989.51,209,-1)
0^11
"KRN",8989.51,209,0)
RGCWF.PATIENT.LIST.PERSONAL^User Personal List^1^Enter List Name
"KRN",8989.51,209,1)
W
"KRN",8989.51,209,6)
F
"KRN",8989.51,209,7)
K:'$L(X) X
"KRN",8989.51,209,30,0)
^8989.513I^1^1
"KRN",8989.51,209,30,1,0)
1^200
"KRN",8989.51,213,-1)
0^9
"KRN",8989.51,213,0)
RGCWF.PATIENT.LIST.MRU^Recent Patient Selections^0
"KRN",8989.51,213,1)
W
"KRN",8989.51,213,6)
F
"KRN",8989.51,213,30,0)
^8989.513I^1^1
"KRN",8989.51,213,30,1,0)
1^200
"KRN",8989.51,226,-1)
0^7
"KRN",8989.51,226,0)
RGCWF.PATIENT.LIST.DATES^Default date ranges:^^^Edit Value?
"KRN",8989.51,226,1)
W^^Enter Y to edit, @ to delete.
"KRN",8989.51,226,2)
S:"Yy"'[Y Y=""
"KRN",8989.51,226,30,0)
^8989.513I^1^1
"KRN",8989.51,226,30,1,0)
100^4.2
"KRN",8989.51,228,-1)
0^1
"KRN",8989.51,228,0)
RGCWF.INITIAL.SECTION^Initial component to display.^1
"KRN",8989.51,228,1)
F
"KRN",8989.51,228,6)
F
"KRN",8989.51,228,30,0)
^8989.513I^2^2
"KRN",8989.51,228,30,1,0)
10^200
"KRN",8989.51,228,30,2,0)
20^4.2
"KRN",8989.51,229,-1)
0^4
"KRN",8989.51,229,0)
RGCWF.LAYOUT.SHARED^^1
"KRN",8989.51,229,1)
W
"KRN",8989.51,229,6)
F
"KRN",8989.51,229,30,0)
^8989.513I^1^1
"KRN",8989.51,229,30,1,0)
10^4.2
"KRN",8989.51,231,-1)
0^2
"KRN",8989.51,231,0)
RGCWF.LAYOUT.ASSOCIATION^^1
"KRN",8989.51,231,1)
F
"KRN",8989.51,231,6)
F
"KRN",8989.51,231,30,0)
^8989.513I^1^1
"KRN",8989.51,231,30,1,0)
10^4.2
"KRN",8989.51,245,-1)
0^8
"KRN",8989.51,245,0)
RGCWF.PATIENT.LIST.FAVORITES^Favorite patient list settings^1^Favorite
"KRN",8989.51,245,1)
W
"KRN",8989.51,245,6)
F
"KRN",8989.51,245,30,0)
^8989.513I^1^1
"KRN",8989.51,245,30,1,0)
10^200
"KRN",8989.51,251,-1)
0^10
"KRN",8989.51,251,0)
RGCWF.PATIENT.LIST.MRU.SIZE^Maximum list size for MRU list.^0
"KRN",8989.51,251,1)
N
"KRN",8989.51,251,30,0)
^8989.513I^1^1
"KRN",8989.51,251,30,1,0)
10^200
"KRN",8989.51,261,-1)
0^13
"KRN",8989.51,261,0)
RGCWF.THEME^Default CareWeb theme.^0
"KRN",8989.51,261,1)
F
"KRN",8989.51,261,30,0)
^8989.513I^2^2
"KRN",8989.51,261,30,1,0)
10^4.2
"KRN",8989.51,261,30,2,0)
5^200
"KRN",8989.51,263,-1)
0^12
"KRN",8989.51,263,0)
RGCWF.SAVED.RESPONSES^Saved dialog responses.^1
"KRN",8989.51,263,1)
F
"KRN",8989.51,263,6)
F
"KRN",8989.51,263,30,0)
^8989.513I^1^1
"KRN",8989.51,263,30,1,0)
10^200
"KRN",8989.51,268,-1)
0^6
"KRN",8989.51,268,0)
RGCWF.PATIENT.FORCE.SELECT^Force patient selection at start.^0^^Force patient selection at startup?
"KRN",8989.51,268,1)
Y^^Forces patient selection at application startup.
"KRN",8989.51,268,6)
N
"KRN",8989.51,268,20,0)
^^1^1^3110609.171648
"KRN",8989.51,268,20,1,0)
If yes, patient selection is forced at application startup.
"KRN",8989.51,268,30,0)
^8989.513I^3^3
"KRN",8989.51,268,30,1,0)
100^200
"KRN",8989.51,268,30,2,0)
200^4
"KRN",8989.51,268,30,3,0)
300^4.2
"KRN",8989.51,291,-1)
0^3
"KRN",8989.51,291,0)
RGCWF.LAYOUT.PRIVATE^^1
"KRN",8989.51,291,1)
W
"KRN",8989.51,291,6)
F
"KRN",8989.51,291,30,0)
^8989.513I^1^1
"KRN",8989.51,291,30,1,0)
10^4.2
"KRN",8989.51,411,-1)
0^14
"KRN",8989.51,411,0)
RGCWF.DESIGN.FAVORITES^Favorites for add component dialog.
"KRN",8989.51,411,1)
W
"KRN",8989.51,411,30,0)
^8989.513I^1^1
"KRN",8989.51,411,30,1,0)
10^200
"KRN",8994,2606,-1)
0^20
"KRN",8994,2606,0)
RGCWFUSR HASKEYS^HASKEYS^RGCWFUSR^1
"KRN",8994,2607,-1)
0^6
"KRN",8994,2607,0)
RGCWFRPC DISV^DISV^RGCWFRPC^1
"KRN",8994,2608,-1)
0^1
"KRN",8994,2608,0)
RGCWFPAR GETPAR^GETPAR^RGCWFPAR^1
"KRN",8994,2609,-1)
0^5
"KRN",8994,2609,0)
RGCWFPAR SETPAR^SETPAR^RGCWFPAR^1
"KRN",8994,2610,-1)
0^7
"KRN",8994,2610,0)
RGCWFRPC GETIDX^GETIDX^RGCWFRPC^4^^^^1
"KRN",8994,2611,-1)
0^12
"KRN",8994,2611,0)
RGCWFRPC VERSION^VERSION^RGCWFRPC^1
"KRN",8994,2612,-1)
0^16
"KRN",8994,2612,0)
RGCWFUSR GETALRTS^GETALRTS^RGCWFUSR^4^^^^1
"KRN",8994,2613,-1)
0^2
"KRN",8994,2613,0)
RGCWFPAR GETPARLI^GETPARLI^RGCWFPAR^4^^^^1
"KRN",8994,2614,-1)
0^4
"KRN",8994,2614,0)
RGCWFPAR GETPARWP^GETPARWP^RGCWFPAR^4^^^^1
"KRN",8994,2615,-1)
0^23
"KRN",8994,2615,0)
RGCWFUSR VALIDPSW^VALIDPSW^RGCWFUSR^1
"KRN",8994,2616,-1)
0^10
"KRN",8994,2616,0)
RGCWFRPC SETVAR^SETVAR^RGCWFRPC^1
"KRN",8994,2617,-1)
0^8
"KRN",8994,2617,0)
RGCWFRPC GETVAR^GETVAR^RGCWFRPC^2^^^^1
"KRN",8994,2618,-1)
0^9
"KRN",8994,2618,0)
RGCWFRPC PATCH^PATCH^RGCWFRPC^1
"KRN",8994,2618,1,0)
^8994.01^1^1^3051219.20334
"KRN",8994,2618,1,1,0)
Returns true if specified patch is present.
"KRN",8994,2618,2,0)
^8994.02A^1^1
"KRN",8994,2618,2,1,0)
PATCH^1^^1^1
"KRN",8994,2618,2,1,1,0)
^^1^1^3051219.203412
"KRN",8994,2618,2,1,1,1,0)
Patch designation to be checked. 
"KRN",8994,2618,2,"B","PATCH",1)

"KRN",8994,2618,2,"PARAMSEQ",1,1)

"KRN",8994,2618,3,0)
^^1^1^3051219.203433
"KRN",8994,2618,3,1,0)
Boolean return type is true if specified patch is present.
"KRN",8994,2619,-1)
0^19
"KRN",8994,2619,0)
RGCWFUSR HASFMCD^HASFMCD^RGCWFUSR^1
"KRN",8994,2620,-1)
0^21
"KRN",8994,2620,0)
RGCWFUSR LOOKUP^LOOKUP^RGCWFUSR^2
"KRN",8994,2621,-1)
0^24
"KRN",8994,2621,0)
RGCWFUSR VALIDSIG^VALIDSIG^RGCWFUSR^1
"KRN",8994,2622,-1)
0^22
"KRN",8994,2622,0)
RGCWFUSR STORESIG^STORESIG^RGCWFUSR^1
"KRN",8994,2623,-1)
0^25
"KRN",8994,2623,0)
RGCWFUSR VALINSIG^VALINSIG^RGCWFUSR^1
"KRN",8994,2624,-1)
0^18
"KRN",8994,2624,0)
RGCWFUSR HASESIG^HASESIG^RGCWFUSR^1
"KRN",8994,2628,-1)
0^17
"KRN",8994,2628,0)
RGCWFUSR GETPRIV^GETPRIV^RGCWFUSR^2^^^^1
"KRN",8994,2629,-1)
0^3
"KRN",8994,2629,0)
RGCWFPAR GETPARPF^GETPARPF^RGCWFPAR^2^^^^1
"KRN",8994,2630,-1)
0^26
"KRN",8994,2630,0)
RGCWFPAR GETTMPL^GETTMPL^RGCWFPAR^2^^^^1
"KRN",8994,2682,-1)
0^11
"KRN",8994,2682,0)
RGCWFPAR GETINST^GETINST^RGCWFPAR^2^^^^1
"KRN",8994,2703,-1)
0^27
"KRN",8994,2703,0)
RGCWSER FETCH^FETCH^RGCWSER^4^^^^0
"KRN",8994,2706,-1)
0^28
"KRN",8994,2706,0)
RGCWSER REST^REST^RGCWSER^4^^^^0
"MBREQ")
1
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PGL",19941.21,0,7,7)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"PKG",220,-1)
1^1
"PKG",220,0)
CAREWEB FRAMEWORK^RGCW^CareWeb Framework Support.
"PKG",220,5)
RI/CBMI
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
1.0^3150226^3140319^1
"PKG",220,"DEV")
DKM/RI/CBMI
"PKG",220,"VERSION")
1.0
"PRE")
RGCWKDIN
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
12
"RTN","RGCWFPAR")
0^1^B11632488
"RTN","RGCWFPAR",1,0)
RGCWFPAR ;RI/CBMI/DKM - Parameter management ;18-Mar-2014 17:24;DKM
"RTN","RGCWFPAR",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 150
"RTN","RGCWFPAR",3,0)
 ; Load a parameter template
"RTN","RGCWFPAR",4,0)
GETTMPL(DATA,TPL) ;
"RTN","RGCWFPAR",5,0)
 N PAR,SEQ,CNT,LP,X0,X1
"RTN","RGCWFPAR",6,0)
 S:TPL'=+TPL TPL=+$$FIND1^DIC(8989.52,,"X",TPL)
"RTN","RGCWFPAR",7,0)
 I '$D(^XTV(8989.52,TPL,0)) S DATA(1)="-1^Not found" Q
"RTN","RGCWFPAR",8,0)
 S CNT=1,SEQ="",X0=^XTV(8989.52,TPL,0),X1=+$P(X0,U,3)
"RTN","RGCWFPAR",9,0)
 S X1=$S(X1=4:"DIV",X1=4.2:"SYS",X1=9.4:"PKG",X1=49:"SRV",X1=200:"USR",1:"")
"RTN","RGCWFPAR",10,0)
 I '$L(X1) S DATA(1)="-2^Bad entity" Q
"RTN","RGCWFPAR",11,0)
 S $P(X0,U,3)=X1,DATA(1)=TPL_U_X0
"RTN","RGCWFPAR",12,0)
 F  S SEQ=$O(^XTV(8989.52,TPL,10,"B",SEQ)),LP=0 Q:'$L(SEQ)  D
"RTN","RGCWFPAR",13,0)
 .F  S LP=$O(^XTV(8989.52,TPL,10,"B",SEQ,LP)) Q:'LP  D
"RTN","RGCWFPAR",14,0)
 ..S PAR=+$P($G(^XTV(8989.52,TPL,10,LP,0)),U,2)
"RTN","RGCWFPAR",15,0)
 ..S X0=$$GETATTR(PAR)
"RTN","RGCWFPAR",16,0)
 ..S:$L(X0) CNT=CNT+1,DATA(CNT)=X0
"RTN","RGCWFPAR",17,0)
 Q
"RTN","RGCWFPAR",18,0)
 ; Return parameter attributes
"RTN","RGCWFPAR",19,0)
GETATTR(PAR) ;
"RTN","RGCWFPAR",20,0)
 N X0,X1
"RTN","RGCWFPAR",21,0)
 I $L(PAR),PAR'=+PAR S PAR=$O(^XTV(8989.51,"B",PAR,0))
"RTN","RGCWFPAR",22,0)
 S X0=$G(^XTV(8989.51,PAR,0)),X1=$G(^(1))
"RTN","RGCWFPAR",23,0)
 Q $S($L(X0):PAR_U_$P(X0,U)_U_$P(X0,U,2)_U_X1,1:"")
"RTN","RGCWFPAR",24,0)
 ; Return parameter instances
"RTN","RGCWFPAR",25,0)
GETINST(DATA,PAR,ENT) ;
"RTN","RGCWFPAR",26,0)
 N CNT,LP
"RTN","RGCWFPAR",27,0)
 S:PAR'=+PAR PAR=$O(^XTV(8989.51,"B",PAR,0))
"RTN","RGCWFPAR",28,0)
 D ENTDFLT^XPAR1(.ENT)
"RTN","RGCWFPAR",29,0)
 S CNT=0,LP=""
"RTN","RGCWFPAR",30,0)
 F  S LP=$O(^XTV(8989.5,"AC",PAR,ENT,LP)) Q:'$L(LP)  D
"RTN","RGCWFPAR",31,0)
 .S CNT=CNT+1,DATA(CNT)=LP
"RTN","RGCWFPAR",32,0)
 Q
"RTN","RGCWFPAR",33,0)
 ; Retrieve a package parameter value
"RTN","RGCWFPAR",34,0)
PARAM(PAR,MIN,MAX) ;
"RTN","RGCWFPAR",35,0)
 S VAL=+$$GET^XPAR("ALL",PAR)
"RTN","RGCWFPAR",36,0)
 S:VAL<MIN VAL=MIN
"RTN","RGCWFPAR",37,0)
 S:VAL>MAX VAL=MAX
"RTN","RGCWFPAR",38,0)
 Q VAL
"RTN","RGCWFPAR",39,0)
 ; RPC: Returns value for named parameter
"RTN","RGCWFPAR",40,0)
GETPAR(DATA,PARAM,ENT,INST,FMT,USR) ;
"RTN","RGCWFPAR",41,0)
 N X
"RTN","RGCWFPAR",42,0)
 S ENT=$$ENT(PARAM,.ENT,.USR),DATA=$S($L(ENT):$$GET^XPAR(ENT,PARAM,.INST,.FMT),1:"")
"RTN","RGCWFPAR",43,0)
 Q
"RTN","RGCWFPAR",44,0)
 ; RPC: Get multivalued parameter values
"RTN","RGCWFPAR",45,0)
GETPARLI(DATA,PARAM,ENT,FMT,USR) ;
"RTN","RGCWFPAR",46,0)
 N TMP,X
"RTN","RGCWFPAR",47,0)
 D GETLST^XPAR(.TMP,$$ENT(PARAM,.ENT,.USR),PARAM,.FMT,.ERR)
"RTN","RGCWFPAR",48,0)
 I $G(ERR) K TMP S TMP=ERR
"RTN","RGCWFPAR",49,0)
 E  S TMP=""
"RTN","RGCWFPAR",50,0)
 S DATA=$$TMPGBL^RGCWFRPC
"RTN","RGCWFPAR",51,0)
 M @DATA=TMP
"RTN","RGCWFPAR",52,0)
 Q
"RTN","RGCWFPAR",53,0)
 ; RPC: Get WP parameter value
"RTN","RGCWFPAR",54,0)
GETPARWP(DATA,PARAM,ENT,INST,USR) ;
"RTN","RGCWFPAR",55,0)
 N TMP,X
"RTN","RGCWFPAR",56,0)
 D GETWP^XPAR(.TMP,$$ENT(PARAM,.ENT,.USR),PARAM,.INST,.ERR)
"RTN","RGCWFPAR",57,0)
 I $G(ERR) K TMP S TMP=ERR
"RTN","RGCWFPAR",58,0)
 E  S TMP=""
"RTN","RGCWFPAR",59,0)
 S DATA=$$TMPGBL^RGCWFRPC
"RTN","RGCWFPAR",60,0)
 M @DATA=TMP
"RTN","RGCWFPAR",61,0)
 Q
"RTN","RGCWFPAR",62,0)
 ; Return parameters matching prefix
"RTN","RGCWFPAR",63,0)
GETPARPF(DATA,PFX) ;
"RTN","RGCWFPAR",64,0)
 N LP,CNT,LEN
"RTN","RGCWFPAR",65,0)
 S LP=PFX,CNT=0,LEN=$L(PFX)
"RTN","RGCWFPAR",66,0)
 F  D:$O(^XTV(8989.51,"B",LP,0))  S LP=$O(^XTV(8989.51,"B",LP)) Q:$E(LP,1,LEN)'=PFX
"RTN","RGCWFPAR",67,0)
 .S CNT=CNT+1,DATA(CNT)=LP
"RTN","RGCWFPAR",68,0)
 Q
"RTN","RGCWFPAR",69,0)
 ; Return entity list (if ENT not specified)
"RTN","RGCWFPAR",70,0)
ENT(PAR,ENT,USR) ;EP
"RTN","RGCWFPAR",71,0)
 N I,X,Y,Z
"RTN","RGCWFPAR",72,0)
 Q:$L($G(ENT)) ENT
"RTN","RGCWFPAR",73,0)
 I $L(PAR),PAR'=+PAR S PAR=$O(^XTV(8989.51,"B",PAR,0))
"RTN","RGCWFPAR",74,0)
 Q:'PAR ""
"RTN","RGCWFPAR",75,0)
 S X="",I=0,USR=$G(USR,DUZ)
"RTN","RGCWFPAR",76,0)
 F  S I=+$O(^XTV(8989.51,PAR,30,"B",I)) Q:'I  S Y=$O(^(I,0)) D:Y
"RTN","RGCWFPAR",77,0)
 .S Y=$P($G(^XTV(8989.518,+$P($G(^XTV(8989.51,PAR,30,Y,0)),U,2),0)),U,2)
"RTN","RGCWFPAR",78,0)
 .Q:'$L(Y)
"RTN","RGCWFPAR",79,0)
 .I "DIV^SYS^PKG"[Y S X=X_U_Y Q
"RTN","RGCWFPAR",80,0)
 .I Y="USR" S X=X_U_"USR.`"_USR Q
"RTN","RGCWFPAR",81,0)
 .I Y="SRV" S Z=+$G(^VA(200,USR,5)) S:Z X=X_U_"SRV.`"_Z Q
"RTN","RGCWFPAR",82,0)
 .I Y="OTL" Q                                                          ; OE/RR TEAM
"RTN","RGCWFPAR",83,0)
 .I Y="TEA" Q                                                          ; TEAM
"RTN","RGCWFPAR",84,0)
 .I Y="CLS" D  Q
"RTN","RGCWFPAR",85,0)
 ..S Z=0
"RTN","RGCWFPAR",86,0)
 ..F  S Z=$O(^USR(8930.3,"AUC",USR,Z)) Q:'Z  D CLS(Z)
"RTN","RGCWFPAR",87,0)
 .I Y="LOC",$G(CIA("UID")) D  Q
"RTN","RGCWFPAR",88,0)
 ..S Z=+$$GETVAR^CIANBUTL("ENCOUNTER.ID.ALTERNATEVISITID",,"CONTEXT.ENCOUNTER")
"RTN","RGCWFPAR",89,0)
 ..S:Z X=X_U_"LOC.`"_Z
"RTN","RGCWFPAR",90,0)
 Q $E(X,2,$L(X))
"RTN","RGCWFPAR",91,0)
 ; Append user class memberships to entity list
"RTN","RGCWFPAR",92,0)
CLS(Z) N Y
"RTN","RGCWFPAR",93,0)
 S X=X_U_"CLS.`"_Z,Y=0
"RTN","RGCWFPAR",94,0)
 F  S Y=$O(^USR(8930,"AD",Z,Y)) Q:'Y  D CLS(Y)
"RTN","RGCWFPAR",95,0)
 Q
"RTN","RGCWFPAR",96,0)
 ; RPC: Changes value for named parameter
"RTN","RGCWFPAR",97,0)
SETPAR(DATA,PARAM,VAL,ENT,INST) ;
"RTN","RGCWFPAR",98,0)
 D EN^XPAR($G(ENT,"PKG"),PARAM,$G(INST,1),.VAL,.DATA)
"RTN","RGCWFPAR",99,0)
 Q
"RTN","RGCWFRPC")
0^2^B3411017
"RTN","RGCWFRPC",1,0)
RGCWFRPC ;RI/CBMI/DKM - Miscellaneous RPC calls ;15-Mar-2014 11:56;DKM
"RTN","RGCWFRPC",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 150
"RTN","RGCWFRPC",3,0)
 ; RPC: Get/set DISV entry for selected file/IEN
"RTN","RGCWFRPC",4,0)
 ; If IEN is specified, entry is set
"RTN","RGCWFRPC",5,0)
 ; Returned as IEN^.01 internal value
"RTN","RGCWFRPC",6,0)
DISV(DATA,FILE,IEN) ;
"RTN","RGCWFRPC",7,0)
 S FILE=$$ROOT^DILFD(+FILE)
"RTN","RGCWFRPC",8,0)
 I FILE="" S DATA=0 Q
"RTN","RGCWFRPC",9,0)
 S:$G(IEN) ^DISV(DUZ,FILE)=IEN
"RTN","RGCWFRPC",10,0)
 S DATA=+$G(^DISV(DUZ,FILE))
"RTN","RGCWFRPC",11,0)
 S:DATA $P(DATA,U,2)=$P($G(@(FILE_DATA_",0)")),U)
"RTN","RGCWFRPC",12,0)
 Q
"RTN","RGCWFRPC",13,0)
 ; RPC: Return version of package
"RTN","RGCWFRPC",14,0)
VERSION(DATA,PKG) ;
"RTN","RGCWFRPC",15,0)
 S DATA=$$VERSION^XPDUTL(PKG)
"RTN","RGCWFRPC",16,0)
 Q
"RTN","RGCWFRPC",17,0)
 ; RPC: Return true if patch installed
"RTN","RGCWFRPC",18,0)
PATCH(DATA,PATCH) ;
"RTN","RGCWFRPC",19,0)
 S DATA=$$PATCH^XPDUTL(PATCH)
"RTN","RGCWFRPC",20,0)
 Q
"RTN","RGCWFRPC",21,0)
 ; RPC: Get stored variable(s)
"RTN","RGCWFRPC",22,0)
GETVAR(DATA,LIST,NMSP) ;
"RTN","RGCWFRPC",23,0)
 N CNT
"RTN","RGCWFRPC",24,0)
 S:$L($G(LIST)) LIST(-99)=LIST
"RTN","RGCWFRPC",25,0)
 S LIST="",CNT=0
"RTN","RGCWFRPC",26,0)
 F  S LIST=$O(LIST(LIST)) Q:'$L(LIST)  D
"RTN","RGCWFRPC",27,0)
 .S CNT=CNT+1,DATA(CNT)=LIST(LIST)_"="_$$GETVAR^CIANBUTL(LIST(LIST),,.NMSP)
"RTN","RGCWFRPC",28,0)
 Q
"RTN","RGCWFRPC",29,0)
 ; RPC: Set stored variable(s)
"RTN","RGCWFRPC",30,0)
SETVAR(DATA,LIST,NMSP,RESET) ;
"RTN","RGCWFRPC",31,0)
 S:$L($G(LIST)) LIST(-99)=LIST
"RTN","RGCWFRPC",32,0)
 S LIST="",DATA=0
"RTN","RGCWFRPC",33,0)
 D:$G(RESET) CLRVAR^CIANBUTL(.NMSP)
"RTN","RGCWFRPC",34,0)
 F  S LIST=$O(LIST(LIST)) Q:'$L(LIST)  D
"RTN","RGCWFRPC",35,0)
 .S DATA=DATA+1
"RTN","RGCWFRPC",36,0)
 .D SETVAR^CIANBUTL($P(LIST(LIST),"="),$P(LIST(LIST),"=",2,9999),.NMSP)
"RTN","RGCWFRPC",37,0)
 Q
"RTN","RGCWFRPC",38,0)
 ; RPC: Get .01 field values from a file
"RTN","RGCWFRPC",39,0)
GETIDX(DATA,FN,FLG) ;
"RTN","RGCWFRPC",40,0)
 N X,I,Z
"RTN","RGCWFRPC",41,0)
 S DATA=$$TMPGBL,X=0,FN=$$ROOT^DILFD(FN,,1),I=0,FLG=+$G(FLG)
"RTN","RGCWFRPC",42,0)
 I $L(FN) F  S X=$O(@FN@(X)) Q:'X  D
"RTN","RGCWFRPC",43,0)
 .S Z=$P($G(@FN@(X,0)),U)
"RTN","RGCWFRPC",44,0)
 .S:$L(Z) I=I+1,@DATA@(I)=$S(FLG:Z,1:X_U_Z)
"RTN","RGCWFRPC",45,0)
 Q
"RTN","RGCWFRPC",46,0)
 ; Compare version # VER1 with VER2
"RTN","RGCWFRPC",47,0)
 ; Returns -1 if <; 0 if =; 1 if >
"RTN","RGCWFRPC",48,0)
VERCMP(VER1,VER2,PC) ;EP
"RTN","RGCWFRPC",49,0)
 N X,Y,V1,V2
"RTN","RGCWFRPC",50,0)
 S:'$G(PC) PC=4
"RTN","RGCWFRPC",51,0)
 S Y=0
"RTN","RGCWFRPC",52,0)
 F X=1:1:PC D  Q:Y
"RTN","RGCWFRPC",53,0)
 .S V1=+$P(VER1,".",X),V2=+$P(VER2,".",X)
"RTN","RGCWFRPC",54,0)
 .S:V1'=V2 Y=$S(V1>V2:1,1:-1)
"RTN","RGCWFRPC",55,0)
 Q Y
"RTN","RGCWFRPC",56,0)
 ; Get temp global reference
"RTN","RGCWFRPC",57,0)
TMPGBL(X) ;EP
"RTN","RGCWFRPC",58,0)
 K ^TMP("RGCWFRPC"_$G(X),$J) Q $NA(^($J))
"RTN","RGCWFUSR")
0^4^B13581745
"RTN","RGCWFUSR",1,0)
RGCWFUSR ;RI/CBMI/DKM - User utility methods;14-Feb-2015 17:34;DKM
"RTN","RGCWFUSR",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 150
"RTN","RGCWFUSR",3,0)
 ; Returns true if user has key
"RTN","RGCWFUSR",4,0)
 ; KEY = Security key (or parameter if begins with "@")
"RTN","RGCWFUSR",5,0)
 ; USR = IEN of user to check (defaults to current user)
"RTN","RGCWFUSR",6,0)
HASKEY(KEY,USR) ;EP
"RTN","RGCWFUSR",7,0)
 Q:'$L(KEY) 1
"RTN","RGCWFUSR",8,0)
 S USR=$G(USR,DUZ)
"RTN","RGCWFUSR",9,0)
 I $E(KEY)="@" D GETPAR^RGCWFPAR(.KEY,$E(KEY,2,999),,,,USR) Q ''KEY
"RTN","RGCWFUSR",10,0)
 Q ''$D(^XUSEC(KEY,+USR))
"RTN","RGCWFUSR",11,0)
 ; RPC: Check for multiple keys
"RTN","RGCWFUSR",12,0)
HASKEYS(DATA,KEYS,USR) ;EP
"RTN","RGCWFUSR",13,0)
 N PC
"RTN","RGCWFUSR",14,0)
 S DATA=""
"RTN","RGCWFUSR",15,0)
 F PC=1:1:$L(KEYS,U) S $P(DATA,U,PC)=$$HASKEY($P(KEYS,U,PC),.USR)
"RTN","RGCWFUSR",16,0)
 Q
"RTN","RGCWFUSR",17,0)
 ; RPC: Returns true if password is valid
"RTN","RGCWFUSR",18,0)
VALIDPSW(DATA,PSW,USER) ;EP
"RTN","RGCWFUSR",19,0)
 S PSW=$$DECRYP^XUSRB1(PSW),USER=+$G(USER,DUZ)
"RTN","RGCWFUSR",20,0)
 S:'$$GET^XPAR("SYS","XU VC CASE SENSITIVE") PSW=$$UP^XLFSTR(PSW)
"RTN","RGCWFUSR",21,0)
 S DATA=$$EN^XUSHSH(PSW)=$P($G(^VA(200,USER,.1)),U,2)
"RTN","RGCWFUSR",22,0)
 Q
"RTN","RGCWFUSR",23,0)
 ; RPC: Returns roles and privileges
"RTN","RGCWFUSR",24,0)
GETPRIV(DATA,USER) ;EP
"RTN","RGCWFUSR",25,0)
 N TMP,LP,IDX,PAR
"RTN","RGCWFUSR",26,0)
 S USER=+$GET(USER,DUZ)
"RTN","RGCWFUSR",27,0)
 D WHATIS^USRLM(USER,"TMP")
"RTN","RGCWFUSR",28,0)
 S LP="",IDX=1
"RTN","RGCWFUSR",29,0)
 F  S LP=$O(TMP(LP)) Q:'$L(LP)  D
"RTN","RGCWFUSR",30,0)
 .S DATA(IDX)="ROLE_"_$P(TMP(LP),U,3),IDX=IDX+1
"RTN","RGCWFUSR",31,0)
 S LP=""
"RTN","RGCWFUSR",32,0)
 F  S LP=$O(^XUSEC(LP)) Q:'$L(LP)  D
"RTN","RGCWFUSR",33,0)
 .S:$$HASKEY(LP,USER) DATA(IDX)="PRIV_"_LP,IDX=IDX+1
"RTN","RGCWFUSR",34,0)
 S LP=""
"RTN","RGCWFUSR",35,0)
 F  S LP=$O(^XTV(8989.51,"D","XUSEC",LP)) Q:'LP  D
"RTN","RGCWFUSR",36,0)
 .S PAR=$P($G(^XTV(8989.51,LP,0)),U)
"RTN","RGCWFUSR",37,0)
 .I $L(PAR),$$HASKEY("@"_PAR,USER) S DATA(IDX)="PARM_"_PAR,IDX=IDX+1
"RTN","RGCWFUSR",38,0)
 Q
"RTN","RGCWFUSR",39,0)
 ; Return a set of names from the NEW PERSON file
"RTN","RGCWFUSR",40,0)
LOOKUP(DATA,FROM,DIR,KEY,DATE,FLT,CNT) ;
"RTN","RGCWFUSR",41,0)
 ; .DATA=returned list
"RTN","RGCWFUSR",42,0)
 ;  FROM=text to $O from
"RTN","RGCWFUSR",43,0)
 ;  DIR=$O direction,
"RTN","RGCWFUSR",44,0)
 ;  KEY=screen users by security key (optional)
"RTN","RGCWFUSR",45,0)
 ;  DATE=checks for an active person class on this date (optional)
"RTN","RGCWFUSR",46,0)
 ;  FLT=any of: A=Active only, D=Current division only
"RTN","RGCWFUSR",47,0)
 ;  CNT=maximum # to return (defaults to 44)
"RTN","RGCWFUSR",48,0)
 N I,IEN
"RTN","RGCWFUSR",49,0)
 S I=0,CNT=$S($G(CNT)>0:+CNT,1:44),KEY=$G(KEY),DATE=$G(DATE),FLT=$G(FLT,"AD")
"RTN","RGCWFUSR",50,0)
 S:FLT FLT="A"                                                         ; Backward compatibility
"RTN","RGCWFUSR",51,0)
 I DATE,DATE'=+DATE S DATE=$$DT^RGUT(DATE) Q:DATE<0
"RTN","RGCWFUSR",52,0)
 F  S FROM=$O(^VA(200,"B",FROM),DIR),IEN=0 Q:FROM=""  D  Q:I'<CNT
"RTN","RGCWFUSR",53,0)
 .F  S IEN=$O(^VA(200,"B",FROM,IEN)) Q:'IEN  D
"RTN","RGCWFUSR",54,0)
 ..Q:IEN<1
"RTN","RGCWFUSR",55,0)
 ..Q:'$$HASKEY(KEY,IEN)
"RTN","RGCWFUSR",56,0)
 ..I FLT["A",'$$ACTIVE(IEN,DATE) Q                                     ; terminated user
"RTN","RGCWFUSR",57,0)
 ..I FLT["D",'$$INDIV(IEN) Q
"RTN","RGCWFUSR",58,0)
 ..S I=I+1,DATA(I)=IEN_U_FROM
"RTN","RGCWFUSR",59,0)
 Q
"RTN","RGCWFUSR",60,0)
 ; Return true if user was active on/before given date
"RTN","RGCWFUSR",61,0)
 ;   IEN = User IEN
"RTN","RGCWFUSR",62,0)
 ;   DAT = Date constraint
"RTN","RGCWFUSR",63,0)
ACTIVE(IEN,DAT) ;PEP - User active?
"RTN","RGCWFUSR",64,0)
 N X
"RTN","RGCWFUSR",65,0)
 I $G(DAT) N DT S DT=DAT\1
"RTN","RGCWFUSR",66,0)
 S X=$$ACTIVE^XUSER(IEN)
"RTN","RGCWFUSR",67,0)
 Q $S(X:+X,1:X=0)
"RTN","RGCWFUSR",68,0)
 ; Returns true if user in specified division
"RTN","RGCWFUSR",69,0)
 ; For users not assigned to any divisions, always returns true
"RTN","RGCWFUSR",70,0)
 ;   IEN = User IEN (defaults to DUZ)
"RTN","RGCWFUSR",71,0)
 ;   DIV = Division constraint (defaults to current division)
"RTN","RGCWFUSR",72,0)
INDIV(IEN,DIV) ;
"RTN","RGCWFUSR",73,0)
 N RTN
"RTN","RGCWFUSR",74,0)
 S:'$G(IEN) IEN=DUZ
"RTN","RGCWFUSR",75,0)
 S:'$D(DIV) DIV=DUZ(2)
"RTN","RGCWFUSR",76,0)
 Q $S('$$DIV4^XUSER(.RTN,IEN):1,1:$D(RTN(DIV)))
"RTN","RGCWFUSR",77,0)
 ; Returns true if valid electronic signature
"RTN","RGCWFUSR",78,0)
VALIDSIG(DATA,ESIG) ;
"RTN","RGCWFUSR",79,0)
 N X
"RTN","RGCWFUSR",80,0)
 S X=$$DECRYP^XUSRB1(ESIG)
"RTN","RGCWFUSR",81,0)
 D HASH^XUSHSHP
"RTN","RGCWFUSR",82,0)
 S DATA=X=$P($G(^VA(200,+DUZ,20)),U,4)
"RTN","RGCWFUSR",83,0)
 Q
"RTN","RGCWFUSR",84,0)
 ; Returns true if electronic signature code passes input transform
"RTN","RGCWFUSR",85,0)
VALINSIG(DATA,ESIG) ;
"RTN","RGCWFUSR",86,0)
 N X
"RTN","RGCWFUSR",87,0)
 S DATA=1
"RTN","RGCWFUSR",88,0)
 S X=$$DECRYP^XUSRB1(ESIG)
"RTN","RGCWFUSR",89,0)
 I $L(X)>20!($L(X)<6) S DATA="-1^Length must be between 6 and 20 characters." Q
"RTN","RGCWFUSR",90,0)
 I X'?.UNP S DATA="-2^Signature code can only contain uppercase letters, punctuation or numbers." Q
"RTN","RGCWFUSR",91,0)
 Q
"RTN","RGCWFUSR",92,0)
STORESIG(DATA,ESIG) ;
"RTN","RGCWFUSR",93,0)
 N X,LP,DA
"RTN","RGCWFUSR",94,0)
 S DA=DUZ
"RTN","RGCWFUSR",95,0)
 S DATA=0
"RTN","RGCWFUSR",96,0)
 S X=$$DECRYP^XUSRB1(ESIG)
"RTN","RGCWFUSR",97,0)
 D HASH^XUSHSHP  ;returns hashed value in X
"RTN","RGCWFUSR",98,0)
 L +^VA(200,DUZ):5
"RTN","RGCWFUSR",99,0)
 E  S DATA="-1^Unable to obtain lock on New Person File." Q
"RTN","RGCWFUSR",100,0)
 S $P(^VA(200,DUZ,20),U,4)=X
"RTN","RGCWFUSR",101,0)
 S LP=0 F  S LP=$O(^DD(200,20.4,1,LP)) Q:'LP  X ^(LP,1)  ; Fire DD Triggers
"RTN","RGCWFUSR",102,0)
 L -^VA(200,DUZ)
"RTN","RGCWFUSR",103,0)
 Q
"RTN","RGCWFUSR",104,0)
 ; Returns true if user has electronic signature code
"RTN","RGCWFUSR",105,0)
HASESIG(DATA) ;EP
"RTN","RGCWFUSR",106,0)
 S DATA=$L($P($G(^VA(200,DUZ,20)),U,4))>0
"RTN","RGCWFUSR",107,0)
 Q
"RTN","RGCWFUSR",108,0)
 ; Returns true if File Manager Access Code field contains code
"RTN","RGCWFUSR",109,0)
 ; If user has the '@' code, returns true regardless
"RTN","RGCWFUSR",110,0)
HASFMCD(DATA,CODE) ;
"RTN","RGCWFUSR",111,0)
 S DATA=$G(DUZ(0))["@"!($G(DUZ(0))[CODE)
"RTN","RGCWFUSR",112,0)
 Q
"RTN","RGCWFUSR",113,0)
 ; Iterator for traversing name xref
"RTN","RGCWFUSR",114,0)
NAMEITER(CTX) ;
"RTN","RGCWFUSR",115,0)
 I '$Q D NAMEITER^RGCWSER(CTX,$NA(^VA(200,"B"))) Q
"RTN","RGCWFUSR",116,0)
 Q $$NAMEITER^RGCWSER(CTX)
"RTN","RGCWFUTL")
0^5^B7704054
"RTN","RGCWFUTL",1,0)
RGCWFUTL ;RI/CBMI/DKM CareWeb Management Utilites;02-Feb-2015 10:15;DKM
"RTN","RGCWFUTL",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 150
"RTN","RGCWFUTL",3,0)
 ; Initiate shutdown sequence for applications
"RTN","RGCWFUTL",4,0)
SHUTDOWN N DELAY,MSG
"RTN","RGCWFUTL",5,0)
 W !,"Initiate CareWeb Shutdown Sequence",!!
"RTN","RGCWFUTL",6,0)
 D SHOWSESS()
"RTN","RGCWFUTL",7,0)
 W:$$GETLOGIN'="" "Note: shutdown has already been initiated.",!!
"RTN","RGCWFUTL",8,0)
 F  D  Q:$D(DELAY)
"RTN","RGCWFUTL",9,0)
 .R !,"# of seconds till shutdown (30 minimum): ",DELAY:DTIME,!
"RTN","RGCWFUTL",10,0)
 .E  S DELAY=U
"RTN","RGCWFUTL",11,0)
 .S DELAY=$TR(DELAY," ")
"RTN","RGCWFUTL",12,0)
 .Q:DELAY[U
"RTN","RGCWFUTL",13,0)
 .I DELAY["?" D  Q
"RTN","RGCWFUTL",14,0)
 ..K DELAY
"RTN","RGCWFUTL",15,0)
 ..W "Enter number of seconds before shutdown.",!
"RTN","RGCWFUTL",16,0)
 ..W "To specify time in minutes, follow number with letter M.",!
"RTN","RGCWFUTL",17,0)
 .S:DELAY?1.N1(1"M",1"m") DELAY=DELAY*60
"RTN","RGCWFUTL",18,0)
 .S DELAY=DELAY\1
"RTN","RGCWFUTL",19,0)
 .K:DELAY<30 DELAY
"RTN","RGCWFUTL",20,0)
 Q:DELAY[U
"RTN","RGCWFUTL",21,0)
 Q:'$$ASK^RGUT("Do you really want to shut down CareWeb in "_DELAY_" seconds")
"RTN","RGCWFUTL",22,0)
 D SDINIT(.MSG,DELAY,1)
"RTN","RGCWFUTL",23,0)
 W !!,MSG,!!
"RTN","RGCWFUTL",24,0)
 Q
"RTN","RGCWFUTL",25,0)
 ; Abort a shutdown sequence in progress
"RTN","RGCWFUTL",26,0)
ABORTSD N MSG
"RTN","RGCWFUTL",27,0)
 W !,"Abort CareWeb Shutdown and Enable Logins",!!
"RTN","RGCWFUTL",28,0)
 D SHOWSESS()
"RTN","RGCWFUTL",29,0)
 W:$$GETLOGIN="" "Note: a shutdown does not appear to be in progress.",!!
"RTN","RGCWFUTL",30,0)
 Q:'$$ASK^RGUT("Do you really want to abort any shutdowns in progress and enable logins")
"RTN","RGCWFUTL",31,0)
 D SDABORT(.MSG,1)
"RTN","RGCWFUTL",32,0)
 W !!,MSG,!!
"RTN","RGCWFUTL",33,0)
 Q
"RTN","RGCWFUTL",34,0)
 ; RPC: Initiate shutdown
"RTN","RGCWFUTL",35,0)
SDINIT(DATA,DELAY,LOCK,USR) ;
"RTN","RGCWFUTL",36,0)
 S DELAY=DELAY\1
"RTN","RGCWFUTL",37,0)
 I DELAY<30 S DATA="Invalid value for shutdown delay." Q
"RTN","RGCWFUTL",38,0)
 D:$G(LOCK) SETLOGIN("Application is currently offline.  Please try later.")
"RTN","RGCWFUTL",39,0)
 D BRDCAST^CIANBEVT("DESKTOP.SHUTDOWN.START",DELAY*1000,.USR)
"RTN","RGCWFUTL",40,0)
 S DATA="Shutdown sequence initiated.  "_$$SDMSG
"RTN","RGCWFUTL",41,0)
 Q
"RTN","RGCWFUTL",42,0)
 ; RPC: Abort shutdown
"RTN","RGCWFUTL",43,0)
SDABORT(DATA,UNLOCK,USR) ;
"RTN","RGCWFUTL",44,0)
 D BRDCAST^CIANBEVT("DESKTOP.SHUTDOWN.ABORT","Application shutdown has been aborted.  You may continue.",.USR)
"RTN","RGCWFUTL",45,0)
 D:$G(UNLOCK) SETLOGIN()
"RTN","RGCWFUTL",46,0)
 S DATA="Shutdown sequence aborted.  "_$$SDMSG
"RTN","RGCWFUTL",47,0)
 Q
"RTN","RGCWFUTL",48,0)
 ; Login status message
"RTN","RGCWFUTL",49,0)
SDMSG() Q "Logins are "_$S($L($$GETLOGIN):"disabled.",1:"enabled.")
"RTN","RGCWFUTL",50,0)
 ; Get inhibit login message
"RTN","RGCWFUTL",51,0)
GETLOGIN() ;
"RTN","RGCWFUTL",52,0)
 Q $$OPTMSG^CIANBUTL("RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWFUTL",53,0)
 ; Set inhibit login message
"RTN","RGCWFUTL",54,0)
SETLOGIN(MSG) ;
"RTN","RGCWFUTL",55,0)
 D OPTMSG^CIANBUTL("RGCWF CAREWEB FRAMEWORK",$G(MSG))
"RTN","RGCWFUTL",56,0)
 Q
"RTN","RGCWFUTL",57,0)
 ; RPC: Get/set inhibit login message
"RTN","RGCWFUTL",58,0)
MSGLOGIN(DATA,MSG) ;
"RTN","RGCWFUTL",59,0)
 I '$D(MSG) S DATA=$$GETLOGIN
"RTN","RGCWFUTL",60,0)
 E  D SETLOGIN(MSG)
"RTN","RGCWFUTL",61,0)
 Q
"RTN","RGCWFUTL",62,0)
 ; Show active CareWeb sessions
"RTN","RGCWFUTL",63,0)
SHOWSESS() ;
"RTN","RGCWFUTL",64,0)
 N X
"RTN","RGCWFUTL",65,0)
 S X=$$SHOWSESS^CIANBUTL("RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWFUTL",66,0)
 Q:$Q X
"RTN","RGCWFUTL",67,0)
 Q
"RTN","RGCWKDIN")
0^^B31866196
"RTN","RGCWKDIN",1,0)
RGCKDIN ;RI/CBMI/DKM - CareWeb KIDS installation support ;02-Feb-2015 12:11;DKM
"RTN","RGCWKDIN",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 150
"RTN","RGCWKDIN",3,0)
 ; Environment check
"RTN","RGCWKDIN",4,0)
EC X $G(@XPDGREF@("EC"))
"RTN","RGCWKDIN",5,0)
 Q
"RTN","RGCWKDIN",6,0)
 ; Preinit
"RTN","RGCWKDIN",7,0)
PRE N RGX,RGY
"RTN","RGCWKDIN",8,0)
 D MES(),OBJINST,SDINIT^RGCWFUTL(,60,1)
"RTN","RGCWKDIN",9,0)
 F  D  Q:'RGX
"RTN","RGCWKDIN",10,0)
 .S RGX=$$SHOWSESS^RGCWFUTL
"RTN","RGCWKDIN",11,0)
 .R:RGX "Waiting for active sessions to terminate...",RGY:10,!!
"RTN","RGCWKDIN",12,0)
 .I RGX,RGY=U,$$ASK^RGUT("There are still active sessions.  Are you sure you want to proceed") S RGX=0
"RTN","RGCWKDIN",13,0)
 D MES("Proceeding with installation...")
"RTN","RGCWKDIN",14,0)
 D INITIAL,SAVEOPT
"RTN","RGCWKDIN",15,0)
 Q
"RTN","RGCWKDIN",16,0)
 ; Postinit
"RTN","RGCWKDIN",17,0)
POST N PAR,Y
"RTN","RGCWKDIN",18,0)
 X ^%ZOSF("EON"),^%ZOSF("TRMOFF")
"RTN","RGCWKDIN",19,0)
 D RESPTR,DEFPAR,RESTOPT,REGISTER,FINAL
"RTN","RGCWKDIN",20,0)
 W !!!
"RTN","RGCWKDIN",21,0)
 Q
"RTN","RGCWKDIN",22,0)
 ; Execute initial preinit code, if any
"RTN","RGCWKDIN",23,0)
INITIAL ; EP
"RTN","RGCWKDIN",24,0)
 X $G(@XPDGREF@("INITIAL"))
"RTN","RGCWKDIN",25,0)
 Q
"RTN","RGCWKDIN",26,0)
 ; Execute final postinit code, if any
"RTN","RGCWKDIN",27,0)
FINAL ; EP
"RTN","RGCWKDIN",28,0)
 X $G(@XPDGREF@("FINAL"))
"RTN","RGCWKDIN",29,0)
 Q
"RTN","RGCWKDIN",30,0)
 ; Initializes default parameter values.  Does not affect existing entries.
"RTN","RGCWKDIN",31,0)
DEFPAR N PAR,ENT,VAL,INST,LP,Y
"RTN","RGCWKDIN",32,0)
 D MES("Setting up default site parameters...")
"RTN","RGCWKDIN",33,0)
 F LP=0:0 S LP=$O(@XPDGREF@("PARAM",LP)) Q:'LP  K VAL M VAL=^(LP) D
"RTN","RGCWKDIN",34,0)
 .S Y=VAL,VAL=$$MSG^RGUT($P(Y,U,3,999),"|",0),PAR=$P(Y,U),INST=$P(Y,U,2)
"RTN","RGCWKDIN",35,0)
 .S ENT=$$ENT^RGCWFPAR(PAR),ENT=$P(ENT,U,$L(ENT,U))
"RTN","RGCWKDIN",36,0)
 .D:$L(ENT) ADD^XPAR(ENT,PAR,INST,.VAL)
"RTN","RGCWKDIN",37,0)
 Q
"RTN","RGCWKDIN",38,0)
 ; Delete a file or subfile
"RTN","RGCWKDIN",39,0)
 ;   DIU = File or subfile #
"RTN","RGCWKDIN",40,0)
DELFIL(DIU) ; EP
"RTN","RGCWKDIN",41,0)
 N $ET
"RTN","RGCWKDIN",42,0)
 S $ET="",@$$TRAP^RGUTOS("DELERR^RGCWKDIN")
"RTN","RGCWKDIN",43,0)
 Q:'$D(^DD(DIU))
"RTN","RGCWKDIN",44,0)
 S DIU(0)=$S($D(^DIC(DIU)):"D",1:"S")
"RTN","RGCWKDIN",45,0)
 D EN^DIU2
"RTN","RGCWKDIN",46,0)
 Q
"RTN","RGCWKDIN",47,0)
DELERR N ERR
"RTN","RGCWKDIN",48,0)
 S ERR=$$EC^%ZOSV
"RTN","RGCWKDIN",49,0)
 D MES("An error occurred deleting file #"_$G(DIU))
"RTN","RGCWKDIN",50,0)
 D MES("The error was: "_ERR)
"RTN","RGCWKDIN",51,0)
 D MES("Please delete the file manually after correcting the problem.")
"RTN","RGCWKDIN",52,0)
 Q
"RTN","RGCWKDIN",53,0)
 ; Save ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK option
"RTN","RGCWKDIN",54,0)
SAVEOPT N OPT
"RTN","RGCWKDIN",55,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",56,0)
 Q:'OPT
"RTN","RGCWKDIN",57,0)
 M @XPDGREF@("ITMSAVE")=^DIC(19,OPT,10,"B")
"RTN","RGCWKDIN",58,0)
 M @XPDGREF@("RPCSAVE")=^DIC(19,OPT,"RPC","B")
"RTN","RGCWKDIN",59,0)
 Q
"RTN","RGCWKDIN",60,0)
 ; Restore ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK
"RTN","RGCWKDIN",61,0)
RESTOPT N OPT,ITM,RPC
"RTN","RGCWKDIN",62,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",63,0)
 Q:'OPT
"RTN","RGCWKDIN",64,0)
 F ITM=0:0 S ITM=$O(@XPDGREF@("ITMSAVE",ITM)) Q:'ITM  I $$REGCTX^RGUTRPC(ITM,OPT)
"RTN","RGCWKDIN",65,0)
 F RPC=0:0 S RPC=$O(@XPDGREF@("RPCSAVE",RPC)) Q:'RPC  I $$REGRPC^RGUTRPC(RPC,OPT)
"RTN","RGCWKDIN",66,0)
 Q
"RTN","RGCWKDIN",67,0)
 ; Resolve pointers in multiples (KIDS doesn't)
"RTN","RGCWKDIN",68,0)
RESPTR ; EP
"RTN","RGCWKDIN",69,0)
 N TGT,SRC,SUB,NOD,NAM,VAL,IEN,CNT,SGB,PTR
"RTN","RGCWKDIN",70,0)
 S SUB=0
"RTN","RGCWKDIN",71,0)
 F  S SUB=$O(@XPDGREF@("PTRS",SUB)) Q:'SUB  S X=^(SUB)  D
"RTN","RGCWKDIN",72,0)
 .S NOD=+X,SRC=$P(X,U,2),TGT=$P(X,U,3),SGB=$$ROOT^DILFD(SRC,,1),NAM=""
"RTN","RGCWKDIN",73,0)
 .F  S NAM=$O(@XPDGREF@("PTRS",SUB,NAM)) Q:'$L(NAM)  D
"RTN","RGCWKDIN",74,0)
 ..S IEN=$$FIND1^DIC(SRC,"","QX",NAM),VAL="",CNT=0
"RTN","RGCWKDIN",75,0)
 ..Q:IEN'>0
"RTN","RGCWKDIN",76,0)
 ..K @SGB@(IEN,NOD)
"RTN","RGCWKDIN",77,0)
 ..F  S VAL=$O(@XPDGREF@("PTRS",SUB,NAM,VAL)) Q:'$L(VAL)  D
"RTN","RGCWKDIN",78,0)
 ...S PTR=$$FIND1^DIC(TGT,,"X",VAL)
"RTN","RGCWKDIN",79,0)
 ...I 'PTR D MES("  Failed to resolve "_VAL) Q
"RTN","RGCWKDIN",80,0)
 ...S CNT=CNT+1,@SGB@(IEN,NOD,CNT,0)=PTR,@SGB@(IEN,NOD,"B",PTR,CNT)=""
"RTN","RGCWKDIN",81,0)
 ..S:CNT @SGB@(IEN,NOD,0)=U_SUB_"P^"_CNT_U_CNT
"RTN","RGCWKDIN",82,0)
 Q
"RTN","RGCWKDIN",83,0)
 ; Check binary version against M system
"RTN","RGCWKDIN",84,0)
OBJCHK ; EP
"RTN","RGCWKDIN",85,0)
 N VER,MSYS
"RTN","RGCWKDIN",86,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",87,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",88,0)
 I '$D(VER) D
"RTN","RGCWKDIN",89,0)
 .D MES("This package contains object code that is not supported on "_MSYS_" installations.",2)
"RTN","RGCWKDIN",90,0)
 E  I VER="" D
"RTN","RGCWKDIN",91,0)
 .D MES("This package does not contain object code for this version of "_MSYS_" installations.",2)
"RTN","RGCWKDIN",92,0)
 Q
"RTN","RGCWKDIN",93,0)
 ; Get M system type and target version
"RTN","RGCWKDIN",94,0)
GETMSYS(MSYS,VER) ;
"RTN","RGCWKDIN",95,0)
 K MSYS,VER
"RTN","RGCWKDIN",96,0)
 Q:'$D(@XPDGREF@("OBJ"))
"RTN","RGCWKDIN",97,0)
 S MSYS=$$UP^XLFSTR($P($$VERSION^%ZOSV(1)," ")),MSYS(0)=$S(MSYS="CACHE":1,MSYS="JUMPS":2,1:0)
"RTN","RGCWKDIN",98,0)
 Q:'$D(@XPDGREF@("OBJ",MSYS(0)))
"RTN","RGCWKDIN",99,0)
 S VER=$TR($$VERSION^%ZOSV()," ")
"RTN","RGCWKDIN",100,0)
 F  Q:'$L(VER)  Q:$D(@XPDGREF@("OBJ",MSYS(0),VER))  S VER=$P(VER,".",1,$L(VER,".")-1)
"RTN","RGCWKDIN",101,0)
 Q
"RTN","RGCWKDIN",102,0)
 ; Install routine binaries
"RTN","RGCWKDIN",103,0)
OBJINST ; EP
"RTN","RGCWKDIN",104,0)
 N MSYS,RTN,OBJ,SUB,GBL
"RTN","RGCWKDIN",105,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",106,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",107,0)
 Q:$D(@XPDGREF@("OBJ",MSYS(0)))<10
"RTN","RGCWKDIN",108,0)
 S RTN=""
"RTN","RGCWKDIN",109,0)
 D MES("Installing routine binaries...")
"RTN","RGCWKDIN",110,0)
 F  S RTN=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN)) Q:'$L(RTN)  D
"RTN","RGCWKDIN",111,0)
 .X "ZR  ZS @RTN"
"RTN","RGCWKDIN",112,0)
 .S OBJ="",SUB=0,GBL=$NA(@$S(MSYS(0)=1:"^rOBJ(RTN)",1:"^$R(RTN,""OBJECT"")"))
"RTN","RGCWKDIN",113,0)
 .F  S SUB=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN,SUB)) Q:'SUB  S OBJ=OBJ_^(SUB,0)
"RTN","RGCWKDIN",114,0)
 .S @GBL=$S(MSYS(0)=1:$$DECODE^RGUTUU(OBJ),1:OBJ)
"RTN","RGCWKDIN",115,0)
 Q
"RTN","RGCWKDIN",116,0)
 ; Perform various registration actions
"RTN","RGCWKDIN",117,0)
REGISTER N X,CTX
"RTN","RGCWKDIN",118,0)
 S CTX=$$GETOPT^RGUTRPC("RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",119,0)
 Q:'CTX
"RTN","RGCWKDIN",120,0)
 F X="RGCW","CIAV","CIAU","DG","DDR","RGUT","BEH" D REGNMSP^RGUTRPC(X,CTX)
"RTN","RGCWKDIN",121,0)
 F X="OR CPRS GUI CHART" D DOREG(X)
"RTN","RGCWKDIN",122,0)
 Q
"RTN","RGCWKDIN",123,0)
 ; Add an option as a subcontext to CareWeb Framework
"RTN","RGCWKDIN",124,0)
 ; Remove any redundant RPC's
"RTN","RGCWKDIN",125,0)
DOREG(OPT) ;
"RTN","RGCWKDIN",126,0)
 N RPC,CNT1,CNT2,STAT,IEN
"RTN","RGCWKDIN",127,0)
 S IEN=$$GETOPT^RGUTRPC(OPT)
"RTN","RGCWKDIN",128,0)
 Q:'IEN
"RTN","RGCWKDIN",129,0)
 W !!,"Registering ",OPT," as a subcontext under RGCWF CAREWEB FRAMEWORK...",!
"RTN","RGCWKDIN",130,0)
 I $$REGCTX^RGUTRPC(IEN,CTX)
"RTN","RGCWKDIN",131,0)
 W "Removing redundant RPC references...",!
"RTN","RGCWKDIN",132,0)
 S (CNT1,CNT2)=0
"RTN","RGCWKDIN",133,0)
 F RPC=0:0 S RPC=$O(^DIC(19,IEN,"RPC","B",RPC)) Q:'RPC  D
"RTN","RGCWKDIN",134,0)
 .S STAT=$$REGRPC^RGUTRPC(RPC,CTX,1)
"RTN","RGCWKDIN",135,0)
 .Q:STAT=-1
"RTN","RGCWKDIN",136,0)
 .W $$GET1^DIQ(8994,RPC,.01)_" - "
"RTN","RGCWKDIN",137,0)
 .I STAT=1 W "Removed",! S CNT1=CNT1+1
"RTN","RGCWKDIN",138,0)
 .E  I 'STAT W "Not removed",! S CNT2=CNT2+1
"RTN","RGCWKDIN",139,0)
 W !,CNT1," remote procedure(s) removed",!
"RTN","RGCWKDIN",140,0)
 W:CNT2 CNT2," remote procedure(s) could not be removed",!!
"RTN","RGCWKDIN",141,0)
 Q
"RTN","RGCWKDIN",142,0)
 ; Check if specified routine is installed
"RTN","RGCWKDIN",143,0)
RTNTST(RTN,VN,MSG) ;
"RTN","RGCWKDIN",144,0)
 D:$$RTNVER(RTN)<VN MES(MSG_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",145,0)
 Q
"RTN","RGCWKDIN",146,0)
 ; Get version # for specified routine
"RTN","RGCWKDIN",147,0)
RTNVER(RTN) ;
"RTN","RGCWKDIN",148,0)
 Q $P($T(+2^@RTN),";",3)
"RTN","RGCWKDIN",149,0)
 ; Check patch #s for specified routine
"RTN","RGCWKDIN",150,0)
PATCH(RTN,PN,MSG) ;
"RTN","RGCWKDIN",151,0)
 N X,Y,L,F
"RTN","RGCWKDIN",152,0)
 F X=1:1:$L(PN,",") D
"RTN","RGCWKDIN",153,0)
 .S Y=$P(PN,",",X),F=0
"RTN","RGCWKDIN",154,0)
 .F L=2,3 D  Q:F
"RTN","RGCWKDIN",155,0)
 ..S F=$TR($P($T(+L^@RTN),";",5),"*",",")[(","_Y_",")
"RTN","RGCWKDIN",156,0)
 .D:'F MES(MSG_" patch #"_Y_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",157,0)
 Q
"RTN","RGCWKDIN",158,0)
 ; Display message in MSG and optionally set quit flag to QUIT
"RTN","RGCWKDIN",159,0)
MES(MSG,QUIT) ;
"RTN","RGCWKDIN",160,0)
 D BMES^XPDUTL("  "_$G(MSG))
"RTN","RGCWKDIN",161,0)
 S:$G(QUIT) XPDQUIT=QUIT
"RTN","RGCWKDIN",162,0)
 Q
"RTN","RGCWSEF0")
0^10^B2599920
"RTN","RGCWSEF0",1,0)
RGCWSEF0 ;RI/CBMI/DKM - Return observations in FHIR format. ;26-Feb-2015 08:50;DKM
"RTN","RGCWSEF0",2,0)
 ;=================================================================;;;;;Build 150
"RTN","RGCWSEF0",3,0)
 ;;1.0;CAREWEB FRAMEWORK;;07-Feb-2015 08:51
"RTN","RGCWSEF0",4,0)
 ;=================================================================
"RTN","RGCWSEF0",5,0)
OBS(DFN,ID,BEG,END,MAX) ;
"RTN","RGCWSEF0",6,0)
 N RTN
"RTN","RGCWSEF0",7,0)
 S RTN=$$TMPGBL^RGCWSER,DFN=$G(DFN),ID=$G(ID),BEG=$G(BEG,1410101),END=$G(END,9999998)
"RTN","RGCWSEF0",8,0)
 S MAX=$S($L(ID):1,1:$G(MAX,999999))
"RTN","RGCWSEF0",9,0)
 D:'$$ISMAX EN^RGCWSEFL(RTN,DFN,ID,BEG,END,MAX)
"RTN","RGCWSEF0",10,0)
 D:'$$ISMAX EN^RGCWSEFV(RTN,DFN,ID,BEG,END,MAX)
"RTN","RGCWSEF0",11,0)
 S DATA("RGCWSEF0")=RTN
"RTN","RGCWSEF0",12,0)
 Q RTN
"RTN","RGCWSEF0",13,0)
 ; Retrieve data
"RTN","RGCWSEF0",14,0)
RETRIEVE ; Merge into VALS
"RTN","RGCWSEF0",15,0)
 S:'$D(DATA("RGCWSEF0")) DATA("RGCWSEF0")=$$OBS(,ID),IEN=1
"RTN","RGCWSEF0",16,0)
 M VALS(0,IENS)=@DATA("RGCWSEF0")@(IEN)
"RTN","RGCWSEF0",17,0)
 Q
"RTN","RGCWSEF0",18,0)
 ; Return true if maximum observations returned
"RTN","RGCWSEF0",19,0)
ISMAX() Q $O(@RTN@(""),-1)'<MAX
"RTN","RGCWSEF0",20,0)
 ; Return true if the result is a quantity
"RTN","RGCWSEF0",21,0)
ISQUANT(X) ;
"RTN","RGCWSEF0",22,0)
 Q $L(X)&(X'=".")&(X?0.N0.1"."0.N)
"RTN","RGCWSEF0",23,0)
 ; Return vuid
"RTN","RGCWSEF0",24,0)
VUID(IEN,FILE) ;
"RTN","RGCWSEF0",25,0)
 Q $$GET1^DIQ(FILE,IEN_",",99.99)
"RTN","RGCWSEF0",26,0)
 ; Ouput a file entry
"RTN","RGCWSEF0",27,0)
FILE(NAME,IEN,FILE,FLD) ;
"RTN","RGCWSEF0",28,0)
 D:IEN PUT(NAME,IEN,$$GET1^DIQ(FILE,+IEN,$G(FLD,.01)))
"RTN","RGCWSEF0",29,0)
 Q
"RTN","RGCWSEF0",30,0)
 ; Output facility
"RTN","RGCWSEF0",31,0)
FACILITY(X) ;
"RTN","RGCWSEF0",32,0)
 N P1,P2
"RTN","RGCWSEF0",33,0)
 I $G(X) S P1=$$STA^XUAF4(X),P2=$P($$NS^XUAF4(X),U)
"RTN","RGCWSEF0",34,0)
 E  S X=$$SITE^VASITE,P1=$P(X,U,2),P2=$P(X,U)
"RTN","RGCWSEF0",35,0)
 D PUT("facility",P1,P2)
"RTN","RGCWSEF0",36,0)
 Q
"RTN","RGCWSEF0",37,0)
 ; Get array base
"RTN","RGCWSEF0",38,0)
ARY(DATA) ;
"RTN","RGCWSEF0",39,0)
 N X
"RTN","RGCWSEF0",40,0)
 S X=$O(@DATA@(""),-1)+1
"RTN","RGCWSEF0",41,0)
 Q $NA(@DATA@(X))
"RTN","RGCWSEF0",42,0)
 ; Write to target array
"RTN","RGCWSEF0",43,0)
PUT(NAME,INTERNAL,EXTERNAL) ;
"RTN","RGCWSEF0",44,0)
 I $L($G(INTERNAL)) D
"RTN","RGCWSEF0",45,0)
 .S @ARY@(NAME,"I")=INTERNAL
"RTN","RGCWSEF0",46,0)
 .S @ARY@(NAME,"E")=$S($D(EXTERNAL)#2:EXTERNAL,1:INTERNAL)
"RTN","RGCWSEF0",47,0)
 Q
"RTN","RGCWSEFL")
0^11^B12587723
"RTN","RGCWSEFL",1,0)
RGCWSEFL ;RI/CBMI/DKM - Return lab observations. ;10-Feb-2015 23:51;DKM
"RTN","RGCWSEFL",2,0)
 ;=================================================================;;;;;Build 150
"RTN","RGCWSEFL",3,0)
 ;;1.0;CAREWEB FRAMEWORK;;07-Feb-2015 08:51
"RTN","RGCWSEFL",4,0)
 ;=================================================================
"RTN","RGCWSEFL",5,0)
 ; Return lab results
"RTN","RGCWSEFL",6,0)
EN(DATA,DFN,ID,BEG,END,MAX) ;
"RTN","RGCWSEFL",7,0)
 N LRDFN,LRIDT,LRSUB,LRSEQ,LR0
"RTN","RGCWSEFL",8,0)
 I $L($G(ID)) D
"RTN","RGCWSEFL",9,0)
 .S LRDFN=+$P(ID,";",3),LRIDT=$P(ID,";",2),LRSUB=$P(ID,";"),LR0=$G(^LR(LRDFN,0))
"RTN","RGCWSEFL",10,0)
 .I $P(LR0,U,2)'=2 S DFN=0 Q
"RTN","RGCWSEFL",11,0)
 .I '$G(DFN) S DFN=+$P(LR0,U,3) Q
"RTN","RGCWSEFL",12,0)
 .I DFN'=$P(LR0,U,3) S DFN=0 Q
"RTN","RGCWSEFL",13,0)
 .S (BEG,END)=9999999-LRIDT
"RTN","RGCWSEFL",14,0)
 E  S DFN=+$G(DFN),LRDFN=$G(^DPT(DFN,"LR")),LRSUB=""
"RTN","RGCWSEFL",15,0)
 Q:'DFN!'LRDFN
"RTN","RGCWSEFL",16,0)
 K ^TMP("LRRR",$J,DFN)
"RTN","RGCWSEFL",17,0)
 D RR^LR7OR1(DFN,,BEG,END,LRSUB,,,MAX)
"RTN","RGCWSEFL",18,0)
 S LRSUB=""
"RTN","RGCWSEFL",19,0)
 F  S LRSUB=$O(^TMP("LRRR",$J,DFN,LRSUB)),LRIDT=0 Q:LRSUB=""  D  Q:MAX'>0
"RTN","RGCWSEFL",20,0)
 .F  S LRIDT=$O(^TMP("LRRR",$J,DFN,LRSUB,LRIDT)) Q:'LRIDT  D  Q:MAX'>0
"RTN","RGCWSEFL",21,0)
 ..S LR0=$G(^LR(LRDFN,LRSUB,LRIDT,0)),LRSEQ=0
"RTN","RGCWSEFL",22,0)
 ..F  S LRSEQ=$O(^TMP("LRRR",$J,DFN,LRSUB,LRIDT,LRSEQ)) Q:'LRSEQ  D PROCESS(^(LRSEQ)) Q:MAX'>0
"RTN","RGCWSEFL",23,0)
 K ^TMP("LRRR",$J,DFN)
"RTN","RGCWSEFL",24,0)
 Q
"RTN","RGCWSEFL",25,0)
 ; Process an entry
"RTN","RGCWSEFL",26,0)
 ; AU: LUNG,LT (gm)^200^^^^F^^^^^^^^^LUNG,LT (gm)^200^^^;AU;
"RTN","RGCWSEFL",27,0)
 ; CH: 179^2^L*^meq/L^23 - 31^F^^^82830.0000^Carbon Dioxide Content^99NLT^11733^^^CO2^CH 0917 3^1209^^72"
"RTN","RGCWSEFL",28,0)
 ; CY: GROSS DESCRIPTION^Swab for PAP smear^^^^I^^TX^^^&GDT^^^^GROSS DESCRIPTION^^^;CY;7039672.99999
"RTN","RGCWSEFL",29,0)
 ; EM: ORGAN/TISSUE^LYMPH NODE^^^^F^1^CE^08000^SNM^&ANT^^^^ORG/TISS^^^;EM;7049691
"RTN","RGCWSEFL",30,0)
 ; MI: URINE SCREEN^Positive^^^^P^^^^^^^^^URINE SCREEN^^^;MI;7079882.8562^71
"RTN","RGCWSEFL",31,0)
 ; MI: ORGANISM^ESCHERICHIA COLI;3+ ^^^^P^^^^^^^^^ORGANISM^^^;MI;7079882.8562^71
"RTN","RGCWSEFL",32,0)
 ; MI: R^R^^^^P^^^^^^^^^R^^^;MI;7079882.8562^71
"RTN","RGCWSEFL",33,0)
 ; SP: MORPHOLOGY^NEGATIVE FOR MALIGNANT CELLS^^^^F^1^CE^09460^SNM^&IMP^^^^_MORPH^^^;SP;7049482
"RTN","RGCWSEFL",34,0)
PROCESS(TMP) 
"RTN","RGCWSEFL",35,0)
 N ANID,ARY,X
"RTN","RGCWSEFL",36,0)
 S ANID=LRSUB_";"_LRIDT_";"_LRDFN_";"_LRSEQ
"RTN","RGCWSEFL",37,0)
 I $L($G(ID)),ID'=ANID Q
"RTN","RGCWSEFL",38,0)
 S ARY=$$ARY^RGCWSEF0(DATA),MAX=MAX-1
"RTN","RGCWSEFL",39,0)
 D PUT("id",ANID)
"RTN","RGCWSEFL",40,0)
 D PUT("collected",9999999-LRIDT)
"RTN","RGCWSEFL",41,0)
 S X=$P(LR0,U,3)
"RTN","RGCWSEFL",42,0)
 D PUT("issued",X)
"RTN","RGCWSEFL",43,0)
 S X=$P(X,"!",3)
"RTN","RGCWSEFL",44,0)
 S LOINC=$S(X:$$GET1^DIQ(95.3,X_",",.01),1:"")
"RTN","RGCWSEFL",45,0)
 D PUT("status","final")
"RTN","RGCWSEFL",46,0)
 D PUT("reliability","ok")
"RTN","RGCWSEFL",47,0)
 D PUT("value",$P(TMP,U,2))
"RTN","RGCWSEFL",48,0)
 D PUT("interpretation",$P(TMP,U,3))
"RTN","RGCWSEFL",49,0)
 D PUT("units",$P(TMP,U,4))
"RTN","RGCWSEFL",50,0)
 S X=$P(TMP,U,5)
"RTN","RGCWSEFL",51,0)
 D PUT("low",$P(X," - ")),PUT("high",$P(X," - ",2))
"RTN","RGCWSEFL",52,0)
 D PUT("localName",$P(TMP,U,15))
"RTN","RGCWSEFL",53,0)
 S X=+$P(TMP,U,19)
"RTN","RGCWSEFL",54,0)
 I X D  ;specimen
"RTN","RGCWSEFL",55,0)
 .D PUT("specimen",$$GET1^DIQ(61,X_",",2),$$GET1^DIQ(61,X_",",4.1)) ;SNOMED
"RTN","RGCWSEFL",56,0)
 .D PUT("sample",$$GET1^DIQ(61,X_",",4.1))
"RTN","RGCWSEFL",57,0)
 .S:'LOINC LOINC=$$GET1^DIQ(60.01,X_","_+TMP_",",95.3)
"RTN","RGCWSEFL",58,0)
 I LOINC D
"RTN","RGCWSEFL",59,0)
 .D FILE^RGCWSEF0("name",LOINC,95.3)
"RTN","RGCWSEFL",60,0)
 .D PUT("name_system","http://loinc.org/")
"RTN","RGCWSEFL",61,0)
 E  I TMP D
"RTN","RGCWSEFL",62,0)
 .D FILE^RGCWSEF0("name",+TMP,60)
"RTN","RGCWSEFL",63,0)
 .D PUT("name_system",$$LOCALSYS^RGCWSER("lab"))
"RTN","RGCWSEFL",64,0)
 E  D
"RTN","RGCWSEFL",65,0)
 .S X=$P(TMP,U)
"RTN","RGCWSEFL",66,0)
 .S:'$L(X) X=$P(TMP,U,15)
"RTN","RGCWSEFL",67,0)
 .D PUT("name",$S($L(X):X,1:"UNKNOWN"))
"RTN","RGCWSEFL",68,0)
 .D PUT("name_system",$$LOCALSYS^RGCWSER("lab"))
"RTN","RGCWSEFL",69,0)
 S X=$P(TMP,U,16)
"RTN","RGCWSEFL",70,0)
 D PUT("groupID",X)
"RTN","RGCWSEFL",71,0)
 D PUT("type",$S(LRSUB="CH":$$TYPE($P(X," ")),1:LRSUB))
"RTN","RGCWSEFL",72,0)
 S X=+$P(TMP,U,17)
"RTN","RGCWSEFL",73,0)
 D:X PUT("labOrderID",X)
"RTN","RGCWSEFL",74,0)
 S X=$$ORDER(X,+TMP)
"RTN","RGCWSEFL",75,0)
 D:X PUT("orderID",X)
"RTN","RGCWSEFL",76,0)
 D FILE^RGCWSEF0("patient",DFN,2)
"RTN","RGCWSEFL",77,0)
 D FACILITY^RGCWSEF0($P(LR0,U,14))
"RTN","RGCWSEFL",78,0)
 D COMMENT
"RTN","RGCWSEFL",79,0)
 Q
"RTN","RGCWSEFL",80,0)
 ; Return #100 order given order # and test.
"RTN","RGCWSEFL",81,0)
ORDER(LABORD,TEST) ;
"RTN","RGCWSEFL",82,0)
 N Y,D,S,T
"RTN","RGCWSEFL",83,0)
 S Y="",D=$O(^LRO(69,"C",LABORD,0))
"RTN","RGCWSEFL",84,0)
 I D D
"RTN","RGCWSEFL",85,0)
 .S S=0
"RTN","RGCWSEFL",86,0)
 .F  S S=$O(^LRO(69,"C",LABORD,D,S)),T=0 Q:S<1  D  Q:Y
"RTN","RGCWSEFL",87,0)
 ..F  S T=$O(^LRO(69,D,1,S,2,T)) Q:T<1  I +$G(^(T,0))=TEST S Y=+$P(^(0),U,7) Q
"RTN","RGCWSEFL",88,0)
 Q Y
"RTN","RGCWSEFL",89,0)
 ; Process comment (if any)
"RTN","RGCWSEFL",90,0)
COMMENT N CMNT,LP,X
"RTN","RGCWSEFL",91,0)
 S (LP,CMNT)=""
"RTN","RGCWSEFL",92,0)
 F  S LP=$O(^TMP("LRRR",$J,DFN,LRSUB,LRIDT,"N",LP)) Q:'$L(LP)  S X=$G(^(LP))_$G(^(LP,0)) D
"RTN","RGCWSEFL",93,0)
 .S CMNT=CMNT_$S($L(CMNT):$C(13,10),1:"")_X
"RTN","RGCWSEFL",94,0)
 D PUT("comments",CMNT)
"RTN","RGCWSEFL",95,0)
 Q
"RTN","RGCWSEFL",96,0)
 ; Return name of lab section
"RTN","RGCWSEFL",97,0)
TYPE(X) N LPY,Y
"RTN","RGCWSEFL",98,0)
 S Y=X
"RTN","RGCWSEFL",99,0)
 D FIND^DIC(68,,.01,"PQX",X,,"B",,,"LPY")
"RTN","RGCWSEFL",100,0)
 S:$G(LPY("DILIST",1,0)) Y=$P(LPY("DILIST",1,0),U,2) ;name
"RTN","RGCWSEFL",101,0)
 Q Y
"RTN","RGCWSEFL",102,0)
 ; Write to target array
"RTN","RGCWSEFL",103,0)
PUT(NAME,INTERNAL,EXTERNAL) ;
"RTN","RGCWSEFL",104,0)
 D PUT^RGCWSEF0(.NAME,.INTERNAL,.EXTERNAL)
"RTN","RGCWSEFL",105,0)
 Q
"RTN","RGCWSEFR")
0^6^B40580756
"RTN","RGCWSEFR",1,0)
RGCWSEFR ;RI/CBMI/DKM - XML FHIR Support ;26-Feb-2015 08:50;DKM
"RTN","RGCWSEFR",2,0)
 ;;1.0;RGCW;;14-March-2014;Build 150
"RTN","RGCWSEFR",3,0)
 ;=================================================================
"RTN","RGCWSEFR",4,0)
 ; Serializer interface methods
"RTN","RGCWSEFR",5,0)
PREINIT D ADD^RGCWSER("<?xml version=""1.0"" encoding=""UTF-8""?>")
"RTN","RGCWSEFR",6,0)
 Q
"RTN","RGCWSEFR",7,0)
PSTINIT D ENDALL
"RTN","RGCWSEFR",8,0)
 Q
"RTN","RGCWSEFR",9,0)
PRELIST I TOP,'$$INFEED D NEWFEED("Search results for resource type "_PATH)
"RTN","RGCWSEFR",10,0)
 Q
"RTN","RGCWSEFR",11,0)
PSTLIST I TOP,$$INFEED,'$$ISERR^RGCWSER D ENDFEED
"RTN","RGCWSEFR",12,0)
 Q
"RTN","RGCWSEFR",13,0)
COMPOSE N ENTRY,TAG,ATR
"RTN","RGCWSEFR",14,0)
 S TAG=$S($L(PNAME):PNAME,$P(PATH,"/",2)="Binary":"Binary",1:$P(PATH,"/",$L(PATH,"/")))
"RTN","RGCWSEFR",15,0)
 S ENTRY='$L($G(PNAME))&$$INFEED&'$$HASFLAG^RGCWSER("S")
"RTN","RGCWSEFR",16,0)
 D:ENTRY NEWENTRY(TAG,ID)
"RTN","RGCWSEFR",17,0)
 S:'$L(PNAME) ATR(0,"xmlns")="http://hl7.org/fhir"
"RTN","RGCWSEFR",18,0)
 S:$$HASFLAG^RGCWSER("I") ATR(1,"id")=ID
"RTN","RGCWSEFR",19,0)
 I TAG="Binary" D
"RTN","RGCWSEFR",20,0)
 .N CT
"RTN","RGCWSEFR",21,0)
 .S CT=$O(PROP("B","content:"))
"RTN","RGCWSEFR",22,0)
 .S:$P(CT,":")="content" ATR(2,"contentType")=$P(CT,":",2)
"RTN","RGCWSEFR",23,0)
 E  S:$E(TAG)="@" TAG=""
"RTN","RGCWSEFR",24,0)
 D ADDTAG(TAG,.ATR):$L(TAG),PROCPROP^RGCWSER,ENDTAG(TAG):$L(TAG)
"RTN","RGCWSEFR",25,0)
 D:ENTRY ENDENTRY
"RTN","RGCWSEFR",26,0)
 Q
"RTN","RGCWSEFR",27,0)
 ; Create a new atom feed.
"RTN","RGCWSEFR",28,0)
NEWFEED(TITLE,ID,LINK) ;
"RTN","RGCWSEFR",29,0)
 N ATR
"RTN","RGCWSEFR",30,0)
 S ATR("xmlns")="http://www.w3.org/2005/Atom"
"RTN","RGCWSEFR",31,0)
 S:'$D(ID) ID="urn:uuid:"_$$UUID^RGCWSER()
"RTN","RGCWSEFR",32,0)
 D ADDTAG("feed",.ATR)
"RTN","RGCWSEFR",33,0)
 D ADDTAG("title",$G(TITLE,"Query Results"),1)
"RTN","RGCWSEFR",34,0)
 D ADDTAG("id",ID,1)
"RTN","RGCWSEFR",35,0)
 S:$D(LINK)#1=1 ATR(1,"rel")="self",ATR(2,"href")=LINK
"RTN","RGCWSEFR",36,0)
 D:$D(ATR) ADDTAG("link",.ATR,1)
"RTN","RGCWSEFR",37,0)
 S ATR(1,"rel")="fhir-base",ATR(2,"href")=$$HOST^RGCWSER
"RTN","RGCWSEFR",38,0)
 D ADDTAG("link",.ATR,1)
"RTN","RGCWSEFR",39,0)
 D ADDTAG("updated",$$DAT(),1)
"RTN","RGCWSEFR",40,0)
 D ADDTAG("author"),ADDTAG("name",$P($G(^DIC(4,+$G(DUZ(2)),0),"Unknown"),U),1),ENDTAG("author")
"RTN","RGCWSEFR",41,0)
 S ATR=0,ATR("xmlns")="http://a9.com/-/spec/opensearch/1.1/"
"RTN","RGCWSEFR",42,0)
 D ADDTAG("totalResults",.ATR,1)
"RTN","RGCWSEFR",43,0)
 S DATA("FEED")=$O(@DATA@(""),-1)-1,DATA("ENTRY")=0
"RTN","RGCWSEFR",44,0)
 Q
"RTN","RGCWSEFR",45,0)
 ; Close current atom feed.
"RTN","RGCWSEFR",46,0)
ENDFEED N POS
"RTN","RGCWSEFR",47,0)
 S POS=$$INFEED
"RTN","RGCWSEFR",48,0)
 I POS D
"RTN","RGCWSEFR",49,0)
 .D ENDTAG("feed")
"RTN","RGCWSEFR",50,0)
 .S @DATA@(POS)=DATA("ENTRY"),DATA("LEN")=DATA("LEN")+$L(DATA("ENTRY"))-1
"RTN","RGCWSEFR",51,0)
 .K DATA("FEED"),DATA("ENTRY")
"RTN","RGCWSEFR",52,0)
 Q
"RTN","RGCWSEFR",53,0)
 ; Returns true if in atom feed.
"RTN","RGCWSEFR",54,0)
INFEED() Q $G(DATA("FEED"))
"RTN","RGCWSEFR",55,0)
 ; Creates a new atom entry.
"RTN","RGCWSEFR",56,0)
NEWENTRY(RTYP,IEN) ;
"RTN","RGCWSEFR",57,0)
 N ATR
"RTN","RGCWSEFR",58,0)
 S:IEN'["/" IEN=RTYP_"/"_IEN
"RTN","RGCWSEFR",59,0)
 D ADDTAG("entry")
"RTN","RGCWSEFR",60,0)
 D ADDTAG("id",IEN,1)
"RTN","RGCWSEFR",61,0)
 D ADDTAG("updated",$$DAT(),1)
"RTN","RGCWSEFR",62,0)
 S ATR("type")="text/xml"
"RTN","RGCWSEFR",63,0)
 D ADDTAG("content",.ATR)
"RTN","RGCWSEFR",64,0)
 S DATA("ENTRY")=DATA("ENTRY")+1
"RTN","RGCWSEFR",65,0)
 Q
"RTN","RGCWSEFR",66,0)
 ; Closes current atom entry.
"RTN","RGCWSEFR",67,0)
ENDENTRY() ;
"RTN","RGCWSEFR",68,0)
 D ENDTAG("entry")
"RTN","RGCWSEFR",69,0)
 Q
"RTN","RGCWSEFR",70,0)
 ; Free text
"RTN","RGCWSEFR",71,0)
PROPF D PUT(PN,$G(VL("E")))
"RTN","RGCWSEFR",72,0)
 Q
"RTN","RGCWSEFR",73,0)
 ; Boolean
"RTN","RGCWSEFR",74,0)
PROPB D PUTBL(PN,$G(VL("I")))
"RTN","RGCWSEFR",75,0)
 Q
"RTN","RGCWSEFR",76,0)
 ; Date
"RTN","RGCWSEFR",77,0)
PROPD D PUTDT(PN,$G(VL("I")))
"RTN","RGCWSEFR",78,0)
 Q
"RTN","RGCWSEFR",79,0)
 ; Raw
"RTN","RGCWSEFR",80,0)
PROPR D PUT(PN,$G(VL("I")))
"RTN","RGCWSEFR",81,0)
 Q
"RTN","RGCWSEFR",82,0)
 ; Word processing
"RTN","RGCWSEFR",83,0)
PROPW K VL("E"),VL("I")
"RTN","RGCWSEFR",84,0)
 D PUTAR(PN,.VL)
"RTN","RGCWSEFR",85,0)
 Q
"RTN","RGCWSEFR",86,0)
 ; Custom
"RTN","RGCWSEFR",87,0)
PROPC X CTL
"RTN","RGCWSEFR",88,0)
 Q
"RTN","RGCWSEFR",89,0)
 ; Object
"RTN","RGCWSEFR",90,0)
PROPO D:$G(VL("I")) FETCH^RGCWSER(.DATA,CTL,VL("I"),PN)
"RTN","RGCWSEFR",91,0)
 Q
"RTN","RGCWSEFR",92,0)
 ; Inline object
"RTN","RGCWSEFR",93,0)
PROPI D:$G(VL("I")) ADDTAG(PN),FETCH^RGCWSER(.DATA,CTL,VL("I"),,,"I"),ENDTAG(PN)
"RTN","RGCWSEFR",94,0)
 Q
"RTN","RGCWSEFR",95,0)
 ; Put a name/value pair to output buffer
"RTN","RGCWSEFR",96,0)
PUT(NM,VL) ;
"RTN","RGCWSEFR",97,0)
 Q:'$L($G(VL))
"RTN","RGCWSEFR",98,0)
 N ATR
"RTN","RGCWSEFR",99,0)
 S ATR("value")=VL
"RTN","RGCWSEFR",100,0)
 D ADDTAG(NM,.ATR,1)
"RTN","RGCWSEFR",101,0)
 Q
"RTN","RGCWSEFR",102,0)
 ; Put a date value to output buffer
"RTN","RGCWSEFR",103,0)
PUTDT(NM,DT) ;
"RTN","RGCWSEFR",104,0)
 D:DT PUT(NM,$$DAT(DT))
"RTN","RGCWSEFR",105,0)
 Q
"RTN","RGCWSEFR",106,0)
 ; Put a boolean value to output buffer
"RTN","RGCWSEFR",107,0)
PUTBL(NM,BL) ;
"RTN","RGCWSEFR",108,0)
 D PUT(NM,$S(BL:"true",1:"false"))
"RTN","RGCWSEFR",109,0)
 Q
"RTN","RGCWSEFR",110,0)
 ; Put a set value to output buffer
"RTN","RGCWSEFR",111,0)
PUTST(NM,VL,ST) ;
"RTN","RGCWSEFR",112,0)
 D PUT(NM,$$SET^RGUT(VL,ST))
"RTN","RGCWSEFR",113,0)
 Q
"RTN","RGCWSEFR",114,0)
 ; Put an array to output buffer
"RTN","RGCWSEFR",115,0)
PUTAR(NM,AR) ;
"RTN","RGCWSEFR",116,0)
 D ADDTAG(NM),ADDARY^RGCWSER(.AR),ENDTAG(NM)
"RTN","RGCWSEFR",117,0)
 Q
"RTN","RGCWSEFR",118,0)
 ;Add opening tag (with optional attributes)
"RTN","RGCWSEFR",119,0)
 ; TAG = tag name
"RTN","RGCWSEFR",120,0)
 ; ATR = optional array of attributes and/or content
"RTN","RGCWSEFR",121,0)
 ; CLS = if true, tag is self-closing
"RTN","RGCWSEFR",122,0)
ADDTAG(TAG,ATR,CLS) ;
"RTN","RGCWSEFR",123,0)
 N X,Y,A,CNT
"RTN","RGCWSEFR",124,0)
 S CLS=+$G(CLS),CNT=$G(ATR),CLS(0)=$S(CLS&'$L(CNT):"/>",1:">")
"RTN","RGCWSEFR",125,0)
 I $D(ATR)'>1 D
"RTN","RGCWSEFR",126,0)
 .S X="<"_TAG_CLS(0)
"RTN","RGCWSEFR",127,0)
 E  D
"RTN","RGCWSEFR",128,0)
 .S X="<"_TAG
"RTN","RGCWSEFR",129,0)
 .S ATR=""
"RTN","RGCWSEFR",130,0)
 .F  S ATR=$O(ATR(ATR)) Q:'$L(ATR)  D
"RTN","RGCWSEFR",131,0)
 ..S:$D(ATR(ATR))>1 Y=$O(ATR(ATR,"")),X=X_" "_Y_"="_$$QT(ATR(ATR,Y))
"RTN","RGCWSEFR",132,0)
 ..S:$D(ATR(ATR))#10 X=X_" "_ATR_"="_$$QT(ATR(ATR))
"RTN","RGCWSEFR",133,0)
 .S X=X_CLS(0)
"RTN","RGCWSEFR",134,0)
 D ADD^RGCWSER(X)
"RTN","RGCWSEFR",135,0)
 I $L(CNT) D
"RTN","RGCWSEFR",136,0)
 .D ADD^RGCWSER($$ESC^RGCWSER(CNT))
"RTN","RGCWSEFR",137,0)
 .D:CLS ADD^RGCWSER("</"_$P(TAG," ")_">")
"RTN","RGCWSEFR",138,0)
 S Y=+$G(DATA("T"))
"RTN","RGCWSEFR",139,0)
 S:Y DATA("T",Y,0)=DATA("T",Y,0)+1
"RTN","RGCWSEFR",140,0)
 S:'CLS Y=Y+1,DATA("T")=Y,DATA("T",Y)=TAG,DATA("T",Y,0)=0
"RTN","RGCWSEFR",141,0)
 K ATR
"RTN","RGCWSEFR",142,0)
 Q
"RTN","RGCWSEFR",143,0)
 ; Write closing tag
"RTN","RGCWSEFR",144,0)
 ;  TAG = If specified, write closing tags up to and including
"RTN","RGCWSEFR",145,0)
 ;    this one.  Otherwise, just write last pending closing tag.
"RTN","RGCWSEFR",146,0)
 ;  Returns true if there are more pending tag closures.
"RTN","RGCWSEFR",147,0)
ENDTAG(TAG) N Y,T
"RTN","RGCWSEFR",148,0)
 S Y=+$G(DATA("T"))
"RTN","RGCWSEFR",149,0)
 F  Q:'Y  D  Q:TAG=T
"RTN","RGCWSEFR",150,0)
 .S T=DATA("T",Y)
"RTN","RGCWSEFR",151,0)
 .D ADD^RGCWSER("</"_$P(T," ")_">")
"RTN","RGCWSEFR",152,0)
 .S Y=Y-1,DATA("T")=Y
"RTN","RGCWSEFR",153,0)
 .S:'$D(TAG) TAG=T
"RTN","RGCWSEFR",154,0)
 Q:$Q Y
"RTN","RGCWSEFR",155,0)
 Q
"RTN","RGCWSEFR",156,0)
 ; Close all open tags
"RTN","RGCWSEFR",157,0)
ENDALL F  Q:'$$ENDTAG()
"RTN","RGCWSEFR",158,0)
 Q
"RTN","RGCWSEFR",159,0)
 ; Return # of siblings at specified tag level.
"RTN","RGCWSEFR",160,0)
 ; LVL: 0 = Current level (default); >0 = Absolute; <0 = Relative to current
"RTN","RGCWSEFR",161,0)
SIBS(LVL) ;
"RTN","RGCWSEFR",162,0)
 N X
"RTN","RGCWSEFR",163,0)
 S X=+$G(DATA("T")),LVL=+$G(LVL),LVL=$S(LVL>X:X,LVL>0:LVL,1:X-LVL)
"RTN","RGCWSEFR",164,0)
 Q +$G(DATA("T",LVL,0))
"RTN","RGCWSEFR",165,0)
 ; Enclose value in quotes (escape contents if necessary)
"RTN","RGCWSEFR",166,0)
QT(X) Q """"_$$ESC^RGCWSER(X)_""""
"RTN","RGCWSEFR",167,0)
 ; Format date for FHIR
"RTN","RGCWSEFR",168,0)
DAT(X) S:'$G(X) X=$$NOW^XLFDT()
"RTN","RGCWSEFR",169,0)
 Q $$FMTDATE^RGCWSERD(X,"YYYY-MM-dd"_$S(X#1:"'T'HH:mm:ss",1:""))
"RTN","RGCWSEFR",170,0)
 ; Reformats a variable pointer for use as a resource id.
"RTN","RGCWSEFR",171,0)
VP2ID(VP) ;
"RTN","RGCWSEFR",172,0)
 Q:'$L(VP) ""
"RTN","RGCWSEFR",173,0)
 N X
"RTN","RGCWSEFR",174,0)
 S X=$P(VP,";",2)
"RTN","RGCWSEFR",175,0)
 S:X'["(" X=X_"("
"RTN","RGCWSEFR",176,0)
 S X=+$P($G(@(U_X_"0)")),U,2)
"RTN","RGCWSEFR",177,0)
 Q $S(X:X_":"_+VP,1:"")
"RTN","RGCWSEFR",178,0)
IDENT(SYSTEM,VALUE,LABEL,USE) ;
"RTN","RGCWSEFR",179,0)
 Q:'$L(VALUE)
"RTN","RGCWSEFR",180,0)
 D ADDTAG("identifier")
"RTN","RGCWSEFR",181,0)
 D PUT("use",$G(USE,"usual"))
"RTN","RGCWSEFR",182,0)
 D PUT("label",.LABEL)
"RTN","RGCWSEFR",183,0)
 D PUT("system",$$SYSTEM^RGCWSER(.SYSTEM))
"RTN","RGCWSEFR",184,0)
 D PUT("value",VALUE)
"RTN","RGCWSEFR",185,0)
 D ENDTAG("identifier")
"RTN","RGCWSEFR",186,0)
 Q
"RTN","RGCWSEFR",187,0)
 ; Reference
"RTN","RGCWSEFR",188,0)
REF(TAG,RES,VL,PFX) ;
"RTN","RGCWSEFR",189,0)
 I $L(VL("I"))!$L(VL("E")) D
"RTN","RGCWSEFR",190,0)
 .D ADDTAG(TAG)
"RTN","RGCWSEFR",191,0)
 .D:$L(VL("I")) PUT("reference",RES_"/"_$G(PFX)_VL("I"))
"RTN","RGCWSEFR",192,0)
 .D:$L(VL("E")) PUT("display",VL("E"))
"RTN","RGCWSEFR",193,0)
 .D ENDTAG(TAG)
"RTN","RGCWSEFR",194,0)
 Q
"RTN","RGCWSEFR",195,0)
CODING(SYSTEM,CODE,DISPLAY) ;
"RTN","RGCWSEFR",196,0)
 D ADDTAG("coding")
"RTN","RGCWSEFR",197,0)
 D PUT("system",$$SYSTEM^RGCWSER(.SYSTEM))
"RTN","RGCWSEFR",198,0)
 D PUT("code",.CODE)
"RTN","RGCWSEFR",199,0)
 D PUT("display",.DISPLAY)
"RTN","RGCWSEFR",200,0)
 D ENDTAG("coding")
"RTN","RGCWSEFR",201,0)
 Q
"RTN","RGCWSEFR",202,0)
TELECOM D:$L(VL("E")) ADDTAG(PN),PUT("system",PN(1)),PUT("use",PN(2)),PUT("value",VL("E")),ENDTAG(PN)
"RTN","RGCWSEFR",203,0)
 Q
"RTN","RGCWSEFR",204,0)
NAME(NAME,USE) ;
"RTN","RGCWSEFR",205,0)
 N X
"RTN","RGCWSEFR",206,0)
 D ADDTAG("name")
"RTN","RGCWSEFR",207,0)
 D PUT("use",$G(USE,"usual"))
"RTN","RGCWSEFR",208,0)
 S X=$P(NAME,","),NAME=$P(NAME,",",2,99)
"RTN","RGCWSEFR",209,0)
 D PUT("family",X)
"RTN","RGCWSEFR",210,0)
 F X=1:1:$L(NAME," ") D PUT("given",$P(NAME," ",X))
"RTN","RGCWSEFR",211,0)
 D ENDTAG("name")
"RTN","RGCWSEFR",212,0)
 Q
"RTN","RGCWSEFR",213,0)
 ; Value set iterator
"RTN","RGCWSEFR",214,0)
ITERVS(CTX) ;
"RTN","RGCWSEFR",215,0)
 I '$Q D ITER(CTX,"ValueSet_") Q
"RTN","RGCWSEFR",216,0)
 Q $$ITER(CTX)
"RTN","RGCWSEFR",217,0)
 ; Serialization file iterator
"RTN","RGCWSEFR",218,0)
ITER(CTX,ROOT) ;
"RTN","RGCWSEFR",219,0)
 N TMP,LAST,IEN,SER
"RTN","RGCWSEFR",220,0)
 S TMP=$$TMPGBL^RGCWSER(CTX)
"RTN","RGCWSEFR",221,0)
 I '$Q D  Q
"RTN","RGCWSEFR",222,0)
 .S @TMP@("IEN")=0,^("SER")=DATA("SER"),(^("LAST"),^("ROOT"))=ROOT
"RTN","RGCWSEFR",223,0)
 S LAST=@TMP@("LAST"),IEN=^("IEN"),SER=^("SER"),ROOT=^("ROOT")
"RTN","RGCWSEFR",224,0)
 F  D  Q:IEN
"RTN","RGCWSEFR",225,0)
 .I 'IEN D  Q:IEN
"RTN","RGCWSEFR",226,0)
 ..S LAST=$O(^RGCWF(999.1,SER,10,"B",LAST))
"RTN","RGCWSEFR",227,0)
 ..I $E(LAST,1,$L(ROOT))=ROOT S @TMP@("LAST")=LAST
"RTN","RGCWSEFR",228,0)
 ..E  S IEN=-1
"RTN","RGCWSEFR",229,0)
 .S IEN=+$O(^RGCWF(999.1,SER,10,"B",LAST,IEN)),@TMP@("IEN")=IEN
"RTN","RGCWSEFR",230,0)
 Q $S(IEN=-1:0,1:IEN)
"RTN","RGCWSEFV")
0^12^B11635800
"RTN","RGCWSEFV",1,0)
RGCWSEFV ;RI/CBMI/DKM - Return vital observations. ;10-Feb-2015 23:51;DKM
"RTN","RGCWSEFV",2,0)
 ;=================================================================;;;;;Build 150
"RTN","RGCWSEFV",3,0)
 ;;1.0;CAREWEB FRAMEWORK;;07-Feb-2015 08:51
"RTN","RGCWSEFV",4,0)
 ;=================================================================
"RTN","RGCWSEFV",5,0)
 ; Return vital measurements
"RTN","RGCWSEFV",6,0)
EN(DATA,DFN,ID,BEG,END,MAX) ;
"RTN","RGCWSEFV",7,0)
 N ARY,GMRVSTR,IEN,IDT,ANID,TYPE,QUAL,VALUE,PROC,RANGE,SEQ,X0,X,Y
"RTN","RGCWSEFV",8,0)
 I $L($G(ID)) D
"RTN","RGCWSEFV",9,0)
 .I $P(ID,";")'="VT" S DFN=0 Q
"RTN","RGCWSEFV",10,0)
 .S IEN=$P(ID,";",3),X0=$G(^GMR(120.5,IEN,0)),X=+$P(X0,U,2)
"RTN","RGCWSEFV",11,0)
 .I $G(DFN),DFN'=X S DFN=0 Q
"RTN","RGCWSEFV",12,0)
 .S DFN=X,MAX=9999,BEG=X0\1-.1,END=X0\1+.9
"RTN","RGCWSEFV",13,0)
 .S GMRVSTR=$$GET1^DIQ(120.51,$P(X0,U,3),1)
"RTN","RGCWSEFV",14,0)
 E  S GMRVSTR="BP;T;R;P;HT;WT;CVP;CG;PO2;PN"
"RTN","RGCWSEFV",15,0)
 Q:'$G(DFN)
"RTN","RGCWSEFV",16,0)
 S GMRVSTR(0)=BEG_U_END_U_MAX_"^1"
"RTN","RGCWSEFV",17,0)
 K ^UTILITY($J,"GMRVD")
"RTN","RGCWSEFV",18,0)
 D EN1^GMRVUT0,RANGES
"RTN","RGCWSEFV",19,0)
 S IDT=0
"RTN","RGCWSEFV",20,0)
 F  S IDT=$O(^UTILITY($J,"GMRVD",IDT)),TYPE="" Q:'IDT  D  Q:MAX'>0
"RTN","RGCWSEFV",21,0)
 .F  S TYPE=$O(^UTILITY($J,"GMRVD",IDT,TYPE)),IEN=0 Q:TYPE=""  D  Q:MAX'>0
"RTN","RGCWSEFV",22,0)
 ..S PROC=$$EP(TYPE)
"RTN","RGCWSEFV",23,0)
 ..F  S IEN=$O(^UTILITY($J,"GMRVD",IDT,TYPE,IEN)) Q:'IEN  S X0=^(IEN) D  Q:MAX'>0
"RTN","RGCWSEFV",24,0)
 ...S SEQ=0,VALUE=$P(X0,U,8),VALUE(0)=$P(X0,U,13),NAME=$$GET1^DIQ(120.5,IEN_",",.03)
"RTN","RGCWSEFV",25,0)
 ...D @PROC
"RTN","RGCWSEFV",26,0)
 K ^UTILITY($J,"GMRVD")
"RTN","RGCWSEFV",27,0)
 Q
"RTN","RGCWSEFV",28,0)
PROC(NAME,VALUE,UNITS,LOINC,HI,LO) ;
"RTN","RGCWSEFV",29,0)
 N ANID
"RTN","RGCWSEFV",30,0)
 S SEQ=SEQ+1,ANID="VT;"_IDT_";"_IEN_";"_SEQ
"RTN","RGCWSEFV",31,0)
 Q:'$L(VALUE)
"RTN","RGCWSEFV",32,0)
 I $L(ID) Q:ANID'=ID  S MAX=1
"RTN","RGCWSEFV",33,0)
 S ARY=$$ARY^RGCWSEF0(DATA),MAX=MAX-1,HI=+$G(HI),LO=+$G(LO),UNITS=$G(UNITS),LOINC=$G(LOINC)
"RTN","RGCWSEFV",34,0)
 D PUT("id",ANID)
"RTN","RGCWSEFV",35,0)
 D FILE^RGCWSEF0("patient",DFN,2)
"RTN","RGCWSEFV",36,0)
 D PUT("collected",9999999-IDT)
"RTN","RGCWSEFV",37,0)
 D PUT("issued",$P(X0,U,4)) ;use last one
"RTN","RGCWSEFV",38,0)
 D PUT("status","final")
"RTN","RGCWSEFV",39,0)
 D PUT("reliability","ok")
"RTN","RGCWSEFV",40,0)
 D:LOINC PUT("name",LOINC,NAME),PUT("name_system","http://loinc.org/")
"RTN","RGCWSEFV",41,0)
 D:'LOINC PUT("name",$$VUID^RGCWSEF0(+$P(X0,U,3),120.51),NAME),PUT("name_system",$$LOCALSYS^RGCWSER("vitals"))
"RTN","RGCWSEFV",42,0)
 D PUT("value",VALUE)
"RTN","RGCWSEFV",43,0)
 D PUT("units",UNITS)
"RTN","RGCWSEFV",44,0)
 D PUT("low",RANGE(LO))
"RTN","RGCWSEFV",45,0)
 D PUT("high",RANGE(HI))
"RTN","RGCWSEFV",46,0)
 D FACILITY^RGCWSEF0($P(X0,U,5))
"RTN","RGCWSEFV",47,0)
 S QUAL=$P(X0,U,17)
"RTN","RGCWSEFV",48,0)
 I $L(QUAL) F I=1:1:$L(QUAL,";") D
"RTN","RGCWSEFV",49,0)
 .S X=$P(QUAL,";",I),Y=$$FIND1^DIC(120.52,,"QX",X)
"RTN","RGCWSEFV",50,0)
 .D:Y PUT("qualifier."_I,$$VUID^RGCWSEF0(Y,120.52),X)
"RTN","RGCWSEFV",51,0)
 Q
"RTN","RGCWSEFV",52,0)
 ; Write to target array
"RTN","RGCWSEFV",53,0)
PUT(NAME,INTERNAL,EXTERNAL) ;
"RTN","RGCWSEFV",54,0)
 D PUT^RGCWSEF0(.NAME,.INTERNAL,.EXTERNAL)
"RTN","RGCWSEFV",55,0)
 Q
"RTN","RGCWSEFV",56,0)
 ; Blood pressure
"RTN","RGCWSEFV",57,0)
PROCBP D PROC("SYSTOLIC "_NAME,$P(VALUE,"/"),"mmHg","8480-6",5.7,5.71)
"RTN","RGCWSEFV",58,0)
 D PROC("DIASTOLIC "_NAME,$P(VALUE,"/",2),"mmHg","8462-4",5.8,5.81)
"RTN","RGCWSEFV",59,0)
 Q
"RTN","RGCWSEFV",60,0)
 ; Temperature
"RTN","RGCWSEFV",61,0)
PROCT D PROC(NAME,VALUE,"F","8310-5",5.1,5.2)
"RTN","RGCWSEFV",62,0)
 D PROC(NAME,VALUE(0),"C","8310-5")
"RTN","RGCWSEFV",63,0)
 Q
"RTN","RGCWSEFV",64,0)
 ; Respiratory rate
"RTN","RGCWSEFV",65,0)
PROCR D PROC(NAME,VALUE,"/min","9279-1",5.5,5.6)
"RTN","RGCWSEFV",66,0)
 Q
"RTN","RGCWSEFV",67,0)
 ; Pulse
"RTN","RGCWSEFV",68,0)
PROCP D PROC(NAME,VALUE,"/min","8867-4",5.3,5.4)
"RTN","RGCWSEFV",69,0)
 Q
"RTN","RGCWSEFV",70,0)
 ; Height
"RTN","RGCWSEFV",71,0)
PROCHT D PROC(NAME,VALUE,"in","8302-2")
"RTN","RGCWSEFV",72,0)
 D PROC(NAME,VALUE(0),"cm","8302-2")
"RTN","RGCWSEFV",73,0)
 Q
"RTN","RGCWSEFV",74,0)
 ; Weight
"RTN","RGCWSEFV",75,0)
PROCWT D PROC(NAME,VALUE,"lb","29463-7")
"RTN","RGCWSEFV",76,0)
 D PROC(NAME,VALUE(0),"kg","29463-7")
"RTN","RGCWSEFV",77,0)
 Q
"RTN","RGCWSEFV",78,0)
 ; Central venous pressure
"RTN","RGCWSEFV",79,0)
PROCCVP D PROC(NAME,VALUE,"cmH2O","8591-0",6.1,6.2)
"RTN","RGCWSEFV",80,0)
 Q
"RTN","RGCWSEFV",81,0)
 ; Circumference/girth
"RTN","RGCWSEFV",82,0)
PROCCG D PROC(NAME,VALUE,"in","9844-2")
"RTN","RGCWSEFV",83,0)
 D PROC(NAME,VALUE(0),"cm","9844-2")
"RTN","RGCWSEFV",84,0)
 Q
"RTN","RGCWSEFV",85,0)
 ; Pulse oximetry
"RTN","RGCWSEFV",86,0)
PROCPO2 D PROC(NAME,VALUE,"%","59408-5",6.31,6.3)
"RTN","RGCWSEFV",87,0)
 Q
"RTN","RGCWSEFV",88,0)
 ; Pain
"RTN","RGCWSEFV",89,0)
PROCPN D PROC(NAME,VALUE,,"57696-7")
"RTN","RGCWSEFV",90,0)
 Q
"RTN","RGCWSEFV",91,0)
 ; All other types
"RTN","RGCWSEFV",92,0)
PROCOTH D PROC(NAME,VALUE)
"RTN","RGCWSEFV",93,0)
 Q
"RTN","RGCWSEFV",94,0)
 ; Return entry point for processing measurement
"RTN","RGCWSEFV",95,0)
EP(TYPE) S TYPE="PROC"_TYPE
"RTN","RGCWSEFV",96,0)
 Q $S($L($T(@TYPE)):TYPE,1:"PROCOTH")
"RTN","RGCWSEFV",97,0)
 ; Load normal ranges
"RTN","RGCWSEFV",98,0)
RANGES N VAL
"RTN","RGCWSEFV",99,0)
 D GETS^DIQ(120.57,"1,","5:7","","VAL")
"RTN","RGCWSEFV",100,0)
 M RANGE=VAL(120.57,"1,")
"RTN","RGCWSEFV",101,0)
 S RANGE(6.31)=100,RANGE(0)=""
"RTN","RGCWSEFV",102,0)
 Q
"RTN","RGCWSEJN")
0^7^B3886991
"RTN","RGCWSEJN",1,0)
RGCWSEJN ;RI/CBMI/DKM - JSON Serialization Support ;23-Feb-2015 18:15;DKM
"RTN","RGCWSEJN",2,0)
 ;;1.0;RGCW;;14-March-2014;Build 150
"RTN","RGCWSEJN",3,0)
 ;=================================================================
"RTN","RGCWSEJN",4,0)
 ; Serializer interface methods
"RTN","RGCWSEJN",5,0)
PREINIT Q
"RTN","RGCWSEJN",6,0)
PSTINIT Q
"RTN","RGCWSEJN",7,0)
PRELIST D ADD("[")
"RTN","RGCWSEJN",8,0)
 Q
"RTN","RGCWSEJN",9,0)
PSTLIST D ADD("]")
"RTN","RGCWSEJN",10,0)
 Q
"RTN","RGCWSEJN",11,0)
COMPOSE N PFX,SER,RTN,RTYPE
"RTN","RGCWSEJN",12,0)
 I 'TOP,$$HASFLAG^RGCWSER("L") D ADD(",")
"RTN","RGCWSEJN",13,0)
 S RTYPE=$P(PATH,"/",2)
"RTN","RGCWSEJN",14,0)
 S PFX=$S($L(PNAME):","_$$QT(PNAME)_":",1:"")_"{"
"RTN","RGCWSEJN",15,0)
 D:'$L(PNAME) PUTQT("@class",RTYPE)
"RTN","RGCWSEJN",16,0)
 D PUT("id",IEN)
"RTN","RGCWSEJN",17,0)
 D PROCPROP^RGCWSER
"RTN","RGCWSEJN",18,0)
 D ADD("}")
"RTN","RGCWSEJN",19,0)
 Q
"RTN","RGCWSEJN",20,0)
 ; Free text
"RTN","RGCWSEJN",21,0)
PROPF D PUTQT(PN,$G(VL("E")))
"RTN","RGCWSEJN",22,0)
 Q
"RTN","RGCWSEJN",23,0)
 ; Boolean
"RTN","RGCWSEJN",24,0)
PROPB D PUTBL(PN,$G(VL("I")))
"RTN","RGCWSEJN",25,0)
 Q
"RTN","RGCWSEJN",26,0)
 ; Date
"RTN","RGCWSEJN",27,0)
PROPD D PUTDT(PN,$G(VL("I")))
"RTN","RGCWSEJN",28,0)
 Q
"RTN","RGCWSEJN",29,0)
 ; Raw
"RTN","RGCWSEJN",30,0)
PROPR D PUTQT(PN,$G(VL("I")))
"RTN","RGCWSEJN",31,0)
 Q
"RTN","RGCWSEJN",32,0)
 ; Word processing
"RTN","RGCWSEJN",33,0)
PROPW K VL("E"),VL("I")
"RTN","RGCWSEJN",34,0)
 D PUTAR(PN,.VL)
"RTN","RGCWSEJN",35,0)
 Q
"RTN","RGCWSEJN",36,0)
 ; Custom
"RTN","RGCWSEJN",37,0)
PROPC X CTL
"RTN","RGCWSEJN",38,0)
 Q
"RTN","RGCWSEJN",39,0)
 ; Object
"RTN","RGCWSEJN",40,0)
PROPO D:$G(VL("I")) FETCH^RGCWSER(.DATA,CTL,$G(VL("I")),PN)
"RTN","RGCWSEJN",41,0)
 Q
"RTN","RGCWSEJN",42,0)
 ; Put a name/value pair to output buffer, enclosing
"RTN","RGCWSEJN",43,0)
 ; value in quotes.
"RTN","RGCWSEJN",44,0)
PUTQT(NM,VL) ;
"RTN","RGCWSEJN",45,0)
 D PUT(NM,$$QT(VL))
"RTN","RGCWSEJN",46,0)
 Q
"RTN","RGCWSEJN",47,0)
 ; Put a name/value pair to output buffer
"RTN","RGCWSEJN",48,0)
PUT(NM,VL) ;
"RTN","RGCWSEJN",49,0)
 D ADD(PFX_$$QT(NM)_":"_VL)
"RTN","RGCWSEJN",50,0)
 S PFX=","
"RTN","RGCWSEJN",51,0)
 Q
"RTN","RGCWSEJN",52,0)
 ; Put a date value to output buffer
"RTN","RGCWSEJN",53,0)
PUTDT(NM,DT) ;
"RTN","RGCWSEJN",54,0)
 D:DT PUTQT(NM,DT)
"RTN","RGCWSEJN",55,0)
 Q
"RTN","RGCWSEJN",56,0)
 ; Put a boolean value to output buffer
"RTN","RGCWSEJN",57,0)
PUTBL(NM,BL) ;
"RTN","RGCWSEJN",58,0)
 D PUT(NM,$S(BL:"true",1:"false"))
"RTN","RGCWSEJN",59,0)
 Q
"RTN","RGCWSEJN",60,0)
 ; Put a set value to output buffer
"RTN","RGCWSEJN",61,0)
PUTST(NM,VL,ST) ;
"RTN","RGCWSEJN",62,0)
 D PUTQT(NM,$$SET^RGUT(VL,ST))
"RTN","RGCWSEJN",63,0)
 Q
"RTN","RGCWSEJN",64,0)
 ; Put an array to output buffer
"RTN","RGCWSEJN",65,0)
PUTAR(NM,AR) ;
"RTN","RGCWSEJN",66,0)
 N DL,LP
"RTN","RGCWSEJN",67,0)
 S DL="",LP=$NA(AR)
"RTN","RGCWSEJN",68,0)
 D PUT(NM,"[")
"RTN","RGCWSEJN",69,0)
 F  S LP=$Q(@LP) Q:'$L(LP)  D
"RTN","RGCWSEJN",70,0)
 .D ADD(DL_$$QT(@LP))
"RTN","RGCWSEJN",71,0)
 .S DL=","
"RTN","RGCWSEJN",72,0)
 D ADD("]")
"RTN","RGCWSEJN",73,0)
 Q
"RTN","RGCWSEJN",74,0)
 ; Enclose value in quotes (escape contents if necessary)
"RTN","RGCWSEJN",75,0)
QT(X) N QT,FM,TO,LP
"RTN","RGCWSEJN",76,0)
 S QT=""""
"RTN","RGCWSEJN",77,0)
 S FM="\"_QT_"/"_$C(8,12,10,13,9)
"RTN","RGCWSEJN",78,0)
 S TO="\"_QT_"/bfnrt"
"RTN","RGCWSEJN",79,0)
 F LP=1:1:$L(FM) D ESC(.X,$E(FM,LP),$E(TO,LP))
"RTN","RGCWSEJN",80,0)
 Q QT_X_QT
"RTN","RGCWSEJN",81,0)
ESC(X,C,R) S:X[C X=$$SUBST^RGUT(X,C,"\"_R)
"RTN","RGCWSEJN",82,0)
 Q
"RTN","RGCWSEJN",83,0)
ADD(X) D ADD^RGCWSER(X)
"RTN","RGCWSEJN",84,0)
 Q
"RTN","RGCWSER")
0^8^B285513777
"RTN","RGCWSER",1,0)
RGCWSER ;RI/CBMI/DKM - Core Serialization Support ;26-Feb-2015 12:59;DKM
"RTN","RGCWSER",2,0)
 ;;1.0;RGCW;;14-March-2014;Build 150
"RTN","RGCWSER",3,0)
 ;=================================================================
"RTN","RGCWSER",4,0)
 ; RPC: Process a REST request.
"RTN","RGCWSER",5,0)
REST(DATA,REQUEST,HOST,PARAMS) ;
"RTN","RGCWSER",6,0)
 N LN,METHOD,QRY,PATH,CNT,IEN,X
"RTN","RGCWSER",7,0)
 S LN="",CNT=0,PARAMS=0
"RTN","RGCWSER",8,0)
 D ENVSET
"RTN","RGCWSER",9,0)
 S:$D(HOST)#10 DATA("HOST")=HOST
"RTN","RGCWSER",10,0)
 S HOST=$$HOST
"RTN","RGCWSER",11,0)
 S:$D(REQUEST)=1 REQUEST(0)=REQUEST
"RTN","RGCWSER",12,0)
 F  S LN=$O(REQUEST(LN)) Q:'$L(LN)  D
"RTN","RGCWSER",13,0)
 .S X=REQUEST(LN)
"RTN","RGCWSER",14,0)
 .K REQUEST(LN)
"RTN","RGCWSER",15,0)
 .I '$D(METHOD) S METHOD=X Q
"RTN","RGCWSER",16,0)
 .I 'CNT S CNT='$L(X) Q:CNT
"RTN","RGCWSER",17,0)
 .D:'CNT PARSEHDR(LN,.DATA)
"RTN","RGCWSER",18,0)
 .D:CNT PARSEQS(LN,.PARAMS)
"RTN","RGCWSER",19,0)
 I '$D(METHOD) D ENDREST("400 Bad Request") Q
"RTN","RGCWSER",20,0)
 S PATH=$P(METHOD," ",2),METHOD=$P(METHOD," ")
"RTN","RGCWSER",21,0)
 I METHOD'="GET",METHOD'="POST" D ENDREST("405 Method Not Allowed") Q
"RTN","RGCWSER",22,0)
 I PATH["?" D
"RTN","RGCWSER",23,0)
 .S QRY=$P(PATH,"?",2,9999),PATH=$P(PATH,"?")
"RTN","RGCWSER",24,0)
 .D PARSEQS(QRY,.PARAMS)
"RTN","RGCWSER",25,0)
 S X=$L(HOST)
"RTN","RGCWSER",26,0)
 S:$E(PATH,1,X)=HOST PATH=$E(PATH,X+1,9999)
"RTN","RGCWSER",27,0)
 S:$E(PATH)="/" PATH=$E(PATH,2,9999)
"RTN","RGCWSER",28,0)
 S:$E(PATH,$L(PATH))="/" PATH=$E(PATH,1,$L(PATH)-1)
"RTN","RGCWSER",29,0)
 S PATH=$$UNESCAPE(PATH),X=$L(PATH,"/")
"RTN","RGCWSER",30,0)
 S:X#2 IEN=$P(PATH,"/",X),PATH=$P(PATH,"/",1,X-1)
"RTN","RGCWSER",31,0)
 K:$G(IEN)="_search" IEN
"RTN","RGCWSER",32,0)
 D FETCH(.DATA,PATH,.IEN,,.PARAMS)
"RTN","RGCWSER",33,0)
 D ENDREST()
"RTN","RGCWSER",34,0)
 Q
"RTN","RGCWSER",35,0)
 ; RPC: Returns a serialized form of the requested object.
"RTN","RGCWSER",36,0)
 ; SLCT may be:
"RTN","RGCWSER",37,0)
 ;  - a single IEN (e.g., SLCT=123)
"RTN","RGCWSER",38,0)
 ;  - a unique key on the source file (e.g., SLCT=@XYZ)
"RTN","RGCWSER",39,0)
 ;  - an ordered array passed by ref whose values are IENs (e.g., SLCT(1)=123...)
"RTN","RGCWSER",40,0)
 ;  - a global root whose subscript is an IEN (e.g., ^XYZ("B","ABC"))
"RTN","RGCWSER",41,0)
 ;  - a reference to an iterator that returns IENs (e.g., $$NXT^XYZ)
"RTN","RGCWSER",42,0)
 ; FLAGS may contain:
"RTN","RGCWSER",43,0)
 ;  I - Add id attribute to resource
"RTN","RGCWSER",44,0)
 ;  L - Processing an entry returned from a selector
"RTN","RGCWSER",45,0)
 ;  M - Processing a multiple field (subfile)
"RTN","RGCWSER",46,0)
 ;  S - Selection of internal resources are allowed
"RTN","RGCWSER",47,0)
 ;  X - Suppress execution of custom serializer
"RTN","RGCWSER",48,0)
FETCH(DATA,PATH,SLCT,PNAME,PARAMS,FLAGS) ;
"RTN","RGCWSER",49,0)
 N RTN,TOP,IEN,IENS,FILE,SER,TP,XSER,XRET,MAX,ID,SER,INTRNL,X
"RTN","RGCWSER",50,0)
 D ENVSET
"RTN","RGCWSER",51,0)
 S:$E(PATH)="/" PATH=$E(PATH,2,9999)
"RTN","RGCWSER",52,0)
 S SER=$$GETSER(PATH,.DATA)
"RTN","RGCWSER",53,0)
 Q:'$L(SER)
"RTN","RGCWSER",54,0)
 S:'$D(DATA("ESTACK")) DATA("ESTACK")=$ESTACK
"RTN","RGCWSER",55,0)
 S DATA("CNT")=+$G(DATA("CNT")),DATA("LEN")=+$G(DATA("LEN"))
"RTN","RGCWSER",56,0)
 S TOP='DATA("CNT"),FLAGS=$G(FLAGS),PNAME=$G(PNAME),SLCT=$G(SLCT)
"RTN","RGCWSER",57,0)
 S N0=$G(@SER@(0)),XSER=$G(@SER@(10)),XRET=$G(@SER@(20)),INTRNL=+$P(N0,U,2),FILE=+$P(N0,U,3),IENS="",TP=-1
"RTN","RGCWSER",58,0)
 I $D(SLCT)=1,'$L(SLCT) D                                              ; No selector
"RTN","RGCWSER",59,0)
 .I $D(PARAMS("_id",1)) D
"RTN","RGCWSER",60,0)
 ..M SLCT=PARAMS("_id",1)
"RTN","RGCWSER",61,0)
 ..K PARAMS("_id",1)
"RTN","RGCWSER",62,0)
 I $G(PARAMS("_count",1,1))>0 D
"RTN","RGCWSER",63,0)
 .S DATA("MAX")=+PARAMS("_count",1,1)
"RTN","RGCWSER",64,0)
 .K PARAMS("_count",1,1)
"RTN","RGCWSER",65,0)
 I $$HASFLAG("M") S IENS=SLCT,SLCT=$$ROOT^DILFD(FILE,SLCT,1),TP=2 Q:'$O(@SLCT@(0))
"RTN","RGCWSER",66,0)
 E  I $E(SLCT)="@" S SLCT=$$FIND1^DIC(FILE,,"X",$E(SLCT,2,9999))
"RTN","RGCWSER",67,0)
 E  I $E(SLCT)=U S TP=1
"RTN","RGCWSER",68,0)
 E  I $E(SLCT,1,2)="$$" S SLCT=$$NEWITER(SLCT),TP=3
"RTN","RGCWSER",69,0)
 E  I $D(SLCT)>9 S TP=0
"RTN","RGCWSER",70,0)
 S MAX=$G(DATA("MAX"),$S(TP:999999,1:1000))
"RTN","RGCWSER",71,0)
 I '$G(DATA("PREINIT")) D PREINIT^@DATA("INTF") S DATA("PREINIT")=1
"RTN","RGCWSER",72,0)
 I $L(XSER),'$$HASFLAG("X") X XSER Q:$D(XSER)
"RTN","RGCWSER",73,0)
 D BYIEN:TP=-1,BYSLCT:TP'=-1
"RTN","RGCWSER",74,0)
 I $ESTACK=DATA("ESTACK") D
"RTN","RGCWSER",75,0)
 .D:'$$ISERR PSTINIT^@DATA("INTF")
"RTN","RGCWSER",76,0)
 .D CLEANUP
"RTN","RGCWSER",77,0)
 Q
"RTN","RGCWSER",78,0)
 ; By selector
"RTN","RGCWSER",79,0)
BYSLCT N LP
"RTN","RGCWSER",80,0)
 D PRELIST^@DATA("INTF")
"RTN","RGCWSER",81,0)
 F LP=0:0 Q:MAX'>DATA("CNT")  S:TP=3 @("LP="_SLCT) S:TP'=3 LP=$S('TP:$O(SLCT(LP)),1:$O(@SLCT@(LP))) Q:'LP  D  Q:$$ISERR
"RTN","RGCWSER",82,0)
 .S IEN=$S(TP:LP,1:SLCT(LP))
"RTN","RGCWSER",83,0)
 .D FETCH(.DATA,PATH,IEN_IENS,PNAME,.PARAMS,$S(TP=2:"S",1:"L"))
"RTN","RGCWSER",84,0)
 D PSTLIST^@DATA("INTF")
"RTN","RGCWSER",85,0)
 Q
"RTN","RGCWSER",86,0)
 ; By IEN
"RTN","RGCWSER",87,0)
BYIEN N LP,PROP,PARM,FLD,VALS
"RTN","RGCWSER",88,0)
 I INTRNL,'$L(PNAME),'$$HASFLAG("S") D SETERR(403,"Invalid resource type: "_PATH) Q
"RTN","RGCWSER",89,0)
 S LP=""
"RTN","RGCWSER",90,0)
 F  S LP=$O(PARAMS(LP)) D  Q:'$L(LP)
"RTN","RGCWSER",91,0)
 .S PARM=$O(@SER@(40,"B",$S($L(LP):LP,1:"@selector"),0))
"RTN","RGCWSER",92,0)
 .I 'PARM D:$L(LP) SETERR(403,"Unsupported search parameter: "_LP) Q
"RTN","RGCWSER",93,0)
 .M PARM(PARM)=@SER@(40,PARM)
"RTN","RGCWSER",94,0)
 .S PARM("ASEQ",+$P(PARM(PARM,0),U,4),PARM)=""
"RTN","RGCWSER",95,0)
 Q:$$ISERR
"RTN","RGCWSER",96,0)
 I '$L(SLCT) D  Q:$L(SLCT)
"RTN","RGCWSER",97,0)
 .S SLCT=$$GETSLCT
"RTN","RGCWSER",98,0)
 .S:'$L(SLCT) SLCT=$$ROOT^DILFD(FILE,,1)
"RTN","RGCWSER",99,0)
 .D:$L(SLCT) FETCH(.DATA,PATH,SLCT,.PNAME,.PARAMS)
"RTN","RGCWSER",100,0)
 I '$L(SLCT) D SETERR(403,"Invalid request") Q
"RTN","RGCWSER",101,0)
 M PROP=@SER@(30)
"RTN","RGCWSER",102,0)
 S (ID,IEN)=SLCT
"RTN","RGCWSER",103,0)
 I FILE!$L(XRET) D  Q:$$ISERR  I '$$FILTER D:'$$HASFLAG("L") SETERR(404,"Not found") Q
"RTN","RGCWSER",104,0)
 .S IENS=IEN_",",FLD=""
"RTN","RGCWSER",105,0)
 .D BLDFLDS(.PROP,.FLD),BLDFLDS(.PARM,.FLD)
"RTN","RGCWSER",106,0)
 .I $L(FLD) D
"RTN","RGCWSER",107,0)
 ..N ERR
"RTN","RGCWSER",108,0)
 ..X XRET
"RTN","RGCWSER",109,0)
 ..D:FILE GETS^DIQ(FILE,IENS,FLD,"IE","VALS","ERR")
"RTN","RGCWSER",110,0)
 ..D:'$D(VALS) SETERR(404,$G(ERR("DIERR",1,"TEXT",1),"Unknown error"))
"RTN","RGCWSER",111,0)
 .I $D(PROP("B","@id")) D
"RTN","RGCWSER",112,0)
 ..N X
"RTN","RGCWSER",113,0)
 ..S X=+$O(PROP("B","@id",0)),X=$P($G(PROP(X,0)),U,2)
"RTN","RGCWSER",114,0)
 ..S X=$S('$L(X):"",1:$G(VALS(FILE,IENS,X,"E")))
"RTN","RGCWSER",115,0)
 ..S:$L(X) ID=X
"RTN","RGCWSER",116,0)
 .S VALS(FILE,IENS,.001,"I")=IEN
"RTN","RGCWSER",117,0)
 .S VALS(FILE,IENS,.002,"I")=ID
"RTN","RGCWSER",118,0)
 I '$L(PNAME),'$$HASFLAG("S") S DATA("CNT")=DATA("CNT")+1
"RTN","RGCWSER",119,0)
 D COMPOSE^@DATA("INTF")
"RTN","RGCWSER",120,0)
 Q
"RTN","RGCWSER",121,0)
 ; Setup necessary environment
"RTN","RGCWSER",122,0)
ENVSET S U="^",DT=$$DT^XLFDT
"RTN","RGCWSER",123,0)
 S:'($D(DATA)#2) DATA=$$TMPGBL
"RTN","RGCWSER",124,0)
 S:'$D(DUZ(2)) DUZ(2)=$P(^XTV(8989.3,1,"XUS"),U,17)
"RTN","RGCWSER",125,0)
 Q
"RTN","RGCWSER",126,0)
 ; Cleanup temp globals on completion
"RTN","RGCWSER",127,0)
CLEANUP N LP,TMP,EXC
"RTN","RGCWSER",128,0)
 S TMP=$NA(^TMP("RGCWSER",$J))
"RTN","RGCWSER",129,0)
 I TMP'=$NA(@DATA,2) K @TMP Q
"RTN","RGCWSER",130,0)
 S (@TMP,EXC)=$QS(DATA,3)
"RTN","RGCWSER",131,0)
 F LP=0:0  S LP=$O(@TMP@(LP)) Q:'LP  K:LP'=EXC @TMP@(LP)
"RTN","RGCWSER",132,0)
 Q
"RTN","RGCWSER",133,0)
 ; Return unique temp global reference
"RTN","RGCWSER",134,0)
 ; If X is specified, returns the temp global at that index.
"RTN","RGCWSER",135,0)
 ; Otherwise, returns the next available global reference.
"RTN","RGCWSER",136,0)
TMPGBL(X) ;
"RTN","RGCWSER",137,0)
 Q:$G(X) $NA(^TMP("RGCWSER",$J,X))
"RTN","RGCWSER",138,0)
 F  S X=$G(^TMP("RGCWSER",$J))+1,^($J)=X,X=$NA(^($J,X)) Q:'$D(@X)
"RTN","RGCWSER",139,0)
 Q X
"RTN","RGCWSER",140,0)
 ; Returns the presence of specified flag(s).
"RTN","RGCWSER",141,0)
 ; If ALL is true, presence of all flags are required.
"RTN","RGCWSER",142,0)
 ; If false (the default), only one flag must be present.
"RTN","RGCWSER",143,0)
HASFLAG(FLG,ALL) ;
"RTN","RGCWSER",144,0)
 N X,T
"RTN","RGCWSER",145,0)
 S ALL='$G(ALL),T=1
"RTN","RGCWSER",146,0)
 F X=1:1:$L(FLG) S T=FLAGS[$E(FLG,X) Q:T=ALL
"RTN","RGCWSER",147,0)
 Q T
"RTN","RGCWSER",148,0)
 ; Retrieval logic for custom source.
"RTN","RGCWSER",149,0)
RETRIEVE(SRC,IEN,DLM) ;
"RTN","RGCWSER",150,0)
 N X,Y
"RTN","RGCWSER",151,0)
 S X=$G(@SRC@(IEN)),DLM=$G(DLM,U)
"RTN","RGCWSER",152,0)
 F Y=1:1:$L(X,DLM) S (VALS(FILE,IENS,Y,"I"),VALS(FILE,IENS,Y,"E"))=$P(X,DLM,Y)
"RTN","RGCWSER",153,0)
 Q
"RTN","RGCWSER",154,0)
 ; Entry point for WebMan CGI call
"RTN","RGCWSER",155,0)
WEBMAN N DATA,URL,HOST
"RTN","RGCWSER",156,0)
 S DATA=$NA(^TMP(CIANS,$J)),CIASIZE=-1
"RTN","RGCWSER",157,0)
 S URL=$$ENV^CIANWCG("URL")
"RTN","RGCWSER",158,0)
 S HOST=$$CONCAT("http://"_$$ENV^CIANWCG("Host"),$P(URL,"/",1,3))
"RTN","RGCWSER",159,0)
 S URL=CIAMETH_" "_$P(URL,"/",4,9999)
"RTN","RGCWSER",160,0)
 K @DATA
"RTN","RGCWSER",161,0)
 D REST(.DATA,URL,HOST)
"RTN","RGCWSER",162,0)
 Q
"RTN","RGCWSER",163,0)
 ; Entry point for M Server
"RTN","RGCWSER",164,0)
MSERVER(DATA,ARGS) ;
"RTN","RGCWSER",165,0)
 N URL,$ET
"RTN","RGCWSER",166,0)
 S $ET="G MERROR^RGCWSER"
"RTN","RGCWSER",167,0)
 S URL=HTTPREQ("method")_" "_HTTPREQ("path"),DATA("raw")=1
"RTN","RGCWSER",168,0)
 S:$L(HTTPREQ("query")) URL=URL_"?"_HTTPREQ("query")
"RTN","RGCWSER",169,0)
 D REST(.DATA,URL,HTTPREQ("header","host"))
"RTN","RGCWSER",170,0)
 Q
"RTN","RGCWSER",171,0)
MERROR D ^%ZTER
"RTN","RGCWSER",172,0)
 Q
"RTN","RGCWSER",173,0)
 ; Get preferred global selector
"RTN","RGCWSER",174,0)
GETSLCT() ;
"RTN","RGCWSER",175,0)
 N LP,SQ,NM,X,PN
"RTN","RGCWSER",176,0)
 S X=""
"RTN","RGCWSER",177,0)
 F SQ=0:0 S SQ=$O(PARM("ASEQ",SQ)) Q:'SQ  D  Q:$L(X)
"RTN","RGCWSER",178,0)
 .F LP=0:0 S LP=$O(PARM("ASEQ",SQ,LP)) Q:'LP  D  Q:$L(X)
"RTN","RGCWSER",179,0)
 ..S PN=$P(PARM(LP,0),U)
"RTN","RGCWSER",180,0)
 ..X $G(PARM(LP,20))
"RTN","RGCWSER",181,0)
 Q X
"RTN","RGCWSER",182,0)
 ; Process properties
"RTN","RGCWSER",183,0)
PROCPROP N LP,SQ
"RTN","RGCWSER",184,0)
 F SQ=0:0 S SQ=$O(PROP("ASEQ",SQ)) Q:'SQ  D
"RTN","RGCWSER",185,0)
 .F LP=0:0 S LP=$O(PROP("ASEQ",SQ,LP)) Q:'LP  D
"RTN","RGCWSER",186,0)
 ..N PN,FN,TP,VL,CTL
"RTN","RGCWSER",187,0)
 ..D EXTRP(.PROP,LP)
"RTN","RGCWSER",188,0)
 ..I TP="M" D PROPM Q
"RTN","RGCWSER",189,0)
 ..D:$L(TP) @("PROP"_TP)^@DATA("INTF")
"RTN","RGCWSER",190,0)
 Q
"RTN","RGCWSER",191,0)
 ; Process a multiple field
"RTN","RGCWSER",192,0)
PROPM D FETCH(.DATA,CTL,","_IEN,PN,,"M")
"RTN","RGCWSER",193,0)
 Q
"RTN","RGCWSER",194,0)
 ; Extracts property settings
"RTN","RGCWSER",195,0)
EXTRP(SRC,LP) ;
"RTN","RGCWSER",196,0)
 N X,Y,Z,P
"RTN","RGCWSER",197,0)
 S X=SRC(LP,0),PN=$P(X,U),FN=$P(X,U,2),TP=$P(X,U,3),CTL=$G(SRC(LP,10)),PN(-1)=$TR(PN,"\")
"RTN","RGCWSER",198,0)
 I PN[":" D
"RTN","RGCWSER",199,0)
 .S Y=0,P=""
"RTN","RGCWSER",200,0)
 .F X=1:1:$L(PN,":") D
"RTN","RGCWSER",201,0)
 ..S Z=$P(PN,":",X)
"RTN","RGCWSER",202,0)
 ..I $E(Z,$L(Z))="\" S P=$E(Z,1,$L(Z)-1)_":" Q
"RTN","RGCWSER",203,0)
 ..S PN(Y)=P_Z,Y=Y+1,P=""
"RTN","RGCWSER",204,0)
 .S:$L(P) PN(Y)=P
"RTN","RGCWSER",205,0)
 .S PN=PN(0)
"RTN","RGCWSER",206,0)
 F X=1:1:$L(FN,",") D
"RTN","RGCWSER",207,0)
 .S Y=$P(FN,",",X)
"RTN","RGCWSER",208,0)
 .I $L(Y) D
"RTN","RGCWSER",209,0)
 ..S VALS(FILE,IENS,Y)=$L($G(VALS(FILE,IENS,Y,"I")))
"RTN","RGCWSER",210,0)
 ..M:X=1 VL=VALS(FILE,IENS,Y)
"RTN","RGCWSER",211,0)
 ..M:X>1 VL(X)=VALS(FILE,IENS,Y)
"RTN","RGCWSER",212,0)
 Q
"RTN","RGCWSER",213,0)
 ; Returns true if error condition is set
"RTN","RGCWSER",214,0)
ISERR() Q +$G(DATA("ERROR"))
"RTN","RGCWSER",215,0)
 ; Reset the output buffer
"RTN","RGCWSER",216,0)
RESET K @DATA
"RTN","RGCWSER",217,0)
 S DATA("LEN")=0
"RTN","RGCWSER",218,0)
 Q
"RTN","RGCWSER",219,0)
 ; Reports an error status
"RTN","RGCWSER",220,0)
SETERR(CODE,TEXT) ;
"RTN","RGCWSER",221,0)
 S:$D(TEXT) $P(CODE,U,2)=TEXT
"RTN","RGCWSER",222,0)
 S DATA("ERROR")=CODE
"RTN","RGCWSER",223,0)
 D RESET
"RTN","RGCWSER",224,0)
 Q
"RTN","RGCWSER",225,0)
 ; Ends a REST response
"RTN","RGCWSER",226,0)
ENDREST(STATUS) ;
"RTN","RGCWSER",227,0)
 N S
"RTN","RGCWSER",228,0)
 S:$G(DATA("ERROR")) S=$TR(DATA("ERROR"),U," ")
"RTN","RGCWSER",229,0)
 K DATA("ERROR")
"RTN","RGCWSER",230,0)
 D ADDHDR("HTTP/1.0 "_$G(STATUS,$G(S,"200 OK")))
"RTN","RGCWSER",231,0)
 D ADDHDR("Date: "_$$DAT())
"RTN","RGCWSER",232,0)
 D:$D(DATA("CTYPE"))#2 ADDHDR("Content-Type: "_DATA("CTYPE"))
"RTN","RGCWSER",233,0)
 D ADDHDR("Content-Length: "_DATA("LEN"))
"RTN","RGCWSER",234,0)
 D ADDHDR("Access-Control-Allow-Credentials: true")
"RTN","RGCWSER",235,0)
 D ADDHDR("Access-Control-Allow-Headers: origin, authorization, accept, content-type, x-requested-with")
"RTN","RGCWSER",236,0)
 D ADDHDR("Access-Control-Allow-Methods: GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS")
"RTN","RGCWSER",237,0)
 D ADDHDR("Access-Control-Allow-Origin: *")
"RTN","RGCWSER",238,0)
 D ADDHDR("")
"RTN","RGCWSER",239,0)
 Q
"RTN","RGCWSER",240,0)
 ; Lookup serializer for path and content type
"RTN","RGCWSER",241,0)
GETSER(PATH,DATA) ;
"RTN","RGCWSER",242,0)
 N SER,SERNM,START,LEN,LP,MATCH,MTYPE,PTRN,BADTP,ACCPT,REJECT,D1,D2,N0
"RTN","RGCWSER",243,0)
 S SERNM=$P(PATH,"/"),START=$P(PATH,"/",2),PATH=$P(PATH,"/",2,999)
"RTN","RGCWSER",244,0)
 S LEN=$L(START),ACCPT=$G(DATA("HDR","ACCEPT")),(MATCH,REJECT)=0,SER=+$G(DATA("SER"))
"RTN","RGCWSER",245,0)
 I SER,SERNM="*" S SERNM=DATA("SERNM")
"RTN","RGCWSER",246,0)
 I $L(SERNM),LEN F D1=0:0 S D1=$S(SER:SER,1:$O(^RGCWF(999.1,"B",SERNM,D1))) Q:'D1  D GS1  Q:MATCH!SER
"RTN","RGCWSER",247,0)
 I MATCH D  Q N0
"RTN","RGCWSER",248,0)
 .S:'SER N0=^RGCWF(999.1,D1,0),DATA("CTYPE")=$P(N0,U,2),DATA("INTF")=$P(N0,U,3),DATA("SER")=D1,DATA("SERNM")=SERNM
"RTN","RGCWSER",249,0)
 .S N0=$NA(^RGCWF(999.1,D1,10,D2))
"RTN","RGCWSER",250,0)
 D SETERR($S('REJECT:"404^Not Found",1:"406^Not acceptable"))
"RTN","RGCWSER",251,0)
 Q ""
"RTN","RGCWSER",252,0)
GS1 S LP=START,MATCH=0,MTYPE=$P(^RGCWF(999.1,D1,0),U,2),BADTP='$$ISTYPE(MTYPE,ACCPT)
"RTN","RGCWSER",253,0)
 F  D  Q:MATCH  S LP=$O(^RGCWF(999.1,D1,10,"B",LP)) Q:$E(LP,1,LEN)'=START
"RTN","RGCWSER",254,0)
 .F D2=0:0 S D2=$O(^RGCWF(999.1,D1,10,"B",LP,D2)) Q:'D2  S PTRN=^(D2) D  Q:MATCH
"RTN","RGCWSER",255,0)
 ..S MATCH=$S($L(PTRN):$$ISMATCH(PATH,PTRN),1:LP=PATH)
"RTN","RGCWSER",256,0)
 ..I MATCH,BADTP S REJECT=1,MATCH=0
"RTN","RGCWSER",257,0)
 Q
"RTN","RGCWSER",258,0)
 ; Returns true if path matches specified pattern
"RTN","RGCWSER",259,0)
ISMATCH(PATH,PTRN) ;
"RTN","RGCWSER",260,0)
 Q $TR(PATH,"-_","XX")?@PTRN
"RTN","RGCWSER",261,0)
 ; Returns true if content type matches an accepted type
"RTN","RGCWSER",262,0)
ISTYPE(MTYPE,ACCPT) ;
"RTN","RGCWSER",263,0)
 Q:'$L(ACCPT) 1
"RTN","RGCWSER",264,0)
 Q:ACCPT["*/*" 1
"RTN","RGCWSER",265,0)
 Q:ACCPT[MTYPE 1
"RTN","RGCWSER",266,0)
 Q:ACCPT[($P(MTYPE,"/")_"/*") 1
"RTN","RGCWSER",267,0)
 Q:ACCPT[("*/"_$P(MTYPE,"/",2)) 1
"RTN","RGCWSER",268,0)
 Q 0
"RTN","RGCWSER",269,0)
 ; Convert to pattern (Used by APTRN xref)
"RTN","RGCWSER",270,0)
TOPTRN(NM) ;
"RTN","RGCWSER",271,0)
 N P,C,X,L
"RTN","RGCWSER",272,0)
 S (L,P)=""
"RTN","RGCWSER",273,0)
 F X=1:1:$L(NM) D
"RTN","RGCWSER",274,0)
 .S C=$E(NM,X)
"RTN","RGCWSER",275,0)
 .I C="*" D TOPTRN2("1.AN") Q
"RTN","RGCWSER",276,0)
 .I C="#" D TOPTRN2("1.N") Q
"RTN","RGCWSER",277,0)
 .S L=L_C
"RTN","RGCWSER",278,0)
 D:$L(P) TOPTRN2("")
"RTN","RGCWSER",279,0)
 Q P
"RTN","RGCWSER",280,0)
TOPTRN2(X) ;
"RTN","RGCWSER",281,0)
 S:$L(L) P=P_"1"""_L_"""",L=""
"RTN","RGCWSER",282,0)
 S P=P_X
"RTN","RGCWSER",283,0)
 Q
"RTN","RGCWSER",284,0)
BLDFLDS(SRC,FLD) ;
"RTN","RGCWSER",285,0)
 N PC,LP,FN,FNS
"RTN","RGCWSER",286,0)
 F LP=0:0 S LP=$O(SRC(LP)) Q:'LP  D
"RTN","RGCWSER",287,0)
 .S FNS=$P(SRC(LP,0),U,2)
"RTN","RGCWSER",288,0)
 .F PC=1:1:$L(FNS,",") D
"RTN","RGCWSER",289,0)
 ..S FN=$P(FNS,",",PC)
"RTN","RGCWSER",290,0)
 ..Q:'$L(FN)!(FN=.001)
"RTN","RGCWSER",291,0)
 ..I 'FN,FILE S FN=$$FLDNUM^DILFD(FILE,FN),$P(FNS,",",PC)=FN
"RTN","RGCWSER",292,0)
 ..S:'$D(FLD(FN)) FLD=FLD_$S($L(FLD):";",1:"")_FN,FLD(FN)=1
"RTN","RGCWSER",293,0)
 .S $P(SRC(LP,0),U,2)=FNS
"RTN","RGCWSER",294,0)
 Q
"RTN","RGCWSER",295,0)
 ; Add to output buffer
"RTN","RGCWSER",296,0)
ADD(X) N Y
"RTN","RGCWSER",297,0)
 S:'$$ISERR Y=$O(@DATA@(""),-1)+1,@DATA@(Y)=X,DATA("LEN")=$G(DATA("LEN"))+$L(X)
"RTN","RGCWSER",298,0)
 Q
"RTN","RGCWSER",299,0)
 ; Add HTTP header to output buffer
"RTN","RGCWSER",300,0)
ADDHDR(X) ;
"RTN","RGCWSER",301,0)
 N Y
"RTN","RGCWSER",302,0)
 S Y=$O(@DATA@(0,""),-1)+1,@DATA@(0,Y)=X_$C(13,10)
"RTN","RGCWSER",303,0)
 Q
"RTN","RGCWSER",304,0)
 ; Add array of values to output buffer.
"RTN","RGCWSER",305,0)
 ; AR may be by reference or indirection
"RTN","RGCWSER",306,0)
 ; FLG: B = encode as binary, L = add CRLF.
"RTN","RGCWSER",307,0)
ADDARY(AR,FLG) ;
"RTN","RGCWSER",308,0)
 N LP,RT,VL,B,L
"RTN","RGCWSER",309,0)
 S RT=$S($D(AR)=1:AR,1:$NA(AR)),FLG=$G(FLG),B=FLG["B",L=$S(FLG["L":$C(13,10),1:"")
"RTN","RGCWSER",310,0)
 D ADDTXT(RT,L):'B,ADDBIN(RT,L):B
"RTN","RGCWSER",311,0)
 Q
"RTN","RGCWSER",312,0)
ADDTXT(RT,L) ;
"RTN","RGCWSER",313,0)
 N LP
"RTN","RGCWSER",314,0)
 S LP=""
"RTN","RGCWSER",315,0)
 F  S LP=$O(@RT@(LP)) Q:'$L(LP)  D
"RTN","RGCWSER",316,0)
 .D ADD($$ESC(@RT@(LP)_L))
"RTN","RGCWSER",317,0)
 Q
"RTN","RGCWSER",318,0)
ADDBIN(RT,L) ;
"RTN","RGCWSER",319,0)
 N X,Z,VL,LP,I
"RTN","RGCWSER",320,0)
 S Z="=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",(VL,LP,X)=""
"RTN","RGCWSER",321,0)
 F  S LP=$O(@RT@(LP)) Q:'$L(LP)  D
"RTN","RGCWSER",322,0)
 .S X=X_@RT@(LP)_L
"RTN","RGCWSER",323,0)
 .F  Q:$L(X)<3  D
"RTN","RGCWSER",324,0)
 ..S VL=VL_$$B64ENC($E(X,1,3)),X=$E(X,4,9999)
"RTN","RGCWSER",325,0)
 .I $L(VL)>131 D ADD(VL) S VL=""
"RTN","RGCWSER",326,0)
 S:$L(X) VL=VL_$$B64ENC(X)
"RTN","RGCWSER",327,0)
 D:$L(VL) ADD(VL)
"RTN","RGCWSER",328,0)
 Q
"RTN","RGCWSER",329,0)
B64ENC(X) N Z1,Z2,Z3,Z4
"RTN","RGCWSER",330,0)
 S Z3=0,Z1=""
"RTN","RGCWSER",331,0)
 F Z4=1:1:3 S Z2=$A(X,Z4),Z3=Z3*256+$S(Z2<0:0,1:Z2)
"RTN","RGCWSER",332,0)
 F Z4=1:1:4 S Z1=$E(Z,Z3#64+2)_Z1,Z3=Z3\64
"RTN","RGCWSER",333,0)
 Q Z1
"RTN","RGCWSER",334,0)
 ; Parse query string into PARAMS array.
"RTN","RGCWSER",335,0)
PARSEQS(VALUE,ARY) ;
"RTN","RGCWSER",336,0)
 N X,Y,Z,N,V,M
"RTN","RGCWSER",337,0)
 F X=1:1:$L(VALUE,"&") D
"RTN","RGCWSER",338,0)
 .S Y=$P(VALUE,"&",X),N=$$UNESCAPE($P(Y,"=")),V=$$UNESCAPE($P(Y,"=",2,9999)),M=""
"RTN","RGCWSER",339,0)
 .I $L(N) D
"RTN","RGCWSER",340,0)
 ..S Z=$L(N,":")
"RTN","RGCWSER",341,0)
 ..I Z>1 D
"RTN","RGCWSER",342,0)
 ...S Y=$P(N,":",Z)
"RTN","RGCWSER",343,0)
 ...S M=$S(Y="missing":"m",Y="exact":"e",Y="text":"t",1:"")
"RTN","RGCWSER",344,0)
 ...S:$L(M) N=$P(N,":",1,Z-1)
"RTN","RGCWSER",345,0)
 ..S Y=1+$O(ARY(N,""),-1)
"RTN","RGCWSER",346,0)
 ..F Z=1:1:$L(V,",") D
"RTN","RGCWSER",347,0)
 ...S ARY(N,Y,Z)=$P(V,",",Z)
"RTN","RGCWSER",348,0)
 ...S ARY(N,Y,Z,"OPR")=M
"RTN","RGCWSER",349,0)
 Q
"RTN","RGCWSER",350,0)
 ; Parse http header
"RTN","RGCWSER",351,0)
PARSEHDR(VALUE,ARY) ;
"RTN","RGCWSER",352,0)
 N N,V
"RTN","RGCWSER",353,0)
 S N=$$UP^XLFSTR($P(VALUE,":")),V=$$TRIM^XLFSTR($P(VALUE,":",2,999))
"RTN","RGCWSER",354,0)
 S:$L(N) ARY("HDR",N)=V
"RTN","RGCWSER",355,0)
 Q
"RTN","RGCWSER",356,0)
 ; Escape reserved characters
"RTN","RGCWSER",357,0)
ESC(X) N Y,Z,C
"RTN","RGCWSER",358,0)
 F Z=1:1 S Y=$P($T(ESCMAP+Z),";;",2) Q:'$L(Y)  D
"RTN","RGCWSER",359,0)
 .S C=$P(Y,";")
"RTN","RGCWSER",360,0)
 .S:X[C X=$$SUBST^RGUT(X,C,$P(Y,";",2))
"RTN","RGCWSER",361,0)
 Q X
"RTN","RGCWSER",362,0)
ESCMAP ;;Map for characters to escape
"RTN","RGCWSER",363,0)
 ;;&;amp
"RTN","RGCWSER",364,0)
 ;;";qt
"RTN","RGCWSER",365,0)
 ;;<;lt
"RTN","RGCWSER",366,0)
 ;;>;gt
"RTN","RGCWSER",367,0)
 ;;
"RTN","RGCWSER",368,0)
 ; Replace escaped characters in URL.
"RTN","RGCWSER",369,0)
UNESCAPE(X) ;
"RTN","RGCWSER",370,0)
 I X["%"!(X["+") D
"RTN","RGCWSER",371,0)
 .N P,C,H
"RTN","RGCWSER",372,0)
 .F P=1:1 S C=$E(X,P) Q:'$L(C)  D
"RTN","RGCWSER",373,0)
 ..I C="+" S $E(X,P)=" "
"RTN","RGCWSER",374,0)
 ..E  I C="%" S H=$E(X,P+1,P+2),$E(X,P,P+2)=$$UNHEX^XTHCUTL(H)
"RTN","RGCWSER",375,0)
 Q X
"RTN","RGCWSER",376,0)
TABLE(T) Q $S(T=+T:T,1:+$O(^DIC("B",TABLE,0)))
"RTN","RGCWSER",377,0)
 ; Format system attribute
"RTN","RGCWSER",378,0)
SYSTEM(SYSTEM) ;
"RTN","RGCWSER",379,0)
 N PATH
"RTN","RGCWSER",380,0)
 S:'($D(SYSTEM)#10) SYSTEM="@"
"RTN","RGCWSER",381,0)
 S PATH=$P(SYSTEM,"/",2,999),SYSTEM=$P(SYSTEM,"/")
"RTN","RGCWSER",382,0)
 S:$E(SYSTEM)="#" SYSTEM="@"_$TR($P(^DIC($E(SYSTEM,2,9999),0),U)," /","__")
"RTN","RGCWSER",383,0)
 S:$E(SYSTEM)="@" SYSTEM=$$LOCALSYS($E(SYSTEM,2,9999))
"RTN","RGCWSER",384,0)
 Q SYSTEM_$S($L(PATH):"/"_PATH,1:"")
"RTN","RGCWSER",385,0)
 ; Returns the host url
"RTN","RGCWSER",386,0)
HOST(PATH) ;
"RTN","RGCWSER",387,0)
 S PATH=$G(PATH)
"RTN","RGCWSER",388,0)
 S:$E(PATH)="*" PATH=DATA("SERNM")_$E(PATH,2,9999)
"RTN","RGCWSER",389,0)
 Q $$CONCAT($G(DATA("HOST"),"http://broker/"),PATH)
"RTN","RGCWSER",390,0)
 ; Prepend local system root to path
"RTN","RGCWSER",391,0)
LOCALSYS(PATH) ;
"RTN","RGCWSER",392,0)
 Q $$CONCAT("http://"_$$LOW^XLFSTR($$KSP^XUPARAM("WHERE")),.PATH)
"RTN","RGCWSER",393,0)
 ; Concatenate path to url.
"RTN","RGCWSER",394,0)
CONCAT(URL,PATH) ;
"RTN","RGCWSER",395,0)
 Q:'$D(PATH) URL
"RTN","RGCWSER",396,0)
 F  Q:$E(URL,$L(URL))'="/"  S $E(URL,$L(URL))=""
"RTN","RGCWSER",397,0)
 F  Q:$E(PATH)'="/"  S $E(PATH)=""
"RTN","RGCWSER",398,0)
 Q URL_"/"_PATH
"RTN","RGCWSER",399,0)
SYSUUID() ; Return UUID for this system
"RTN","RGCWSER",400,0)
 S:'$L($G(^RGCWF("SYS"))) ^("SYS")=$$UUID
"RTN","RGCWSER",401,0)
 Q ^("SYS")
"RTN","RGCWSER",402,0)
 ; Generates a random UUID using $H as a seed.
"RTN","RGCWSER",403,0)
UUID() N R,I,N,S
"RTN","RGCWSER",404,0)
 S (R,N)="",S=+$TR($H,",")
"RTN","RGCWSER",405,0)
 F  S N=N_$R(S) Q:$L(N)>64
"RTN","RGCWSER",406,0)
 F I=1:2:64 S R=R_$E("0123456789abcdef",$E(N,I,I+1)#16+1)
"RTN","RGCWSER",407,0)
 Q $E(R,1,8)_"-"_$E(R,9,12)_"-4"_$E(R,14,16)_"-"_$E("89ab",$E(N,17)#4+1)_$E(R,18,20)_"-"_$E(R,21,32)
"RTN","RGCWSER",408,0)
 ; Search/filter logic.  Returns true if successful match.
"RTN","RGCWSER",409,0)
FILTER() N LP,SQ,PR,MATCH
"RTN","RGCWSER",410,0)
 S MATCH=1
"RTN","RGCWSER",411,0)
 F SQ=0:0 Q:'MATCH  S SQ=$O(PARM("ASEQ",SQ)) Q:'SQ  D
"RTN","RGCWSER",412,0)
 .F LP=0:0 Q:'MATCH  S LP=$O(PARM("ASEQ",SQ,LP)) Q:'LP  D
"RTN","RGCWSER",413,0)
 ..N PN,PN1,PN2,FN,TP,VL,CTL
"RTN","RGCWSER",414,0)
 ..D EXTRP(.PARM,LP)
"RTN","RGCWSER",415,0)
 ..S PN=PN(-1)
"RTN","RGCWSER",416,0)
 ..I PN="@selector" X CTL Q
"RTN","RGCWSER",417,0)
 ..F PN1=0:0 Q:'MATCH  S PN1=$O(PARAMS(PN,PN1)) Q:'PN1  D
"RTN","RGCWSER",418,0)
 ...S MATCH=1
"RTN","RGCWSER",419,0)
 ...F PN2=0:0 S PN2=$O(PARAMS(PN,PN1,PN2)) Q:'PN2  D  Q:MATCH
"RTN","RGCWSER",420,0)
 ....N PVAL
"RTN","RGCWSER",421,0)
 ....M PVAL=PARAMS(PN,PN1,PN2)
"RTN","RGCWSER",422,0)
 ....I '$D(PVAL("I")) D
"RTN","RGCWSER",423,0)
 .....S PVAL("I")=1
"RTN","RGCWSER",424,0)
 .....D:$L(TP) @("INIT"_TP)
"RTN","RGCWSER",425,0)
 .....M PARAMS(PN,PN1,PN2)=PVAL
"RTN","RGCWSER",426,0)
 ....X CTL
"RTN","RGCWSER",427,0)
 ....D:$L(TP)&$D(PVAL) @("FILTER"_TP)
"RTN","RGCWSER",428,0)
 Q MATCH
"RTN","RGCWSER",429,0)
 ; Number
"RTN","RGCWSER",430,0)
INITN D EXTOPR("<>m")
"RTN","RGCWSER",431,0)
 Q
"RTN","RGCWSER",432,0)
FILTERN I PVAL'=+PVAL S MATCH=0
"RTN","RGCWSER",433,0)
 E  D DOCOMP("I")
"RTN","RGCWSER",434,0)
 Q
"RTN","RGCWSER",435,0)
 ; Date
"RTN","RGCWSER",436,0)
INITD D EXTOPR("<>m")
"RTN","RGCWSER",437,0)
 N DAT,TIM,TZ,X
"RTN","RGCWSER",438,0)
 I PVAL?4N1"-"2N1"-"2N.E D
"RTN","RGCWSER",439,0)
 .S TIM=$P(PVAL,"T",2,9999),DAT=$P(PVAL,"T"),DAT=$P(DAT,"-",2,3)_"-"_$P(DAT,"-")
"RTN","RGCWSER",440,0)
 .S X=$S($E(TIM,$L(TIM))="Z":"Z",TIM["-":"-",TIM["+":"+",1:"")
"RTN","RGCWSER",441,0)
 .S TZ=X_$P(TIM,X,2,9999),TIM=$P(TIM,X),PVAL=DAT
"RTN","RGCWSER",442,0)
 .S:$L(TIM) PVAL=PVAL_"@"_TIM
"RTN","RGCWSER",443,0)
 .I $L(TIM),$L(TZ) D
"RTN","RGCWSER",444,0)
 ..S X=$$TZ^XLFDT,TZ=X-$TR(TZ,":"),TZ(0)=TZ\100,TZ(1)=TZ-(TZ(0)*100)
"RTN","RGCWSER",445,0)
 D DT^DILF($S(PVAL["@":"TS",1:""),PVAL,.DAT)
"RTN","RGCWSER",446,0)
 I DAT>0,$D(TZ)>1 D
"RTN","RGCWSER",447,0)
 .S DAT=$$FMADD^XLFDT(DAT,0,TZ(0),TZ(1),0)
"RTN","RGCWSER",448,0)
 S PVAL=DAT
"RTN","RGCWSER",449,0)
 Q
"RTN","RGCWSER",450,0)
FILTERD I '$D(VL(2)) D DOCOMP("I") Q
"RTN","RGCWSER",451,0)
 D DOCOMPP("I")
"RTN","RGCWSER",452,0)
 Q
"RTN","RGCWSER",453,0)
 ; String
"RTN","RGCWSER",454,0)
INITS D EXTOPR("me","s")
"RTN","RGCWSER",455,0)
 S:PVAL("OPR")="s" PVAL=$$UP^XLFSTR(PVAL)
"RTN","RGCWSER",456,0)
 Q
"RTN","RGCWSER",457,0)
FILTERS D DOCOMP("E")
"RTN","RGCWSER",458,0)
 Q
"RTN","RGCWSER",459,0)
 ; Token
"RTN","RGCWSER",460,0)
INITT D EXTOPR("mt")
"RTN","RGCWSER",461,0)
 S:PVAL["|" PVAL(0)=$P(PVAL,"|"),PVAL=$P(PVAL,"|",2)
"RTN","RGCWSER",462,0)
 S:PVAL("OPR")="t" PVAL=$$UP^XLFSTR(PVAL)
"RTN","RGCWSER",463,0)
 Q
"RTN","RGCWSER",464,0)
FILTERT D DOCOMP($S(PVAL("OPR")="t":"E",1:"I"))
"RTN","RGCWSER",465,0)
 Q
"RTN","RGCWSER",466,0)
 ; Reference
"RTN","RGCWSER",467,0)
INITR D EXTOPR("m")
"RTN","RGCWSER",468,0)
 Q
"RTN","RGCWSER",469,0)
FILTERR D DOCOMP("I")
"RTN","RGCWSER",470,0)
 Q
"RTN","RGCWSER",471,0)
 ; Quantity
"RTN","RGCWSER",472,0)
INITQ D EXTOPR("<>m~")
"RTN","RGCWSER",473,0)
 Q
"RTN","RGCWSER",474,0)
FILTERQ D FILTERN
"RTN","RGCWSER",475,0)
 Q
"RTN","RGCWSER",476,0)
DOCOMP(IE) ;
"RTN","RGCWSER",477,0)
 D DOCOMPX($G(VL(IE)))
"RTN","RGCWSER",478,0)
 Q
"RTN","RGCWSER",479,0)
 ; Perform comparison against a period
"RTN","RGCWSER",480,0)
DOCOMPP(IE) ;
"RTN","RGCWSER",481,0)
 N START,END,OPR
"RTN","RGCWSER",482,0)
 S START=$G(VL(IE)),END=$G(VL(2,IE)),OPR=PVAL("OPR"),MATCH=0
"RTN","RGCWSER",483,0)
 I 'START,'END Q
"RTN","RGCWSER",484,0)
 I 'START D DOCOMPX(END) Q
"RTN","RGCWSER",485,0)
 I 'END D DOCOMPX(START) Q
"RTN","RGCWSER",486,0)
 I OPR["=" S MATCH=PVAL'<START&(PVAL'>END) Q:MATCH
"RTN","RGCWSER",487,0)
 I OPR["<" S MATCH=START<PVAL Q
"RTN","RGCWSER",488,0)
 I OPR[">" S MATCH=END>PVAL Q
"RTN","RGCWSER",489,0)
 Q
"RTN","RGCWSER",490,0)
 ; Perform comparison against search value
"RTN","RGCWSER",491,0)
DOCOMPX(VAL) ;
"RTN","RGCWSER",492,0)
 N OPR
"RTN","RGCWSER",493,0)
 S MATCH=0,OPR=PVAL("OPR")
"RTN","RGCWSER",494,0)
 I OPR["m" S MATCH='$L(VAL)=(PVAL="true") Q
"RTN","RGCWSER",495,0)
 I OPR["=" S MATCH=VAL=PVAL Q:MATCH
"RTN","RGCWSER",496,0)
 I OPR["<" S MATCH=VAL<PVAL Q
"RTN","RGCWSER",497,0)
 I OPR[">" S MATCH=VAL>PVAL Q
"RTN","RGCWSER",498,0)
 I OPR["e" S MATCH=VAL=PVAL Q
"RTN","RGCWSER",499,0)
 I OPR["~" D  Q
"RTN","RGCWSER",500,0)
 .N X1,X2,Y
"RTN","RGCWSER",501,0)
 .S Y=PVAL/10,X1=PVAL-Y,X2=PVAL+Y,MATCH=VAL'<X1&(X'>X2)
"RTN","RGCWSER",502,0)
 I OPR["s" D  Q
"RTN","RGCWSER",503,0)
 .S VAL=$$UP^XLFSTR($E(VAL,1,$L(PVAL))),MATCH=VAL=PVAL
"RTN","RGCWSER",504,0)
 I OPR["t" D  Q
"RTN","RGCWSER",505,0)
 .S MATCH=$$UP^XLFSTR(VAL)[PVAL
"RTN","RGCWSER",506,0)
 Q
"RTN","RGCWSER",507,0)
 ; Name comparison
"RTN","RGCWSER",508,0)
OPRNAME(VAL,PC) ;
"RTN","RGCWSER",509,0)
 N X,Y
"RTN","RGCWSER",510,0)
 S VAL=$P(VAL,",",PC)
"RTN","RGCWSER",511,0)
 F X=1:1:$L(VAL," ") D  Q:MATCH
"RTN","RGCWSER",512,0)
 .S Y=$P(VAL," ",X)
"RTN","RGCWSER",513,0)
 .D:$L(Y) DOCOMPX(Y)
"RTN","RGCWSER",514,0)
 Q
"RTN","RGCWSER",515,0)
 ; Extract optional operator from search parameter
"RTN","RGCWSER",516,0)
EXTOPR(ALLOWED,DFLT) ;
"RTN","RGCWSER",517,0)
 N X,OPR
"RTN","RGCWSER",518,0)
 S OPR=$G(PVAL("OPR"))
"RTN","RGCWSER",519,0)
 F X="<=",">=","<",">","~" I ALLOWED[$E(X),$E(PVAL,1,$L(X))=X D  Q
"RTN","RGCWSER",520,0)
 .I '$L(OPR) S OPR=X,PVAL=$E(PVAL,$L(X)+1,9999)
"RTN","RGCWSER",521,0)
 .E  D SETERR(403,"Invalid comparator on query string")
"RTN","RGCWSER",522,0)
 S PVAL("OPR")=$S($L(OPR):OPR,1:$G(DFLT,"="))
"RTN","RGCWSER",523,0)
 Q
"RTN","RGCWSER",524,0)
 ; Date (format per RFC 1123)
"RTN","RGCWSER",525,0)
DAT() N X,Y,TZ,H,M
"RTN","RGCWSER",526,0)
 S X=$$NOW^XLFDT,TZ=$$TZ^XLFDT,H=+$E(TZ,2,3),M=+$E(TZ,4,5),Y=$S(TZ<0:1,1:-1)
"RTN","RGCWSER",527,0)
 S X=$$FMADD^XLFDT(X,0,H*Y,M*Y,0)
"RTN","RGCWSER",528,0)
 Q $$FMTDATE^RGCWSERD(X,"EEE, dd MMM YYYY HH:mm:ss 'GMT'")
"RTN","RGCWSER",529,0)
 ; Creates a new instance of an iterator
"RTN","RGCWSER",530,0)
 ; EP = entry point (tag or tag^routine)
"RTN","RGCWSER",531,0)
 ; Note: entry point will be invoked immediately via a DO
"RTN","RGCWSER",532,0)
 ; to permit initialization.
"RTN","RGCWSER",533,0)
NEWITER(EP) ;
"RTN","RGCWSER",534,0)
 S:$E(EP,1,2)="$$" EP=$E(EP,3,99)
"RTN","RGCWSER",535,0)
 S EP=EP_"("_$QS($$TMPGBL,3)_")"
"RTN","RGCWSER",536,0)
 D @EP
"RTN","RGCWSER",537,0)
 Q "$$"_EP
"RTN","RGCWSER",538,0)
 ; Iterator implementation for traversing a cross reference
"RTN","RGCWSER",539,0)
XREFITER(CTX,ROOT,START,TST) ;
"RTN","RGCWSER",540,0)
 S CTX=$$TMPGBL(CTX)
"RTN","RGCWSER",541,0)
 I '$Q D  Q
"RTN","RGCWSER",542,0)
 .S START=$$UP^XLFSTR(START)
"RTN","RGCWSER",543,0)
 .S @CTX@("IEN")=0,^("ROOT")=ROOT,(^("START"),^("LAST"))=START,^("TST")=$G(TST,"I 1")
"RTN","RGCWSER",544,0)
 N LAST,IEN
"RTN","RGCWSER",545,0)
 S IEN=@CTX@("IEN"),START=^("START"),LAST=^("LAST"),TST=^("TST"),ROOT=^("ROOT")
"RTN","RGCWSER",546,0)
 F  D  Q:IEN
"RTN","RGCWSER",547,0)
 .S:$L(LAST) IEN=+$O(@ROOT@(LAST,IEN)),@CTX@("IEN")=IEN
"RTN","RGCWSER",548,0)
 .Q:IEN
"RTN","RGCWSER",549,0)
 .S LAST=$O(@ROOT@(LAST)),@CTX@("LAST")=LAST
"RTN","RGCWSER",550,0)
 .I 0
"RTN","RGCWSER",551,0)
 .X:$L(LAST) TST
"RTN","RGCWSER",552,0)
 .S:'$T IEN=-1
"RTN","RGCWSER",553,0)
 Q $S(IEN>0:IEN,1:0)
"RTN","RGCWSER",554,0)
 ; Iterator implementation for traversing a name cross references
"RTN","RGCWSER",555,0)
NAMEITER(CTX,ROOT) ;
"RTN","RGCWSER",556,0)
 I '$Q D XREFITER(CTX,ROOT,PARAMS("family",1,1),"I $E($P(LAST,"",""),1,$L(START))=START") Q
"RTN","RGCWSER",557,0)
 Q $$XREFITER(CTX)
"RTN","RGCWSER",558,0)
 ; Return a cohort based on a xref
"RTN","RGCWSER",559,0)
 ; PARAM = Name of search parameter
"RTN","RGCWSER",560,0)
 ; GBL = Root of xref
"RTN","RGCWSER",561,0)
 ; OFF = Offset to subscript containing IEN (defaults to 0)
"RTN","RGCWSER",562,0)
COHORT(PARAM,GBL,OFF) ;
"RTN","RGCWSER",563,0)
 N LP,TMP
"RTN","RGCWSER",564,0)
 S OFF=+$G(OFF),LP=$O(PARAMS(PARAM,1,0)),TMP=$$TMPGBL
"RTN","RGCWSER",565,0)
 I 'OFF,LP,'$O(PARAMS(PARAM,1,LP)) Q $$GBLROOT(PARAMS(PARAM,1,LP),GBL)
"RTN","RGCWSER",566,0)
 F LP=0:0 S LP=$O(PARAMS(PARAM,1,LP)) Q:'LP  D COHORT2(PARAMS(PARAM,1,LP),GBL,OFF,TMP)
"RTN","RGCWSER",567,0)
 Q TMP
"RTN","RGCWSER",568,0)
 ; Return a cohort based on a xref
"RTN","RGCWSER",569,0)
 ; IDX = Value of indexed entry
"RTN","RGCWSER",570,0)
 ; GBL = Root of xref
"RTN","RGCWSER",571,0)
 ; OFF = Offset to subscript containing IEN (defaults to 0)
"RTN","RGCWSER",572,0)
COHORT2(IDX,GBL,OFF,TMP) ;
"RTN","RGCWSER",573,0)
 S TMP=$$COHORT3($$GBLROOT(IDX,GBL),.OFF,.TMP)
"RTN","RGCWSER",574,0)
 Q:$Q TMP
"RTN","RGCWSER",575,0)
 Q
"RTN","RGCWSER",576,0)
 ; Return a cohort from a global root
"RTN","RGCWSER",577,0)
 ; GBL = Root of global
"RTN","RGCWSER",578,0)
 ; OFF = Offset to subscript containing IEN (defaults to 0)
"RTN","RGCWSER",579,0)
 ; Internal entry point
"RTN","RGCWSER",580,0)
COHORT3(GBL,OFF,TMP) ;
"RTN","RGCWSER",581,0)
 N X,L,S,I,QL
"RTN","RGCWSER",582,0)
 S:'$D(TMP) TMP=$$TMPGBL()
"RTN","RGCWSER",583,0)
 S OFF=+$G(OFF),QL=$QL(GBL)+OFF+1
"RTN","RGCWSER",584,0)
 I 'OFF M @TMP=@GBL Q
"RTN","RGCWSER",585,0)
 S X=GBL,L=$QL(X),S=""
"RTN","RGCWSER",586,0)
 F  S X=$Q(@X) Q:'$L(X)  Q:$NA(@X,L)'=GBL  D
"RTN","RGCWSER",587,0)
 .S I=$QS(X,QL)
"RTN","RGCWSER",588,0)
 .I $L(I),I'=S S S=I,@TMP@(S)=""
"RTN","RGCWSER",589,0)
 Q:$Q TMP
"RTN","RGCWSER",590,0)
 Q
"RTN","RGCWSER",591,0)
 ; Returns global root for indexed entries.
"RTN","RGCWSER",592,0)
 ; IDX = Index of entries
"RTN","RGCWSER",593,0)
 ; GBL = Global root.  If contains "*", index value is placed there.
"RTN","RGCWSER",594,0)
 ;       Otherwise, index value is placed at end.
"RTN","RGCWSER",595,0)
GBLROOT(IDX,GBL) ;
"RTN","RGCWSER",596,0)
 Q:GBL'["*" $NA(@GBL@(IDX))
"RTN","RGCWSER",597,0)
 S GBL=$P(GBL,"*")_IDX_$P(GBL,"*",2,9999)
"RTN","RGCWSER",598,0)
 Q $NA(@GBL)
"RTN","RGCWSER",599,0)
 ; Process a compartment request
"RTN","RGCWSER",600,0)
COMPRT(GBL,EXC) ;
"RTN","RGCWSER",601,0)
 D:$G(IEN) PARSEQS("_id="_IEN,.PARAMS)
"RTN","RGCWSER",602,0)
 S:'$G(EXC) GBL=$NA(@GBL@($P(PATH,"/",3)))
"RTN","RGCWSER",603,0)
 D FETCH^RGCWSER(.DATA,$P(PATH,"/")_"/"_$P(PATH,"/",4),GBL,.PNAME,.PARAMS)
"RTN","RGCWSER",604,0)
 Q
"RTN","RGCWSER",605,0)
 ; Process a compound id (#:#) selector
"RTN","RGCWSER",606,0)
COMPID D FETCH(.DATA,PATH_"_"_$P(SLCT,":"),$P(SLCT,":",2),.PNAME,.PARAMS,"S")
"RTN","RGCWSER",607,0)
 Q
"RTN","RGCWSERD")
0^9^B6264901
"RTN","RGCWSERD",1,0)
RGCWSERD ;RI/CBMI/DKM - Serialization Date Support ;10-Feb-2015 23:51;DKM
"RTN","RGCWSERD",2,0)
 ;;1.0;RGCW;;14-March-2014;Build 150
"RTN","RGCWSERD",3,0)
 ;=================================================================
"RTN","RGCWSERD",4,0)
 ; DATE = FM date/time
"RTN","RGCWSERD",5,0)
 ; FMT = Date format (follows Java spec)
"RTN","RGCWSERD",6,0)
FMTDATE(DATE,FMT) ;
"RTN","RGCWSERD",7,0)
 N X,C,I,E,Y,D,L
"RTN","RGCWSERD",8,0)
 S D=DATE+17000000*1000000000,(C,E,X)="",L=0
"RTN","RGCWSERD",9,0)
 F I=1:1:$L(FMT) D
"RTN","RGCWSERD",10,0)
 .S C=$E(FMT,I)
"RTN","RGCWSERD",11,0)
 .I C="'" D
"RTN","RGCWSERD",12,0)
 ..I $E(FMT,I+1)=C S I=I+1
"RTN","RGCWSERD",13,0)
 ..E  S L='L,C=""
"RTN","RGCWSERD",14,0)
 .I 'L,$L(C),"GyYMwWDdFEuaHkKhmsSzZX"[C D
"RTN","RGCWSERD",15,0)
 ..I $E(E)=C S E=E_C Q
"RTN","RGCWSERD",16,0)
 ..D FLUSH
"RTN","RGCWSERD",17,0)
 ..S E=C
"RTN","RGCWSERD",18,0)
 .E  D FLUSH(C)
"RTN","RGCWSERD",19,0)
 D FLUSH
"RTN","RGCWSERD",20,0)
 Q X
"RTN","RGCWSERD",21,0)
FLUSH(C) S:$L(E) X=X_$$FMT(E),E=""
"RTN","RGCWSERD",22,0)
 S:$D(C) X=X_C
"RTN","RGCWSERD",23,0)
 Q
"RTN","RGCWSERD",24,0)
PAD(V,L) N X
"RTN","RGCWSERD",25,0)
 S V=+V,P=L-$L(V)
"RTN","RGCWSERD",26,0)
 S:P>0 X="",$P(X,0,P+1)=V
"RTN","RGCWSERD",27,0)
 Q $G(X,V)
"RTN","RGCWSERD",28,0)
FMT(E) N L
"RTN","RGCWSERD",29,0)
 S L=$L(E)
"RTN","RGCWSERD",30,0)
 Q $$@("FMT"_$E(E))
"RTN","RGCWSERD",31,0)
 ; Era designator
"RTN","RGCWSERD",32,0)
FMTG() Q "AD"
"RTN","RGCWSERD",33,0)
 ; Year
"RTN","RGCWSERD",34,0)
FMTy() Q $$PAD($E(D,$S(L=2:3,1:1),4),L)
"RTN","RGCWSERD",35,0)
 ; Week year
"RTN","RGCWSERD",36,0)
FMTY() Q $$FMTy
"RTN","RGCWSERD",37,0)
 ; Month in year
"RTN","RGCWSERD",38,0)
FMTM() N M
"RTN","RGCWSERD",39,0)
 S M=+$E(D,5,6)
"RTN","RGCWSERD",40,0)
 Q:L<3 $$PAD(M,L)
"RTN","RGCWSERD",41,0)
 S M=$P("January^February^March^April^May^June^July^August^September^October^November^December",U,M)
"RTN","RGCWSERD",42,0)
 Q $S(L=3:$E(M,1,L),1:M)
"RTN","RGCWSERD",43,0)
 ; Week in year
"RTN","RGCWSERD",44,0)
FMTw() Q $$PAD($$FMTD-1\7+1,L)
"RTN","RGCWSERD",45,0)
 ; Week in month
"RTN","RGCWSERD",46,0)
FMTW() Q $$PAD($E(D,7,8)-1\7+1,L)
"RTN","RGCWSERD",47,0)
 ; Day in year
"RTN","RGCWSERD",48,0)
FMTD() Q $$PAD($$FMDIFF^XLFDT(DATE,DATE\10000*10000+101)+1,L)
"RTN","RGCWSERD",49,0)
 ; Day in month
"RTN","RGCWSERD",50,0)
FMTd() Q $$PAD($E(D,7,8),L)
"RTN","RGCWSERD",51,0)
 ; Day of week in month
"RTN","RGCWSERD",52,0)
FMTF() Q ""
"RTN","RGCWSERD",53,0)
 ; Day name in week
"RTN","RGCWSERD",54,0)
FMTE() N W
"RTN","RGCWSERD",55,0)
 S W=$$DOW^XLFDT(DATE)
"RTN","RGCWSERD",56,0)
 Q $S(L<4:$E(W,1,3),1:W)
"RTN","RGCWSERD",57,0)
 ; Day number of week (1=Monday...7=Sunday)
"RTN","RGCWSERD",58,0)
FMTu() N N
"RTN","RGCWSERD",59,0)
 S N=$$DOW^XLFDT(DATE,1)
"RTN","RGCWSERD",60,0)
 Q $$PAD($S(N=0:7,1:N),L)
"RTN","RGCWSERD",61,0)
 ; AM/PM marker
"RTN","RGCWSERD",62,0)
FMTa() Q $S($E(DATE,9,10)<12:"AM",1:"PM")
"RTN","RGCWSERD",63,0)
 ; Hour in day (0-23)
"RTN","RGCWSERD",64,0)
FMTH() Q $$PAD($E(D,9,10),L)
"RTN","RGCWSERD",65,0)
 ; Hour in day (1-24)
"RTN","RGCWSERD",66,0)
FMTk() Q $$PAD($E(D,9,10),L)
"RTN","RGCWSERD",67,0)
 ; Hour in AM/PM (0-11)
"RTN","RGCWSERD",68,0)
FMTK() N H
"RTN","RGCWSERD",69,0)
 S H=+$E(D,9,10)
"RTN","RGCWSERD",70,0)
 Q $$PAD($S(H=12:0,H=24:0,H>12:H-12,1:H),L)
"RTN","RGCWSERD",71,0)
 ; Hour in AM/PM (1-12)
"RTN","RGCWSERD",72,0)
FMTh() N H
"RTN","RGCWSERD",73,0)
 S H=+$E(D,9,10)
"RTN","RGCWSERD",74,0)
 Q $$PAD($S(H>12:H-12,1:H),L)
"RTN","RGCWSERD",75,0)
 ; Minute in hour
"RTN","RGCWSERD",76,0)
FMTm() Q $$PAD($E(D,11,12),L)
"RTN","RGCWSERD",77,0)
 ; Second in minute
"RTN","RGCWSERD",78,0)
FMTs() Q $$PAD($E(D,13,14),L)
"RTN","RGCWSERD",79,0)
 ; Millisecond
"RTN","RGCWSERD",80,0)
FMTS() Q $$PAD($E(D,15,17),L)
"RTN","RGCWSERD",81,0)
 ; Time zone (general)
"RTN","RGCWSERD",82,0)
FMTz() N TZ
"RTN","RGCWSERD",83,0)
 S TZ=$G(^XMB("TIMEZONE"))
"RTN","RGCWSERD",84,0)
 I $L(TZ),L>3 D
"RTN","RGCWSERD",85,0)
 .S TZ=$O(^XMB(4.4,"B",TZ,0)),TZ=$P($G(^XMB(4.4,+TZ,0)),U,2)
"RTN","RGCWSERD",86,0)
 .S:$L(TZ) TZ=$$TITLE^XLFSTR(TZ_" TIME")
"RTN","RGCWSERD",87,0)
 Q TZ
"RTN","RGCWSERD",88,0)
 ; Time zone (RFC 822)
"RTN","RGCWSERD",89,0)
FMTZ() Q $$TZ^XLFDT
"RTN","RGCWSERD",90,0)
 ; Time zone (ISO 8601)
"RTN","RGCWSERD",91,0)
FMTX() N TZ
"RTN","RGCWSERD",92,0)
 S TZ=$$TZ^XLFDT
"RTN","RGCWSERD",93,0)
 Q $S(L=1:$E(TZ,1,3),L=2:$E(TZ,1,5),1:$E(TZ,1,3)_":"_$E(TZ,4,5))
"SEC","^DIC",999.1,999.1,0,"AUDIT")
@
"SEC","^DIC",999.1,999.1,0,"DD")
@
"SEC","^DIC",999.1,999.1,0,"DEL")
@
"SEC","^DIC",999.1,999.1,0,"LAYGO")
@
"SEC","^DIC",999.1,999.1,0,"RD")
@
"SEC","^DIC",999.1,999.1,0,"WR")
@
"SEC","^DIC",19941.21,19941.21,0,"AUDIT")
@
"SEC","^DIC",19941.21,19941.21,0,"DD")
@
"SEC","^DIC",19941.21,19941.21,0,"DEL")
@
"SEC","^DIC",19941.21,19941.21,0,"LAYGO")
@
"SEC","^DIC",19941.21,19941.21,0,"RD")
@
"SEC","^DIC",19941.21,19941.21,0,"WR")
@
"TEMP","EC")

"TEMP","FINAL")

"TEMP","INITIAL")

"TEMP","PTRS",19941.212)
20^19941.21^19.1
"TEMP","PTRS",19941.212,"BRINGTOFRONT")

"TEMP","PTRS",19941.212,"CCOW")

"TEMP","PTRS",19941.212,"CONTEXT")

"TEMP","PTRS",19941.212,"DESKTOP.SHUTDOWN")

"TEMP","PTRS",19941.212,"DESKTOP.SHUTDOWN","RGCWF MANAGER")

"TEMP","PTRS",19941.212,"INFO")

"TEMP","PTRS",19941.212,"LOGIN")

"TEMP","PTRS",19941.212,"LOGOUT")

"TEMP","PTRS",19941.212,"MESSAGE")

"TEMP","PTRS",19941.212,"STATUS")

"TEMP","PTRS",19941.212,"SUBSCRIBE")

"TEMP","PTRS",19941.212,"TRACE")

"TEMP","PTRS",19941.212,"UNSUBSCRIBE")

"TEMP","PTRS",19941.2121)
21^19941.21^19.1
"TEMP","PTRS",19941.2121,"BRINGTOFRONT")

"TEMP","PTRS",19941.2121,"CCOW")

"TEMP","PTRS",19941.2121,"CONTEXT")

"TEMP","PTRS",19941.2121,"DESKTOP.SHUTDOWN")

"TEMP","PTRS",19941.2121,"INFO")

"TEMP","PTRS",19941.2121,"LOGIN")

"TEMP","PTRS",19941.2121,"LOGOUT")

"TEMP","PTRS",19941.2121,"MESSAGE")

"TEMP","PTRS",19941.2121,"STATUS")

"TEMP","PTRS",19941.2121,"SUBSCRIBE")

"TEMP","PTRS",19941.2121,"TRACE")

"TEMP","PTRS",19941.2121,"UNSUBSCRIBE")

"TEMP","TGT")
1
"VER")
8.0^22.0
"^DD",999.1,999.1,0)
FIELD^^10^4
"^DD",999.1,999.1,0,"DDA")
N
"^DD",999.1,999.1,0,"DT")
3150211
"^DD",999.1,999.1,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",999.1,999.1,0,"IX","B",999.1,.01)

"^DD",999.1,999.1,0,"NM","CAREWEB SERIALIZATION")

"^DD",999.1,999.1,0,"PT",999.991,.01)

"^DD",999.1,999.1,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",999.1,999.1,.01,1,0)
^.1
"^DD",999.1,999.1,.01,1,1,0)
999.1^B
"^DD",999.1,999.1,.01,1,1,1)
S ^RGCWF(999.1,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.1,.01,1,1,2)
K ^RGCWF(999.1,"B",$E(X,1,30),DA)
"^DD",999.1,999.1,.01,3)
Replace Name of the serialization type (1-30 characters).
"^DD",999.1,999.1,.01,"DT")
3150211
"^DD",999.1,999.1,1,0)
CONTENT TYPE^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",999.1,999.1,1,3)
Content type generated by this serialization type.
"^DD",999.1,999.1,1,"DT")
3150211
"^DD",999.1,999.1,2,0)
SERIALIZER^F^^0;3^K:$L(X)>10!($L(X)<1)!'(X?1.A0.AN) X
"^DD",999.1,999.1,2,3)
Name of serialization routine.
"^DD",999.1,999.1,2,"DT")
3150211
"^DD",999.1,999.1,10,0)
RESOURCE^999.11^^10;0
"^DD",999.1,999.11,0)
RESOURCE SUB-FIELD^^2^8
"^DD",999.1,999.11,0,"DT")
3150211
"^DD",999.1,999.11,0,"IX","B",999.11,.01)

"^DD",999.1,999.11,0,"IX","C",999.11,.01)

"^DD",999.1,999.11,0,"NM","RESOURCE")

"^DD",999.1,999.11,0,"UP")
999.1
"^DD",999.1,999.11,.01,0)
RESOURCE^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.11,.01,1,0)
^.1^^-1
"^DD",999.1,999.11,.01,1,1,0)
999.11^B^MUMPS
"^DD",999.1,999.11,.01,1,1,1)
S ^RGCWF(999.1,DA(1),10,"B",X,DA)=$$TOPTRN^RGCWSER(X)
"^DD",999.1,999.11,.01,1,1,2)
K ^RGCWF(999.1,DA(1),10,"B",X,DA)
"^DD",999.1,999.11,.01,1,1,"DT")
3150211
"^DD",999.1,999.11,.01,1,2,0)
999.11^C^MUMPS
"^DD",999.1,999.11,.01,1,2,1)
S ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)=""
"^DD",999.1,999.11,.01,1,2,2)
K ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)
"^DD",999.1,999.11,.01,1,2,"DT")
3150211
"^DD",999.1,999.11,.01,3)
Enter path name for the resource.
"^DD",999.1,999.11,.01,"DT")
3150211
"^DD",999.1,999.11,1,0)
INTERNAL^S^0:NO;1:YES;^0;2^Q
"^DD",999.1,999.11,1,3)
Enter YES if this is an internal resource.
"^DD",999.1,999.11,1,"DT")
3150221
"^DD",999.1,999.11,2,0)
SOURCE^NJ10,4XO^^0;3^K:'$$VFILE^DILFD(X) X
"^DD",999.1,999.11,2,2)
S Y(0)=Y S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,2.1)
S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,3)
Enter a file or subfile number.
"^DD",999.1,999.11,2,"DT")
3150211
"^DD",999.1,999.11,10,0)
CUSTOM SERIALIZER^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,10,3)
M code to invoke custom serializer.
"^DD",999.1,999.11,10,9)
@
"^DD",999.1,999.11,10,"DT")
3150211
"^DD",999.1,999.11,20,0)
CUSTOM RETRIEVAL^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,20,3)
M code to invoke custom retrieval logic.
"^DD",999.1,999.11,20,9)
@
"^DD",999.1,999.11,20,"DT")
3150211
"^DD",999.1,999.11,30,0)
PROPERTY^999.12I^^30;0
"^DD",999.1,999.11,40,0)
PARAMETER^999.13I^^40;0
"^DD",999.1,999.11,99,0)
DESCRIPTION^F^^99;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.11,99,3)
Enter brief description of this resource.
"^DD",999.1,999.11,99,"DT")
3150211
"^DD",999.1,999.12,0)
PROPERTY SUB-FIELD^^10^5
"^DD",999.1,999.12,0,"DT")
3150211
"^DD",999.1,999.12,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.12,0,"IX","ASEQ",999.12,3)

"^DD",999.1,999.12,0,"IX","B",999.12,.01)

"^DD",999.1,999.12,0,"NM","PROPERTY")

"^DD",999.1,999.12,0,"UP")
999.11
"^DD",999.1,999.12,.01,0)
PROPERTY^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.12,.01,1,0)
^.1
"^DD",999.1,999.12,.01,1,1,0)
999.12^B
"^DD",999.1,999.12,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.12,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)
"^DD",999.1,999.12,.01,3)
Property name to be used in serialization.
"^DD",999.1,999.12,.01,"DT")
3150211
"^DD",999.1,999.12,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.12,1,3)
Field name or # corresponding to this property
"^DD",999.1,999.12,1,"DT")
3150211
"^DD",999.1,999.12,2,0)
TYPE^RS^F:FREE TEXT;R:RAW;B:BOOLEAN;D:DATE;M:MULTIPLE;C:CUSTOM;O:OBJECT;W:WORD PROCESSING;I:INLINE;^0;3^Q
"^DD",999.1,999.12,2,3)
Encoding type for this property.
"^DD",999.1,999.12,2,"DT")
3150211
"^DD",999.1,999.12,3,0)
SEQUENCE^RNJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.12,3,1,0)
^.1
"^DD",999.1,999.12,3,1,1,0)
999.12^ASEQ
"^DD",999.1,999.12,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.12,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.12,3,1,1,"DT")
3150211
"^DD",999.1,999.12,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.12,3,"DT")
3150211
"^DD",999.1,999.12,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.12,10,3)
Enter control data.
"^DD",999.1,999.12,10,21,0)
^^7^7^3150211.121613
"^DD",999.1,999.12,10,21,1,0)
The format of this field depends on the value of the TYPE field.  For those
"^DD",999.1,999.12,10,21,2,0)
TYPE values not listed below, this field will be ignored.
"^DD",999.1,999.12,10,21,3,0)

"^DD",999.1,999.12,10,21,4,0)
C (Custom) - Executable M code.
"^DD",999.1,999.12,10,21,5,0)
O (Object) - Alias name of the target object.
"^DD",999.1,999.12,10,21,6,0)
M (Multiple) - Alias name of the multiple object.
"^DD",999.1,999.12,10,21,7,0)

"^DD",999.1,999.12,10,"DT")
3150211
"^DD",999.1,999.13,0)
PARAMETER SUB-FIELD^^10^6
"^DD",999.1,999.13,0,"DT")
3150211
"^DD",999.1,999.13,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.13,0,"IX","ASEQ",999.13,3)

"^DD",999.1,999.13,0,"IX","B",999.13,.01)

"^DD",999.1,999.13,0,"NM","PARAMETER")

"^DD",999.1,999.13,0,"UP")
999.11
"^DD",999.1,999.13,.01,0)
PARAMETER^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.13,.01,1,0)
^.1
"^DD",999.1,999.13,.01,1,1,0)
999.13^B
"^DD",999.1,999.13,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.13,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)
"^DD",999.1,999.13,.01,3)
Enter name of search parameter.
"^DD",999.1,999.13,.01,"DT")
3150211
"^DD",999.1,999.13,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.13,1,3)
Field name or # corresponding to this parameter.
"^DD",999.1,999.13,1,"DT")
3150211
"^DD",999.1,999.13,2,0)
TYPE^S^N:NUMBER;D:DATE;S:STRING;T:TOKEN;R:REFERENCE;Q:QUANTITY;^0;3^Q
"^DD",999.1,999.13,2,3)
Type of the search parameter.
"^DD",999.1,999.13,2,"DT")
3150211
"^DD",999.1,999.13,3,0)
SEQUENCE^NJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.13,3,1,0)
^.1
"^DD",999.1,999.13,3,1,1,0)
999.13^ASEQ
"^DD",999.1,999.13,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.13,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.13,3,1,1,"DT")
3150211
"^DD",999.1,999.13,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.13,3,"DT")
3150211
"^DD",999.1,999.13,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.13,10,3)
M code to perform filtering.
"^DD",999.1,999.13,10,"DT")
3150211
"^DD",999.1,999.13,20,0)
COHORT^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.13,20,3)
M code to set global selector into X.
"^DD",999.1,999.13,20,9)
@
"^DD",999.1,999.13,20,"DT")
3150211
"^DD",19941.1,19941.1,0)
FIELD^^4^14
"^DD",19941.1,19941.1,0,"DT")
3040920
"^DD",19941.1,19941.1,0,"IX","B",19941.1,.01)

"^DD",19941.1,19941.1,0,"NM","WEBMAN REALM")

"^DD",19941.1,19941.1,0,"VRPK")
CIAN
"^DD",19941.1,19941.1,.01,0)
REALM^RF^^0;1^K:$L(X)>100!($L(X)<3) X
"^DD",19941.1,19941.1,.01,1,0)
^.1
"^DD",19941.1,19941.1,.01,1,1,0)
19941.1^B
"^DD",19941.1,19941.1,.01,1,1,1)
S ^CIANW(19941.1,"B",$E(X,1,30),DA)=""
"^DD",19941.1,19941.1,.01,1,1,2)
K ^CIANW(19941.1,"B",$E(X,1,30),DA)
"^DD",19941.1,19941.1,.01,3)
Answer must be 3-100 characters in length.
"^DD",19941.1,19941.1,.01,21,0)
^^4^4^2971231^
"^DD",19941.1,19941.1,.01,21,1,0)
This is a unique name to be associated with this realm.  Multiple realms
"^DD",19941.1,19941.1,.01,21,2,0)
can be setup, each with its own unique TCP port.  Realms control which
"^DD",19941.1,19941.1,.01,21,3,0)
documents may be accessed, whether user authentication is required, and
"^DD",19941.1,19941.1,.01,21,4,0)
other parameters which control server operation.
"^DD",19941.1,19941.1,.01,"DT")
2960401
"^DD",19941.1,19941.1,.1,0)
SERVER IP ADDRESS^F^^0;7^K:$L(X)>20!($L(X)<5) X
"^DD",19941.1,19941.1,.1,3)
Answer must be 5-20 characters in length.
"^DD",19941.1,19941.1,.1,21,0)
^^3^3^2971231^
"^DD",19941.1,19941.1,.1,21,1,0)
This is the internet address of the node on which the server will run.
"^DD",19941.1,19941.1,.1,21,2,0)
If it is not specified, WebMan will attempt to determine the address
"^DD",19941.1,19941.1,.1,21,3,0)
at runtime.
"^DD",19941.1,19941.1,.1,"DT")
2960327
"^DD",19941.1,19941.1,.11,0)
MAIN TCP PORT^NJ10,0^^0;2^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.1,19941.1,.11,3)
Enter TCP port number for main process.
"^DD",19941.1,19941.1,.11,21,0)
^^14^14^2971231^
"^DD",19941.1,19941.1,.11,21,1,0)
This is the TCP port number to be used by the master process for this
"^DD",19941.1,19941.1,.11,21,2,0)
realm.  HTTP servers use port 80 by default, but any unassigned port
"^DD",19941.1,19941.1,.11,21,3,0)
number may be used.  Check with your network administrator for guidance.
"^DD",19941.1,19941.1,.11,21,4,0)
 
"^DD",19941.1,19941.1,.11,21,5,0)
All HTTP clients will attach to this port for their initial connection.
"^DD",19941.1,19941.1,.11,21,6,0)
If secondary ports are specified, the client will immediately be
"^DD",19941.1,19941.1,.11,21,7,0)
redirected to a free secondary port, if one is available.  If no
"^DD",19941.1,19941.1,.11,21,8,0)
secondary ports are specified, all communication between the client
"^DD",19941.1,19941.1,.11,21,9,0)
and server is done through the main port.  No other client will be able
"^DD",19941.1,19941.1,.11,21,10,0)
to connect while an active connection is in progress.
"^DD",19941.1,19941.1,.11,21,11,0)
 
"^DD",19941.1,19941.1,.11,21,12,0)
Under VMS, if this realm is being serviced by UCX then no port number
"^DD",19941.1,19941.1,.11,21,13,0)
is required.  See the WebMan documentation for information on setting
"^DD",19941.1,19941.1,.11,21,14,0)
up WebMan under UCX control.
"^DD",19941.1,19941.1,.11,"DT")
2960327
"^DD",19941.1,19941.1,.12,0)
STARTING PORT IN POOL^NJ10,0^^0;3^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.1,19941.1,.12,3)
Type a Number between 1 and 9999999999, 0 Decimal Digits
"^DD",19941.1,19941.1,.12,21,0)
^^7^7^2971231^
"^DD",19941.1,19941.1,.12,21,1,0)
This defines the first TCP port in the secondary port pool.  See the
"^DD",19941.1,19941.1,.12,21,2,0)
description of the MAIN TCP PORT field for information on port
"^DD",19941.1,19941.1,.12,21,3,0)
assignments.
"^DD",19941.1,19941.1,.12,21,4,0)
 
"^DD",19941.1,19941.1,.12,21,5,0)
While main TCP port assignments must be unique across realms, secondary
"^DD",19941.1,19941.1,.12,21,6,0)
port ranges may overlap across realms.  WebMan monitors which ports are
"^DD",19941.1,19941.1,.12,21,7,0)
in use and assigns only those ports that are free.
"^DD",19941.1,19941.1,.12,"DT")
2960327
"^DD",19941.1,19941.1,.13,0)
# PORTS IN POOL^NJ10,0^^0;4^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.1,19941.1,.13,3)
Type a Number between 1 and 9999999999, 0 Decimal Digits
"^DD",19941.1,19941.1,.13,21,0)
^^3^3^2971231^
"^DD",19941.1,19941.1,.13,21,1,0)
This defines the total number of ports in the secondary port pool.
"^DD",19941.1,19941.1,.13,21,2,0)
With field STARTING PORT IN POOL, this defines a range of ports
"^DD",19941.1,19941.1,.13,21,3,0)
which are available for use by this realm.
"^DD",19941.1,19941.1,.13,"DT")
2960327
"^DD",19941.1,19941.1,.14,0)
PRIMARY TIMEOUT^NJ10,0^^0;5^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.1,19941.1,.14,3)
Type a Number between 1 and 9999999999, 0 Decimal Digits
"^DD",19941.1,19941.1,.14,"DT")
2960328
"^DD",19941.1,19941.1,.15,0)
SECONDARY TIMEOUT^NJ10,0^^0;6^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.1,19941.1,.15,3)
Type a Number between 1 and 9999999999, 0 Decimal Digits
"^DD",19941.1,19941.1,.15,"DT")
2960328
"^DD",19941.1,19941.1,.5,0)
HOME DIRECTORY^F^^.5;E1,240^K:$L(X)>240!($L(X)<1) X
"^DD",19941.1,19941.1,.5,3)
Answer must be 1-240 characters in length.
"^DD",19941.1,19941.1,.5,21,0)
^^19^19^2971231^
"^DD",19941.1,19941.1,.5,21,1,0)
This defines the physical directory (path) which will serve as the
"^DD",19941.1,19941.1,.5,21,2,0)
logical root directory for the realm.  It should be specified in
"^DD",19941.1,19941.1,.5,21,3,0)
the format appropriate for the underlying operating system.
"^DD",19941.1,19941.1,.5,21,4,0)
 
"^DD",19941.1,19941.1,.5,21,5,0)
For example, if the operating system is OpenVMS and the value of
"^DD",19941.1,19941.1,.5,21,6,0)
this field is DISK1:[WEBMAN], then all URLs passed to this realm
"^DD",19941.1,19941.1,.5,21,7,0)
will be relative to this directory.  If the URL is:
"^DD",19941.1,19941.1,.5,21,8,0)
 
"^DD",19941.1,19941.1,.5,21,9,0)
            http://indianapolis.med.va.gov/ftp/file.zip
"^DD",19941.1,19941.1,.5,21,10,0)
 
"^DD",19941.1,19941.1,.5,21,11,0)
WebMan would look for the file in the physical directory
"^DD",19941.1,19941.1,.5,21,12,0)
 
"^DD",19941.1,19941.1,.5,21,13,0)
            DISK1:[WEBMAN.FTP]
"^DD",19941.1,19941.1,.5,21,14,0)
 
"^DD",19941.1,19941.1,.5,21,15,0)
This insures that clients can only access files within and descendant
"^DD",19941.1,19941.1,.5,21,16,0)
from the specified directory.  Of course, operating system file
"^DD",19941.1,19941.1,.5,21,17,0)
protections ultimately determine whether file access is permitted.
"^DD",19941.1,19941.1,.5,21,18,0)
It is therefore important to insure that the WebMan background processes
"^DD",19941.1,19941.1,.5,21,19,0)
have been granted access to the necessary directories and files.
"^DD",19941.1,19941.1,.5,"DT")
2960327
"^DD",19941.1,19941.1,.9,0)
SHUTDOWN SERVER?^S^0:NO;1:YES;^.9;1^Q
"^DD",19941.1,19941.1,.9,21,0)
^^5^5^2971231^
"^DD",19941.1,19941.1,.9,21,1,0)
When set to YES, any server processes (primary and secondary) are forced
"^DD",19941.1,19941.1,.9,21,2,0)
to shutdown.  This field is automatically set by the options for starting
"^DD",19941.1,19941.1,.9,21,3,0)
and stopping server processes.
"^DD",19941.1,19941.1,.9,21,4,0)
 
"^DD",19941.1,19941.1,.9,21,5,0)
This field has no effect on server processes under UCX control.
"^DD",19941.1,19941.1,.9,"DT")
2960327
"^DD",19941.1,19941.1,.91,0)
DISABLE^S^0:NO;1:YES;^.9;2^Q
"^DD",19941.1,19941.1,.91,3)
Enter yes to disable this realm.
"^DD",19941.1,19941.1,.91,"DT")
3040920
"^DD",19941.1,19941.1,1,0)
HTML^19941.101^^1;0
"^DD",19941.1,19941.1,1,"DT")
2960327
"^DD",19941.1,19941.1,2,0)
MAP^19941.102A^^2;0
"^DD",19941.1,19941.1,3,0)
CGI^19941.103^^3;0
"^DD",19941.1,19941.1,4,0)
USER AUTHENTICATION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.1,19941.1,4,3)
M code which validates a user.  Must set $T to reflect validation success/failure.
"^DD",19941.1,19941.1,4,9)
@
"^DD",19941.1,19941.1,4,21,0)
^^14^14^2971231^
"^DD",19941.1,19941.1,4,21,1,0)
This is M code that performs authentication of the client process.  If
"^DD",19941.1,19941.1,4,21,2,0)
this field is not specified, no user authentication is required. 
"^DD",19941.1,19941.1,4,21,3,0)
Otherwise, this field should contain code that sets the value of $T to
"^DD",19941.1,19941.1,4,21,4,0)
true if the user has been authenticated, or false if not.
"^DD",19941.1,19941.1,4,21,5,0)
 
"^DD",19941.1,19941.1,4,21,6,0)
Developers can create their own user database to control authentication
"^DD",19941.1,19941.1,4,21,7,0)
if they wish.  However, in most cases where authentication is desired,
"^DD",19941.1,19941.1,4,21,8,0)
it should be done against the DHCP user database.  To accomplish this,
"^DD",19941.1,19941.1,4,21,9,0)
enter the following M code in this field:
"^DD",19941.1,19941.1,4,21,10,0)
 
"^DD",19941.1,19941.1,4,21,11,0)
         I $$LOGIN^CIANWSV2(CIAUSER,CIAPASS)
"^DD",19941.1,19941.1,4,21,12,0)
 
"^DD",19941.1,19941.1,4,21,13,0)
The variables CIAUSER and CIAPASS are set up by WebMan to contain the
"^DD",19941.1,19941.1,4,21,14,0)
username and password, respectively, passed by the client.
"^DD",19941.1,19941.1,4,"DT")
2971231
"^DD",19941.1,19941.101,0)
HTML SUB-FIELD^^1^4
"^DD",19941.1,19941.101,0,"DT")
3021227
"^DD",19941.1,19941.101,0,"IX","B",19941.101,.01)

"^DD",19941.1,19941.101,0,"NM","HTML")

"^DD",19941.1,19941.101,0,"UP")
19941.1
"^DD",19941.1,19941.101,.01,0)
HTML^MRFX^^0;1^K:$L(X)>30!($L(X)<1) X S:$D(X) X=$$UP^XLFSTR(X)
"^DD",19941.1,19941.101,.01,1,0)
^.1^^-1
"^DD",19941.1,19941.101,.01,1,1,0)
19941.101^B
"^DD",19941.1,19941.101,.01,1,1,1)
S ^CIANW(19941.1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",19941.1,19941.101,.01,1,1,2)
K ^CIANW(19941.1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",19941.1,19941.101,.01,3)
Answer must be 1-30 characters in length.
"^DD",19941.1,19941.101,.01,"DT")
2960331
"^DD",19941.1,19941.101,.5,0)
FORCE REFRESH?^S^0:NO;1:YES;^0;2^Q
"^DD",19941.1,19941.101,.5,3)
If yes, the client is prevented from caching the document.
"^DD",19941.1,19941.101,.5,"DT")
2960403
"^DD",19941.1,19941.101,.6,0)
KEY^P19.1'^DIC(19.1,^0;3^Q
"^DD",19941.1,19941.101,.6,3)
Enter security key required to view document.
"^DD",19941.1,19941.101,.6,"DT")
3021227
"^DD",19941.1,19941.101,1,0)
HTML TEXT^19941.111^^1;0
"^DD",19941.1,19941.102,0)
MAP SUB-FIELD^^1^3
"^DD",19941.1,19941.102,0,"DT")
2960401
"^DD",19941.1,19941.102,0,"IX","B",19941.102,.01)

"^DD",19941.1,19941.102,0,"NM","MAP")

"^DD",19941.1,19941.102,0,"UP")
19941.1
"^DD",19941.1,19941.102,.01,0)
MAP^MFX^^0;1^K:$L(X)>30!($L(X)<1) X S:$D(X) X=$$UP^XLFSTR(X)
"^DD",19941.1,19941.102,.01,1,0)
^.1
"^DD",19941.1,19941.102,.01,1,1,0)
19941.102^B
"^DD",19941.1,19941.102,.01,1,1,1)
S ^CIANW(19941.1,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",19941.1,19941.102,.01,1,1,2)
K ^CIANW(19941.1,DA(1),2,"B",$E(X,1,30),DA)
"^DD",19941.1,19941.102,.01,3)
Answer must be 1-30 characters in length.
"^DD",19941.1,19941.102,.01,"DT")
2960331
"^DD",19941.1,19941.102,.5,0)
DEFAULT URL^RF^^2;1^K:$L(X)>250!($L(X)<1) X
"^DD",19941.1,19941.102,.5,3)
Answer must be 1-250 characters in length.
"^DD",19941.1,19941.102,.5,"DT")
2950828
"^DD",19941.1,19941.102,1,0)
URL^19941.1021I^^1;0
"^DD",19941.1,19941.1021,0)
URL SUB-FIELD^^2^3
"^DD",19941.1,19941.1021,0,"DT")
2960401
"^DD",19941.1,19941.1021,0,"IX","B",19941.1021,.01)

"^DD",19941.1,19941.1021,0,"NM","URL")

"^DD",19941.1,19941.1021,0,"UP")
19941.102
"^DD",19941.1,19941.1021,.01,0)
URL^MF^^0;1^K:$L(X)>200!($L(X)<1) X
"^DD",19941.1,19941.1021,.01,1,0)
^.1
"^DD",19941.1,19941.1021,.01,1,1,0)
19941.1021^B
"^DD",19941.1,19941.1021,.01,1,1,1)
S ^CIANW(19941.1,DA(2),2,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",19941.1,19941.1021,.01,1,1,2)
K ^CIANW(19941.1,DA(2),2,DA(1),1,"B",$E(X,1,30),DA)
"^DD",19941.1,19941.1021,.01,3)
URL to be linked to associated geometric shape.
"^DD",19941.1,19941.1021,.01,"DT")
2960401
"^DD",19941.1,19941.1021,1,0)
SHAPE^S^1:RECTANGLE;2:CIRCLE;3:POLYGON;4:POINT;^1;1^Q
"^DD",19941.1,19941.1021,1,3)
Shape describe by coordinates.
"^DD",19941.1,19941.1021,1,"DT")
2960401
"^DD",19941.1,19941.1021,2,0)
COORDINATE^F^^1;2^K:$L(X)>240!($L(X)<1) X
"^DD",19941.1,19941.1021,2,3)
XY coordinates describing the associated shape.  Format is X1,Y1;X2,Y2;...;Xn,Yn
"^DD",19941.1,19941.1021,2,"DT")
2960401
"^DD",19941.1,19941.103,0)
CGI SUB-FIELD^^2^5
"^DD",19941.1,19941.103,0,"DT")
3021227
"^DD",19941.1,19941.103,0,"IX","B",19941.103,.01)

"^DD",19941.1,19941.103,0,"NM","CGI")

"^DD",19941.1,19941.103,0,"UP")
19941.1
"^DD",19941.1,19941.103,.01,0)
CGI^MFX^^0;1^K:$L(X)>20!($L(X)<3) X S:$D(X) X=$$UP^XLFSTR(X)
"^DD",19941.1,19941.103,.01,1,0)
^.1
"^DD",19941.1,19941.103,.01,1,1,0)
19941.103^B
"^DD",19941.1,19941.103,.01,1,1,1)
S ^CIANW(19941.1,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",19941.1,19941.103,.01,1,1,2)
K ^CIANW(19941.1,DA(1),3,"B",$E(X,1,30),DA)
"^DD",19941.1,19941.103,.01,3)
Answer must be 3-20 characters in length.
"^DD",19941.1,19941.103,.01,21,0)
^^2^2^2951012.075302
"^DD",19941.1,19941.103,.01,21,1,0)
The multiple field will hold the entry points for the various data collection
"^DD",19941.1,19941.103,.01,21,2,0)
APIs.
"^DD",19941.1,19941.103,.01,"DT")
2960331
"^DD",19941.1,19941.103,.5,0)
FORCE REFRESH?^S^0:NO;1:YES;^0;2^Q
"^DD",19941.1,19941.103,.5,3)
If yes, the client is prevented from caching the document.
"^DD",19941.1,19941.103,.5,"DT")
2960403
"^DD",19941.1,19941.103,.6,0)
KEY^P19.1'^DIC(19.1,^0;3^Q
"^DD",19941.1,19941.103,.6,3)
Enter security key required to execute this script.
"^DD",19941.1,19941.103,.6,"DT")
3021227
"^DD",19941.1,19941.103,1,0)
EXECUTE CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.1,19941.103,1,3)
This is Standard MUMPS code.
"^DD",19941.1,19941.103,1,9)
@
"^DD",19941.1,19941.103,1,"DT")
2960327
"^DD",19941.1,19941.103,2,0)
PARAMETER^19941.1032^^2;0
"^DD",19941.1,19941.1032,0)
PARAMETER SUB-FIELD^^1^2
"^DD",19941.1,19941.1032,0,"DT")
2960331
"^DD",19941.1,19941.1032,0,"IX","B",19941.1032,.01)

"^DD",19941.1,19941.1032,0,"NM","PARAMETER")

"^DD",19941.1,19941.1032,0,"UP")
19941.103
"^DD",19941.1,19941.1032,.01,0)
PARAMETER^MF^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",19941.1,19941.1032,.01,1,0)
^.1
"^DD",19941.1,19941.1032,.01,1,1,0)
19941.1032^B
"^DD",19941.1,19941.1032,.01,1,1,1)
S ^CIANW(19941.1,DA(2),3,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",19941.1,19941.1032,.01,1,1,2)
K ^CIANW(19941.1,DA(2),3,DA(1),2,"B",$E(X,1,30),DA)
"^DD",19941.1,19941.1032,.01,3)
Name of CGI parameter.
"^DD",19941.1,19941.1032,.01,"DT")
2960331
"^DD",19941.1,19941.1032,1,0)
VALUE^F^^1;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",19941.1,19941.1032,1,3)
Value associated with this parameter.
"^DD",19941.1,19941.1032,1,"DT")
2960331
"^DD",19941.1,19941.111,0)
HTML TEXT SUB-FIELD^^.01^1
"^DD",19941.1,19941.111,0,"DT")
2950827
"^DD",19941.1,19941.111,0,"NM","HTML TEXT")

"^DD",19941.1,19941.111,0,"UP")
19941.101
"^DD",19941.1,19941.111,.01,0)
HTML TEXT^W^^0;1^Q
"^DD",19941.1,19941.111,.01,3)
This field will be sent to the client.
"^DD",19941.1,19941.111,.01,"DT")
2950827
"^DD",19941.21,19941.21,0)
FIELD^^7^14
"^DD",19941.21,19941.21,0,"DT")
3091007
"^DD",19941.21,19941.21,0,"IX","B",19941.21,.01)

"^DD",19941.21,19941.21,0,"NM","CIA EVENT TYPE")

"^DD",19941.21,19941.21,0,"PT",999.995,.01)

"^DD",19941.21,19941.21,0,"PT",19930.995,.01)

"^DD",19941.21,19941.21,0,"PT",19941.23,1)

"^DD",19941.21,19941.21,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19941.21,19941.21,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",19941.21,19941.21,.01,1,0)
^.1
"^DD",19941.21,19941.21,.01,1,1,0)
19941.21^B
"^DD",19941.21,19941.21,.01,1,1,1)
S ^CIANB(19941.21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.21,.01,1,1,2)
K ^CIANB(19941.21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.21,.01,3)
Answer must be 3-100 characters in length.
"^DD",19941.21,19941.21,.01,"DT")
3030611
"^DD",19941.21,19941.21,1,0)
MONITOR^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,1,3)
M code to invoke monitor for this event type
"^DD",19941.21,19941.21,1,9)
@
"^DD",19941.21,19941.21,1,"DT")
3021021
"^DD",19941.21,19941.21,2,0)
DISABLE^S^0:NO;1:YES;^0;2^Q
"^DD",19941.21,19941.21,2,3)
Enter YES to disable this event type.
"^DD",19941.21,19941.21,2,21,0)
^.001^3^3^3030810^
"^DD",19941.21,19941.21,2,21,1,0)
If set to YES, this event type is disabled.  Once disabled, any attempt to 
"^DD",19941.21,19941.21,2,21,2,0)
enqueue the event will be ignored.  Disabling an event does not affect events
"^DD",19941.21,19941.21,2,21,3,0)
already in the queue. 
"^DD",19941.21,19941.21,2,"DT")
3030810
"^DD",19941.21,19941.21,3,0)
INTERVAL^NJ11,0X^^0;3^K:X<0!(X\1'=X) X
"^DD",19941.21,19941.21,3,3)
Enter the nominal polling interval in seconds.
"^DD",19941.21,19941.21,3,21,0)
^^10^10^3021021.152235
"^DD",19941.21,19941.21,3,21,1,0)
This is the nominal polling interval for the event in seconds.
"^DD",19941.21,19941.21,3,21,2,0)
The actual polling interval is dependent on the event polling
"^DD",19941.21,19941.21,3,21,3,0)
interval set for the client application as a site parameter.
"^DD",19941.21,19941.21,3,21,4,0)
The nominal polling interval guarantees that polling for this
"^DD",19941.21,19941.21,3,21,5,0)
event will not occur more frequently than this setting.
"^DD",19941.21,19941.21,3,21,6,0)
 
"^DD",19941.21,19941.21,3,21,7,0)
For events that are infrequent and/or do not require real time
"^DD",19941.21,19941.21,3,21,8,0)
notification, higher values may be selected for this field to
"^DD",19941.21,19941.21,3,21,9,0)
mitigate impact on system load. 
"^DD",19941.21,19941.21,3,21,10,0)

"^DD",19941.21,19941.21,3,"DT")
3021021
"^DD",19941.21,19941.21,4,0)
LOG EVENT^S^0:NO;1:YES;^0;4^Q
"^DD",19941.21,19941.21,4,3)
Enter YES to enable logging of this event.
"^DD",19941.21,19941.21,4,"DT")
3030611
"^DD",19941.21,19941.21,5,0)
LOG RETENTION^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.21,19941.21,5,3)
Number of days to retain log entries.
"^DD",19941.21,19941.21,5,"DT")
3030611
"^DD",19941.21,19941.21,6,0)
POLLING METHOD^S^0:PER SESSION;1:PER INTERVAL;^0;6^Q
"^DD",19941.21,19941.21,6,3)
Determines how a monitored event is polled.
"^DD",19941.21,19941.21,6,21,0)
^^11^11^3030810.175145
"^DD",19941.21,19941.21,6,21,1,0)
For monitored events, this setting determines how the monitor is invoked
"^DD",19941.21,19941.21,6,21,2,0)
when the polling interval has been reached.  PER SESSION causes the event
"^DD",19941.21,19941.21,6,21,3,0)
monitor to be invoked for each active session, setting the user and
"^DD",19941.21,19941.21,6,21,4,0)
session context prior to each call.  PER INTERVAL cause the event monitor
"^DD",19941.21,19941.21,6,21,5,0)
to be invoked only once per interval.  No user or session context information
"^DD",19941.21,19941.21,6,21,6,0)
is available to the monitor in this case.
"^DD",19941.21,19941.21,6,21,7,0)

"^DD",19941.21,19941.21,6,21,8,0)
PER SESSION is appropriate for events that depend upon a specific user or
"^DD",19941.21,19941.21,6,21,9,0)
session (e.g., notifications).  PER INTERVAL is appropriate for events 
"^DD",19941.21,19941.21,6,21,10,0)
that are independent of a user or session (e.g., status events to display
"^DD",19941.21,19941.21,6,21,11,0)
the host date/time).
"^DD",19941.21,19941.21,6,"DT")
3030810
"^DD",19941.21,19941.21,7,0)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",19941.21,19941.21,7,12)
Restricts to Extended Action Protocols starting with CIAV
"^DD",19941.21,19941.21,7,12.1)
S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X"""
"^DD",19941.21,19941.21,7,"DT")
3091007
"^DD",19941.21,19941.21,10,0)
DISPLAY LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,10,3)
Logic to display stub info in log viewer.
"^DD",19941.21,19941.21,10,9)
@
"^DD",19941.21,19941.21,10,"DT")
3030611
"^DD",19941.21,19941.21,20,0)
PUBLICATION KEY^19941.212P^^20;0
"^DD",19941.21,19941.21,21,0)
SUBSCRIPTION KEY^19941.2121P^^21;0
"^DD",19941.21,19941.21,99,0)
DESCRIPTION^19941.2199^^99;0
"^DD",19941.21,19941.21,100,0)
ERROR DATE/TIME^D^^100;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.21,19941.21,100,3)
Date and time of last error
"^DD",19941.21,19941.21,100,"DT")
3061129
"^DD",19941.21,19941.21,101,0)
ERROR TEXT^F^^100;2^K:$L(X)>240!($L(X)<1) X
"^DD",19941.21,19941.21,101,3)
Answer must be 1-240 characters in length.
"^DD",19941.21,19941.21,101,"DT")
3061129
"^DD",19941.21,19941.212,0)
PUBLICATION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.212,0,"DT")
3021021
"^DD",19941.21,19941.212,0,"IX","B",19941.212,.01)

"^DD",19941.21,19941.212,0,"NM","PUBLICATION KEY")

"^DD",19941.21,19941.212,0,"UP")
19941.21
"^DD",19941.21,19941.212,.01,0)
PUBLICATION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.212,.01,1,0)
^.1
"^DD",19941.21,19941.212,.01,1,1,0)
19941.212^B
"^DD",19941.21,19941.212,.01,1,1,1)
S ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.212,.01,1,1,2)
K ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.212,.01,3)
Security keys required to fire this event.
"^DD",19941.21,19941.212,.01,21,0)
^^2^2^3021021.152715
"^DD",19941.21,19941.212,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.212,.01,21,2,0)
the listed keys in order to fire an event of this type.
"^DD",19941.21,19941.212,.01,"DT")
3040310
"^DD",19941.21,19941.2121,0)
SUBSCRIPTION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.2121,0,"DT")
3021021
"^DD",19941.21,19941.2121,0,"IX","B",19941.2121,.01)

"^DD",19941.21,19941.2121,0,"NM","SUBSCRIPTION KEY")

"^DD",19941.21,19941.2121,0,"UP")
19941.21
"^DD",19941.21,19941.2121,.01,0)
SUBSCRIPTION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.2121,.01,1,0)
^.1
"^DD",19941.21,19941.2121,.01,1,1,0)
19941.2121^B
"^DD",19941.21,19941.2121,.01,1,1,1)
S ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.2121,.01,1,1,2)
K ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.2121,.01,3)
Security keys required to receive this event type.
"^DD",19941.21,19941.2121,.01,21,0)
^^2^2^3021021.153002
"^DD",19941.21,19941.2121,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.2121,.01,21,2,0)
the listed keys in order subscribe to an event of this type. 
"^DD",19941.21,19941.2121,.01,"DT")
3040310
"^DD",19941.21,19941.2199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",19941.21,19941.2199,0,"DT")
3021021
"^DD",19941.21,19941.2199,0,"NM","DESCRIPTION")

"^DD",19941.21,19941.2199,0,"UP")
19941.21
"^DD",19941.21,19941.2199,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",19941.21,19941.2199,.01,3)
Enter a detailed description of this event type.
"^DD",19941.21,19941.2199,.01,"DT")
3021021
"^DIC",999.1,999.1,0)
CAREWEB SERIALIZATION^999.1
"^DIC",999.1,999.1,0,"GL")
^RGCWF(999.1,
"^DIC",999.1,999.1,"%D",0)
^^1^1^3150211.113842
"^DIC",999.1,999.1,"%D",1,0)
Supports serialization of domain objects.
"^DIC",999.1,"B","CAREWEB SERIALIZATION",999.1)

"^DIC",19941.1,19941.1,0)
WEBMAN REALM^19941.1
"^DIC",19941.1,19941.1,0,"GL")
^CIANW(19941.1,
"^DIC",19941.1,19941.1,"%",0)
^1.005^1^1
"^DIC",19941.1,19941.1,"%",1,0)
CIA
"^DIC",19941.1,19941.1,"%","B","CIA",1)

"^DIC",19941.1,"B","WEBMAN REALM",19941.1)

"^DIC",19941.21,19941.21,0)
CIA EVENT TYPE^19941.21
"^DIC",19941.21,19941.21,0,"GL")
^CIANB(19941.21,
"^DIC",19941.21,"B","CIA EVENT TYPE",19941.21)

**INSTALL NAME**
CAREWEB NOTIFICATION 1.0
"BLD",8486,0)
CAREWEB NOTIFICATION 1.0^^0^3150226^n
"BLD",8486,4,0)
^9.64PA^19941.21^4
"BLD",8486,4,999.1,0)
999.1
"BLD",8486,4,999.1,222)
n^y^f^^n^^y^o^n
"BLD",8486,4,999.1,224)
I $$SCRN^RGCWKDTP(Y,1)
"BLD",8486,4,999.201,0)
999.201
"BLD",8486,4,999.201,222)
n^y^f^^y^^y^o^n
"BLD",8486,4,999.201,224)
I $$SCRN^RGCWKDTP(Y,4)
"BLD",8486,4,999.202,0)
999.202
"BLD",8486,4,999.202,222)
y^y^f^^^^n
"BLD",8486,4,19941.21,0)
19941.21
"BLD",8486,4,19941.21,222)
n^y^f^^y^^y^o^n
"BLD",8486,4,19941.21,224)
I $$SCRN^RGCWKDTP(Y,5)
"BLD",8486,4,"B",999.1,999.1)

"BLD",8486,4,"B",999.201,999.201)

"BLD",8486,4,"B",999.202,999.202)

"BLD",8486,4,"B",19941.21,19941.21)

"BLD",8486,6.3)
115
"BLD",8486,"INI")
PRE^RGCWKDIN
"BLD",8486,"INIT")
POST^RGCWKDIN
"BLD",8486,"KRN",0)
^9.67PA^8994^20
"BLD",8486,"KRN",.4,0)
.4
"BLD",8486,"KRN",.401,0)
.401
"BLD",8486,"KRN",.402,0)
.402
"BLD",8486,"KRN",.403,0)
.403
"BLD",8486,"KRN",.5,0)
.5
"BLD",8486,"KRN",.84,0)
.84
"BLD",8486,"KRN",3.6,0)
3.6
"BLD",8486,"KRN",3.8,0)
3.8
"BLD",8486,"KRN",9.2,0)
9.2
"BLD",8486,"KRN",9.8,0)
9.8
"BLD",8486,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",8486,"KRN",9.8,"NM",1,0)
RGCWXQ^^0^B53880388
"BLD",8486,"KRN",9.8,"NM",2,0)
RGCWXQCV^^0^B1167286
"BLD",8486,"KRN",9.8,"NM","B","RGCWXQ",1)

"BLD",8486,"KRN",9.8,"NM","B","RGCWXQCV",2)

"BLD",8486,"KRN",19,0)
19
"BLD",8486,"KRN",19.1,0)
19.1
"BLD",8486,"KRN",101,0)
101
"BLD",8486,"KRN",409.61,0)
409.61
"BLD",8486,"KRN",771,0)
771
"BLD",8486,"KRN",779.2,0)
779.2
"BLD",8486,"KRN",870,0)
870
"BLD",8486,"KRN",8989.51,0)
8989.51
"BLD",8486,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",8486,"KRN",8989.52,0)
8989.52
"BLD",8486,"KRN",8994,0)
8994
"BLD",8486,"KRN",8994,"NM",0)
^9.68A^12^12
"BLD",8486,"KRN",8994,"NM",1,0)
RGCWXQ ALRLIST^^0
"BLD",8486,"KRN",8994,"NM",2,0)
RGCWXQ ALRMSG^^0
"BLD",8486,"KRN",8994,"NM",3,0)
RGCWXQ ALRPP^^0
"BLD",8486,"KRN",8994,"NM",4,0)
RGCWXQ CANCHGPT^^0
"BLD",8486,"KRN",8994,"NM",5,0)
RGCWXQ FORWARD^^0
"BLD",8486,"KRN",8994,"NM",6,0)
RGCWXQ SCHALR^^0
"BLD",8486,"KRN",8994,"NM",7,0)
RGCWXQ SCHDEL^^0
"BLD",8486,"KRN",8994,"NM",8,0)
RGCWXQ SCHLIST^^0
"BLD",8486,"KRN",8994,"NM",9,0)
RGCWXQ SCHMSG^^0
"BLD",8486,"KRN",8994,"NM",10,0)
RGCWXQ SCHRECIP^^0
"BLD",8486,"KRN",8994,"NM",11,0)
RGCWXQCV DETAIL^^0
"BLD",8486,"KRN",8994,"NM",12,0)
RGCWXQCV LIST^^0
"BLD",8486,"KRN",8994,"NM","B","RGCWXQ ALRLIST",1)

"BLD",8486,"KRN",8994,"NM","B","RGCWXQ ALRMSG",2)

"BLD",8486,"KRN",8994,"NM","B","RGCWXQ ALRPP",3)

"BLD",8486,"KRN",8994,"NM","B","RGCWXQ CANCHGPT",4)

"BLD",8486,"KRN",8994,"NM","B","RGCWXQ FORWARD",5)

"BLD",8486,"KRN",8994,"NM","B","RGCWXQ SCHALR",6)

"BLD",8486,"KRN",8994,"NM","B","RGCWXQ SCHDEL",7)

"BLD",8486,"KRN",8994,"NM","B","RGCWXQ SCHLIST",8)

"BLD",8486,"KRN",8994,"NM","B","RGCWXQ SCHMSG",9)

"BLD",8486,"KRN",8994,"NM","B","RGCWXQ SCHRECIP",10)

"BLD",8486,"KRN",8994,"NM","B","RGCWXQCV DETAIL",11)

"BLD",8486,"KRN",8994,"NM","B","RGCWXQCV LIST",12)

"BLD",8486,"KRN","B",.4,.4)

"BLD",8486,"KRN","B",.401,.401)

"BLD",8486,"KRN","B",.402,.402)

"BLD",8486,"KRN","B",.403,.403)

"BLD",8486,"KRN","B",.5,.5)

"BLD",8486,"KRN","B",.84,.84)

"BLD",8486,"KRN","B",3.6,3.6)

"BLD",8486,"KRN","B",3.8,3.8)

"BLD",8486,"KRN","B",9.2,9.2)

"BLD",8486,"KRN","B",9.8,9.8)

"BLD",8486,"KRN","B",19,19)

"BLD",8486,"KRN","B",19.1,19.1)

"BLD",8486,"KRN","B",101,101)

"BLD",8486,"KRN","B",409.61,409.61)

"BLD",8486,"KRN","B",771,771)

"BLD",8486,"KRN","B",779.2,779.2)

"BLD",8486,"KRN","B",870,870)

"BLD",8486,"KRN","B",8989.51,8989.51)

"BLD",8486,"KRN","B",8989.52,8989.52)

"BLD",8486,"KRN","B",8994,8994)

"BLD",8486,"PRE")
RGCWKDIN
"BLD",8486,"PRET")
PRETRANS^RGCWKDTP
"BLD",8486,"QUES",0)
^9.62^^
"BLD",8486,"REQB",0)
^9.611^^
"DATA",999.201,1,0)
OR
"DATA",999.201,1,1)
I $P(AID,",")="OR"
"DATA",999.201,1,2)
D ORPARSE^RGCWXQ(AID,.ALR)
"DATA",999.201,1,3)
D DEL^ORB3FUP1(,AID)
"DATA",999.201,2,0)
TIU
"DATA",999.201,2,1)
I $E(AID,1,3)="TIU"
"DATA",999.201,2,2)
D TIUPARSE^RGCWXQ(AID,.ALR)
"DATA",999.201,3,0)
RGCWXQ
"DATA",999.201,3,1)
I $E(AID,1,6)="BEHOXQ"!($E(AID,1,6)="RGCWXQ")
"DATA",999.201,3,2)
D CWFPARSE^RGCWXQ(AID,.ALR)
"DATA",999.201,3,3)
D CWFDEL^RGCWXQ(AID,1)
"DATA",19941.21,10,0)
ALERT.SCHEDULE^^60^^^1
"DATA",19941.21,10,1)
D SCHCHECK^RGCWXQ
"DATA",19941.21,26,0)
ALERT.MONITOR^0^60^^^0
"DATA",19941.21,26,1)
D ALRCHECK^RGCWXQ
"DATA",19941.21,26,99,0)
^19941.2199^1^1^3061128^^^^
"DATA",19941.21,26,99,1,0)
Used to notify client of new alerts.
"FIA",999.1)
CAREWEB SERIALIZATION
"FIA",999.1,0)
^RGCWF(999.1,
"FIA",999.1,0,0)
999.1I
"FIA",999.1,0,1)
n^y^f^^n^^y^o^n
"FIA",999.1,0,10)

"FIA",999.1,0,11)
I $$SCRN^RGCWKDTP(Y,1)
"FIA",999.1,0,"RLRO")

"FIA",999.1,999.1)
0
"FIA",999.1,999.11)
0
"FIA",999.1,999.12)
0
"FIA",999.1,999.13)
0
"FIA",999.201)
CAREWEB NOTIFICATION CONTROL
"FIA",999.201,0)
^RGCWF(999.201,
"FIA",999.201,0,0)
999.201
"FIA",999.201,0,1)
n^y^f^^y^^y^o^n
"FIA",999.201,0,10)

"FIA",999.201,0,11)
I $$SCRN^RGCWKDTP(Y,4)
"FIA",999.201,0,"RLRO")

"FIA",999.201,999.201)
0
"FIA",999.202)
CAREWEB NOTIFICATION SCHEDULING
"FIA",999.202,0)
^RGCWF(999.202,
"FIA",999.202,0,0)
999.202D
"FIA",999.202,0,1)
y^y^f^^^^n
"FIA",999.202,0,10)

"FIA",999.202,0,11)

"FIA",999.202,0,"RLRO")

"FIA",999.202,999.202)
0
"FIA",999.202,999.2021)
0
"FIA",999.202,999.2022)
0
"FIA",19941.21)
CIA EVENT TYPE
"FIA",19941.21,0)
^CIANB(19941.21,
"FIA",19941.21,0,0)
19941.21
"FIA",19941.21,0,1)
n^y^f^^y^^y^o^n
"FIA",19941.21,0,10)

"FIA",19941.21,0,11)
I $$SCRN^RGCWKDTP(Y,5)
"FIA",19941.21,0,"RLRO")

"FIA",19941.21,19941.21)
0
"FIA",19941.21,19941.212)
0
"FIA",19941.21,19941.2121)
0
"FIA",19941.21,19941.2199)
0
"INI")
PRE^RGCWKDIN
"INIT")
POST^RGCWKDIN
"KRN",8994,2631,-1)
0^12
"KRN",8994,2631,0)
RGCWXQCV LIST^LIST^RGCWXQCV^4^^^^1
"KRN",8994,2632,-1)
0^11
"KRN",8994,2632,0)
RGCWXQCV DETAIL^DETAIL^RGCWXQCV^4^^^^1
"KRN",8994,2633,-1)
0^1
"KRN",8994,2633,0)
RGCWXQ ALRLIST^ALRLIST^RGCWXQ^4^^^^1
"KRN",8994,2634,-1)
0^2
"KRN",8994,2634,0)
RGCWXQ ALRMSG^ALRMSG^RGCWXQ^4^^^^1
"KRN",8994,2635,-1)
0^3
"KRN",8994,2635,0)
RGCWXQ ALRPP^ALRPP^RGCWXQ^1
"KRN",8994,2636,-1)
0^6
"KRN",8994,2636,0)
RGCWXQ SCHALR^SCHALR^RGCWXQ^1
"KRN",8994,2637,-1)
0^7
"KRN",8994,2637,0)
RGCWXQ SCHDEL^SCHDEL^RGCWXQ^1
"KRN",8994,2638,-1)
0^8
"KRN",8994,2638,0)
RGCWXQ SCHLIST^SCHLIST^RGCWXQ^4^^^^1
"KRN",8994,2639,-1)
0^9
"KRN",8994,2639,0)
RGCWXQ SCHMSG^SCHMSG^RGCWXQ^4^^^^1
"KRN",8994,2640,-1)
0^10
"KRN",8994,2640,0)
RGCWXQ SCHRECIP^SCHRECIP^RGCWXQ^4^^^^1
"KRN",8994,2641,-1)
0^5
"KRN",8994,2641,0)
RGCWXQ FORWARD^FORWARD^RGCWXQ^1
"KRN",8994,2642,-1)
0^4
"KRN",8994,2642,0)
RGCWXQ CANCHGPT^CANCHGPT^RGCWXQ^1
"MBREQ")
1
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PGL",19941.21,0,7,7)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"PRE")
RGCWKDIN
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","RGCWKDIN")
0^^B31866196
"RTN","RGCWKDIN",1,0)
RGCKDIN ;RI/CBMI/DKM - CareWeb KIDS installation support ;02-Feb-2015 12:11;DKM
"RTN","RGCWKDIN",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 115
"RTN","RGCWKDIN",3,0)
 ; Environment check
"RTN","RGCWKDIN",4,0)
EC X $G(@XPDGREF@("EC"))
"RTN","RGCWKDIN",5,0)
 Q
"RTN","RGCWKDIN",6,0)
 ; Preinit
"RTN","RGCWKDIN",7,0)
PRE N RGX,RGY
"RTN","RGCWKDIN",8,0)
 D MES(),OBJINST,SDINIT^RGCWFUTL(,60,1)
"RTN","RGCWKDIN",9,0)
 F  D  Q:'RGX
"RTN","RGCWKDIN",10,0)
 .S RGX=$$SHOWSESS^RGCWFUTL
"RTN","RGCWKDIN",11,0)
 .R:RGX "Waiting for active sessions to terminate...",RGY:10,!!
"RTN","RGCWKDIN",12,0)
 .I RGX,RGY=U,$$ASK^RGUT("There are still active sessions.  Are you sure you want to proceed") S RGX=0
"RTN","RGCWKDIN",13,0)
 D MES("Proceeding with installation...")
"RTN","RGCWKDIN",14,0)
 D INITIAL,SAVEOPT
"RTN","RGCWKDIN",15,0)
 Q
"RTN","RGCWKDIN",16,0)
 ; Postinit
"RTN","RGCWKDIN",17,0)
POST N PAR,Y
"RTN","RGCWKDIN",18,0)
 X ^%ZOSF("EON"),^%ZOSF("TRMOFF")
"RTN","RGCWKDIN",19,0)
 D RESPTR,DEFPAR,RESTOPT,REGISTER,FINAL
"RTN","RGCWKDIN",20,0)
 W !!!
"RTN","RGCWKDIN",21,0)
 Q
"RTN","RGCWKDIN",22,0)
 ; Execute initial preinit code, if any
"RTN","RGCWKDIN",23,0)
INITIAL ; EP
"RTN","RGCWKDIN",24,0)
 X $G(@XPDGREF@("INITIAL"))
"RTN","RGCWKDIN",25,0)
 Q
"RTN","RGCWKDIN",26,0)
 ; Execute final postinit code, if any
"RTN","RGCWKDIN",27,0)
FINAL ; EP
"RTN","RGCWKDIN",28,0)
 X $G(@XPDGREF@("FINAL"))
"RTN","RGCWKDIN",29,0)
 Q
"RTN","RGCWKDIN",30,0)
 ; Initializes default parameter values.  Does not affect existing entries.
"RTN","RGCWKDIN",31,0)
DEFPAR N PAR,ENT,VAL,INST,LP,Y
"RTN","RGCWKDIN",32,0)
 D MES("Setting up default site parameters...")
"RTN","RGCWKDIN",33,0)
 F LP=0:0 S LP=$O(@XPDGREF@("PARAM",LP)) Q:'LP  K VAL M VAL=^(LP) D
"RTN","RGCWKDIN",34,0)
 .S Y=VAL,VAL=$$MSG^RGUT($P(Y,U,3,999),"|",0),PAR=$P(Y,U),INST=$P(Y,U,2)
"RTN","RGCWKDIN",35,0)
 .S ENT=$$ENT^RGCWFPAR(PAR),ENT=$P(ENT,U,$L(ENT,U))
"RTN","RGCWKDIN",36,0)
 .D:$L(ENT) ADD^XPAR(ENT,PAR,INST,.VAL)
"RTN","RGCWKDIN",37,0)
 Q
"RTN","RGCWKDIN",38,0)
 ; Delete a file or subfile
"RTN","RGCWKDIN",39,0)
 ;   DIU = File or subfile #
"RTN","RGCWKDIN",40,0)
DELFIL(DIU) ; EP
"RTN","RGCWKDIN",41,0)
 N $ET
"RTN","RGCWKDIN",42,0)
 S $ET="",@$$TRAP^RGUTOS("DELERR^RGCWKDIN")
"RTN","RGCWKDIN",43,0)
 Q:'$D(^DD(DIU))
"RTN","RGCWKDIN",44,0)
 S DIU(0)=$S($D(^DIC(DIU)):"D",1:"S")
"RTN","RGCWKDIN",45,0)
 D EN^DIU2
"RTN","RGCWKDIN",46,0)
 Q
"RTN","RGCWKDIN",47,0)
DELERR N ERR
"RTN","RGCWKDIN",48,0)
 S ERR=$$EC^%ZOSV
"RTN","RGCWKDIN",49,0)
 D MES("An error occurred deleting file #"_$G(DIU))
"RTN","RGCWKDIN",50,0)
 D MES("The error was: "_ERR)
"RTN","RGCWKDIN",51,0)
 D MES("Please delete the file manually after correcting the problem.")
"RTN","RGCWKDIN",52,0)
 Q
"RTN","RGCWKDIN",53,0)
 ; Save ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK option
"RTN","RGCWKDIN",54,0)
SAVEOPT N OPT
"RTN","RGCWKDIN",55,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",56,0)
 Q:'OPT
"RTN","RGCWKDIN",57,0)
 M @XPDGREF@("ITMSAVE")=^DIC(19,OPT,10,"B")
"RTN","RGCWKDIN",58,0)
 M @XPDGREF@("RPCSAVE")=^DIC(19,OPT,"RPC","B")
"RTN","RGCWKDIN",59,0)
 Q
"RTN","RGCWKDIN",60,0)
 ; Restore ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK
"RTN","RGCWKDIN",61,0)
RESTOPT N OPT,ITM,RPC
"RTN","RGCWKDIN",62,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",63,0)
 Q:'OPT
"RTN","RGCWKDIN",64,0)
 F ITM=0:0 S ITM=$O(@XPDGREF@("ITMSAVE",ITM)) Q:'ITM  I $$REGCTX^RGUTRPC(ITM,OPT)
"RTN","RGCWKDIN",65,0)
 F RPC=0:0 S RPC=$O(@XPDGREF@("RPCSAVE",RPC)) Q:'RPC  I $$REGRPC^RGUTRPC(RPC,OPT)
"RTN","RGCWKDIN",66,0)
 Q
"RTN","RGCWKDIN",67,0)
 ; Resolve pointers in multiples (KIDS doesn't)
"RTN","RGCWKDIN",68,0)
RESPTR ; EP
"RTN","RGCWKDIN",69,0)
 N TGT,SRC,SUB,NOD,NAM,VAL,IEN,CNT,SGB,PTR
"RTN","RGCWKDIN",70,0)
 S SUB=0
"RTN","RGCWKDIN",71,0)
 F  S SUB=$O(@XPDGREF@("PTRS",SUB)) Q:'SUB  S X=^(SUB)  D
"RTN","RGCWKDIN",72,0)
 .S NOD=+X,SRC=$P(X,U,2),TGT=$P(X,U,3),SGB=$$ROOT^DILFD(SRC,,1),NAM=""
"RTN","RGCWKDIN",73,0)
 .F  S NAM=$O(@XPDGREF@("PTRS",SUB,NAM)) Q:'$L(NAM)  D
"RTN","RGCWKDIN",74,0)
 ..S IEN=$$FIND1^DIC(SRC,"","QX",NAM),VAL="",CNT=0
"RTN","RGCWKDIN",75,0)
 ..Q:IEN'>0
"RTN","RGCWKDIN",76,0)
 ..K @SGB@(IEN,NOD)
"RTN","RGCWKDIN",77,0)
 ..F  S VAL=$O(@XPDGREF@("PTRS",SUB,NAM,VAL)) Q:'$L(VAL)  D
"RTN","RGCWKDIN",78,0)
 ...S PTR=$$FIND1^DIC(TGT,,"X",VAL)
"RTN","RGCWKDIN",79,0)
 ...I 'PTR D MES("  Failed to resolve "_VAL) Q
"RTN","RGCWKDIN",80,0)
 ...S CNT=CNT+1,@SGB@(IEN,NOD,CNT,0)=PTR,@SGB@(IEN,NOD,"B",PTR,CNT)=""
"RTN","RGCWKDIN",81,0)
 ..S:CNT @SGB@(IEN,NOD,0)=U_SUB_"P^"_CNT_U_CNT
"RTN","RGCWKDIN",82,0)
 Q
"RTN","RGCWKDIN",83,0)
 ; Check binary version against M system
"RTN","RGCWKDIN",84,0)
OBJCHK ; EP
"RTN","RGCWKDIN",85,0)
 N VER,MSYS
"RTN","RGCWKDIN",86,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",87,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",88,0)
 I '$D(VER) D
"RTN","RGCWKDIN",89,0)
 .D MES("This package contains object code that is not supported on "_MSYS_" installations.",2)
"RTN","RGCWKDIN",90,0)
 E  I VER="" D
"RTN","RGCWKDIN",91,0)
 .D MES("This package does not contain object code for this version of "_MSYS_" installations.",2)
"RTN","RGCWKDIN",92,0)
 Q
"RTN","RGCWKDIN",93,0)
 ; Get M system type and target version
"RTN","RGCWKDIN",94,0)
GETMSYS(MSYS,VER) ;
"RTN","RGCWKDIN",95,0)
 K MSYS,VER
"RTN","RGCWKDIN",96,0)
 Q:'$D(@XPDGREF@("OBJ"))
"RTN","RGCWKDIN",97,0)
 S MSYS=$$UP^XLFSTR($P($$VERSION^%ZOSV(1)," ")),MSYS(0)=$S(MSYS="CACHE":1,MSYS="JUMPS":2,1:0)
"RTN","RGCWKDIN",98,0)
 Q:'$D(@XPDGREF@("OBJ",MSYS(0)))
"RTN","RGCWKDIN",99,0)
 S VER=$TR($$VERSION^%ZOSV()," ")
"RTN","RGCWKDIN",100,0)
 F  Q:'$L(VER)  Q:$D(@XPDGREF@("OBJ",MSYS(0),VER))  S VER=$P(VER,".",1,$L(VER,".")-1)
"RTN","RGCWKDIN",101,0)
 Q
"RTN","RGCWKDIN",102,0)
 ; Install routine binaries
"RTN","RGCWKDIN",103,0)
OBJINST ; EP
"RTN","RGCWKDIN",104,0)
 N MSYS,RTN,OBJ,SUB,GBL
"RTN","RGCWKDIN",105,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",106,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",107,0)
 Q:$D(@XPDGREF@("OBJ",MSYS(0)))<10
"RTN","RGCWKDIN",108,0)
 S RTN=""
"RTN","RGCWKDIN",109,0)
 D MES("Installing routine binaries...")
"RTN","RGCWKDIN",110,0)
 F  S RTN=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN)) Q:'$L(RTN)  D
"RTN","RGCWKDIN",111,0)
 .X "ZR  ZS @RTN"
"RTN","RGCWKDIN",112,0)
 .S OBJ="",SUB=0,GBL=$NA(@$S(MSYS(0)=1:"^rOBJ(RTN)",1:"^$R(RTN,""OBJECT"")"))
"RTN","RGCWKDIN",113,0)
 .F  S SUB=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN,SUB)) Q:'SUB  S OBJ=OBJ_^(SUB,0)
"RTN","RGCWKDIN",114,0)
 .S @GBL=$S(MSYS(0)=1:$$DECODE^RGUTUU(OBJ),1:OBJ)
"RTN","RGCWKDIN",115,0)
 Q
"RTN","RGCWKDIN",116,0)
 ; Perform various registration actions
"RTN","RGCWKDIN",117,0)
REGISTER N X,CTX
"RTN","RGCWKDIN",118,0)
 S CTX=$$GETOPT^RGUTRPC("RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",119,0)
 Q:'CTX
"RTN","RGCWKDIN",120,0)
 F X="RGCW","CIAV","CIAU","DG","DDR","RGUT","BEH" D REGNMSP^RGUTRPC(X,CTX)
"RTN","RGCWKDIN",121,0)
 F X="OR CPRS GUI CHART" D DOREG(X)
"RTN","RGCWKDIN",122,0)
 Q
"RTN","RGCWKDIN",123,0)
 ; Add an option as a subcontext to CareWeb Framework
"RTN","RGCWKDIN",124,0)
 ; Remove any redundant RPC's
"RTN","RGCWKDIN",125,0)
DOREG(OPT) ;
"RTN","RGCWKDIN",126,0)
 N RPC,CNT1,CNT2,STAT,IEN
"RTN","RGCWKDIN",127,0)
 S IEN=$$GETOPT^RGUTRPC(OPT)
"RTN","RGCWKDIN",128,0)
 Q:'IEN
"RTN","RGCWKDIN",129,0)
 W !!,"Registering ",OPT," as a subcontext under RGCWF CAREWEB FRAMEWORK...",!
"RTN","RGCWKDIN",130,0)
 I $$REGCTX^RGUTRPC(IEN,CTX)
"RTN","RGCWKDIN",131,0)
 W "Removing redundant RPC references...",!
"RTN","RGCWKDIN",132,0)
 S (CNT1,CNT2)=0
"RTN","RGCWKDIN",133,0)
 F RPC=0:0 S RPC=$O(^DIC(19,IEN,"RPC","B",RPC)) Q:'RPC  D
"RTN","RGCWKDIN",134,0)
 .S STAT=$$REGRPC^RGUTRPC(RPC,CTX,1)
"RTN","RGCWKDIN",135,0)
 .Q:STAT=-1
"RTN","RGCWKDIN",136,0)
 .W $$GET1^DIQ(8994,RPC,.01)_" - "
"RTN","RGCWKDIN",137,0)
 .I STAT=1 W "Removed",! S CNT1=CNT1+1
"RTN","RGCWKDIN",138,0)
 .E  I 'STAT W "Not removed",! S CNT2=CNT2+1
"RTN","RGCWKDIN",139,0)
 W !,CNT1," remote procedure(s) removed",!
"RTN","RGCWKDIN",140,0)
 W:CNT2 CNT2," remote procedure(s) could not be removed",!!
"RTN","RGCWKDIN",141,0)
 Q
"RTN","RGCWKDIN",142,0)
 ; Check if specified routine is installed
"RTN","RGCWKDIN",143,0)
RTNTST(RTN,VN,MSG) ;
"RTN","RGCWKDIN",144,0)
 D:$$RTNVER(RTN)<VN MES(MSG_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",145,0)
 Q
"RTN","RGCWKDIN",146,0)
 ; Get version # for specified routine
"RTN","RGCWKDIN",147,0)
RTNVER(RTN) ;
"RTN","RGCWKDIN",148,0)
 Q $P($T(+2^@RTN),";",3)
"RTN","RGCWKDIN",149,0)
 ; Check patch #s for specified routine
"RTN","RGCWKDIN",150,0)
PATCH(RTN,PN,MSG) ;
"RTN","RGCWKDIN",151,0)
 N X,Y,L,F
"RTN","RGCWKDIN",152,0)
 F X=1:1:$L(PN,",") D
"RTN","RGCWKDIN",153,0)
 .S Y=$P(PN,",",X),F=0
"RTN","RGCWKDIN",154,0)
 .F L=2,3 D  Q:F
"RTN","RGCWKDIN",155,0)
 ..S F=$TR($P($T(+L^@RTN),";",5),"*",",")[(","_Y_",")
"RTN","RGCWKDIN",156,0)
 .D:'F MES(MSG_" patch #"_Y_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",157,0)
 Q
"RTN","RGCWKDIN",158,0)
 ; Display message in MSG and optionally set quit flag to QUIT
"RTN","RGCWKDIN",159,0)
MES(MSG,QUIT) ;
"RTN","RGCWKDIN",160,0)
 D BMES^XPDUTL("  "_$G(MSG))
"RTN","RGCWKDIN",161,0)
 S:$G(QUIT) XPDQUIT=QUIT
"RTN","RGCWKDIN",162,0)
 Q
"RTN","RGCWXQ")
0^1^B53880388
"RTN","RGCWXQ",1,0)
RGCWXQ ;RI/CBMI/DKM - Notification Support ;02-Feb-2015 10:15;DKM
"RTN","RGCWXQ",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 115
"RTN","RGCWXQ",3,0)
 ; RPC: Get alerts for user
"RTN","RGCWXQ",4,0)
 ;   DFN = If specified, limit alerts to only that patient
"RTN","RGCWXQ",5,0)
 ;   ST  = If specified, starting date/time for alert retrieval
"RTN","RGCWXQ",6,0)
 ;   Return format is:
"RTN","RGCWXQ",7,0)
 ;    Priority^Info Only^Patient Name^Pt Location^Display Text^Date Delivered^Sender Name^DFN^Alert Type^Alert ID^Can Delete^Extra Info
"RTN","RGCWXQ",8,0)
ALRLIST(DATA,DFN,ST) ;EP
"RTN","RGCWXQ",9,0)
 N ALX,TOT,ALL,TMP,FN,NOW,QUALS,X,X3
"RTN","RGCWXQ",10,0)
 D SETVAR^CIANBUTL("DFN",$G(DFN),"RGCWXQ")
"RTN","RGCWXQ",11,0)
 S ALL='$L($G(DFN)),DFN=+$G(DFN),(ALX,TOT)=0,TMP=$$TMPGBL^RGUTRPC,FN=999.201,NOW=$$NOW^XLFDT,ST=+$G(ST)
"RTN","RGCWXQ",12,0)
 D:'ST CLRVAR^CIANBUTL("RGCWXQ.AID")
"RTN","RGCWXQ",13,0)
 D FIXXQA(DUZ)
"RTN","RGCWXQ",14,0)
 F  S ALX=$O(^RGCWF(FN,ALX)) Q:'ALX  X $G(^(ALX,4))
"RTN","RGCWXQ",15,0)
 S ALX=0
"RTN","RGCWXQ",16,0)
 F  S ST=$O(^XTV(8992,DUZ,"XQA",ST)) Q:'ST  S X=$G(^(ST,0)),X3=$G(^(3)) D:$L(X)
"RTN","RGCWXQ",17,0)
 .S ALX=ALX+1,@TMP@(ALX)=$S(X3'="":"G  ",$P(X,U,7,8)="^ ":"I  ",1:"   ")_$P(X,U,3)_U_$P(X,U,2)_U_$P(X,U)_U_$P(X,U,10)
"RTN","RGCWXQ",18,0)
 S ALX=0
"RTN","RGCWXQ",19,0)
 F  S ALX=$O(@TMP@(ALX)) Q:'ALX  D
"RTN","RGCWXQ",20,0)
 .N ALR,ALY,ALD,ALW,ALS,AID,ALT,DFN2,INF,DEL,LOC
"RTN","RGCWXQ",21,0)
 .S ALD=$G(@TMP@(ALX)),AID=$P(ALD,U,2),ALY=$$ALRIEN(AID),ALW=$P(ALD,U,3),DEL=''$P(ALD,U,4)
"RTN","RGCWXQ",22,0)
 .Q:'ALY
"RTN","RGCWXQ",23,0)
 .X $G(^RGCWF(FN,ALY,2))
"RTN","RGCWXQ",24,0)
 .S ALT=$P(^RGCWF(FN,ALY,0),U),DFN2=+$G(ALR("DFN")),INF=''$G(ALR("INF"))
"RTN","RGCWXQ",25,0)
 .S:INF DEL=1
"RTN","RGCWXQ",26,0)
 .;I DFN2,'$$ISACTIVE^RGCWPTCX(DFN2,.QUALS) Q  ;P7
"RTN","RGCWXQ",27,0)
 .I 'ALL,DFN2,DFN'=DFN2 Q
"RTN","RGCWXQ",28,0)
 .S TOT=TOT+1,ALD=$E($P(ALD,U),4,999)
"RTN","RGCWXQ",29,0)
 .S:ALD["): " ALD=$P(ALD,"): ",2,99)
"RTN","RGCWXQ",30,0)
 .S ALR("TYP")=ALT_$S($L($G(ALR("TYP"))):"."_ALR("TYP"),1:"")
"RTN","RGCWXQ",31,0)
 .S X=+$O(^XTV(8992.1,"B",AID,0)),X3=$G(^XTV(8992.1,X,20,+$O(^XTV(8992.1,X,20,"B",DUZ,$C(1)),-1),0)),ALS=+$P(X3,U,7)
"RTN","RGCWXQ",32,0)
 .I ALS S ALW=$P(X3,U,8)  ; Alert was forwarded
"RTN","RGCWXQ",33,0)
 .E  S ALS=$P($G(^XTV(8992.1,X,0)),U,5)
"RTN","RGCWXQ",34,0)
 .S ALS=$$GET1^DIQ(200,+ALS,.01)
"RTN","RGCWXQ",35,0)
 .S X=$P($G(^DPT(DFN2,0)),U),X3=$$HRN^RGCWPTCX(DFN2)
"RTN","RGCWXQ",36,0)
 .;Added Patient Location (Room/Bed)
"RTN","RGCWXQ",37,0)
 .S LOC=$G(^DPT(DFN2,.1))_"  "_$G(^DPT(DFN2,.101))
"RTN","RGCWXQ",38,0)
 .S:$L(X3) X=X_"    ("_X3_")"
"RTN","RGCWXQ",39,0)
 .S @DATA@(DFN2,TOT)=$G(ALR("PRI"),2)_U_INF_U_X_U_LOC_U_ALD_U_ALW_U_ALS_U_DFN2_U_ALR("TYP")_U_AID_U_DEL_U_$G(ALR("XTR"))
"RTN","RGCWXQ",40,0)
 .D SETVAR^CIANBUTL(AID,1,"RGCWXQ.AID")
"RTN","RGCWXQ",41,0)
 D SETVAR^CIANBUTL("START",NOW,"RGCWXQ")
"RTN","RGCWXQ",42,0)
 K @TMP
"RTN","RGCWXQ",43,0)
 Q
"RTN","RGCWXQ",44,0)
 ; RPC: Retrieve comment and message text associated with an alert.
"RTN","RGCWXQ",45,0)
ALRMSG(DATA,AID) ;EP
"RTN","RGCWXQ",46,0)
 N CMT
"RTN","RGCWXQ",47,0)
 I $$TEST^RGUTOS("XQALGUI") D
"RTN","RGCWXQ",48,0)
 .N FNC
"RTN","RGCWXQ",49,0)
 .S FNC("XQAID")=AID,FNC("LOC")="GETLONG"
"RTN","RGCWXQ",50,0)
 .D ENTRY^XQALGUI(.DATA,.FNC)
"RTN","RGCWXQ",51,0)
 S CMT=$P($G(^XTV(8992,DUZ,"XQA",$$XTVIEN(AID),2)),U,3)
"RTN","RGCWXQ",52,0)
 S:$L(CMT) @DATA@(-2)=CMT,@DATA@(-1)=""
"RTN","RGCWXQ",53,0)
 Q
"RTN","RGCWXQ",54,0)
 ; RPC: Forward an alert
"RTN","RGCWXQ",55,0)
FORWARD(DATA,AID,USR,CMT) ;EP
"RTN","RGCWXQ",56,0)
 D FORWARD^XQALFWD(.AID,.USR,"A",$G(CMT))
"RTN","RGCWXQ",57,0)
 S DATA=0
"RTN","RGCWXQ",58,0)
 Q
"RTN","RGCWXQ",59,0)
 ; Check for new and deleted alerts
"RTN","RGCWXQ",60,0)
ALRCHECK N ST,TMP,X,Y
"RTN","RGCWXQ",61,0)
 S ST=$$GETVAR^CIANBUTL("START",0,"RGCWXQ"),TMP=$$TMPGBL^RGUTRPC(1),X=""
"RTN","RGCWXQ",62,0)
 D ALRLIST(TMP,$$GETVAR^CIANBUTL("DFN",,"RGCWXQ"),ST)
"RTN","RGCWXQ",63,0)
 F  S X=$O(@TMP@(X)),Y=0 Q:'$L(X)  D
"RTN","RGCWXQ",64,0)
 .F  S Y=$O(@TMP@(X,Y)) Q:'Y  D
"RTN","RGCWXQ",65,0)
 ..D QUEUE^CIANBEVT("ALERT.ADD",@TMP@(X,Y))
"RTN","RGCWXQ",66,0)
 K @TMP
"RTN","RGCWXQ",67,0)
 F  S X=$O(^XTMP("CIA",CIA("UID"),"V","RGCWXQ.AID",X)) Q:'$L(X)  D
"RTN","RGCWXQ",68,0)
 .Q:$D(^XTV(8992,"AXQA",X))
"RTN","RGCWXQ",69,0)
 .D QUEUE^CIANBEVT("ALERT.DELETE",X),SETVAR^CIANBUTL(X,,"RGCWXQ.AID")
"RTN","RGCWXQ",70,0)
 Q
"RTN","RGCWXQ",71,0)
 ; RPC: Alert post processing
"RTN","RGCWXQ",72,0)
ALRPP(DATA,AID) ;EP
"RTN","RGCWXQ",73,0)
 S DATA=$$ALRIEN(AID)
"RTN","RGCWXQ",74,0)
 X:DATA $G(^RGCWF(999.201,DATA,3))
"RTN","RGCWXQ",75,0)
 Q
"RTN","RGCWXQ",76,0)
 ; Return IEN of alert handler
"RTN","RGCWXQ",77,0)
ALRIEN(AID) ;
"RTN","RGCWXQ",78,0)
 N ALY,FN,IEN
"RTN","RGCWXQ",79,0)
 S (ALY,IEN)=0,FN=999.201
"RTN","RGCWXQ",80,0)
 F  S ALY=$O(^RGCWF(FN,ALY)) Q:'ALY  D  Q:IEN
"RTN","RGCWXQ",81,0)
 .I 0
"RTN","RGCWXQ",82,0)
 .X $G(^RGCWF(FN,ALY,1))
"RTN","RGCWXQ",83,0)
 .I  S IEN=ALY
"RTN","RGCWXQ",84,0)
 Q IEN
"RTN","RGCWXQ",85,0)
 ; Return IEN of alert in ALERT file
"RTN","RGCWXQ",86,0)
XTVIEN(AID) ;
"RTN","RGCWXQ",87,0)
 Q +$O(^XTV(8992,"AXQA",AID,DUZ,$C(1)),-1)
"RTN","RGCWXQ",88,0)
 ; Parse an order alert
"RTN","RGCWXQ",89,0)
ORPARSE(AID,ALR) ;
"RTN","RGCWXQ",90,0)
 N ORN,PRI
"RTN","RGCWXQ",91,0)
 S ORN=$P($P(AID,";"),",",3)
"RTN","RGCWXQ",92,0)
 D URGENCY^ORQORB(.PRI,ORN)
"RTN","RGCWXQ",93,0)
 S ALR("INF")=$P($G(^ORD(100.9,ORN,0)),U,6,7)="INFODEL^ORB3FUP2"
"RTN","RGCWXQ",94,0)
 S ALR("DFN")=+$P(AID,",",2),ALR("TYP")=+$P($P(AID,";"),",",3),ALR("PRI")=$S(PRI>0:PRI,1:2)
"RTN","RGCWXQ",95,0)
 Q
"RTN","RGCWXQ",96,0)
 ; Parse a TIU alert
"RTN","RGCWXQ",97,0)
TIUPARSE(AID,ALR) ;
"RTN","RGCWXQ",98,0)
 N X
"RTN","RGCWXQ",99,0)
 D GETALRT^TIUSRVR(.X,AID)
"RTN","RGCWXQ",100,0)
 S ALR("XTR")=$P(X,U,3),ALR("TYP")=+ALR("XTR"),ALR("DFN")=+$P(X,U,2),ALR("PRI")=2
"RTN","RGCWXQ",101,0)
 S ALR("XTR")=ALR("XTR")_U_"VSIT="_$P($G(^TIU(8925,+X,0)),U,3)
"RTN","RGCWXQ",102,0)
 Q
"RTN","RGCWXQ",103,0)
 ; Parse a CWF alert
"RTN","RGCWXQ",104,0)
CWFPARSE(AID,ALR) ;EP
"RTN","RGCWXQ",105,0)
 N XQAID,XQADATA,XQAROU,XQAOPT,X,Y,Z
"RTN","RGCWXQ",106,0)
 D GETACT^XQALERT(AID)
"RTN","RGCWXQ",107,0)
 S ALR("INF")=XQAROU="^ ",ALR("XTR")=XQADATA
"RTN","RGCWXQ",108,0)
 F Z=1:1:$L(XQADATA,U) D
"RTN","RGCWXQ",109,0)
 .S X=$P(XQADATA,U,Z),Y=$P(X,"=",2,999),X=$P(X,"=")
"RTN","RGCWXQ",110,0)
 .S:$L(X) ALR(X)=Y
"RTN","RGCWXQ",111,0)
 Q
"RTN","RGCWXQ",112,0)
 ; Delete a CWF alert
"RTN","RGCWXQ",113,0)
CWFDEL(XQAID,XQAKILL) ;EP
"RTN","RGCWXQ",114,0)
 N XQAFOUND
"RTN","RGCWXQ",115,0)
 D DELETE^XQALERT
"RTN","RGCWXQ",116,0)
 Q:$Q +$G(XQAFOUND)
"RTN","RGCWXQ",117,0)
 Q
"RTN","RGCWXQ",118,0)
 ; RPC: Schedule an alert
"RTN","RGCWXQ",119,0)
SCHALR(DATA,DAT,ID,SBJ,XTR,MSG,RCP) ;EP
"RTN","RGCWXQ",120,0)
 N FDA,ERR,SUB,X,Y
"RTN","RGCWXQ",121,0)
 S FDA=$NA(FDA(999.202,"+1,"))
"RTN","RGCWXQ",122,0)
 S @FDA@(.01)=DAT
"RTN","RGCWXQ",123,0)
 S @FDA@(1)=ID
"RTN","RGCWXQ",124,0)
 S @FDA@(2)="`"_DUZ
"RTN","RGCWXQ",125,0)
 S @FDA@(5)=$G(SBJ)
"RTN","RGCWXQ",126,0)
 S @FDA@(6)=$G(XTR)
"RTN","RGCWXQ",127,0)
 S:$D(MSG)>1 @FDA@(20)="MSG"
"RTN","RGCWXQ",128,0)
 S:'$D(RCP) RCP=DUZ
"RTN","RGCWXQ",129,0)
 S:$G(RCP) RCP(-1)=RCP
"RTN","RGCWXQ",130,0)
 S X="",Y=2
"RTN","RGCWXQ",131,0)
 F  S X=$O(RCP(X)) Q:'$L(X)  D
"RTN","RGCWXQ",132,0)
 .S RCP=RCP(X),RCP=$S('RCP:"",RCP<0:"G.`"_-RCP,1:"U.`"_RCP)
"RTN","RGCWXQ",133,0)
 .S:$L(RCP) FDA(999.2021,"+"_Y_",+1,",.01)=RCP,Y=Y+1
"RTN","RGCWXQ",134,0)
 D UPDATE^DIE("UE","FDA",,"ERR")
"RTN","RGCWXQ",135,0)
 S DATA='$D(ERR),SUB("DUZ",DUZ)=""
"RTN","RGCWXQ",136,0)
 D:DATA BRDCAST^CIANBEVT("ALERT.SCHEDULE.ADD","",.SUB)
"RTN","RGCWXQ",137,0)
 Q
"RTN","RGCWXQ",138,0)
 ; Check for scheduled alerts
"RTN","RGCWXQ",139,0)
SCHCHECK N DAT,NOW,IEN,FN
"RTN","RGCWXQ",140,0)
 S DAT=0,NOW=$$NOW^XLFDT,FN=999.202
"RTN","RGCWXQ",141,0)
 F  S DAT=$O(^RGCWF(FN,"B",DAT)),IEN=0 Q:'DAT!(DAT>NOW)  D
"RTN","RGCWXQ",142,0)
 .F  S IEN=$O(^RGCWF(FN,"B",DAT,IEN)) Q:'IEN  D
"RTN","RGCWXQ",143,0)
 ..L +^RGCWF(FN,IEN):0
"RTN","RGCWXQ",144,0)
 ..E  Q
"RTN","RGCWXQ",145,0)
 ..N X,XQA,XQAMSG,XQAOPT,XQAROU,XQAID,XQADATA,XQAFLG,XQAARCH,XQASURO,XQASUPV,XQATEXT,DUZ,RCP
"RTN","RGCWXQ",146,0)
 ..S X=$G(^RGCWF(FN,IEN,0)),XQAMSG=$G(^(5)),XQADATA=$G(^(6)),XQAID=$P(X,U,2),DUZ=$P(X,U,3),XQATEXT=$NA(^(20)),RCP="",DUZ(2)=+$$GETDIV(DUZ)  ;IHSDIV^XUS1(DUZ)
"RTN","RGCWXQ",147,0)
 ..I $$PATCH^XPDUTL("XU*8.0*285") D
"RTN","RGCWXQ",148,0)
 ...N TMP S TMP=XQATEXT
"RTN","RGCWXQ",149,0)
 ...K XQATEXT
"RTN","RGCWXQ",150,0)
 ...M XQATEXT=@TMP
"RTN","RGCWXQ",151,0)
 ..F  S RCP=$O(^RGCWF(FN,IEN,10,"B",RCP)) Q:'$L(RCP)  D
"RTN","RGCWXQ",152,0)
 ...I RCP[";VA(200," S XQA(+RCP)=""
"RTN","RGCWXQ",153,0)
 ...E  S XQA("G."_$$GET1^DIQ(3.8,+RCP,.01))=""
"RTN","RGCWXQ",154,0)
 ..D SETUP^XQALERT,SCHDEL(,IEN)
"RTN","RGCWXQ",155,0)
 ..L -^RGCWF(FN,IEN)
"RTN","RGCWXQ",156,0)
 Q
"RTN","RGCWXQ",157,0)
 ; RPC: Delete a scheduled alert
"RTN","RGCWXQ",158,0)
 ;   DATA = True if entry deleted
"RTN","RGCWXQ",159,0)
SCHDEL(DATA,IEN) ;EP
"RTN","RGCWXQ",160,0)
 N FN,SUB
"RTN","RGCWXQ",161,0)
 S FN=999.202,DATA=0,SUB("DUZ",+$P($G(^RGCWF(FN,IEN,0)),U,3))=""
"RTN","RGCWXQ",162,0)
 L +^RGCWF(FN,IEN):0
"RTN","RGCWXQ",163,0)
 E  Q
"RTN","RGCWXQ",164,0)
 D DIK(999.202,IEN)
"RTN","RGCWXQ",165,0)
 L -^RGCWF(FN,IEN)
"RTN","RGCWXQ",166,0)
 S DATA='$D(^RGCWF(FN,IEN))
"RTN","RGCWXQ",167,0)
 D:DATA BRDCAST^CIANBEVT("ALERT.SCHEDULE.DELETE",IEN,.SUB)
"RTN","RGCWXQ",168,0)
 Q
"RTN","RGCWXQ",169,0)
 ; RPC: List alerts scheduled by user.
"RTN","RGCWXQ",170,0)
 ;  ID  = Alert ID
"RTN","RGCWXQ",171,0)
 ;  USR = IEN of user (defaults to current)
"RTN","RGCWXQ",172,0)
 ;  Return format is: IEN^Date^Patient Name^Subject^Data
"RTN","RGCWXQ",173,0)
SCHLIST(DATA,ID,USR) ;EP
"RTN","RGCWXQ",174,0)
 N X,IEN,CNT,DAT,DFN,SBJ,XTR
"RTN","RGCWXQ",175,0)
 S:'$G(USR) USR=DUZ
"RTN","RGCWXQ",176,0)
 S (IEN,CNT)=0
"RTN","RGCWXQ",177,0)
 F  S IEN=$O(^RGCWF(999.202,"C",USR,IEN)) Q:'IEN  D
"RTN","RGCWXQ",178,0)
 .S X=$G(^RGCWF(999.202,IEN,0)),SBJ=$G(^(5)),XTR=$G(^(6))
"RTN","RGCWXQ",179,0)
 .Q:$P(X,U,2)'=ID
"RTN","RGCWXQ",180,0)
 .S DAT=+X,DFN=+$P(U_XTR,"^DFN=",2),CNT=CNT+1
"RTN","RGCWXQ",181,0)
 .S @DATA@(CNT)=IEN_U_DAT_U_$P($G(^DPT(DFN,0)),U)_U_SBJ_U_XTR
"RTN","RGCWXQ",182,0)
 Q
"RTN","RGCWXQ",183,0)
 ; RPC: Return list of recipients
"RTN","RGCWXQ",184,0)
SCHRECIP(DATA,IEN) ;EP
"RTN","RGCWXQ",185,0)
 N RCP,CNT,X
"RTN","RGCWXQ",186,0)
 S RCP="",CNT=0
"RTN","RGCWXQ",187,0)
 F  S RCP=$O(^RGCWF(999.202,IEN,10,"B",RCP)) Q:'$L(RCP)  D
"RTN","RGCWXQ",188,0)
 .I RCP[";VA(200," S X=+RCP_U_$$GET1^DIQ(200,+RCP,.01)
"RTN","RGCWXQ",189,0)
 .E  S X=-RCP_U_"G."_$$GET1^DIQ(3.8,+RCP,.01)
"RTN","RGCWXQ",190,0)
 .S CNT=CNT+1,@DATA@(CNT)=X
"RTN","RGCWXQ",191,0)
 Q
"RTN","RGCWXQ",192,0)
 ; RPC: Return message text associated with a scheduled alert.
"RTN","RGCWXQ",193,0)
SCHMSG(DATA,IEN) ;EP
"RTN","RGCWXQ",194,0)
 M @DATA=^RGCWF(999.202,IEN,20)
"RTN","RGCWXQ",195,0)
 K @DATA@(0)
"RTN","RGCWXQ",196,0)
 Q
"RTN","RGCWXQ",197,0)
 ; Delete a file entry
"RTN","RGCWXQ",198,0)
DIK(DIK,DA) ;EP
"RTN","RGCWXQ",199,0)
 S:DIK=+DIK DIK=$$ROOT^DILFD(DIK)
"RTN","RGCWXQ",200,0)
 D ^DIK
"RTN","RGCWXQ",201,0)
 Q
"RTN","RGCWXQ",202,0)
 ; Return true if notification type is enabled
"RTN","RGCWXQ",203,0)
 ;   ORN = IEN in OE/RR NOTIFICATION file
"RTN","RGCWXQ",204,0)
 ;   USR = Potential recipient of notification
"RTN","RGCWXQ",205,0)
ENABLED(ORN,USR) ;EP
"RTN","RGCWXQ",206,0)
 Q:'ORN 1
"RTN","RGCWXQ",207,0)
 Q:'$D(^ORD(100.9,ORN,0)) 1
"RTN","RGCWXQ",208,0)
 I $$PATCH^XPDUTL("OR*3.0*220") Q:$$GET^XPAR($$ENTITY^ORB31(ORN),"ORB SYSTEM ENABLE/DISABLE",1,"I")="D" 0
"RTN","RGCWXQ",209,0)
 E  Q:$$GET^XPAR($$ENTITY^ORB31(ORN,USR),"ORB SYSTEM ENABLE/DISABLE",1,"I")="D" 0
"RTN","RGCWXQ",210,0)
 Q $$GET^XPAR($$ENT^CIAVMRPC("ORB PROCESSING FLAG",,USR),"ORB PROCESSING FLAG",ORN)'="D"
"RTN","RGCWXQ",211,0)
 ; Fix XQA node in Alert File for user
"RTN","RGCWXQ",212,0)
FIXXQA(USER) ;
"RTN","RGCWXQ",213,0)
 I $D(^XTV(8992,USER,"XQA",0))#2,'$P(^(0),U,2) S $P(^(0),U,2)="8992.01DA"
"RTN","RGCWXQ",214,0)
 Q
"RTN","RGCWXQ",215,0)
 ; Return mail group IEN if user is a member of the specified mail group
"RTN","RGCWXQ",216,0)
 ; or indirectly through a member mail group.
"RTN","RGCWXQ",217,0)
ISMBR(MGRP,USER,EXCL) ;PEP - See comment above
"RTN","RGCWXQ",218,0)
 S USER=$G(USER,DUZ)
"RTN","RGCWXQ",219,0)
 S:MGRP'=+MGRP MGRP=$O(^XMB(3.8,"B",MGRP,0))
"RTN","RGCWXQ",220,0)
 Q:'MGRP 0
"RTN","RGCWXQ",221,0)
 Q:$D(EXCL(MGRP)) 0
"RTN","RGCWXQ",222,0)
 Q:$D(^XMB(3.8,MGRP,1,"B",USER)) MGRP
"RTN","RGCWXQ",223,0)
 N GRP
"RTN","RGCWXQ",224,0)
 S EXCL(MGRP)="",GRP=0
"RTN","RGCWXQ",225,0)
 F  S GRP=$O(^XMB(3.8,MGRP,5,"B",GRP)) Q:'GRP  Q:$$ISMBR(GRP,USER,.EXCL)
"RTN","RGCWXQ",226,0)
 Q +GRP
"RTN","RGCWXQ",227,0)
GETDIV(USR) ;EP
"RTN","RGCWXQ",228,0)
 Q:$G(DUZ("AG"))="I" $$IHSDIV^XUS1(USR)
"RTN","RGCWXQ",229,0)
 N X
"RTN","RGCWXQ",230,0)
 ; Default Division in file 200, "AX1" x-ref
"RTN","RGCWXQ",231,0)
 S X=+$O(^VA(200,USR,2,"AX1",1,0))
"RTN","RGCWXQ",232,0)
 ; If only one division get that one
"RTN","RGCWXQ",233,0)
 I 'X D
"RTN","RGCWXQ",234,0)
 .S X=+$O(^VA(200,USR,2,0))
"RTN","RGCWXQ",235,0)
 .S:$O(^VA(200,USR,2,X)) X=0
"RTN","RGCWXQ",236,0)
 Q X
"RTN","RGCWXQ",237,0)
CANCHGPT(DATA,DFN) ; EP-
"RTN","RGCWXQ",238,0)
 S DATA=$$ISACTIVE^RGCWPTCX(DFN)
"RTN","RGCWXQ",239,0)
 Q
"RTN","RGCWXQCV")
0^2^B1167286
"RTN","RGCWXQCV",1,0)
RGCWXQCV ;RI/CBMI/DKM - Cover Sheet: Alerts ;02-Feb-2015 10:15;DKM
"RTN","RGCWXQCV",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 115
"RTN","RGCWXQCV",3,0)
 ; Return alerts according to FLG:
"RTN","RGCWXQCV",4,0)
 ;  A = one patient, all users (default)
"RTN","RGCWXQCV",5,0)
 ;  U = one patient, one user
"RTN","RGCWXQCV",6,0)
 ;  P = all patients, one user
"RTN","RGCWXQCV",7,0)
LIST(DATA,DFN,FLG) ;
"RTN","RGCWXQCV",8,0)
 N GBL,LP,CNT,X,Y
"RTN","RGCWXQCV",9,0)
 S DATA=$$TMPGBL^RGUTRPC,GBL=$$TMPGBL^RGUTRPC(1)
"RTN","RGCWXQCV",10,0)
 S @DATA@(1)="^No notifications found.",(CNT,LP)=0,FLG=$G(FLG),DFN=+$G(DFN)
"RTN","RGCWXQCV",11,0)
 D PATIENT^XQALERT(GBL,DFN):"A"[FLG,USER^XQALERT(GBL,DUZ):"UP"[FLG
"RTN","RGCWXQCV",12,0)
 F  S LP=$O(@GBL@(LP)) Q:'LP  D
"RTN","RGCWXQCV",13,0)
 .S X=@GBL@(LP),Y=$P(X,U,2)
"RTN","RGCWXQCV",14,0)
 .Q:$P(Y,";")'["OR"
"RTN","RGCWXQCV",15,0)
 .Q:"AU"[FLG&($P(Y,",",2)'=DFN)
"RTN","RGCWXQCV",16,0)
 .S CNT=CNT+1,@DATA@(CNT)=Y_U_$P(X,U)_U_$P($P(Y,";"),",",2)
"RTN","RGCWXQCV",17,0)
 K @GBL
"RTN","RGCWXQCV",18,0)
 Q
"RTN","RGCWXQCV",19,0)
 ; No alert detail for now
"RTN","RGCWXQCV",20,0)
DETAIL(DATA,DFN,AID) ;
"RTN","RGCWXQCV",21,0)
 S @DATA@(1)="Detail view not yet implemented."
"RTN","RGCWXQCV",22,0)
 Q
"SEC","^DIC",999.1,999.1,0,"AUDIT")
@
"SEC","^DIC",999.1,999.1,0,"DD")
@
"SEC","^DIC",999.1,999.1,0,"DEL")
@
"SEC","^DIC",999.1,999.1,0,"LAYGO")
@
"SEC","^DIC",999.1,999.1,0,"RD")
@
"SEC","^DIC",999.1,999.1,0,"WR")
@
"SEC","^DIC",999.201,999.201,0,"AUDIT")
@
"SEC","^DIC",999.201,999.201,0,"DD")
@
"SEC","^DIC",999.201,999.201,0,"DEL")
@
"SEC","^DIC",999.201,999.201,0,"LAYGO")
@
"SEC","^DIC",999.201,999.201,0,"RD")
@
"SEC","^DIC",999.201,999.201,0,"WR")
@
"SEC","^DIC",999.202,999.202,0,"AUDIT")
@
"SEC","^DIC",999.202,999.202,0,"DD")
@
"SEC","^DIC",999.202,999.202,0,"DEL")
@
"SEC","^DIC",999.202,999.202,0,"LAYGO")
@
"SEC","^DIC",999.202,999.202,0,"RD")
@
"SEC","^DIC",999.202,999.202,0,"WR")
@
"SEC","^DIC",19941.21,19941.21,0,"AUDIT")
@
"SEC","^DIC",19941.21,19941.21,0,"DD")
@
"SEC","^DIC",19941.21,19941.21,0,"DEL")
@
"SEC","^DIC",19941.21,19941.21,0,"LAYGO")
@
"SEC","^DIC",19941.21,19941.21,0,"RD")
@
"SEC","^DIC",19941.21,19941.21,0,"WR")
@
"TEMP","EC")

"TEMP","FINAL")

"TEMP","INITIAL")

"TEMP","PTRS",19941.212)
20^19941.21^19.1
"TEMP","PTRS",19941.212,"ALERT.MONITOR")

"TEMP","PTRS",19941.212,"ALERT.SCHEDULE")

"TEMP","PTRS",19941.2121)
21^19941.21^19.1
"TEMP","PTRS",19941.2121,"ALERT.MONITOR")

"TEMP","PTRS",19941.2121,"ALERT.SCHEDULE")

"TEMP","TGT")
6
"VER")
8.0^22.0
"^DD",999.1,999.1,0)
FIELD^^10^4
"^DD",999.1,999.1,0,"DDA")
N
"^DD",999.1,999.1,0,"DT")
3150211
"^DD",999.1,999.1,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",999.1,999.1,0,"IX","B",999.1,.01)

"^DD",999.1,999.1,0,"NM","CAREWEB SERIALIZATION")

"^DD",999.1,999.1,0,"PT",999.991,.01)

"^DD",999.1,999.1,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",999.1,999.1,.01,1,0)
^.1
"^DD",999.1,999.1,.01,1,1,0)
999.1^B
"^DD",999.1,999.1,.01,1,1,1)
S ^RGCWF(999.1,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.1,.01,1,1,2)
K ^RGCWF(999.1,"B",$E(X,1,30),DA)
"^DD",999.1,999.1,.01,3)
Replace Name of the serialization type (1-30 characters).
"^DD",999.1,999.1,.01,"DT")
3150211
"^DD",999.1,999.1,1,0)
CONTENT TYPE^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",999.1,999.1,1,3)
Content type generated by this serialization type.
"^DD",999.1,999.1,1,"DT")
3150211
"^DD",999.1,999.1,2,0)
SERIALIZER^F^^0;3^K:$L(X)>10!($L(X)<1)!'(X?1.A0.AN) X
"^DD",999.1,999.1,2,3)
Name of serialization routine.
"^DD",999.1,999.1,2,"DT")
3150211
"^DD",999.1,999.1,10,0)
RESOURCE^999.11^^10;0
"^DD",999.1,999.11,0)
RESOURCE SUB-FIELD^^2^8
"^DD",999.1,999.11,0,"DT")
3150211
"^DD",999.1,999.11,0,"IX","B",999.11,.01)

"^DD",999.1,999.11,0,"IX","C",999.11,.01)

"^DD",999.1,999.11,0,"NM","RESOURCE")

"^DD",999.1,999.11,0,"UP")
999.1
"^DD",999.1,999.11,.01,0)
RESOURCE^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.11,.01,1,0)
^.1^^-1
"^DD",999.1,999.11,.01,1,1,0)
999.11^B^MUMPS
"^DD",999.1,999.11,.01,1,1,1)
S ^RGCWF(999.1,DA(1),10,"B",X,DA)=$$TOPTRN^RGCWSER(X)
"^DD",999.1,999.11,.01,1,1,2)
K ^RGCWF(999.1,DA(1),10,"B",X,DA)
"^DD",999.1,999.11,.01,1,1,"DT")
3150211
"^DD",999.1,999.11,.01,1,2,0)
999.11^C^MUMPS
"^DD",999.1,999.11,.01,1,2,1)
S ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)=""
"^DD",999.1,999.11,.01,1,2,2)
K ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)
"^DD",999.1,999.11,.01,1,2,"DT")
3150211
"^DD",999.1,999.11,.01,3)
Enter path name for the resource.
"^DD",999.1,999.11,.01,"DT")
3150211
"^DD",999.1,999.11,1,0)
INTERNAL^S^0:NO;1:YES;^0;2^Q
"^DD",999.1,999.11,1,3)
Enter YES if this is an internal resource.
"^DD",999.1,999.11,1,"DT")
3150221
"^DD",999.1,999.11,2,0)
SOURCE^NJ10,4XO^^0;3^K:'$$VFILE^DILFD(X) X
"^DD",999.1,999.11,2,2)
S Y(0)=Y S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,2.1)
S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,3)
Enter a file or subfile number.
"^DD",999.1,999.11,2,"DT")
3150211
"^DD",999.1,999.11,10,0)
CUSTOM SERIALIZER^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,10,3)
M code to invoke custom serializer.
"^DD",999.1,999.11,10,9)
@
"^DD",999.1,999.11,10,"DT")
3150211
"^DD",999.1,999.11,20,0)
CUSTOM RETRIEVAL^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,20,3)
M code to invoke custom retrieval logic.
"^DD",999.1,999.11,20,9)
@
"^DD",999.1,999.11,20,"DT")
3150211
"^DD",999.1,999.11,30,0)
PROPERTY^999.12I^^30;0
"^DD",999.1,999.11,40,0)
PARAMETER^999.13I^^40;0
"^DD",999.1,999.11,99,0)
DESCRIPTION^F^^99;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.11,99,3)
Enter brief description of this resource.
"^DD",999.1,999.11,99,"DT")
3150211
"^DD",999.1,999.12,0)
PROPERTY SUB-FIELD^^10^5
"^DD",999.1,999.12,0,"DT")
3150211
"^DD",999.1,999.12,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.12,0,"IX","ASEQ",999.12,3)

"^DD",999.1,999.12,0,"IX","B",999.12,.01)

"^DD",999.1,999.12,0,"NM","PROPERTY")

"^DD",999.1,999.12,0,"UP")
999.11
"^DD",999.1,999.12,.01,0)
PROPERTY^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.12,.01,1,0)
^.1
"^DD",999.1,999.12,.01,1,1,0)
999.12^B
"^DD",999.1,999.12,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.12,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)
"^DD",999.1,999.12,.01,3)
Property name to be used in serialization.
"^DD",999.1,999.12,.01,"DT")
3150211
"^DD",999.1,999.12,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.12,1,3)
Field name or # corresponding to this property
"^DD",999.1,999.12,1,"DT")
3150211
"^DD",999.1,999.12,2,0)
TYPE^RS^F:FREE TEXT;R:RAW;B:BOOLEAN;D:DATE;M:MULTIPLE;C:CUSTOM;O:OBJECT;W:WORD PROCESSING;I:INLINE;^0;3^Q
"^DD",999.1,999.12,2,3)
Encoding type for this property.
"^DD",999.1,999.12,2,"DT")
3150211
"^DD",999.1,999.12,3,0)
SEQUENCE^RNJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.12,3,1,0)
^.1
"^DD",999.1,999.12,3,1,1,0)
999.12^ASEQ
"^DD",999.1,999.12,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.12,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.12,3,1,1,"DT")
3150211
"^DD",999.1,999.12,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.12,3,"DT")
3150211
"^DD",999.1,999.12,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.12,10,3)
Enter control data.
"^DD",999.1,999.12,10,21,0)
^^7^7^3150211.121613
"^DD",999.1,999.12,10,21,1,0)
The format of this field depends on the value of the TYPE field.  For those
"^DD",999.1,999.12,10,21,2,0)
TYPE values not listed below, this field will be ignored.
"^DD",999.1,999.12,10,21,3,0)

"^DD",999.1,999.12,10,21,4,0)
C (Custom) - Executable M code.
"^DD",999.1,999.12,10,21,5,0)
O (Object) - Alias name of the target object.
"^DD",999.1,999.12,10,21,6,0)
M (Multiple) - Alias name of the multiple object.
"^DD",999.1,999.12,10,21,7,0)

"^DD",999.1,999.12,10,"DT")
3150211
"^DD",999.1,999.13,0)
PARAMETER SUB-FIELD^^10^6
"^DD",999.1,999.13,0,"DT")
3150211
"^DD",999.1,999.13,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.13,0,"IX","ASEQ",999.13,3)

"^DD",999.1,999.13,0,"IX","B",999.13,.01)

"^DD",999.1,999.13,0,"NM","PARAMETER")

"^DD",999.1,999.13,0,"UP")
999.11
"^DD",999.1,999.13,.01,0)
PARAMETER^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.13,.01,1,0)
^.1
"^DD",999.1,999.13,.01,1,1,0)
999.13^B
"^DD",999.1,999.13,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.13,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)
"^DD",999.1,999.13,.01,3)
Enter name of search parameter.
"^DD",999.1,999.13,.01,"DT")
3150211
"^DD",999.1,999.13,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.13,1,3)
Field name or # corresponding to this parameter.
"^DD",999.1,999.13,1,"DT")
3150211
"^DD",999.1,999.13,2,0)
TYPE^S^N:NUMBER;D:DATE;S:STRING;T:TOKEN;R:REFERENCE;Q:QUANTITY;^0;3^Q
"^DD",999.1,999.13,2,3)
Type of the search parameter.
"^DD",999.1,999.13,2,"DT")
3150211
"^DD",999.1,999.13,3,0)
SEQUENCE^NJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.13,3,1,0)
^.1
"^DD",999.1,999.13,3,1,1,0)
999.13^ASEQ
"^DD",999.1,999.13,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.13,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.13,3,1,1,"DT")
3150211
"^DD",999.1,999.13,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.13,3,"DT")
3150211
"^DD",999.1,999.13,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.13,10,3)
M code to perform filtering.
"^DD",999.1,999.13,10,"DT")
3150211
"^DD",999.1,999.13,20,0)
COHORT^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.13,20,3)
M code to set global selector into X.
"^DD",999.1,999.13,20,9)
@
"^DD",999.1,999.13,20,"DT")
3150211
"^DD",999.201,999.201,0)
FIELD^^4^5
"^DD",999.201,999.201,0,"IX","B",999.201,.01)

"^DD",999.201,999.201,0,"NM","CAREWEB NOTIFICATION CONTROL")

"^DD",999.201,999.201,0,"PT",999.994,.01)

"^DD",999.201,999.201,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<2)!'(X'?1P.E) X
"^DD",999.201,999.201,.01,1,0)
^.1
"^DD",999.201,999.201,.01,1,1,0)
999.201^B
"^DD",999.201,999.201,.01,1,1,1)
S ^RGCWF(999.201,"B",$E(X,1,30),DA)=""
"^DD",999.201,999.201,.01,1,1,2)
K ^RGCWF(999.201,"B",$E(X,1,30),DA)
"^DD",999.201,999.201,.01,3)
Answer must be 2-30 characters in length.
"^DD",999.201,999.201,.01,"DT")
3030805
"^DD",999.201,999.201,1,0)
IDENT^RK^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,1,3)
Code to check notification identity.  Set $T to true for positive match.
"^DD",999.201,999.201,1,9)
@
"^DD",999.201,999.201,1,21,0)
^^1^1^3030804.150811
"^DD",999.201,999.201,1,21,1,0)
Should check the notification identifier in AID and set $T to true if a match.
"^DD",999.201,999.201,1,"DT")
3030804
"^DD",999.201,999.201,2,0)
PARSE^RK^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,2,3)
Code to parse data elements from notification.
"^DD",999.201,999.201,2,9)
@
"^DD",999.201,999.201,2,21,0)
^^8^8^3030804.170957
"^DD",999.201,999.201,2,21,1,0)
Code to parse standard data elements from notification.  Elements should be
"^DD",999.201,999.201,2,21,2,0)
returned in ALR array as follows:
"^DD",999.201,999.201,2,21,3,0)

"^DD",999.201,999.201,2,21,4,0)
ALR("DFN")=Patient IEN (if patient-orientation)
"^DD",999.201,999.201,2,21,5,0)
ALR("INF")=Info only flag
"^DD",999.201,999.201,2,21,6,0)
ALR("TYP")=Notification type code
"^DD",999.201,999.201,2,21,7,0)
ALR("PRI")=Priority code
"^DD",999.201,999.201,2,21,8,0)
ALR("XTR")=Additional data
"^DD",999.201,999.201,2,"DT")
3030804
"^DD",999.201,999.201,3,0)
PROCESS^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,3,3)
Post processing logic for alert.
"^DD",999.201,999.201,3,9)
@
"^DD",999.201,999.201,3,"DT")
3030805
"^DD",999.201,999.201,4,0)
UPDATE^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,4,3)
Optional logic to update alerts for current user.
"^DD",999.201,999.201,4,9)
@
"^DD",999.201,999.201,4,21,0)
^^2^2^3080128.135828
"^DD",999.201,999.201,4,21,1,0)
This logic provides the opportunity to update alerts (add or delete) 
"^DD",999.201,999.201,4,21,2,0)
for the current user prior to retrieving them.
"^DD",999.201,999.201,4,"DT")
3080128
"^DD",999.202,999.202,0)
FIELD^^20^7
"^DD",999.202,999.202,0,"IX","B",999.202,.01)

"^DD",999.202,999.202,0,"IX","C",999.202,2)

"^DD",999.202,999.202,0,"NM","CAREWEB NOTIFICATION SCHEDULING")

"^DD",999.202,999.202,.01,0)
DATETIME^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",999.202,999.202,.01,1,0)
^.1
"^DD",999.202,999.202,.01,1,1,0)
999.202^B
"^DD",999.202,999.202,.01,1,1,1)
S ^RGCWF(999.202,"B",$E(X,1,30),DA)=""
"^DD",999.202,999.202,.01,1,1,2)
K ^RGCWF(999.202,"B",$E(X,1,30),DA)
"^DD",999.202,999.202,.01,3)
Time alert is to be activated.
"^DD",999.202,999.202,.01,"DT")
3030804
"^DD",999.202,999.202,1,0)
ID^F^^0;2^K:$L(X)>8!($L(X)<2)!'(X?2.8A) X
"^DD",999.202,999.202,1,3)
Answer must be 2-8 characters in length.
"^DD",999.202,999.202,1,"DT")
3030804
"^DD",999.202,999.202,2,0)
SENDER^P200'^VA(200,^0;3^Q
"^DD",999.202,999.202,2,1,0)
^.1
"^DD",999.202,999.202,2,1,1,0)
999.202^C
"^DD",999.202,999.202,2,1,1,1)
S ^RGCWF(999.202,"C",$E(X,1,30),DA)=""
"^DD",999.202,999.202,2,1,1,2)
K ^RGCWF(999.202,"C",$E(X,1,30),DA)
"^DD",999.202,999.202,2,1,1,"DT")
3030807
"^DD",999.202,999.202,2,3)
Sender of this alert.
"^DD",999.202,999.202,2,"DT")
3030807
"^DD",999.202,999.202,5,0)
SUBJECT^F^^5;1^K:$L(X)>80!($L(X)<1) X
"^DD",999.202,999.202,5,3)
Answer must be 1-80 characters in length.
"^DD",999.202,999.202,5,"DT")
3030807
"^DD",999.202,999.202,6,0)
DATA^F^^6;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.202,999.202,6,3)
Control data associated with the alert.
"^DD",999.202,999.202,6,"DT")
3030804
"^DD",999.202,999.202,10,0)
RECIPIENT^999.2021V^^10;0
"^DD",999.202,999.202,20,0)
MESSAGE^999.2022^^20;0
"^DD",999.202,999.2021,0)
RECIPIENT SUB-FIELD^^.01^1
"^DD",999.202,999.2021,0,"IX","B",999.2021,.01)

"^DD",999.202,999.2021,0,"NM","RECIPIENT")

"^DD",999.202,999.2021,0,"UP")
999.202
"^DD",999.202,999.2021,.01,0)
RECIPIENT^MV^^0;1^Q
"^DD",999.202,999.2021,.01,1,0)
^.1
"^DD",999.202,999.2021,.01,1,1,0)
999.2021^B
"^DD",999.202,999.2021,.01,1,1,1)
S ^RGCWF(999.202,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",999.202,999.2021,.01,1,1,2)
K ^RGCWF(999.202,DA(1),10,"B",$E(X,1,30),DA)
"^DD",999.202,999.2021,.01,1,1,3)
Required Index for Variable Pointer
"^DD",999.202,999.2021,.01,3)
Intended recipients for this alert.
"^DD",999.202,999.2021,.01,"DT")
3030808
"^DD",999.202,999.2021,.01,"V",0)
^.12P^2^2
"^DD",999.202,999.2021,.01,"V",1,0)
200^Enter a user^1^U^n^n
"^DD",999.202,999.2021,.01,"V",2,0)
3.8^Enter a mail group^2^G^y^n
"^DD",999.202,999.2021,.01,"V",2,1)
S DIC("S")="I $P(^(0),U,2)'=""PR""!$D(^XMB(3.8,""AB"",DUZ,Y))"
"^DD",999.202,999.2021,.01,"V",2,2)
Public mailgroups only
"^DD",999.202,999.2022,0)
MESSAGE SUB-FIELD^^.01^1
"^DD",999.202,999.2022,0,"NM","MESSAGE")

"^DD",999.202,999.2022,0,"UP")
999.202
"^DD",999.202,999.2022,.01,0)
MESSAGE^W^^0;1^Q
"^DD",999.202,999.2022,.01,3)
Message associated with the alert.
"^DD",999.202,999.2022,.01,"DT")
3030807
"^DD",19941.21,19941.21,0)
FIELD^^7^14
"^DD",19941.21,19941.21,0,"DT")
3091007
"^DD",19941.21,19941.21,0,"IX","B",19941.21,.01)

"^DD",19941.21,19941.21,0,"NM","CIA EVENT TYPE")

"^DD",19941.21,19941.21,0,"PT",999.995,.01)

"^DD",19941.21,19941.21,0,"PT",19930.995,.01)

"^DD",19941.21,19941.21,0,"PT",19941.23,1)

"^DD",19941.21,19941.21,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19941.21,19941.21,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",19941.21,19941.21,.01,1,0)
^.1
"^DD",19941.21,19941.21,.01,1,1,0)
19941.21^B
"^DD",19941.21,19941.21,.01,1,1,1)
S ^CIANB(19941.21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.21,.01,1,1,2)
K ^CIANB(19941.21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.21,.01,3)
Answer must be 3-100 characters in length.
"^DD",19941.21,19941.21,.01,"DT")
3030611
"^DD",19941.21,19941.21,1,0)
MONITOR^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,1,3)
M code to invoke monitor for this event type
"^DD",19941.21,19941.21,1,9)
@
"^DD",19941.21,19941.21,1,"DT")
3021021
"^DD",19941.21,19941.21,2,0)
DISABLE^S^0:NO;1:YES;^0;2^Q
"^DD",19941.21,19941.21,2,3)
Enter YES to disable this event type.
"^DD",19941.21,19941.21,2,21,0)
^.001^3^3^3030810^
"^DD",19941.21,19941.21,2,21,1,0)
If set to YES, this event type is disabled.  Once disabled, any attempt to 
"^DD",19941.21,19941.21,2,21,2,0)
enqueue the event will be ignored.  Disabling an event does not affect events
"^DD",19941.21,19941.21,2,21,3,0)
already in the queue. 
"^DD",19941.21,19941.21,2,"DT")
3030810
"^DD",19941.21,19941.21,3,0)
INTERVAL^NJ11,0X^^0;3^K:X<0!(X\1'=X) X
"^DD",19941.21,19941.21,3,3)
Enter the nominal polling interval in seconds.
"^DD",19941.21,19941.21,3,21,0)
^^10^10^3021021.152235
"^DD",19941.21,19941.21,3,21,1,0)
This is the nominal polling interval for the event in seconds.
"^DD",19941.21,19941.21,3,21,2,0)
The actual polling interval is dependent on the event polling
"^DD",19941.21,19941.21,3,21,3,0)
interval set for the client application as a site parameter.
"^DD",19941.21,19941.21,3,21,4,0)
The nominal polling interval guarantees that polling for this
"^DD",19941.21,19941.21,3,21,5,0)
event will not occur more frequently than this setting.
"^DD",19941.21,19941.21,3,21,6,0)
 
"^DD",19941.21,19941.21,3,21,7,0)
For events that are infrequent and/or do not require real time
"^DD",19941.21,19941.21,3,21,8,0)
notification, higher values may be selected for this field to
"^DD",19941.21,19941.21,3,21,9,0)
mitigate impact on system load. 
"^DD",19941.21,19941.21,3,21,10,0)

"^DD",19941.21,19941.21,3,"DT")
3021021
"^DD",19941.21,19941.21,4,0)
LOG EVENT^S^0:NO;1:YES;^0;4^Q
"^DD",19941.21,19941.21,4,3)
Enter YES to enable logging of this event.
"^DD",19941.21,19941.21,4,"DT")
3030611
"^DD",19941.21,19941.21,5,0)
LOG RETENTION^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.21,19941.21,5,3)
Number of days to retain log entries.
"^DD",19941.21,19941.21,5,"DT")
3030611
"^DD",19941.21,19941.21,6,0)
POLLING METHOD^S^0:PER SESSION;1:PER INTERVAL;^0;6^Q
"^DD",19941.21,19941.21,6,3)
Determines how a monitored event is polled.
"^DD",19941.21,19941.21,6,21,0)
^^11^11^3030810.175145
"^DD",19941.21,19941.21,6,21,1,0)
For monitored events, this setting determines how the monitor is invoked
"^DD",19941.21,19941.21,6,21,2,0)
when the polling interval has been reached.  PER SESSION causes the event
"^DD",19941.21,19941.21,6,21,3,0)
monitor to be invoked for each active session, setting the user and
"^DD",19941.21,19941.21,6,21,4,0)
session context prior to each call.  PER INTERVAL cause the event monitor
"^DD",19941.21,19941.21,6,21,5,0)
to be invoked only once per interval.  No user or session context information
"^DD",19941.21,19941.21,6,21,6,0)
is available to the monitor in this case.
"^DD",19941.21,19941.21,6,21,7,0)

"^DD",19941.21,19941.21,6,21,8,0)
PER SESSION is appropriate for events that depend upon a specific user or
"^DD",19941.21,19941.21,6,21,9,0)
session (e.g., notifications).  PER INTERVAL is appropriate for events 
"^DD",19941.21,19941.21,6,21,10,0)
that are independent of a user or session (e.g., status events to display
"^DD",19941.21,19941.21,6,21,11,0)
the host date/time).
"^DD",19941.21,19941.21,6,"DT")
3030810
"^DD",19941.21,19941.21,7,0)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",19941.21,19941.21,7,12)
Restricts to Extended Action Protocols starting with CIAV
"^DD",19941.21,19941.21,7,12.1)
S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X"""
"^DD",19941.21,19941.21,7,"DT")
3091007
"^DD",19941.21,19941.21,10,0)
DISPLAY LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,10,3)
Logic to display stub info in log viewer.
"^DD",19941.21,19941.21,10,9)
@
"^DD",19941.21,19941.21,10,"DT")
3030611
"^DD",19941.21,19941.21,20,0)
PUBLICATION KEY^19941.212P^^20;0
"^DD",19941.21,19941.21,21,0)
SUBSCRIPTION KEY^19941.2121P^^21;0
"^DD",19941.21,19941.21,99,0)
DESCRIPTION^19941.2199^^99;0
"^DD",19941.21,19941.21,100,0)
ERROR DATE/TIME^D^^100;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.21,19941.21,100,3)
Date and time of last error
"^DD",19941.21,19941.21,100,"DT")
3061129
"^DD",19941.21,19941.21,101,0)
ERROR TEXT^F^^100;2^K:$L(X)>240!($L(X)<1) X
"^DD",19941.21,19941.21,101,3)
Answer must be 1-240 characters in length.
"^DD",19941.21,19941.21,101,"DT")
3061129
"^DD",19941.21,19941.212,0)
PUBLICATION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.212,0,"DT")
3021021
"^DD",19941.21,19941.212,0,"IX","B",19941.212,.01)

"^DD",19941.21,19941.212,0,"NM","PUBLICATION KEY")

"^DD",19941.21,19941.212,0,"UP")
19941.21
"^DD",19941.21,19941.212,.01,0)
PUBLICATION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.212,.01,1,0)
^.1
"^DD",19941.21,19941.212,.01,1,1,0)
19941.212^B
"^DD",19941.21,19941.212,.01,1,1,1)
S ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.212,.01,1,1,2)
K ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.212,.01,3)
Security keys required to fire this event.
"^DD",19941.21,19941.212,.01,21,0)
^^2^2^3021021.152715
"^DD",19941.21,19941.212,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.212,.01,21,2,0)
the listed keys in order to fire an event of this type.
"^DD",19941.21,19941.212,.01,"DT")
3040310
"^DD",19941.21,19941.2121,0)
SUBSCRIPTION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.2121,0,"DT")
3021021
"^DD",19941.21,19941.2121,0,"IX","B",19941.2121,.01)

"^DD",19941.21,19941.2121,0,"NM","SUBSCRIPTION KEY")

"^DD",19941.21,19941.2121,0,"UP")
19941.21
"^DD",19941.21,19941.2121,.01,0)
SUBSCRIPTION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.2121,.01,1,0)
^.1
"^DD",19941.21,19941.2121,.01,1,1,0)
19941.2121^B
"^DD",19941.21,19941.2121,.01,1,1,1)
S ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.2121,.01,1,1,2)
K ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.2121,.01,3)
Security keys required to receive this event type.
"^DD",19941.21,19941.2121,.01,21,0)
^^2^2^3021021.153002
"^DD",19941.21,19941.2121,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.2121,.01,21,2,0)
the listed keys in order subscribe to an event of this type. 
"^DD",19941.21,19941.2121,.01,"DT")
3040310
"^DD",19941.21,19941.2199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",19941.21,19941.2199,0,"DT")
3021021
"^DD",19941.21,19941.2199,0,"NM","DESCRIPTION")

"^DD",19941.21,19941.2199,0,"UP")
19941.21
"^DD",19941.21,19941.2199,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",19941.21,19941.2199,.01,3)
Enter a detailed description of this event type.
"^DD",19941.21,19941.2199,.01,"DT")
3021021
"^DIC",999.1,999.1,0)
CAREWEB SERIALIZATION^999.1
"^DIC",999.1,999.1,0,"GL")
^RGCWF(999.1,
"^DIC",999.1,999.1,"%D",0)
^^1^1^3150211.113842
"^DIC",999.1,999.1,"%D",1,0)
Supports serialization of domain objects.
"^DIC",999.1,"B","CAREWEB SERIALIZATION",999.1)

"^DIC",999.201,999.201,0)
CAREWEB NOTIFICATION CONTROL^999.201
"^DIC",999.201,999.201,0,"GL")
^RGCWF(999.201,
"^DIC",999.201,"B","CAREWEB NOTIFICATION CONTROL",999.201)

"^DIC",999.202,999.202,0)
CAREWEB NOTIFICATION SCHEDULING^999.202
"^DIC",999.202,999.202,0,"GL")
^RGCWF(999.202,
"^DIC",999.202,"B","CAREWEB NOTIFICATION SCHEDULING",999.202)

"^DIC",19941.21,19941.21,0)
CIA EVENT TYPE^19941.21
"^DIC",19941.21,19941.21,0,"GL")
^CIANB(19941.21,
"^DIC",19941.21,"B","CIA EVENT TYPE",19941.21)

**INSTALL NAME**
CAREWEB CONTEXT 1.0
"BLD",8487,0)
CAREWEB CONTEXT 1.0^^0^3150226^n
"BLD",8487,4,0)
^9.64PA^19941.21^4
"BLD",8487,4,999.1,0)
999.1
"BLD",8487,4,999.1,222)
n^y^f^^n^^y^o^n
"BLD",8487,4,999.1,224)
I $$SCRN^RGCWKDTP(Y,1)
"BLD",8487,4,999.2,0)
999.2
"BLD",8487,4,999.2,222)
y^y^f^^n^^y^r^n
"BLD",8487,4,999.201,0)
999.201
"BLD",8487,4,999.201,222)
n^y^f^^y^^y^o^n
"BLD",8487,4,999.201,224)
I $$SCRN^RGCWKDTP(Y,4)
"BLD",8487,4,19941.21,0)
19941.21
"BLD",8487,4,19941.21,222)
n^y^f^^y^^y^o^n
"BLD",8487,4,19941.21,224)
I $$SCRN^RGCWKDTP(Y,5)
"BLD",8487,4,"B",999.1,999.1)

"BLD",8487,4,"B",999.2,999.2)

"BLD",8487,4,"B",999.201,999.201)

"BLD",8487,4,"B",19941.21,19941.21)

"BLD",8487,6.3)
149
"BLD",8487,"INI")
PRE^RGCWKDIN
"BLD",8487,"INIT")
POST^RGCWKDIN
"BLD",8487,"KRN",0)
^9.67PA^8994^20
"BLD",8487,"KRN",.4,0)
.4
"BLD",8487,"KRN",.401,0)
.401
"BLD",8487,"KRN",.402,0)
.402
"BLD",8487,"KRN",.403,0)
.403
"BLD",8487,"KRN",.5,0)
.5
"BLD",8487,"KRN",.84,0)
.84
"BLD",8487,"KRN",3.6,0)
3.6
"BLD",8487,"KRN",3.8,0)
3.8
"BLD",8487,"KRN",9.2,0)
9.2
"BLD",8487,"KRN",9.8,0)
9.8
"BLD",8487,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",8487,"KRN",9.8,"NM",1,0)
RGCWENC1^^0^B34209910
"BLD",8487,"KRN",9.8,"NM",2,0)
RGCWENCX^^0^B118150489
"BLD",8487,"KRN",9.8,"NM",3,0)
RGCWPTP1^^0^B27498471
"BLD",8487,"KRN",9.8,"NM",4,0)
RGCWPTP2^^0^B6092178
"BLD",8487,"KRN",9.8,"NM",5,0)
RGCWPTP3^^0^B17293499
"BLD",8487,"KRN",9.8,"NM",6,0)
RGCWPTPC^^0^B8280859
"BLD",8487,"KRN",9.8,"NM",7,0)
RGCWPTPL^^0^B18695330
"BLD",8487,"KRN",9.8,"NM",8,0)
RGCWPTPS^^0^B4899277
"BLD",8487,"KRN",9.8,"NM",9,0)
RGCWPTCX^^0^B40112263
"BLD",8487,"KRN",9.8,"NM",10,0)
RGCWFTIU^^0^B2617280
"BLD",8487,"KRN",9.8,"NM","B","RGCWENC1",1)

"BLD",8487,"KRN",9.8,"NM","B","RGCWENCX",2)

"BLD",8487,"KRN",9.8,"NM","B","RGCWFTIU",10)

"BLD",8487,"KRN",9.8,"NM","B","RGCWPTCX",9)

"BLD",8487,"KRN",9.8,"NM","B","RGCWPTP1",3)

"BLD",8487,"KRN",9.8,"NM","B","RGCWPTP2",4)

"BLD",8487,"KRN",9.8,"NM","B","RGCWPTP3",5)

"BLD",8487,"KRN",9.8,"NM","B","RGCWPTPC",6)

"BLD",8487,"KRN",9.8,"NM","B","RGCWPTPL",7)

"BLD",8487,"KRN",9.8,"NM","B","RGCWPTPS",8)

"BLD",8487,"KRN",19,0)
19
"BLD",8487,"KRN",19.1,0)
19.1
"BLD",8487,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",8487,"KRN",19.1,"NM",1,0)
RGCWPT PATIENT SELECT^^0
"BLD",8487,"KRN",19.1,"NM","B","RGCWPT PATIENT SELECT",1)

"BLD",8487,"KRN",101,0)
101
"BLD",8487,"KRN",409.61,0)
409.61
"BLD",8487,"KRN",771,0)
771
"BLD",8487,"KRN",779.2,0)
779.2
"BLD",8487,"KRN",870,0)
870
"BLD",8487,"KRN",8989.51,0)
8989.51
"BLD",8487,"KRN",8989.51,"NM",0)
^9.68A^21^21
"BLD",8487,"KRN",8989.51,"NM",1,0)
RGCWENCX CREATE VISIT^^0
"BLD",8487,"KRN",8989.51,"NM",2,0)
RGCWENCX DETAIL REPORT^^0
"BLD",8487,"KRN",8989.51,"NM",3,0)
RGCWENCX OTHER LOCATION^^0
"BLD",8487,"KRN",8989.51,"NM",4,0)
RGCWENCX PROV ENC FETCH^^0
"BLD",8487,"KRN",8989.51,"NM",5,0)
RGCWENCX PROVIDER^^0
"BLD",8487,"KRN",8989.51,"NM",6,0)
RGCWENCX SEARCH RANGE START^^0
"BLD",8487,"KRN",8989.51,"NM",7,0)
RGCWENCX SEARCH RANGE STOP^^0
"BLD",8487,"KRN",8989.51,"NM",8,0)
RGCWENCX VISIT LOCK OVERRIDE^^0
"BLD",8487,"KRN",8989.51,"NM",9,0)
RGCWENCX VISIT LOCKED^^0
"BLD",8487,"KRN",8989.51,"NM",10,0)
RGCWENCX VISIT TYPES^^0
"BLD",8487,"KRN",8989.51,"NM",11,0)
RGCWPTCX DEMO MODE^^0
"BLD",8487,"KRN",8989.51,"NM",12,0)
RGCWPTCX DETAIL REPORT^^0
"BLD",8487,"KRN",8989.51,"NM",13,0)
RGCWPTCX IGNORE ALIASES^^0
"BLD",8487,"KRN",8989.51,"NM",14,0)
RGCWPTCX LAST PATIENT^^0
"BLD",8487,"KRN",8989.51,"NM",15,0)
RGCWPTCX RECALL LAST^^0
"BLD",8487,"KRN",8989.51,"NM",16,0)
RGCWPTCX REQUIRES HRN^^0
"BLD",8487,"KRN",8989.51,"NM",17,0)
RGCWPTPL DATE RANGES^^0
"BLD",8487,"KRN",8989.51,"NM",18,0)
RGCWPTPL DEFAULT ITEM^^0
"BLD",8487,"KRN",8989.51,"NM",19,0)
RGCWPTPL DEFAULT SOURCE^^0
"BLD",8487,"KRN",8989.51,"NM",20,0)
RGCWPTPL PERSONAL LIST^^0
"BLD",8487,"KRN",8989.51,"NM",21,0)
RGCWENCX LOCATION DEFAULT^^0
"BLD",8487,"KRN",8989.51,"NM","B","RGCWENCX CREATE VISIT",1)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWENCX DETAIL REPORT",2)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWENCX LOCATION DEFAULT",21)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWENCX OTHER LOCATION",3)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWENCX PROV ENC FETCH",4)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWENCX PROVIDER",5)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWENCX SEARCH RANGE START",6)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWENCX SEARCH RANGE STOP",7)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWENCX VISIT LOCK OVERRIDE",8)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWENCX VISIT LOCKED",9)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWENCX VISIT TYPES",10)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWPTCX DEMO MODE",11)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWPTCX DETAIL REPORT",12)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWPTCX IGNORE ALIASES",13)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWPTCX LAST PATIENT",14)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWPTCX RECALL LAST",15)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWPTCX REQUIRES HRN",16)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWPTPL DATE RANGES",17)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWPTPL DEFAULT ITEM",18)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWPTPL DEFAULT SOURCE",19)

"BLD",8487,"KRN",8989.51,"NM","B","RGCWPTPL PERSONAL LIST",20)

"BLD",8487,"KRN",8989.52,0)
8989.52
"BLD",8487,"KRN",8994,0)
8994
"BLD",8487,"KRN",8994,"NM",0)
^9.68A^30^30
"BLD",8487,"KRN",8994,"NM",1,0)
RGCWENCX ADMITCUR^^0
"BLD",8487,"KRN",8994,"NM",2,0)
RGCWENCX ADMITLST^^0
"BLD",8487,"KRN",8994,"NM",3,0)
RGCWENCX CHKVISIT^^0
"BLD",8487,"KRN",8994,"NM",4,0)
RGCWENCX CLINLOC^^0
"BLD",8487,"KRN",8994,"NM",5,0)
RGCWENCX ENINQ^^0
"BLD",8487,"KRN",8994,"NM",6,0)
RGCWENCX FETCH^^0
"BLD",8487,"KRN",8994,"NM",7,0)
RGCWENCX GETPRV^^0
"BLD",8487,"KRN",8994,"NM",8,0)
RGCWENCX GETVISIT^^0
"BLD",8487,"KRN",8994,"NM",9,0)
RGCWENCX HOSPLOC^^0
"BLD",8487,"KRN",8994,"NM",10,0)
RGCWENCX INPLOC^^0
"BLD",8487,"KRN",8994,"NM",11,0)
RGCWENCX LOCIEN^^0
"BLD",8487,"KRN",8994,"NM",12,0)
RGCWENCX LOCINFO^^0
"BLD",8487,"KRN",8994,"NM",13,0)
RGCWENCX UPDPRV^^0
"BLD",8487,"KRN",8994,"NM",14,0)
RGCWENCX VID2IEN^^0
"BLD",8487,"KRN",8994,"NM",15,0)
RGCWENCX VISITLST^^0
"BLD",8487,"KRN",8994,"NM",16,0)
RGCWPTPL CLINRNG^^0
"BLD",8487,"KRN",8994,"NM",17,0)
RGCWPTPL DOBLKP^^0
"BLD",8487,"KRN",8994,"NM",18,0)
RGCWPTPL GETDFLT^^0
"BLD",8487,"KRN",8994,"NM",19,0)
RGCWPTPL HRNLKP^^0
"BLD",8487,"KRN",8994,"NM",20,0)
RGCWPTPL IENLKP^^0
"BLD",8487,"KRN",8994,"NM",21,0)
RGCWPTPL LISTALL^^0
"BLD",8487,"KRN",8994,"NM",22,0)
RGCWPTPL LISTINFO^^0
"BLD",8487,"KRN",8994,"NM",23,0)
RGCWPTPL LISTPTS^^0
"BLD",8487,"KRN",8994,"NM",24,0)
RGCWPTPL LISTSEL^^0
"BLD",8487,"KRN",8994,"NM",25,0)
RGCWPTPL LOOKUP^^0
"BLD",8487,"KRN",8994,"NM",26,0)
RGCWPTPL MANAGE^^0
"BLD",8487,"KRN",8994,"NM",27,0)
RGCWPTPL MANAGE^^0
"BLD",8487,"KRN",8994,"NM",28,0)
RGCWPTPL SAVEDFLT^^0
"BLD",8487,"KRN",8994,"NM",29,0)
RGCWPTPS SEARCH^^0
"BLD",8487,"KRN",8994,"NM",30,0)
RGCWPTPL LISTINFO1^^0
"BLD",8487,"KRN",8994,"NM","B","RGCWENCX ADMITCUR",1)

"BLD",8487,"KRN",8994,"NM","B","RGCWENCX ADMITLST",2)

"BLD",8487,"KRN",8994,"NM","B","RGCWENCX CHKVISIT",3)

"BLD",8487,"KRN",8994,"NM","B","RGCWENCX CLINLOC",4)

"BLD",8487,"KRN",8994,"NM","B","RGCWENCX ENINQ",5)

"BLD",8487,"KRN",8994,"NM","B","RGCWENCX FETCH",6)

"BLD",8487,"KRN",8994,"NM","B","RGCWENCX GETPRV",7)

"BLD",8487,"KRN",8994,"NM","B","RGCWENCX GETVISIT",8)

"BLD",8487,"KRN",8994,"NM","B","RGCWENCX HOSPLOC",9)

"BLD",8487,"KRN",8994,"NM","B","RGCWENCX INPLOC",10)

"BLD",8487,"KRN",8994,"NM","B","RGCWENCX LOCIEN",11)

"BLD",8487,"KRN",8994,"NM","B","RGCWENCX LOCINFO",12)

"BLD",8487,"KRN",8994,"NM","B","RGCWENCX UPDPRV",13)

"BLD",8487,"KRN",8994,"NM","B","RGCWENCX VID2IEN",14)

"BLD",8487,"KRN",8994,"NM","B","RGCWENCX VISITLST",15)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPL CLINRNG",16)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPL DOBLKP",17)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPL GETDFLT",18)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPL HRNLKP",19)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPL IENLKP",20)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPL LISTALL",21)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPL LISTINFO",22)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPL LISTINFO1",30)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPL LISTPTS",23)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPL LISTSEL",24)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPL LOOKUP",25)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPL MANAGE",26)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPL MANAGE",27)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPL SAVEDFLT",28)

"BLD",8487,"KRN",8994,"NM","B","RGCWPTPS SEARCH",29)

"BLD",8487,"KRN","B",.4,.4)

"BLD",8487,"KRN","B",.401,.401)

"BLD",8487,"KRN","B",.402,.402)

"BLD",8487,"KRN","B",.403,.403)

"BLD",8487,"KRN","B",.5,.5)

"BLD",8487,"KRN","B",.84,.84)

"BLD",8487,"KRN","B",3.6,3.6)

"BLD",8487,"KRN","B",3.8,3.8)

"BLD",8487,"KRN","B",9.2,9.2)

"BLD",8487,"KRN","B",9.8,9.8)

"BLD",8487,"KRN","B",19,19)

"BLD",8487,"KRN","B",19.1,19.1)

"BLD",8487,"KRN","B",101,101)

"BLD",8487,"KRN","B",409.61,409.61)

"BLD",8487,"KRN","B",771,771)

"BLD",8487,"KRN","B",779.2,779.2)

"BLD",8487,"KRN","B",870,870)

"BLD",8487,"KRN","B",8989.51,8989.51)

"BLD",8487,"KRN","B",8989.52,8989.52)

"BLD",8487,"KRN","B",8994,8994)

"BLD",8487,"PRE")
RGCWKDIN
"BLD",8487,"PRET")
PRETRANS^RGCWKDTP
"DATA",999.2,1,0)
Providers^LM^Provider^10
"DATA",999.2,1,10)
D PROVPTS^RGCWPTP1(.DATA,IEN)
"DATA",999.2,1,11)
D PROVLST^RGCWPTP1(.DATA,.FROM,.DIR,.MAX)
"DATA",999.2,2,0)
Teams^MS^Team^20
"DATA",999.2,2,10)
D TEAMPTS^RGCWPTP1(.DATA,IEN)
"DATA",999.2,2,11)
D TEAMLST^RGCWPTP1(.DATA)
"DATA",999.2,2,12)
D MAN2^RGCWPTP3(.DATA,LIST,ACTION,NAME,.VAL)
"DATA",999.2,2,13)
I $D(^OR(100.21))
"DATA",999.2,3,0)
Specialties^LMS^Specialty^30
"DATA",999.2,3,10)
D SPECPTS^RGCWPTP1(.DATA,IEN)
"DATA",999.2,3,11)
D SPECLST^RGCWPTP1(.DATA,.FROM,.DIR,.MAX)
"DATA",999.2,4,0)
Clinics^DELMN^Clinic^40
"DATA",999.2,4,10)
D CLINPTS^RGCWPTP1(.DATA,IEN,START,END)
"DATA",999.2,4,11)
D HOSPLOC^RGCWPTP1(.DATA,.FROM,.DIR,.MAX,"C",START,END)
"DATA",999.2,5,0)
Wards^ELMS^Ward^50
"DATA",999.2,5,10)
D WARDPTS^RGCWPTP1(.DATA,IEN)
"DATA",999.2,5,11)
D HOSPLOC^RGCWPTP1(.DATA,.FROM,.DIR,.MAX,"W")
"DATA",999.2,6,0)
Personal Lists^SU^Personal List^60
"DATA",999.2,6,10)
D PLSTPTS^RGCWPTP2(.DATA,IEN)
"DATA",999.2,6,11)
D PLSTLST^RGCWPTP2(.DATA)
"DATA",999.2,6,12)
D MANAGE^RGCWPTP2(.DATA,ACTION,NAME,.VAL)
"FIA",999.1)
CAREWEB SERIALIZATION
"FIA",999.1,0)
^RGCWF(999.1,
"FIA",999.1,0,0)
999.1I
"FIA",999.1,0,1)
n^y^f^^n^^y^o^n
"FIA",999.1,0,10)

"FIA",999.1,0,11)
I $$SCRN^RGCWKDTP(Y,1)
"FIA",999.1,0,"RLRO")

"FIA",999.1,999.1)
0
"FIA",999.1,999.11)
0
"FIA",999.1,999.12)
0
"FIA",999.1,999.13)
0
"FIA",999.2)
CAREWEB PATIENT LIST
"FIA",999.2,0)
^RGCWF(999.2,
"FIA",999.2,0,0)
999.2
"FIA",999.2,0,1)
y^y^f^^n^^y^r^n
"FIA",999.2,0,10)

"FIA",999.2,0,11)

"FIA",999.2,0,"RLRO")

"FIA",999.2,999.2)
0
"FIA",999.201)
CAREWEB NOTIFICATION CONTROL
"FIA",999.201,0)
^RGCWF(999.201,
"FIA",999.201,0,0)
999.201
"FIA",999.201,0,1)
n^y^f^^y^^y^o^n
"FIA",999.201,0,10)

"FIA",999.201,0,11)
I $$SCRN^RGCWKDTP(Y,4)
"FIA",999.201,0,"RLRO")

"FIA",999.201,999.201)
0
"FIA",19941.21)
CIA EVENT TYPE
"FIA",19941.21,0)
^CIANB(19941.21,
"FIA",19941.21,0,0)
19941.21
"FIA",19941.21,0,1)
n^y^f^^y^^y^o^n
"FIA",19941.21,0,10)

"FIA",19941.21,0,11)
I $$SCRN^RGCWKDTP(Y,5)
"FIA",19941.21,0,"RLRO")

"FIA",19941.21,19941.21)
0
"FIA",19941.21,19941.212)
0
"FIA",19941.21,19941.2121)
0
"FIA",19941.21,19941.2199)
0
"INI")
PRE^RGCWKDIN
"INIT")
POST^RGCWKDIN
"KRN",19.1,513,-1)
0^1
"KRN",19.1,513,0)
RGCWPT PATIENT SELECT^Allows selection of a patient.
"KRN",8989.51,292,-1)
0^20
"KRN",8989.51,292,0)
RGCWPTPL PERSONAL LIST^User Personal List^1^Enter List Name
"KRN",8989.51,292,1)
W
"KRN",8989.51,292,6)
F
"KRN",8989.51,292,7)
K:$L(X)<3!(X=+X) X
"KRN",8989.51,292,30,0)
^8989.513I^1^1
"KRN",8989.51,292,30,1,0)
1^200
"KRN",8989.51,293,-1)
0^19
"KRN",8989.51,293,0)
RGCWPTPL DEFAULT SOURCE^Default Patient List^0
"KRN",8989.51,293,1)
P^90460.03^Enter default patient list.
"KRN",8989.51,293,30,0)
^8989.513I^2^2
"KRN",8989.51,293,30,1,0)
99^4.2
"KRN",8989.51,293,30,2,0)
1^200
"KRN",8989.51,294,-1)
0^18
"KRN",8989.51,294,0)
RGCWPTPL DEFAULT ITEM^Default List Item^1
"KRN",8989.51,294,1)
F
"KRN",8989.51,294,6)
P^90460.03
"KRN",8989.51,294,30,0)
^8989.513I^2^2
"KRN",8989.51,294,30,1,0)
99^4.2
"KRN",8989.51,294,30,2,0)
1^200
"KRN",8989.51,295,-1)
0^6
"KRN",8989.51,295,0)
RGCWENCX SEARCH RANGE START^Visit Search Start Date^0^^Visit Search Start Date
"KRN",8989.51,295,1)
F^^Enter relative start date to list visits.  (E.g. T-120)
"KRN",8989.51,295,20,0)
^8989.512^2^2^3011212^^^^
"KRN",8989.51,295,20,1,0)
Returns the relative date to start listing visits for a patient.
"KRN",8989.51,295,20,2,0)
For example, 'T-90' will list visits beginning 90 days before today.
"KRN",8989.51,295,30,0)
^8989.513I^6^4
"KRN",8989.51,295,30,1,0)
1^200
"KRN",8989.51,295,30,2,0)
2^49
"KRN",8989.51,295,30,4,0)
3^4
"KRN",8989.51,295,30,6,0)
5^4.2
"KRN",8989.51,296,-1)
0^7
"KRN",8989.51,296,0)
RGCWENCX SEARCH RANGE STOP^Visit Search Stop Date^0^^Visit Search Stop Date
"KRN",8989.51,296,1)
F^^Enter the relative stop date to list visits.  (E.g., T, T+30)
"KRN",8989.51,296,20,0)
^^3^3^3070608.140249
"KRN",8989.51,296,20,1,0)
Returns the relative date to end listing visits for a patient.
"KRN",8989.51,296,20,2,0)
For example, 'T' will not list visits later than today.  'T+30' will not
"KRN",8989.51,296,20,3,0)
list visits after 30 days from now.
"KRN",8989.51,296,30,0)
^8989.513I^6^4
"KRN",8989.51,296,30,1,0)
1^200
"KRN",8989.51,296,30,2,0)
2^49
"KRN",8989.51,296,30,4,0)
3^4
"KRN",8989.51,296,30,6,0)
5^4.2
"KRN",8989.51,297,-1)
0^12
"KRN",8989.51,297,0)
RGCWPTCX DETAIL REPORT^Patient detail report
"KRN",8989.51,297,1)
F
"KRN",8989.51,297,20,0)
^8989.512^1^1^3050215^^^^
"KRN",8989.51,297,20,1,0)
M code to generate a patient detail report.
"KRN",8989.51,297,30,0)
^8989.513I^4^4
"KRN",8989.51,297,30,1,0)
900^4.2
"KRN",8989.51,297,30,2,0)
100^200
"KRN",8989.51,297,30,3,0)
500^4
"KRN",8989.51,297,30,4,0)
300^49
"KRN",8989.51,298,-1)
0^14
"KRN",8989.51,298,0)
RGCWPTCX LAST PATIENT^Last patient selected^1^Facility^Patient
"KRN",8989.51,298,1)
P^2
"KRN",8989.51,298,6)
P^4
"KRN",8989.51,298,20,0)
^8989.512^1^1^3020730^
"KRN",8989.51,298,20,1,0)
Saves the last patient selected for the current institution.
"KRN",8989.51,298,30,0)
^8989.513I^1^1
"KRN",8989.51,298,30,1,0)
100^200
"KRN",8989.51,299,-1)
0^1
"KRN",8989.51,299,0)
RGCWENCX CREATE VISIT^Allow user to create new visits.^0
"KRN",8989.51,299,1)
Y
"KRN",8989.51,299,30,0)
^8989.513I^6^6
"KRN",8989.51,299,30,1,0)
100^200
"KRN",8989.51,299,30,2,0)
200^8930
"KRN",8989.51,299,30,3,0)
300^49
"KRN",8989.51,299,30,4,0)
400^44
"KRN",8989.51,299,30,5,0)
500^4
"KRN",8989.51,299,30,6,0)
900^4.2
"KRN",8989.51,300,-1)
0^4
"KRN",8989.51,300,0)
RGCWENCX PROV ENC FETCH^Fetch current user as provider?^^^Use current user as visit provider
"KRN",8989.51,300,1)
Y^^Enter YES if current user should be defaulted as provider
"KRN",8989.51,300,30,0)
^8989.513I^2^2
"KRN",8989.51,300,30,1,0)
100^4
"KRN",8989.51,300,30,2,0)
200^4.2
"KRN",8989.51,301,-1)
0^2
"KRN",8989.51,301,0)
RGCWENCX DETAIL REPORT^Visit detail report
"KRN",8989.51,301,1)
F
"KRN",8989.51,301,20,0)
^^1^1^3080201.120417
"KRN",8989.51,301,20,1,0)
M code to generate a visit detail report.
"KRN",8989.51,301,30,0)
^8989.513I^4^4
"KRN",8989.51,301,30,1,0)
900^4.2
"KRN",8989.51,301,30,2,0)
100^200
"KRN",8989.51,301,30,3,0)
500^4
"KRN",8989.51,301,30,4,0)
300^49
"KRN",8989.51,302,-1)
0^16
"KRN",8989.51,302,0)
RGCWPTCX REQUIRES HRN^Patient selection requires HRN^0^^Patient selection requires HRN
"KRN",8989.51,302,1)
Y^^Enter YES if patient must have an HRN to be selectable.
"KRN",8989.51,302,20,0)
^^2^2^3080215.08342
"KRN",8989.51,302,20,1,0)
This parameter controls whether a patient must have an assigned health record
"KRN",8989.51,302,20,2,0)
number to be selectable within the EHR.
"KRN",8989.51,302,30,0)
^8989.513I^1^1
"KRN",8989.51,302,30,1,0)
100^4.2
"KRN",8989.51,303,-1)
0^13
"KRN",8989.51,303,0)
RGCWPTCX IGNORE ALIASES^Ignore aliases in patient lookup^0^^Ignore aliases in patient lookup
"KRN",8989.51,303,1)
Y
"KRN",8989.51,303,20,0)
^^2^2^3080216.091741
"KRN",8989.51,303,20,1,0)
If set to YES, any aliases encountered in the primary index of the patient file
"KRN",8989.51,303,20,2,0)
are ignored.
"KRN",8989.51,303,30,0)
^8989.513I^2^2
"KRN",8989.51,303,30,1,0)
300^4.2
"KRN",8989.51,303,30,2,0)
200^4
"KRN",8989.51,394,-1)
0^5
"KRN",8989.51,394,0)
RGCWENCX PROVIDER^Can be a visit provider?^0^^Can be a visit provider?
"KRN",8989.51,394,1)
Y^^Enter yes if user class can be a provider for a visit.
"KRN",8989.51,394,20,0)
^8989.512^2^2^3040306^^
"KRN",8989.51,394,20,1,0)
If returns yes, user can be a provider associated with a visit.  This controls
"KRN",8989.51,394,20,2,0)
which users appear in the provider list of the encounter context dialog.
"KRN",8989.51,394,30,0)
^8989.513I^2^2
"KRN",8989.51,394,30,1,0)
100^8930
"KRN",8989.51,394,30,2,0)
10^200
"KRN",8989.51,395,-1)
0^11
"KRN",8989.51,395,0)
RGCWPTCX DEMO MODE^Allow viewing of demo patients only^0^^Limit to demo patients only?
"KRN",8989.51,395,1)
Y^^If yes, only demo patients may be selected.
"KRN",8989.51,395,6)
N
"KRN",8989.51,395,20,0)
^8989.512^1^1^3040128.115426
"KRN",8989.51,395,20,1,0)
If yes, the only demo patients may be selected.
"KRN",8989.51,395,30,0)
^8989.513I^3^3
"KRN",8989.51,395,30,1,0)
100^200
"KRN",8989.51,395,30,2,0)
200^4
"KRN",8989.51,395,30,3,0)
300^4.2
"KRN",8989.51,396,-1)
0^17
"KRN",8989.51,396,0)
RGCWPTPL DATE RANGES^Default date ranges:^^^Edit Value?
"KRN",8989.51,396,1)
W^^Enter Y to edit, @ to delete.
"KRN",8989.51,396,2)
S:"Yy"'[Y Y=""
"KRN",8989.51,396,30,0)
^8989.513I^1^1
"KRN",8989.51,396,30,1,0)
100^4.2
"KRN",8989.51,397,-1)
0^21
"KRN",8989.51,397,0)
RGCWENCX LOCATION DEFAULT^Default encounter location.^0
"KRN",8989.51,397,1)
N
"KRN",8989.51,397,30,0)
^8989.513I^1^1
"KRN",8989.51,397,30,1,0)
10^200
"KRN",8989.51,398,-1)
0^10
"KRN",8989.51,398,0)
RGCWENCX VISIT TYPES^Selectable visit types^1^Sequence^Value
"KRN",8989.51,398,1)
F
"KRN",8989.51,398,6)
N
"KRN",8989.51,398,20,0)
^8989.512^4^4^3050215^^^^
"KRN",8989.51,398,20,1,0)
Specifies the visit types selectable from the encounter context dialog.  The
"KRN",8989.51,398,20,2,0)
format for each entry is:
"KRN",8989.51,398,20,3,0)

"KRN",8989.51,398,20,4,0)
       Visit Code~Short Descriptor~Long Descriptor
"KRN",8989.51,398,30,0)
^8989.513I^3^2
"KRN",8989.51,398,30,1,0)
5^4
"KRN",8989.51,398,30,3,0)
10^4.2
"KRN",8989.51,399,-1)
0^9
"KRN",8989.51,399,0)
RGCWENCX VISIT LOCKED^Number days visit can be modified.^0
"KRN",8989.51,399,1)
N^1:180^# of days (1-180) following creation after which a visit cannot be modified.
"KRN",8989.51,399,20,0)
^8989.512^3^3^3070527.005944
"KRN",8989.51,399,20,1,0)
This parameter determines the maximum # of days (1-180) following the 
"KRN",8989.51,399,20,2,0)
creation of a visit after which the visit cannot be modified.  Once this 
"KRN",8989.51,399,20,3,0)
period has passed, no additional PCC data may be attached to a visit.
"KRN",8989.51,399,30,0)
^8989.513I^2^2
"KRN",8989.51,399,30,1,0)
900^4.2
"KRN",8989.51,399,30,2,0)
800^4
"KRN",8989.51,400,-1)
0^3
"KRN",8989.51,400,0)
RGCWENCX OTHER LOCATION^General location for outside encounters.^0^^Location
"KRN",8989.51,400,1)
P^9999999.06
"KRN",8989.51,400,20,0)
^^1^1^3061207.213805
"KRN",8989.51,400,20,1,0)
This is a general location is stored for visits that have an outside location.
"KRN",8989.51,400,30,0)
^8989.513I^2^2
"KRN",8989.51,400,30,1,0)
900^4.2
"KRN",8989.51,400,30,2,0)
500^4
"KRN",8989.51,401,-1)
0^8
"KRN",8989.51,401,0)
RGCWENCX VISIT LOCK OVERRIDE^Use to override visit lock for a user.^1^Visit to unlock^Date override expires
"KRN",8989.51,401,1)
D^::EX^Value must be between Today and value in BEHOENCX VISIT LOCKED parameter.
"KRN",8989.51,401,2)
K:Y>$$FMADD^XLFDT($$DT^XLFDT(),+$$GET^XPAR("ALL","BEHOENCX VISIT LOCKED"))!(Y<$$DT^XLFDT()) X
"KRN",8989.51,401,6)
P^9000010
"KRN",8989.51,401,20,0)
^8989.512^3^3^3090218^^^
"KRN",8989.51,401,20,1,0)
Use this parameter to temporarily override a locked visit for a specific user.
"KRN",8989.51,401,20,2,0)
Be sure to remove the override after the user has completed the necessary 
"KRN",8989.51,401,20,3,0)
modifications.
"KRN",8989.51,401,30,0)
^8989.513I^1^1
"KRN",8989.51,401,30,1,0)
100^200
"KRN",8989.51,402,-1)
0^15
"KRN",8989.51,402,0)
RGCWPTCX RECALL LAST^Recall last selected patient^0^^Recall last selected patient?
"KRN",8989.51,402,1)
Y^^Recalls the patient last selected upon startup.
"KRN",8989.51,402,6)
N
"KRN",8989.51,402,20,0)
^8989.512^2^2^3080216^^^^
"KRN",8989.51,402,20,1,0)
If yes, the patient context is set to the last patient selected upon
"KRN",8989.51,402,20,2,0)
startup.
"KRN",8989.51,402,30,0)
^8989.513I^3^3
"KRN",8989.51,402,30,1,0)
100^200
"KRN",8989.51,402,30,2,0)
200^4
"KRN",8989.51,402,30,3,0)
300^4.2
"KRN",8994,2643,-1)
0^2
"KRN",8994,2643,0)
RGCWENCX ADMITLST^ADMITLST^RGCWENCX^2
"KRN",8994,2644,-1)
0^4
"KRN",8994,2644,0)
RGCWENCX CLINLOC^CLINLOC^RGCWENCX^2
"KRN",8994,2645,-1)
0^6
"KRN",8994,2645,0)
RGCWENCX FETCH^FETCH^RGCWENCX^1^^^^1
"KRN",8994,2646,-1)
0^7
"KRN",8994,2646,0)
RGCWENCX GETPRV^GETPRV^RGCWENCX^2^^^^1
"KRN",8994,2647,-1)
0^8
"KRN",8994,2647,0)
RGCWENCX GETVISIT^GETVISIT^RGCWENCX^1
"KRN",8994,2647,1,0)
^8994.01^1^1^3010531^
"KRN",8994,2647,1,1,0)
Returns visit data given IEN of VISIT file entry.
"KRN",8994,2648,-1)
0^9
"KRN",8994,2648,0)
RGCWENCX HOSPLOC^HOSPLOC^RGCWENCX^2
"KRN",8994,2649,-1)
0^10
"KRN",8994,2649,0)
RGCWENCX INPLOC^INPLOC^RGCWENCX^2
"KRN",8994,2650,-1)
0^11
"KRN",8994,2650,0)
RGCWENCX LOCIEN^LOCIEN^RGCWENCX^1
"KRN",8994,2650,1,0)
^8994.01^1^1^3010531.210736
"KRN",8994,2650,1,1,0)
Returns the IEN of the specified hospital location.
"KRN",8994,2651,-1)
0^14
"KRN",8994,2651,0)
RGCWENCX VID2IEN^VID2IEN^RGCWENCX^1
"KRN",8994,2651,1,0)
^8994.01^1^1^3010531.120443
"KRN",8994,2651,1,1,0)
Returns the IEN of a VISIT file entry given its visit id.
"KRN",8994,2652,-1)
0^15
"KRN",8994,2652,0)
RGCWENCX VISITLST^VISITLST^RGCWENCX^4^^^^1
"KRN",8994,2653,-1)
0^13
"KRN",8994,2653,0)
RGCWENCX UPDPRV^UPDPRV^RGCWENCX^1
"KRN",8994,2654,-1)
0^12
"KRN",8994,2654,0)
RGCWENCX LOCINFO^LOCINFO^RGCWENCX^1
"KRN",8994,2654,1,0)
^8994.01^1^1^3051128.075357
"KRN",8994,2654,1,1,0)
Returns information about the specified entry from the HOSPITAL LOCATION file.
"KRN",8994,2654,2,0)
^8994.02A^1^1
"KRN",8994,2654,2,1,0)
LOCATION^1^^1^1
"KRN",8994,2654,2,1,1,0)
^^1^1^3051128.075318
"KRN",8994,2654,2,1,1,1,0)
Internal entry number in HOSPITAL LOCATION file.
"KRN",8994,2654,2,"B","LOCATION",1)

"KRN",8994,2654,2,"PARAMSEQ",1,1)

"KRN",8994,2654,3,0)
^^1^1^3051128.075343
"KRN",8994,2654,3,1,0)
Returns the zero node of the specified entry from the HOSPITAL LOCATION file.
"KRN",8994,2655,-1)
0^3
"KRN",8994,2655,0)
RGCWENCX CHKVISIT^CHKVISIT^RGCWENCX^2^^^^1
"KRN",8994,2656,-1)
0^1
"KRN",8994,2656,0)
RGCWENCX ADMITCUR^ADMITCUR^RGCWENCX^1
"KRN",8994,2656,1,0)
^8994.01^1^1^3070517.114924
"KRN",8994,2656,1,1,0)
Return information about current admission.
"KRN",8994,2656,2,0)
^8994.02A^1^1
"KRN",8994,2656,2,1,0)
DFN^1^^1^1
"KRN",8994,2656,2,1,1,0)
^^1^1^3070517.114942
"KRN",8994,2656,2,1,1,1,0)
Patient internal record number.
"KRN",8994,2656,2,"B","DFN",1)

"KRN",8994,2656,2,"PARAMSEQ",1,1)

"KRN",8994,2656,3,0)
^^1^1^3070517.115113
"KRN",8994,2656,3,1,0)
VSTR [1] ^ LOCNAME [2] ^ ADMDATE [3] ^ TYPE [4] ^ LOCKED [5]
"KRN",8994,2657,-1)
0^16
"KRN",8994,2657,0)
RGCWPTPL CLINRNG^CLINRNG^RGCWPTPL^2
"KRN",8994,2658,-1)
0^17
"KRN",8994,2658,0)
RGCWPTPL DOBLKP^DOBLKP^RGCWPTPL^4^^^^1
"KRN",8994,2659,-1)
0^18
"KRN",8994,2659,0)
RGCWPTPL GETDFLT^GETDFLT^RGCWPTPL^1
"KRN",8994,2660,-1)
0^19
"KRN",8994,2660,0)
RGCWPTPL HRNLKP^HRNLKP^RGCWPTPL^2^^^^1
"KRN",8994,2661,-1)
0^20
"KRN",8994,2661,0)
RGCWPTPL IENLKP^IENLKP^RGCWPTPL^2
"KRN",8994,2662,-1)
0^21
"KRN",8994,2662,0)
RGCWPTPL LISTALL^LISTALL^RGCWPTPL^2
"KRN",8994,2663,-1)
0^22
"KRN",8994,2663,0)
RGCWPTPL LISTINFO^LISTINFO^RGCWPTPL^2^^^^1
"KRN",8994,2664,-1)
0^23
"KRN",8994,2664,0)
RGCWPTPL LISTPTS^LISTPTS^RGCWPTPL^2
"KRN",8994,2665,-1)
0^24
"KRN",8994,2665,0)
RGCWPTPL LISTSEL^LISTSEL^RGCWPTPL^2
"KRN",8994,2666,-1)
0^25
"KRN",8994,2666,0)
RGCWPTPL LOOKUP^LOOKUP^RGCWPTPL^4^^^^1
"KRN",8994,2667,-1)
0^27
"KRN",8994,2667,0)
RGCWPTPL MANAGE^MANAGE^RGCWPTPL^1
"KRN",8994,2668,-1)
0^28
"KRN",8994,2668,0)
RGCWPTPL SAVEDFLT^SAVEDFLT^RGCWPTPL^1
"KRN",8994,2669,-1)
0^5
"KRN",8994,2669,0)
RGCWENCX ENINQ^ENINQ^RGCWENCX^4^^^^1
"KRN",8994,2670,-1)
0^29
"KRN",8994,2670,0)
RGCWPTPS SEARCH^SEARCH^RGCWPTPS^4^^^^1
"KRN",8994,2671,-1)
0^30
"KRN",8994,2671,0)
RGCWPTPL LISTINFO1^LISTINFO^RGCWPTPL^1
"MBREQ")
1
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PGL",19941.21,0,7,7)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"PRE")
RGCWKDIN
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
11
"RTN","RGCWENC1")
0^1^B34209910
"RTN","RGCWENC1",1,0)
RGCWENC1 ;RI/CBMI/DKM - Visit Creation Support ;14-Mar-2014 17:10;DKM
"RTN","RGCWENC1",2,0)
 ;;1.0;CAREWEB FRAMEWORK;**005004;20-Aug-2007 08:41;Build 149
"RTN","RGCWENC1",3,0)
 ; Visit creation API
"RTN","RGCWENC1",4,0)
GETVISIT(IN,OUT) ;
"RTN","RGCWENC1",5,0)
 ;
"RTN","RGCWENC1",6,0)
 ; >> All date/time variables must be in FileMan internal format
"RTN","RGCWENC1",7,0)
 ;
"RTN","RGCWENC1",8,0)
 ; Special Incoming Variables:
"RTN","RGCWENC1",9,0)
 ;  IN("FORCE ADD")   = 1    ; no matter what, create new visit (Optional)
"RTN","RGCWENC1",10,0)
 ;  IN ("NEVER ADD")  = 1    ; never add visit, just try to find one or more (Optional)
"RTN","RGCWENC1",11,0)
 ;  IN("ANCILLARY")   = 1    ; for ancillary packages to create noon visit if no match found (Optional)
"RTN","RGCWENC1",12,0)
 ;
"RTN","RGCWENC1",13,0)
 ; Incoming Variables used in Matching: REQUIRED
"RTN","RGCWENC1",14,0)
 ;  IN("PAT")         = patient IEN (file 2 or 9000001)
"RTN","RGCWENC1",15,0)
 ;  IN("VISIT DATE")  = visit date & time (same as check-in date & time)
"RTN","RGCWENC1",16,0)
 ;  IN ("SITE")       = location of encounter IEN (file 4 or 9999999.06)
"RTN","RGCWENC1",17,0)
 ;  IN("VISIT TYPE")  = internal value for field .03 in Visit file
"RTN","RGCWENC1",18,0)
 ;  IN("SRV CAT")     = internal value for service category
"RTN","RGCWENC1",19,0)
 ;  IN("TIME RANGE")  = #   ; range in minutes for matching on visit time; REQUIRED unless FORCE ADD set
"RTN","RGCWENC1",20,0)
 ;                             ;   zero=exact matches only; -1=don't match on time
"RTN","RGCWENC1",21,0)
 ;
"RTN","RGCWENC1",22,0)
 ;   These are used to match if sent (Optional)
"RTN","RGCWENC1",23,0)
 ;  IN("PROVIDER")    = IEN for provider to match from file 200
"RTN","RGCWENC1",24,0)
 ;  IN("CLINIC CODE") = IEN of clinic stop code (file 40.7)
"RTN","RGCWENC1",25,0)
 ;  IN("HOS LOC")     = IEN of hospital location (file 44)
"RTN","RGCWENC1",26,0)
 ;
"RTN","RGCWENC1",27,0)
 ; Incoming Variables used in creating appt and visit
"RTN","RGCWENC1",28,0)
 ;  IN("USR")         = user IEN in file 200; REQUIRED
"RTN","RGCWENC1",29,0)
 ;
"RTN","RGCWENC1",30,0)
 ; Incoming PCC variables for adding additional info to visit (Optional)
"RTN","RGCWENC1",31,0)
 ;  IN("APCDOLOC") = Outside Location (#2101)
"RTN","RGCWENC1",32,0)
 ;
"RTN","RGCWENC1",33,0)
 ; Outgoing Array:
"RTN","RGCWENC1",34,0)
 ;  OUT(0) always set
"RTN","RGCWENC1",35,0)
 ;    if = 0 none found and may have error message in 2nd piece
"RTN","RGCWENC1",36,0)
 ;    if = 1 and OUT(visit ien)="ADD" new visit just created
"RTN","RGCWENC1",37,0)
 ;    if = 1 and OUT(visit ien)=#; # is time difference in minutes
"RTN","RGCWENC1",38,0)
 ;    if >1, multiple OUT(visit ien) entries exist
"RTN","RGCWENC1",39,0)
 ;
"RTN","RGCWENC1",40,0)
 N TMP
"RTN","RGCWENC1",41,0)
 K OUT
"RTN","RGCWENC1",42,0)
 M TMP=IN    ;don't mess with incoming array
"RTN","RGCWENC1",43,0)
 Q:'$$HAVEREQ(.TMP,.OUT)    ;check required fields
"RTN","RGCWENC1",44,0)
 ; if forced add, skip visit match attempt
"RTN","RGCWENC1",45,0)
 I $G(TMP("FORCE ADD")) D ADDVIST(.TMP,.OUT) Q
"RTN","RGCWENC1",46,0)
 ; attempt to find matching visits; return OUT array
"RTN","RGCWENC1",47,0)
 D MATCH(.TMP,.OUT)
"RTN","RGCWENC1",48,0)
 ; if appt date set, go to check-in
"RTN","RGCWENC1",49,0)
 I $G(TMP("APPT DATE")),'$G(TMP("NEVER ADD")) D ADDVIST(.TMP,.OUT) Q
"RTN","RGCWENC1",50,0)
 ; if only 1 visit found, return ien and quit
"RTN","RGCWENC1",51,0)
 ; if >1 visits found, return full array and quit
"RTN","RGCWENC1",52,0)
 Q:OUT(0)
"RTN","RGCWENC1",53,0)
 ; if called by ancillary package, just create noon visit and quit
"RTN","RGCWENC1",54,0)
 I $G(TMP("ANCILLARY")) D  Q
"RTN","RGCWENC1",55,0)
 .K TMP("ANCILLARY"),TMP("PROVIDER")             ; set up to find other ancillaries
"RTN","RGCWENC1",56,0)
 .D MATCH(.TMP,.OUT)
"RTN","RGCWENC1",57,0)
 .Q:OUT(0)=1                                     ; try to match on hos loc or clinic
"RTN","RGCWENC1",58,0)
 .Q:$G(TMP("NEVER ADD"))=1                       ; if in never add mode, quit after 2nd match
"RTN","RGCWENC1",59,0)
 .S TMP("VISIT DATE")=TMP("VISIT DATE")\1        ; take off time; PCC will add noon
"RTN","RGCWENC1",60,0)
 .D ADDVIST(.TMP,.OUT)                           ; create noon visit; no PIMS link
"RTN","RGCWENC1",61,0)
 ; if no visits found but in never add mode, just quit
"RTN","RGCWENC1",62,0)
 Q:$G(TMP("NEVER ADD"))=1
"RTN","RGCWENC1",63,0)
 ; otherwise, logic falls through to create visit choices
"RTN","RGCWENC1",64,0)
 D ADDVIST(.TMP,.OUT)
"RTN","RGCWENC1",65,0)
 Q
"RTN","RGCWENC1",66,0)
 ; Check required fields
"RTN","RGCWENC1",67,0)
HAVEREQ(IN,OUT) ;
"RTN","RGCWENC1",68,0)
 I ('$G(IN("FORCE ADD"))),('$D(IN("TIME RANGE"))) S OUT(0)="0^Missing Time Range" Q 0
"RTN","RGCWENC1",69,0)
 I '$D(IN("PAT")) S OUT(0)="0^Missing Patient IEN" Q 0
"RTN","RGCWENC1",70,0)
 I '$D(IN("VISIT DATE")) S OUT(0)="0^Missing Visit Date" Q 0
"RTN","RGCWENC1",71,0)
 I IN("VISIT DATE")\1>DT S OUT(0)="0^Future Dates Not Allowed" Q 0
"RTN","RGCWENC1",72,0)
 I '$D(IN("SITE")) S OUT(0)="0^Missing Facility/Site" Q 0
"RTN","RGCWENC1",73,0)
 I '$D(IN("VISIT TYPE")) S OUT(0)="0^Missing Visit Type" Q 0
"RTN","RGCWENC1",74,0)
 I '$D(IN("SRV CAT")) S OUT(0)="0^Missing Service Category" Q 0
"RTN","RGCWENC1",75,0)
 I '$D(IN("USR")) S OUT(0)="0^Missing User IEN" Q 0
"RTN","RGCWENC1",76,0)
 I $G(IN("HOS LOC")),'$G(IN("CLINIC CODE")) S IN("CLINIC CODE")=$$GET1^DIQ(44,IN("HOS LOC"),8,"I")
"RTN","RGCWENC1",77,0)
 Q 1
"RTN","RGCWENC1",78,0)
 ; Set DATE and END based on TIME RANGE setting in minutes
"RTN","RGCWENC1",79,0)
TIME(RANGE,VISIT,DATE,END) ;
"RTN","RGCWENC1",80,0)
 N TMDIF,SW
"RTN","RGCWENC1",81,0)
 S TMDIF=$S(RANGE<1:0,1:RANGE)
"RTN","RGCWENC1",82,0)
 S DATE=$$FMADD^XLFDT(VISIT,,,-TMDIF)
"RTN","RGCWENC1",83,0)
 S END=$$FMADD^XLFDT(VISIT,,,TMDIF)
"RTN","RGCWENC1",84,0)
 I (DATE\1)<(END\1) S SW=(END\1),END=(DATE\1)_".9999",DATE=SW
"RTN","RGCWENC1",85,0)
 S DATE=(9999999-(DATE\1)_"."_$P(DATE,".",2))-.0001
"RTN","RGCWENC1",86,0)
 S END=9999999-(END\1)_"."_$P(END,".",2)
"RTN","RGCWENC1",87,0)
 I RANGE=-1 S END=END\1_".9999",DATE=DATE\1     ;no time range used; go from begin one day to end
"RTN","RGCWENC1",88,0)
 Q
"RTN","RGCWENC1",89,0)
 ; Find matching visits based on IN array
"RTN","RGCWENC1",90,0)
 ; OUT(0)=# of visits found^optional error message
"RTN","RGCWENC1",91,0)
MATCH(IN,OUT) ;
"RTN","RGCWENC1",92,0)
 N END,DATE,VIEN,STOP,DIFF
"RTN","RGCWENC1",93,0)
 S OUT(0)=0
"RTN","RGCWENC1",94,0)
 D TIME(IN("TIME RANGE"),IN("VISIT DATE"),.DATE,.END)
"RTN","RGCWENC1",95,0)
 F  S DATE=$O(^AUPNVSIT("AA",IN("PAT"),DATE)) Q:'DATE  Q:(DATE>END)  D
"RTN","RGCWENC1",96,0)
 .S VIEN=0
"RTN","RGCWENC1",97,0)
 .F  S VIEN=$O(^AUPNVSIT("AA",IN("PAT"),DATE,VIEN)) Q:'VIEN  D
"RTN","RGCWENC1",98,0)
 ..I $P($G(^AUPNVSIT(VIEN,0)),U,11) Q                        ;check for delete flag just in case xref not killed
"RTN","RGCWENC1",99,0)
 ..I IN("SITE")'=$$GET1^DIQ(9000010,VIEN,.06,"I") Q          ;no match on loc of enc
"RTN","RGCWENC1",100,0)
 ..I IN("VISIT TYPE")'=$$GET1^DIQ(9000010,VIEN,.03,"I") Q    ;no match on vist type
"RTN","RGCWENC1",101,0)
 ..I IN("SRV CAT")'=$$GET1^DIQ(9000010,VIEN,.07,"I") Q       ;no match on service category
"RTN","RGCWENC1",102,0)
 ..I IN("TIME RANGE")>-1 S STOP=0 D  Q:STOP                  ;check time range
"RTN","RGCWENC1",103,0)
 ...S DIFF=$$TIMEDIF(IN("VISIT DATE"),VIEN)                 ;find difference in minutes
"RTN","RGCWENC1",104,0)
 ...S:$$ABS^XLFMTH(DIFF)>IN("TIME RANGE") STOP=1
"RTN","RGCWENC1",105,0)
 ..Q:'$$PRVMTCH    ; if provider sent and didn't match, skip
"RTN","RGCWENC1",106,0)
 ..;
"RTN","RGCWENC1",107,0)
 ..; if called by ancillary, falls through and sets visit into array
"RTN","RGCWENC1",108,0)
 ..; otherwise, check if app wants to match on clinic code or hosp location
"RTN","RGCWENC1",109,0)
 ..I '$G(IN("ANCILLARY")) S STOP=0 D  Q:STOP
"RTN","RGCWENC1",110,0)
 ...I $G(IN("HOS LOC")),'$G(IN("CLINIC CODE")) S IN("CLINIC CODE")=$$GET1^DIQ(44,IN("HOS LOC"),8,"I")
"RTN","RGCWENC1",111,0)
 ...I $G(IN("CLINIC CODE")),IN("CLINIC CODE")'=$$GET1^DIQ(9000010,VIEN,.08,"I") S STOP=1 Q  ;no match on clinic code
"RTN","RGCWENC1",112,0)
 ...I $G(IN("HOS LOC")),(IN("HOS LOC")'=$$GET1^DIQ(9000010,VIEN,.22,"I")) S STOP=1 Q  ;no match on hospital location
"RTN","RGCWENC1",113,0)
 ..S OUT(0)=OUT(0)+1
"RTN","RGCWENC1",114,0)
 ..S OUT(VIEN)=$$TIMEDIF(IN("VISIT DATE"),VIEN)
"RTN","RGCWENC1",115,0)
 Q
"RTN","RGCWENC1",116,0)
 ; Do visits match on provider?
"RTN","RGCWENC1",117,0)
PRVMTCH() ;
"RTN","RGCWENC1",118,0)
 N PRVS,IEN
"RTN","RGCWENC1",119,0)
 I '$G(IN("PROVIDER")) Q 1     ; if no provider sent, assume okay
"RTN","RGCWENC1",120,0)
 ; find all v provider entries for visit
"RTN","RGCWENC1",121,0)
 S IEN=0
"RTN","RGCWENC1",122,0)
 F  S IEN=$O(^AUPNVPRV("AD",VIEN,IEN)) Q:'IEN  D
"RTN","RGCWENC1",123,0)
 .S PRVS(+$G(^AUPNVPRV(IEN,0)))=""
"RTN","RGCWENC1",124,0)
 Q ''$D(PRVS(IN("PROVIDER")))
"RTN","RGCWENC1",125,0)
 ;
"RTN","RGCWENC1",126,0)
TIMEDIF(VDTTM,VIEN) ; return time difference between incoming time and current visit
"RTN","RGCWENC1",127,0)
 Q $$FMDIFF^XLFDT(VDTTM,+$G(^AUPNVSIT(VIEN,0)),2)\60
"RTN","RGCWENC1",128,0)
 ; Create visit
"RTN","RGCWENC1",129,0)
ADDVIST(IN,OUT) ;
"RTN","RGCWENC1",130,0)
 N VSIT,VSITPKG,DFN
"RTN","RGCWENC1",131,0)
 S VSIT("VDT")=IN("VISIT DATE")
"RTN","RGCWENC1",132,0)
 S VSIT("TYP")=IN("VISIT TYPE")
"RTN","RGCWENC1",133,0)
 S VSIT("PAT")=IN("PAT")
"RTN","RGCWENC1",134,0)
 S VSIT("INS")=IN("SITE")
"RTN","RGCWENC1",135,0)
 S VSIT("SVC")=IN("SRV CAT")
"RTN","RGCWENC1",136,0)
 S VSIT("DSS")=$G(IN("CLINIC CODE"))
"RTN","RGCWENC1",137,0)
 S VSIT("LOC")=$G(IN("HOS LOC"))
"RTN","RGCWENC1",138,0)
 S VSIT("USR")=IN("USR")
"RTN","RGCWENC1",139,0)
 S VSIT("OPT")=$G(XQY)
"RTN","RGCWENC1",140,0)
 S VSIT("VID")=$$GETVID^VSITVID
"RTN","RGCWENC1",141,0)
 S:$D(IN("APCDOLOC")) VSIT("OUT")=IN("APCDOLOC")
"RTN","RGCWENC1",142,0)
 S VSIT(0)="F"
"RTN","RGCWENC1",143,0)
 S VSITPKG="RGCW"
"RTN","RGCWENC1",144,0)
 S DFN=IN("PAT")
"RTN","RGCWENC1",145,0)
 D ^VSIT
"RTN","RGCWENC1",146,0)
 I $G(VSIT("IEN"))'>0 S OUT(0)="0^Could not create visit."
"RTN","RGCWENC1",147,0)
 E  S OUT(+VSIT("IEN"))="ADD",OUT(0)=1
"RTN","RGCWENC1",148,0)
 Q
"RTN","RGCWENCX")
0^2^B118150489
"RTN","RGCWENCX",1,0)
RGCWENCX ;RI/CBMI/DKM - Encounter Context Support ;22-Feb-2015 22:39;DKM
"RTN","RGCWENCX",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 149
"RTN","RGCWENCX",3,0)
 ; RPC: Fetch visit data given visit file IEN
"RTN","RGCWENCX",4,0)
 ; Returns hosp loc^visit date^service category^dfn^visit id^locked
"RTN","RGCWENCX",5,0)
GETVISIT(DATA,IEN) ;EP
"RTN","RGCWENCX",6,0)
 N VSIT,DLM
"RTN","RGCWENCX",7,0)
 S (DLM,DATA)=""
"RTN","RGCWENCX",8,0)
 Q:$$LOOKUP^VSIT(IEN,"I",0)<1
"RTN","RGCWENCX",9,0)
 Q:$G(VSIT("DEL"))
"RTN","RGCWENCX",10,0)
 F VSIT="LOC","VDT","SVC","PAT","VID" S DATA=DATA_DLM_VSIT(VSIT),DLM=U
"RTN","RGCWENCX",11,0)
 S DATA=DATA_U_$$ISLOCKED(IEN)
"RTN","RGCWENCX",12,0)
 Q
"RTN","RGCWENCX",13,0)
 ; RPC: Fetch visit IEN given visit id
"RTN","RGCWENCX",14,0)
VID2IEN(DATA,VID) ;EP
"RTN","RGCWENCX",15,0)
 S DATA=$$VID2IEN^VSIT(VID)
"RTN","RGCWENCX",16,0)
 Q
"RTN","RGCWENCX",17,0)
 ; RPC: Return IEN of hospital location
"RTN","RGCWENCX",18,0)
LOCIEN(DATA,LOC) ;EP
"RTN","RGCWENCX",19,0)
 S DATA=$$FIND1^DIC(44,"","QX",LOC)
"RTN","RGCWENCX",20,0)
 Q
"RTN","RGCWENCX",21,0)
 ; RPC: Return values for specified encounter
"RTN","RGCWENCX",22,0)
 ;   DFN   = Patient IEN
"RTN","RGCWENCX",23,0)
 ;   VSTR  = Visit string (extended)
"RTN","RGCWENCX",24,0)
 ;   PRV   = Provider
"RTN","RGCWENCX",25,0)
 ;   CREATE= -1=Always, 0=never, 1=If not found
"RTN","RGCWENCX",26,0)
 ;   Return value =
"RTN","RGCWENCX",27,0)
 ;        1       2       3       4        5       6        7       8      9
"RTN","RGCWENCX",28,0)
 ;     LOCNAME^LOCABBR^ROOMBED^PROVIEN^PROVNAME^VISITIEN^VISITID^LOCKED^ERRORTXT
"RTN","RGCWENCX",29,0)
FETCH(DATA,DFN,VSTR,PRV,CREATE) ;EP
"RTN","RGCWENCX",30,0)
 N IEN,X,FETCH
"RTN","RGCWENCX",31,0)
 S PRV=+$G(PRV)
"RTN","RGCWENCX",32,0)
 S FETCH=$$GET^XPAR("ALL","RGCWENCX PROV ENC FETCH")
"RTN","RGCWENCX",33,0)
 I 'PRV,$$ISPROV^RGCWFUSR S PRV=DUZ
"RTN","RGCWENCX",34,0)
 S IEN=$$VSTR2VIS(DFN,.VSTR,.CREATE,PRV)
"RTN","RGCWENCX",35,0)
 I IEN>0,'PRV,FETCH D
"RTN","RGCWENCX",36,0)
 .D GETPRV2(.X,IEN,1)
"RTN","RGCWENCX",37,0)
 .S PRV=+$O(X(0))
"RTN","RGCWENCX",38,0)
 S DATA=$P($G(^SC(+VSTR,0)),U,1,2)
"RTN","RGCWENCX",39,0)
 S $P(DATA,U,3)=$P($G(^DPT(DFN,.101)),U)
"RTN","RGCWENCX",40,0)
 S $P(DATA,U,4)=PRV
"RTN","RGCWENCX",41,0)
 S $P(DATA,U,5)=$P($G(^VA(200,PRV,0)),U)
"RTN","RGCWENCX",42,0)
 I IEN>0 S $P(DATA,U,6)=IEN,$P(DATA,U,7)=$P($G(^AUPNVSIT(IEN,150)),U),$P(DATA,U,8)=$$ISLOCKED(IEN)
"RTN","RGCWENCX",43,0)
 E  S $P(DATA,U,9)=$P(IEN,U,2)
"RTN","RGCWENCX",44,0)
 Q
"RTN","RGCWENCX",45,0)
 ; RPC: Return location info
"RTN","RGCWENCX",46,0)
 ;   Returns 0 node of HOSPITAL LOCATION file for specified entry.
"RTN","RGCWENCX",47,0)
LOCINFO(DATA,LOC) ;
"RTN","RGCWENCX",48,0)
 Q $G(^SC(+LOC,0))
"RTN","RGCWENCX",49,0)
 ; Find a visit
"RTN","RGCWENCX",50,0)
 ;   DFN = Patient IEN
"RTN","RGCWENCX",51,0)
 ;   DAT = Visit date/time
"RTN","RGCWENCX",52,0)
 ;   CAT = Service category
"RTN","RGCWENCX",53,0)
 ;   LOC = Value to compare (location or stop code)
"RTN","RGCWENCX",54,0)
 ;   CRE = Force create?
"RTN","RGCWENCX",55,0)
 ;   PRV = Provider IEN to restrict search (optional)
"RTN","RGCWENCX",56,0)
 ;   ELC = Encounter location (optional)
"RTN","RGCWENCX",57,0)
 ; Returns one of:
"RTN","RGCWENCX",58,0)
 ;   If found or created: visit ien
"RTN","RGCWENCX",59,0)
 ;   If not found: 0
"RTN","RGCWENCX",60,0)
 ;   If error: -1^error message
"RTN","RGCWENCX",61,0)
FNDVIS(DFN,DAT,CAT,LOC,CRE,PRV,ELC) ;PEP - Find a visit
"RTN","RGCWENCX",62,0)
 N IN,OUT,IEN,DIF
"RTN","RGCWENCX",63,0)
 S IN("PAT")=DFN
"RTN","RGCWENCX",64,0)
 S IN("VISIT DATE")=DAT
"RTN","RGCWENCX",65,0)
 S IN("VISIT TYPE")=$S(CAT="E":"O",1:$S($G(DUZ("AG"))="I":$$GET1^DIQ(9001000,DUZ(2),.04,"I"),1:$$GET^XPAR("ALL","RGCWENCX VISIT TYPE")))
"RTN","RGCWENCX",66,0)
 S IN("SRV CAT")=CAT
"RTN","RGCWENCX",67,0)
 S IN("TIME RANGE")=60
"RTN","RGCWENCX",68,0)
 S IN("USR")=DUZ
"RTN","RGCWENCX",69,0)
 S:$G(LOC) IN("HOS LOC")=LOC
"RTN","RGCWENCX",70,0)
 S:$G(XQY) IN("APCDOPT")=XQY
"RTN","RGCWENCX",71,0)
 S:$G(PRV) IN("PROVIDER")=PRV
"RTN","RGCWENCX",72,0)
 S ELC=$G(ELC)
"RTN","RGCWENCX",73,0)
 I $L(ELC),ELC'=+ELC D
"RTN","RGCWENCX",74,0)
 .S IN("APCDOLOC")=ELC
"RTN","RGCWENCX",75,0)
 .S ELC=$$GET^XPAR("ALL","RGCWENCX OTHER LOCATION")
"RTN","RGCWENCX",76,0)
 S IN("SITE")=$S(ELC:ELC,$P($G(^SC(+$G(LOC),0)),U,4):$P(^(0),U,4),1:DUZ(2))
"RTN","RGCWENCX",77,0)
 I 'CRE S IN("NEVER ADD")=1
"RTN","RGCWENCX",78,0)
 E  I CRE<0 S IN("FORCE ADD")=1
"RTN","RGCWENCX",79,0)
 I $G(DUZ("AG"))="I" D
"RTN","RGCWENCX",80,0)
 .D GETVISIT^BSDAPI4(.IN,.OUT)
"RTN","RGCWENCX",81,0)
 E  D GETVISIT^RGCWENC1(.IN,.OUT)
"RTN","RGCWENCX",82,0)
 Q:'OUT(0) $S(OUT(0)[U:"-1^"_$P(OUT(0),U,2),1:0)
"RTN","RGCWENCX",83,0)
 S IEN=0,DIF=999999
"RTN","RGCWENCX",84,0)
 F  S IEN=$O(OUT(IEN)) Q:'IEN  D
"RTN","RGCWENCX",85,0)
 .I OUT(IEN)="ADD" D
"RTN","RGCWENCX",86,0)
 ..N VSTR
"RTN","RGCWENCX",87,0)
 ..S VSTR=$$VIS2VSTR(DFN,IEN)
"RTN","RGCWENCX",88,0)
 ..D BRDCAST^CIANBEVT("PCC."_DFN_".VST",VSTR)
"RTN","RGCWENCX",89,0)
 ..D:$G(PRV) UPDPRV(,DFN,VSTR,PRV)
"RTN","RGCWENCX",90,0)
 .S:$$ABS(OUT(IEN))<DIF DIF=$$ABS(OUT(IEN)),IEN(0)=IEN
"RTN","RGCWENCX",91,0)
 Q IEN(0)
"RTN","RGCWENCX",92,0)
 ; Return absolute value
"RTN","RGCWENCX",93,0)
ABS(X) Q $S(X<0:-X,1:X)
"RTN","RGCWENCX",94,0)
 ; Return a visit ien from a visit string (create if necessary)
"RTN","RGCWENCX",95,0)
 ;   DFN    = Patient IEN
"RTN","RGCWENCX",96,0)
 ;   VSTR   = Visit string
"RTN","RGCWENCX",97,0)
 ;   CREATE = Create flag
"RTN","RGCWENCX",98,0)
 ;            0 = Don't create
"RTN","RGCWENCX",99,0)
 ;           >0 = Create if not found
"RTN","RGCWENCX",100,0)
 ;           <0 = Always create
"RTN","RGCWENCX",101,0)
 ;   PRV    = Provider IEN to restrict visit search (optional)
"RTN","RGCWENCX",102,0)
VSTR2VIS(DFN,VSTR,CREATE,PRV) ;PEP - Convert visit string to visit IEN
"RTN","RGCWENCX",103,0)
 N IEN,DAT,CAT,LOC,FLG,VSIT,LP
"RTN","RGCWENCX",104,0)
 S LOC=+VSTR,DAT=+$P(VSTR,";",2),CAT=$P(VSTR,";",3),IEN=+$P(VSTR,";",4),CREATE=+$G(CREATE)
"RTN","RGCWENCX",105,0)
 I 'IEN,CREATE'<0 S IEN=$$FNDVIS(DFN,DAT,CAT,LOC,0,.PRV)
"RTN","RGCWENCX",106,0)
 I 'IEN,CREATE'<0 S IEN=$$FNDVIS(DFN,DAT,CAT,LOC,0)
"RTN","RGCWENCX",107,0)
 I 'IEN,CREATE S IEN=$$FNDVIS(DFN,DAT,CAT,LOC,CREATE,.PRV)
"RTN","RGCWENCX",108,0)
 S:IEN>0 VSTR=$$VIS2VSTR(DFN,IEN,.IEN),$P(VSTR,";")=LOC
"RTN","RGCWENCX",109,0)
 Q IEN
"RTN","RGCWENCX",110,0)
 ; Return a visit string given visit ien
"RTN","RGCWENCX",111,0)
VIS2VSTR(DFN,IEN,ERR) ;PEP - Convert visit IEN to visit string
"RTN","RGCWENCX",112,0)
 N VSTR
"RTN","RGCWENCX",113,0)
 S VSTR=$G(^AUPNVSIT(+IEN,0))
"RTN","RGCWENCX",114,0)
 I '$L(VSTR) S ERR="-1^Visit does not exist"
"RTN","RGCWENCX",115,0)
 E  I $P(VSTR,U,5)'=DFN S ERR="-1^Visit does not belong to current patient",VSTR=""
"RTN","RGCWENCX",116,0)
 E  S VSTR=$P(VSTR,U,22)_";"_+VSTR_";"_$P(VSTR,U,7)_";"_IEN
"RTN","RGCWENCX",117,0)
 Q VSTR
"RTN","RGCWENCX",118,0)
 ; RPC: Return a list of appointments
"RTN","RGCWENCX",119,0)
 ; APPTTIME^LOCIEN^LOCNAME^EXTSTATUS
"RTN","RGCWENCX",120,0)
APPTLST(DATA,DFN) ;EP
"RTN","RGCWENCX",121,0)
 N VASD,I
"RTN","RGCWENCX",122,0)
 S VASD("F")=$$HTFM^XLFDT($H-30,1)
"RTN","RGCWENCX",123,0)
 S VASD("T")=$$HTFM^XLFDT($H+1,1)_".2359"
"RTN","RGCWENCX",124,0)
 S VASD("W")="123456789"
"RTN","RGCWENCX",125,0)
 D SDA^VADPT
"RTN","RGCWENCX",126,0)
 S I=0
"RTN","RGCWENCX",127,0)
 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  D
"RTN","RGCWENCX",128,0)
 .S DATA(I)=$P(^UTILITY("VASD",$J,I,"I"),U,1,2)_U_$P(^("E"),U,2,3)
"RTN","RGCWENCX",129,0)
 K ^UTILITY("VASD",$J)
"RTN","RGCWENCX",130,0)
 Q
"RTN","RGCWENCX",131,0)
 ; RPC: Return a list of admissions
"RTN","RGCWENCX",132,0)
 ; VSTR^LOCNAME^ADMDATE^TYPE^LOCKED
"RTN","RGCWENCX",133,0)
ADMITLST(DATA,DFN,BEG,END) ;EP
"RTN","RGCWENCX",134,0)
 N TIM,MOV,CNT,IDT,IDT2
"RTN","RGCWENCX",135,0)
 S CNT=0,TIM=""
"RTN","RGCWENCX",136,0)
 S:'$G(BEG) BEG=2000000
"RTN","RGCWENCX",137,0)
 S:'$G(END) END=DT
"RTN","RGCWENCX",138,0)
 S IDT2=9999999-(BEG\1)+.9,IDT=9999999-(END\1)
"RTN","RGCWENCX",139,0)
 F  Q:'IDT!(IDT>IDT2)  D  S IDT=$O(^DGPM("ATID1",DFN,IDT))
"RTN","RGCWENCX",140,0)
 .S MOV=0 F  S MOV=$O(^DGPM("ATID1",DFN,IDT,MOV)) Q:MOV'>0  D
"RTN","RGCWENCX",141,0)
 ..S X=$$ADMITINF(DFN,MOV)
"RTN","RGCWENCX",142,0)
 ..S:X CNT=CNT+1,DATA(CNT)=X
"RTN","RGCWENCX",143,0)
 Q
"RTN","RGCWENCX",144,0)
 ; RPC: Return current admission info
"RTN","RGCWENCX",145,0)
 ; VSTR^LOCNAME^ADMDATE^TYPE^LOCKED
"RTN","RGCWENCX",146,0)
ADMITCUR(DATA,DFN) ;EP
"RTN","RGCWENCX",147,0)
 S DATA=$$ADMITINF(DFN,+$G(^DPT(DFN,.105)))
"RTN","RGCWENCX",148,0)
 Q
"RTN","RGCWENCX",149,0)
 ; Return admission info
"RTN","RGCWENCX",150,0)
 ; VSTR^LOCNAME^ADMDATE^TYPE^LOCKED
"RTN","RGCWENCX",151,0)
ADMITINF(DFN,MOV) ;EP
"RTN","RGCWENCX",152,0)
 N VIEN,VSTR,LLOC,XLOC,HLOC,CMOV,AMOV,DMOV,LMOV,MTIM,XTYP,X0
"RTN","RGCWENCX",153,0)
 S X0=$G(^DGPM(+MOV,0))
"RTN","RGCWENCX",154,0)
 Q:$P(X0,U,3)'=DFN ""
"RTN","RGCWENCX",155,0)
 S MTIM=$P(X0,U),DMOV=$P(X0,U,17),VIEN=$P(X0,U,27)
"RTN","RGCWENCX",156,0)
 S:'$D(^AUPNVSIT(+VIEN,0)) VIEN=""
"RTN","RGCWENCX",157,0)
 S CMOV=+$G(^DPT(DFN,.102)),AMOV=+$G(^(.105))
"RTN","RGCWENCX",158,0)
 S XTYP=$P($G(^DG(405.1,+$P(X0,U,4),0)),U)
"RTN","RGCWENCX",159,0)
 I MOV=AMOV,CMOV'=AMOV,$D(^DGPM(CMOV,0)) S LMOV=CMOV
"RTN","RGCWENCX",160,0)
 E  S LMOV=MOV
"RTN","RGCWENCX",161,0)
 D AL2(MOV,.XLOC,.HLOC),AL2(LMOV,.LLOC,.HLOC):LMOV'=MOV
"RTN","RGCWENCX",162,0)
 I $L($G(LLOC)),LLOC'=XLOC S XLOC=XLOC_" ("_LLOC_")"
"RTN","RGCWENCX",163,0)
 S VSTR=HLOC_";"_MTIM_";H;"_VIEN
"RTN","RGCWENCX",164,0)
 Q VSTR_U_XLOC_U_MTIM_U_XTYP_U_$$ISLOCKED(VIEN)
"RTN","RGCWENCX",165,0)
 ; Return ward location name and associated hospital location ien for movement
"RTN","RGCWENCX",166,0)
AL2(MOV,WLOC,HLOC) ;
"RTN","RGCWENCX",167,0)
 S WLOC=+$P($G(^DGPM(MOV,0)),U,6),WLOC=$P($G(^DIC(42,WLOC,0)),U),HLOC=+$G(^(44))
"RTN","RGCWENCX",168,0)
 Q
"RTN","RGCWENCX",169,0)
 ; RPC: Get discharge movement information
"RTN","RGCWENCX",170,0)
DISCHRG(DATA,DFN,ADMITDT) ;EP
"RTN","RGCWENCX",171,0)
 N VAIP
"RTN","RGCWENCX",172,0)
 S DATA=DT
"RTN","RGCWENCX",173,0)
 Q:'$G(ADMITDT)
"RTN","RGCWENCX",174,0)
 S VAIP("D")=ADMITDT
"RTN","RGCWENCX",175,0)
 D 52^VADPT
"RTN","RGCWENCX",176,0)
 S:VAIP(17) DATA=+VAIP(17,1)
"RTN","RGCWENCX",177,0)
 Q
"RTN","RGCWENCX",178,0)
 ; Returns true if active hospital location
"RTN","RGCWENCX",179,0)
 ; LOC = IEN of hospital location
"RTN","RGCWENCX",180,0)
 ; DAT = optional date to check (defaults to today)
"RTN","RGCWENCX",181,0)
ACTLOC(LOC,DAT) ;PEP - Is active location?
"RTN","RGCWENCX",182,0)
 N D0,X
"RTN","RGCWENCX",183,0)
 S X=$G(^SC(LOC,0))
"RTN","RGCWENCX",184,0)
 Q:'$L(X) 0                                                            ; Screen nonexistent entries
"RTN","RGCWENCX",185,0)
 S X=$P($G(^DG(40.8,+$P(X,U,15),0)),U,7)
"RTN","RGCWENCX",186,0)
 I X,X'=DUZ(2) Q 0                                                     ; Screen clinics not in current division
"RTN","RGCWENCX",187,0)
 Q:+$G(^SC(LOC,"OOS")) 0                                               ; Screen OOS entry
"RTN","RGCWENCX",188,0)
 S D0=+$G(^SC(LOC,42)),DAT=$G(DAT,DT)\1
"RTN","RGCWENCX",189,0)
 I D0 D WIN^DGPMDDCF Q 'X                                              ; Check out of svc wards
"RTN","RGCWENCX",190,0)
 S X=$G(^SC(LOC,"I"))
"RTN","RGCWENCX",191,0)
 Q:'X 1                                                                ; No inactivate date
"RTN","RGCWENCX",192,0)
 Q:DAT'<$P(X,U)&($P(X,U,2)=""!(DAT<$P(X,U,2))) 0                       ; Check reactivate date
"RTN","RGCWENCX",193,0)
 Q 1                                                                   ; Must still be active
"RTN","RGCWENCX",194,0)
 ; RPC: Return a set of hospital locations
"RTN","RGCWENCX",195,0)
HOSPLOC(DATA,FROM,DIR,MAX,TYPE,START,END) ;EP
"RTN","RGCWENCX",196,0)
 N IEN,CNT,APT
"RTN","RGCWENCX",197,0)
 S FROM=$G(FROM),DIR=$G(DIR,1),MAX=$G(MAX,44),TYPE=$G(TYPE),CNT=0
"RTN","RGCWENCX",198,0)
 S START=$G(START)\1,END=$G(END)\1
"RTN","RGCWENCX",199,0)
 S:'END END=START
"RTN","RGCWENCX",200,0)
 F  S FROM=$O(^SC("B",FROM),DIR),IEN="" Q:FROM=""  D  Q:CNT'<MAX
"RTN","RGCWENCX",201,0)
 .F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","RGCWENCX",202,0)
 ..I $$ACTLOC(IEN),$P(^SC(IEN,0),U,3)[TYPE D
"RTN","RGCWENCX",203,0)
 ...I START S APT=$O(^SC(IEN,"S",START-.1))\1 Q:'APT!(APT>END)
"RTN","RGCWENCX",204,0)
 ...S CNT=CNT+1,DATA(CNT)=IEN_U_$P(^SC(IEN,0),U)_U_$S($G(DUZ("AG"))="I":$P($G(^BSDSC(IEN,0)),U,12),1:$P($G(^SC(IEN,0)),U,9))
"RTN","RGCWENCX",205,0)
 Q
"RTN","RGCWENCX",206,0)
 ; RPC: Return a set of clinics
"RTN","RGCWENCX",207,0)
CLINLOC(DATA,FROM,DIR,MAX,START,END) ;EP
"RTN","RGCWENCX",208,0)
 D HOSPLOC(.DATA,.FROM,.DIR,.MAX,"C",.START,.END)
"RTN","RGCWENCX",209,0)
 Q
"RTN","RGCWENCX",210,0)
 ; RPC: Return a set of wards
"RTN","RGCWENCX",211,0)
INPLOC(DATA,FROM,DIR,MAX) ;EP
"RTN","RGCWENCX",212,0)
 D HOSPLOC(.DATA,.FROM,.DIR,.MAX,"W")
"RTN","RGCWENCX",213,0)
 Q
"RTN","RGCWENCX",214,0)
 ; RPC: Return appts/visits for patient
"RTN","RGCWENCX",215,0)
 ;  DFN = Patient IEN
"RTN","RGCWENCX",216,0)
 ;  BEG = Beginning date to search (optional)
"RTN","RGCWENCX",217,0)
 ;        Defaults to RGCWENCX SEARCH RANGE START
"RTN","RGCWENCX",218,0)
 ;  END = Ending date to search (optional)
"RTN","RGCWENCX",219,0)
 ;        Defaults to RGCWENCX SEARCH RANGE END
"RTN","RGCWENCX",220,0)
 ;  LOC = If not specified, return all locations and all active appointments
"RTN","RGCWENCX",221,0)
 ;        If <0, return all locations and all appointments (except checked-in)
"RTN","RGCWENCX",222,0)
 ;        If >0, return only specified location and only active appointments
"RTN","RGCWENCX",223,0)
 ;SCEXC = Contains service category types to exclude (defaults to HXI)
"RTN","RGCWENCX",224,0)
 ; .DATA= List of results in format:
"RTN","RGCWENCX",225,0)
 ;        VSTR^LOCNAME^DATE^STATUS^LOCKED^PRV^PRVNM^STANDALONE
"RTN","RGCWENCX",226,0)
VISITLST(DATA,DFN,BEG,END,LOC,SCEXC) ;EP
"RTN","RGCWENCX",227,0)
 N VAERR,VASD,CNT,IDT,IDT2,STS,DTM,LOCNAM,LOCIEN,VSTR,IEN,LP,XI,XE,X
"RTN","RGCWENCX",228,0)
 S CNT=0,DATA=$$TMPGBL^RGUTRPC,LOC=+$G(LOC)
"RTN","RGCWENCX",229,0)
 S SCEXC=$G(SCEXC,"XI")  ;p9 removed H
"RTN","RGCWENCX",230,0)
 S:'$G(BEG) BEG=$$DTSTART
"RTN","RGCWENCX",231,0)
 S:'$G(END) END=$$DTSTOP+.9
"RTN","RGCWENCX",232,0)
 ; Return list of visits for a patient
"RTN","RGCWENCX",233,0)
 S IDT2=9999999-(BEG\1)+.9,IDT=9999999-(END\1)
"RTN","RGCWENCX",234,0)
 F  Q:'IDT!(IDT>IDT2)  D  S IDT=$O(^AUPNVSIT("AA",DFN,IDT))
"RTN","RGCWENCX",235,0)
 .F IEN=0:0 S IEN=$O(^AUPNVSIT("AA",DFN,IDT,IEN)) Q:'IEN  D
"RTN","RGCWENCX",236,0)
 ..N PRV
"RTN","RGCWENCX",237,0)
 ..S XI=$G(^AUPNVSIT(IEN,0)),DTM=+XI,LOCIEN=$P(XI,U,22),LOCNAM=$P($G(^SC(+LOCIEN,0),"Unknown"),U),X=$P(XI,U,7)
"RTN","RGCWENCX",238,0)
 ..Q:$P(XI,U,11)                                                       ; Ignore if logically deleted
"RTN","RGCWENCX",239,0)
 ..Q:'LOC&'LOCIEN
"RTN","RGCWENCX",240,0)
 ..Q:LOC>0&(LOC'=LOCIEN)
"RTN","RGCWENCX",241,0)
 ..D GETPRV2(.PRV,IEN,1)
"RTN","RGCWENCX",242,0)
 ..S PRV=$P($G(PRV(+$O(PRV(0)))),U,1,2)
"RTN","RGCWENCX",243,0)
 ..S VSTR=LOCIEN_";"_DTM_";"_X_";"_IEN,STS=$$SET^RGUT(X,$P($G(^DD(9000010,.07,0)),U,3))
"RTN","RGCWENCX",244,0)
 ..S:SCEXC'[X CNT=CNT+1,@DATA@(-DTM,CNT)=VSTR_U_LOCNAM_U_DTM_U_STS_U_$$ISLOCKED(IEN)_U_PRV_U_'$D(^SCE("AVSIT",IEN))
"RTN","RGCWENCX",245,0)
 Q:LOC>0
"RTN","RGCWENCX",246,0)
 ; Get appointments pending check-in
"RTN","RGCWENCX",247,0)
 S VASD("F")=$S(LOC<0:BEG,BEG<DT:DT,1:BEG)
"RTN","RGCWENCX",248,0)
 S VASD("T")=END
"RTN","RGCWENCX",249,0)
 S VASD("W")=$S(LOC<0:123456789,1:1)
"RTN","RGCWENCX",250,0)
 D SDA^VADPT
"RTN","RGCWENCX",251,0)
 S LP=0
"RTN","RGCWENCX",252,0)
 F  S LP=$O(^UTILITY("VASD",$J,LP)) Q:'LP  D
"RTN","RGCWENCX",253,0)
 .S XI=^UTILITY("VASD",$J,LP,"I"),XE=^("E")
"RTN","RGCWENCX",254,0)
 .S DTM=$P(XI,U),LOCIEN=$P(XI,U,2),LOCNAM=$P(XE,U,2)
"RTN","RGCWENCX",255,0)
 .Q:$$CHKDIN(DFN,LOCIEN,DTM)
"RTN","RGCWENCX",256,0)
 .S XI=$G(^DPT(DFN,"S",DTM,0))
"RTN","RGCWENCX",257,0)
 .Q:+XI'=LOCIEN
"RTN","RGCWENCX",258,0)
 .S XI=$P(XI,U,20),STS=$S(LOC<0:$P(XE,U,3),1:"Pending Check-In")
"RTN","RGCWENCX",259,0)
 .I XI,$P($G(^SCE(XI,0)),U,5) Q
"RTN","RGCWENCX",260,0)
 .S VSTR=LOCIEN_";"_DTM_";A"
"RTN","RGCWENCX",261,0)
 .S CNT=CNT+1,@DATA@(-DTM,CNT)=VSTR_U_LOCNAM_U_DTM_U_STS
"RTN","RGCWENCX",262,0)
 K ^UTILITY("VASD",$J)
"RTN","RGCWENCX",263,0)
 Q
"RTN","RGCWENCX",264,0)
 ; Returns true if checked in
"RTN","RGCWENCX",265,0)
CHKDIN(DFN,LOCIEN,DTM) ;
"RTN","RGCWENCX",266,0)
 Q:$G(DUZ("AG"))="I" $$CI^BSDU2(DFN,LOCIEN,DTM)
"RTN","RGCWENCX",267,0)
 Q ''$P($$STATUS^SDAMA308(DFN,DTM,LOCIEN),";",4)
"RTN","RGCWENCX",268,0)
 ; Returns visit lock status:
"RTN","RGCWENCX",269,0)
 ;  -1:  Visit not found
"RTN","RGCWENCX",270,0)
 ;   0:  Visit is not locked
"RTN","RGCWENCX",271,0)
 ;   1:  Visit is locked
"RTN","RGCWENCX",272,0)
ISLOCKED(IEN) ;PEP - Is visit locked?
"RTN","RGCWENCX",273,0)
 N DAT,DAYS,EXPDT
"RTN","RGCWENCX",274,0)
 S DAT=$$VISREFDT(IEN)
"RTN","RGCWENCX",275,0)
 Q:'DAT -1
"RTN","RGCWENCX",276,0)
 ;IHS/MSC/PLS - 02/18/09 - Parameter now holds lock expiration date
"RTN","RGCWENCX",277,0)
 S EXPDT=$$GET^XPAR("USR","RGCWENCX VISIT LOCK OVERRIDE","`"_IEN)
"RTN","RGCWENCX",278,0)
 Q:EXPDT'<$$DT^XLFDT() 0
"RTN","RGCWENCX",279,0)
 D:EXPDT DEL^XPAR("USR","RGCWENCX VISIT LOCK OVERRIDE","`"_IEN)  ; remove expired locked
"RTN","RGCWENCX",280,0)
 ;Q:$$GET^XPAR("USR","RGCWENCX VISIT LOCK OVERRIDE","`"_IEN) 0
"RTN","RGCWENCX",281,0)
 S DAYS=$$GET^XPAR("ALL","RGCWENCX VISIT LOCKED")
"RTN","RGCWENCX",282,0)
 Q $$FMDIFF^XLFDT(DT,DAT)>$S(DAYS<1:1,1:DAYS)
"RTN","RGCWENCX",283,0)
 ; Returns reference date for visit lock check
"RTN","RGCWENCX",284,0)
VISREFDT(IEN) ;
"RTN","RGCWENCX",285,0)
 N ADM,DIS,DAT
"RTN","RGCWENCX",286,0)
 S DAT=$P($G(^AUPNVSIT(+IEN,0)),U,2)
"RTN","RGCWENCX",287,0)
 Q:'DAT ""
"RTN","RGCWENCX",288,0)
 S ADM=$O(^DGPM("AVISIT",IEN,0))
"RTN","RGCWENCX",289,0)
 Q:'ADM DAT
"RTN","RGCWENCX",290,0)
 S DIS=$P($G(^DGPM(ADM,0)),U,17)
"RTN","RGCWENCX",291,0)
 Q $S(DIS:$P($G(^DGPM(DIS,0)),U),1:DT)
"RTN","RGCWENCX",292,0)
 ; RPC: Return providers associated with a visit (by VSTR)
"RTN","RGCWENCX",293,0)
 ; If PRI is set, returns primary only
"RTN","RGCWENCX",294,0)
 ; Returns as DATA(DUZ)=DUZ^Name^Primary^EncDT
"RTN","RGCWENCX",295,0)
GETPRV(DATA,DFN,VSTR,PRI) ;EP
"RTN","RGCWENCX",296,0)
 D GETPRV2(.DATA,$$VSTR2VIS(DFN,VSTR,0),.PRI)
"RTN","RGCWENCX",297,0)
 Q
"RTN","RGCWENCX",298,0)
 ; RPC: Return providers associated with a visit (by IEN)
"RTN","RGCWENCX",299,0)
 ; If PRI is set, returns primary only
"RTN","RGCWENCX",300,0)
 ; Returns as DATA(DUZ)=DUZ^Name^Primary^EncDT
"RTN","RGCWENCX",301,0)
GETPRV2(DATA,IEN,PRI) ;EP
"RTN","RGCWENCX",302,0)
 N LP,ED,PP,PR,X
"RTN","RGCWENCX",303,0)
 K DATA
"RTN","RGCWENCX",304,0)
 S LP=0,IEN=+IEN,PRI=+$G(PRI)
"RTN","RGCWENCX",305,0)
 F  S LP=$O(^AUPNVPRV("AD",IEN,LP)) Q:'LP  D
"RTN","RGCWENCX",306,0)
 .S X=$G(^AUPNVPRV(LP,0)),ED=$P($G(^(12)),U),PP=$P(X,U,4)="P",PR=+X
"RTN","RGCWENCX",307,0)
 .I $P(X,U,3)=IEN,'PRI!PP S DATA(PR)=PR_U_$$GET1^DIQ(200,PR,.01)_U_PP_U_ED
"RTN","RGCWENCX",308,0)
 Q
"RTN","RGCWENCX",309,0)
 ; RPC: Add/Remove providers to/from a visit
"RTN","RGCWENCX",310,0)
UPDPRV(DATA,DFN,VSTR,PRV) ;EP
"RTN","RGCWENCX",311,0)
 N PCC,ACT,PRI,PFG,RTN
"RTN","RGCWENCX",312,0)
 S:$D(PRV)=1 PRV(PRV)="P"
"RTN","RGCWENCX",313,0)
 S PRV="",PFG=0
"RTN","RGCWENCX",314,0)
 F  S PRV=$O(PRV(PRV)) Q:'$L(PRV)  D
"RTN","RGCWENCX",315,0)
 .S ACT=PRV(PRV),PRI=0
"RTN","RGCWENCX",316,0)
 .S:ACT="P" PRI='PFG,ACT="+",PFG=1
"RTN","RGCWENCX",317,0)
 .D ADDPCC("PRV"_ACT_U_PRV_"^^^^"_PRI)
"RTN","RGCWENCX",318,0)
 D:$D(PCC) SAVE^RGCWENPC(.DATA,.PCC)
"RTN","RGCWENCX",319,0)
 Q
"RTN","RGCWENCX",320,0)
 ; RPC: Check visit for missing elements
"RTN","RGCWENCX",321,0)
CHKVISIT(DATA,IEN) ;
"RTN","RGCWENCX",322,0)
 Q:$T(+2^RGCWXQPC)=""
"RTN","RGCWENCX",323,0)
 N RTN,CNT
"RTN","RGCWENCX",324,0)
 S CNT=0
"RTN","RGCWENCX",325,0)
 D NOPOV^RGCWXQPC(.RTN,IEN),CV1("POV")
"RTN","RGCWENCX",326,0)
 D NOEMC^RGCWXQPC(.RTN,IEN),CV1("E&M")
"RTN","RGCWENCX",327,0)
 Q
"RTN","RGCWENCX",328,0)
CV1(DX) S:$D(RTN) CNT=CNT+1,$P(RTN,U)=DX,DATA(CNT)=RTN
"RTN","RGCWENCX",329,0)
 K RTN
"RTN","RGCWENCX",330,0)
 Q
"RTN","RGCWENCX",331,0)
 ; Build PCC array
"RTN","RGCWENCX",332,0)
ADDPCC(X) ;
"RTN","RGCWENCX",333,0)
 S:'$D(PCC) PCC(1)="HDR^^^"_VSTR,PCC(2)="VST^PT^"_DFN
"RTN","RGCWENCX",334,0)
 S PCC($O(PCC(""),-1)+1)=X
"RTN","RGCWENCX",335,0)
 Q
"RTN","RGCWENCX",336,0)
 ;  VST may either be the visit ien or a visitstr
"RTN","RGCWENCX",337,0)
 ;  Optionally returns success indicator
"RTN","RGCWENCX",338,0)
SETCTX(VST) ;PEP - Set the encounter context
"RTN","RGCWENCX",339,0)
 N UID
"RTN","RGCWENCX",340,0)
 S UID=$$GETUID^CIANBUTL
"RTN","RGCWENCX",341,0)
 D:$L(UID) QUEUE^CIANBEVT("CONTEXT.ENCOUNTER",VST,UID)
"RTN","RGCWENCX",342,0)
 Q:$Q ''$L(UID)
"RTN","RGCWENCX",343,0)
 Q
"RTN","RGCWENCX",344,0)
 ; Return FM date given relative date
"RTN","RGCWENCX",345,0)
 ;   DAT = Relative date (e.g., T+1)
"RTN","RGCWENCX",346,0)
 ;   DFL = Default relative date (if DAT is not specified)
"RTN","RGCWENCX",347,0)
TOFM(DAT,DFL) ;
"RTN","RGCWENCX",348,0)
 N %DT,X,Y
"RTN","RGCWENCX",349,0)
 S X=$S(DAT="":DFL,1:DAT),%DT="TS"
"RTN","RGCWENCX",350,0)
 D ^%DT
"RTN","RGCWENCX",351,0)
 Q Y
"RTN","RGCWENCX",352,0)
 ; Return start date for encounters
"RTN","RGCWENCX",353,0)
DTSTART() ;EP
"RTN","RGCWENCX",354,0)
 Q $$TOFM($$GET^XPAR("ALL","RGCWENCX SEARCH RANGE START",1,"I"),"T-365")
"RTN","RGCWENCX",355,0)
 ; Return stop date for encounters
"RTN","RGCWENCX",356,0)
DTSTOP() ;EP
"RTN","RGCWENCX",357,0)
 Q $$TOFM($$GET^XPAR("ALL","RGCWENCX SEARCH RANGE STOP",1,"I"),"T+90")
"RTN","RGCWENCX",358,0)
 ; Return formatted visit detail report
"RTN","RGCWENCX",359,0)
ENINQ(DATA,VIEN) ;
"RTN","RGCWENCX",360,0)
 S DATA=$$TMPGBL^RGUTRPC
"RTN","RGCWENCX",361,0)
 D CAPTURE^RGUTHFS($TR($$GET^XPAR($$ENT^RGCWFPAR("RGCWENCX DETAIL REPORT"),"RGCWENCX DETAIL REPORT"),"~",U),DATA,80)
"RTN","RGCWENCX",362,0)
 Q
"RTN","RGCWFTIU")
0^10^B2617280
"RTN","RGCWFTIU",1,0)
RGCWFTIU ;RI/CBMI/DKM - TIU FHIR Support ;28-Jul-2014 17:23;DKM
"RTN","RGCWFTIU",2,0)
 ;;1.0;RGCW;;14-March-2014;Build 149
"RTN","RGCWFTIU",3,0)
 ;=================================================================
"RTN","RGCWFTIU",4,0)
DOCUMENT N ATR,TEXT,VL
"RTN","RGCWFTIU",5,0)
 M VL=VALS(FILE,IENS)
"RTN","RGCWFTIU",6,0)
 K VALS
"RTN","RGCWFTIU",7,0)
 D NEWFEED^RGCWFHIR(VL(.01,"E"))
"RTN","RGCWFTIU",8,0)
 S ATR("scheme")="http://hl7.org/fhir/tag",ATR("term")="http://hl7.org/fhir/tag/document"
"RTN","RGCWFTIU",9,0)
 D ADDTAG^RGCWFHIR("category",.ATR,1)
"RTN","RGCWFTIU",10,0)
 D NEWENTRY^RGCWFHIR("Composition","urn:guid:"_$$UUID^RGCWFHIR())
"RTN","RGCWFTIU",11,0)
 S ATR("xmlns")="http://hl7.org/fhir"
"RTN","RGCWFTIU",12,0)
 D ADDTAG^RGCWFHIR("Composition",.ATR)
"RTN","RGCWFTIU",13,0)
 D ADDTAG^RGCWFHIR("text")
"RTN","RGCWFTIU",14,0)
 D PUT^RGCWFHIR("status","generated")
"RTN","RGCWFTIU",15,0)
 S ATR("xmlns")="http://www.w3.org/1999/xhtml"
"RTN","RGCWFTIU",16,0)
 D ADDTAG^RGCWFHIR("div",.ATR)
"RTN","RGCWFTIU",17,0)
 D TGET^TIUSRVR1(.TEXT,IEN)
"RTN","RGCWFTIU",18,0)
 D ADDARY^RGCWFHIR(TEXT)
"RTN","RGCWFTIU",19,0)
 D ENDTAG^RGCWFHIR("text")
"RTN","RGCWFTIU",20,0)
 D PUTDT^RGCWFHIR("date",VL(1301,"I"))
"RTN","RGCWFTIU",21,0)
 D ADDTAG^RGCWFHIR("type")
"RTN","RGCWFTIU",22,0)
 D PUT^RGCWFHIR("text",VL(.01,"E"))
"RTN","RGCWFTIU",23,0)
 D ENDTAG^RGCWFHIR("type")
"RTN","RGCWFTIU",24,0)
 D PERSON("subject","Patient",.02)
"RTN","RGCWFTIU",25,0)
 D PERSON("author","Practitioner",1202)
"RTN","RGCWFTIU",26,0)
 D ENDFEED^RGCWFHIR
"RTN","RGCWFTIU",27,0)
 Q
"RTN","RGCWFTIU",28,0)
PERSON(TAG,ENT,FLD) ;
"RTN","RGCWFTIU",29,0)
 D ADDTAG^RGCWFHIR(TAG)
"RTN","RGCWFTIU",30,0)
 D PUT^RGCWFHIR("reference",ENT_"/"_VL(FLD,"I"))
"RTN","RGCWFTIU",31,0)
 D PUT^RGCWFHIR("display",VL(FLD,"E"))
"RTN","RGCWFTIU",32,0)
 D ENDTAG^RGCWFHIR(TAG)
"RTN","RGCWFTIU",33,0)
 Q
"RTN","RGCWKDIN")
0^^B31866196
"RTN","RGCWKDIN",1,0)
RGCKDIN ;RI/CBMI/DKM - CareWeb KIDS installation support ;02-Feb-2015 12:11;DKM
"RTN","RGCWKDIN",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 149
"RTN","RGCWKDIN",3,0)
 ; Environment check
"RTN","RGCWKDIN",4,0)
EC X $G(@XPDGREF@("EC"))
"RTN","RGCWKDIN",5,0)
 Q
"RTN","RGCWKDIN",6,0)
 ; Preinit
"RTN","RGCWKDIN",7,0)
PRE N RGX,RGY
"RTN","RGCWKDIN",8,0)
 D MES(),OBJINST,SDINIT^RGCWFUTL(,60,1)
"RTN","RGCWKDIN",9,0)
 F  D  Q:'RGX
"RTN","RGCWKDIN",10,0)
 .S RGX=$$SHOWSESS^RGCWFUTL
"RTN","RGCWKDIN",11,0)
 .R:RGX "Waiting for active sessions to terminate...",RGY:10,!!
"RTN","RGCWKDIN",12,0)
 .I RGX,RGY=U,$$ASK^RGUT("There are still active sessions.  Are you sure you want to proceed") S RGX=0
"RTN","RGCWKDIN",13,0)
 D MES("Proceeding with installation...")
"RTN","RGCWKDIN",14,0)
 D INITIAL,SAVEOPT
"RTN","RGCWKDIN",15,0)
 Q
"RTN","RGCWKDIN",16,0)
 ; Postinit
"RTN","RGCWKDIN",17,0)
POST N PAR,Y
"RTN","RGCWKDIN",18,0)
 X ^%ZOSF("EON"),^%ZOSF("TRMOFF")
"RTN","RGCWKDIN",19,0)
 D RESPTR,DEFPAR,RESTOPT,REGISTER,FINAL
"RTN","RGCWKDIN",20,0)
 W !!!
"RTN","RGCWKDIN",21,0)
 Q
"RTN","RGCWKDIN",22,0)
 ; Execute initial preinit code, if any
"RTN","RGCWKDIN",23,0)
INITIAL ; EP
"RTN","RGCWKDIN",24,0)
 X $G(@XPDGREF@("INITIAL"))
"RTN","RGCWKDIN",25,0)
 Q
"RTN","RGCWKDIN",26,0)
 ; Execute final postinit code, if any
"RTN","RGCWKDIN",27,0)
FINAL ; EP
"RTN","RGCWKDIN",28,0)
 X $G(@XPDGREF@("FINAL"))
"RTN","RGCWKDIN",29,0)
 Q
"RTN","RGCWKDIN",30,0)
 ; Initializes default parameter values.  Does not affect existing entries.
"RTN","RGCWKDIN",31,0)
DEFPAR N PAR,ENT,VAL,INST,LP,Y
"RTN","RGCWKDIN",32,0)
 D MES("Setting up default site parameters...")
"RTN","RGCWKDIN",33,0)
 F LP=0:0 S LP=$O(@XPDGREF@("PARAM",LP)) Q:'LP  K VAL M VAL=^(LP) D
"RTN","RGCWKDIN",34,0)
 .S Y=VAL,VAL=$$MSG^RGUT($P(Y,U,3,999),"|",0),PAR=$P(Y,U),INST=$P(Y,U,2)
"RTN","RGCWKDIN",35,0)
 .S ENT=$$ENT^RGCWFPAR(PAR),ENT=$P(ENT,U,$L(ENT,U))
"RTN","RGCWKDIN",36,0)
 .D:$L(ENT) ADD^XPAR(ENT,PAR,INST,.VAL)
"RTN","RGCWKDIN",37,0)
 Q
"RTN","RGCWKDIN",38,0)
 ; Delete a file or subfile
"RTN","RGCWKDIN",39,0)
 ;   DIU = File or subfile #
"RTN","RGCWKDIN",40,0)
DELFIL(DIU) ; EP
"RTN","RGCWKDIN",41,0)
 N $ET
"RTN","RGCWKDIN",42,0)
 S $ET="",@$$TRAP^RGUTOS("DELERR^RGCWKDIN")
"RTN","RGCWKDIN",43,0)
 Q:'$D(^DD(DIU))
"RTN","RGCWKDIN",44,0)
 S DIU(0)=$S($D(^DIC(DIU)):"D",1:"S")
"RTN","RGCWKDIN",45,0)
 D EN^DIU2
"RTN","RGCWKDIN",46,0)
 Q
"RTN","RGCWKDIN",47,0)
DELERR N ERR
"RTN","RGCWKDIN",48,0)
 S ERR=$$EC^%ZOSV
"RTN","RGCWKDIN",49,0)
 D MES("An error occurred deleting file #"_$G(DIU))
"RTN","RGCWKDIN",50,0)
 D MES("The error was: "_ERR)
"RTN","RGCWKDIN",51,0)
 D MES("Please delete the file manually after correcting the problem.")
"RTN","RGCWKDIN",52,0)
 Q
"RTN","RGCWKDIN",53,0)
 ; Save ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK option
"RTN","RGCWKDIN",54,0)
SAVEOPT N OPT
"RTN","RGCWKDIN",55,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",56,0)
 Q:'OPT
"RTN","RGCWKDIN",57,0)
 M @XPDGREF@("ITMSAVE")=^DIC(19,OPT,10,"B")
"RTN","RGCWKDIN",58,0)
 M @XPDGREF@("RPCSAVE")=^DIC(19,OPT,"RPC","B")
"RTN","RGCWKDIN",59,0)
 Q
"RTN","RGCWKDIN",60,0)
 ; Restore ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK
"RTN","RGCWKDIN",61,0)
RESTOPT N OPT,ITM,RPC
"RTN","RGCWKDIN",62,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",63,0)
 Q:'OPT
"RTN","RGCWKDIN",64,0)
 F ITM=0:0 S ITM=$O(@XPDGREF@("ITMSAVE",ITM)) Q:'ITM  I $$REGCTX^RGUTRPC(ITM,OPT)
"RTN","RGCWKDIN",65,0)
 F RPC=0:0 S RPC=$O(@XPDGREF@("RPCSAVE",RPC)) Q:'RPC  I $$REGRPC^RGUTRPC(RPC,OPT)
"RTN","RGCWKDIN",66,0)
 Q
"RTN","RGCWKDIN",67,0)
 ; Resolve pointers in multiples (KIDS doesn't)
"RTN","RGCWKDIN",68,0)
RESPTR ; EP
"RTN","RGCWKDIN",69,0)
 N TGT,SRC,SUB,NOD,NAM,VAL,IEN,CNT,SGB,PTR
"RTN","RGCWKDIN",70,0)
 S SUB=0
"RTN","RGCWKDIN",71,0)
 F  S SUB=$O(@XPDGREF@("PTRS",SUB)) Q:'SUB  S X=^(SUB)  D
"RTN","RGCWKDIN",72,0)
 .S NOD=+X,SRC=$P(X,U,2),TGT=$P(X,U,3),SGB=$$ROOT^DILFD(SRC,,1),NAM=""
"RTN","RGCWKDIN",73,0)
 .F  S NAM=$O(@XPDGREF@("PTRS",SUB,NAM)) Q:'$L(NAM)  D
"RTN","RGCWKDIN",74,0)
 ..S IEN=$$FIND1^DIC(SRC,"","QX",NAM),VAL="",CNT=0
"RTN","RGCWKDIN",75,0)
 ..Q:IEN'>0
"RTN","RGCWKDIN",76,0)
 ..K @SGB@(IEN,NOD)
"RTN","RGCWKDIN",77,0)
 ..F  S VAL=$O(@XPDGREF@("PTRS",SUB,NAM,VAL)) Q:'$L(VAL)  D
"RTN","RGCWKDIN",78,0)
 ...S PTR=$$FIND1^DIC(TGT,,"X",VAL)
"RTN","RGCWKDIN",79,0)
 ...I 'PTR D MES("  Failed to resolve "_VAL) Q
"RTN","RGCWKDIN",80,0)
 ...S CNT=CNT+1,@SGB@(IEN,NOD,CNT,0)=PTR,@SGB@(IEN,NOD,"B",PTR,CNT)=""
"RTN","RGCWKDIN",81,0)
 ..S:CNT @SGB@(IEN,NOD,0)=U_SUB_"P^"_CNT_U_CNT
"RTN","RGCWKDIN",82,0)
 Q
"RTN","RGCWKDIN",83,0)
 ; Check binary version against M system
"RTN","RGCWKDIN",84,0)
OBJCHK ; EP
"RTN","RGCWKDIN",85,0)
 N VER,MSYS
"RTN","RGCWKDIN",86,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",87,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",88,0)
 I '$D(VER) D
"RTN","RGCWKDIN",89,0)
 .D MES("This package contains object code that is not supported on "_MSYS_" installations.",2)
"RTN","RGCWKDIN",90,0)
 E  I VER="" D
"RTN","RGCWKDIN",91,0)
 .D MES("This package does not contain object code for this version of "_MSYS_" installations.",2)
"RTN","RGCWKDIN",92,0)
 Q
"RTN","RGCWKDIN",93,0)
 ; Get M system type and target version
"RTN","RGCWKDIN",94,0)
GETMSYS(MSYS,VER) ;
"RTN","RGCWKDIN",95,0)
 K MSYS,VER
"RTN","RGCWKDIN",96,0)
 Q:'$D(@XPDGREF@("OBJ"))
"RTN","RGCWKDIN",97,0)
 S MSYS=$$UP^XLFSTR($P($$VERSION^%ZOSV(1)," ")),MSYS(0)=$S(MSYS="CACHE":1,MSYS="JUMPS":2,1:0)
"RTN","RGCWKDIN",98,0)
 Q:'$D(@XPDGREF@("OBJ",MSYS(0)))
"RTN","RGCWKDIN",99,0)
 S VER=$TR($$VERSION^%ZOSV()," ")
"RTN","RGCWKDIN",100,0)
 F  Q:'$L(VER)  Q:$D(@XPDGREF@("OBJ",MSYS(0),VER))  S VER=$P(VER,".",1,$L(VER,".")-1)
"RTN","RGCWKDIN",101,0)
 Q
"RTN","RGCWKDIN",102,0)
 ; Install routine binaries
"RTN","RGCWKDIN",103,0)
OBJINST ; EP
"RTN","RGCWKDIN",104,0)
 N MSYS,RTN,OBJ,SUB,GBL
"RTN","RGCWKDIN",105,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",106,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",107,0)
 Q:$D(@XPDGREF@("OBJ",MSYS(0)))<10
"RTN","RGCWKDIN",108,0)
 S RTN=""
"RTN","RGCWKDIN",109,0)
 D MES("Installing routine binaries...")
"RTN","RGCWKDIN",110,0)
 F  S RTN=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN)) Q:'$L(RTN)  D
"RTN","RGCWKDIN",111,0)
 .X "ZR  ZS @RTN"
"RTN","RGCWKDIN",112,0)
 .S OBJ="",SUB=0,GBL=$NA(@$S(MSYS(0)=1:"^rOBJ(RTN)",1:"^$R(RTN,""OBJECT"")"))
"RTN","RGCWKDIN",113,0)
 .F  S SUB=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN,SUB)) Q:'SUB  S OBJ=OBJ_^(SUB,0)
"RTN","RGCWKDIN",114,0)
 .S @GBL=$S(MSYS(0)=1:$$DECODE^RGUTUU(OBJ),1:OBJ)
"RTN","RGCWKDIN",115,0)
 Q
"RTN","RGCWKDIN",116,0)
 ; Perform various registration actions
"RTN","RGCWKDIN",117,0)
REGISTER N X,CTX
"RTN","RGCWKDIN",118,0)
 S CTX=$$GETOPT^RGUTRPC("RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",119,0)
 Q:'CTX
"RTN","RGCWKDIN",120,0)
 F X="RGCW","CIAV","CIAU","DG","DDR","RGUT","BEH" D REGNMSP^RGUTRPC(X,CTX)
"RTN","RGCWKDIN",121,0)
 F X="OR CPRS GUI CHART" D DOREG(X)
"RTN","RGCWKDIN",122,0)
 Q
"RTN","RGCWKDIN",123,0)
 ; Add an option as a subcontext to CareWeb Framework
"RTN","RGCWKDIN",124,0)
 ; Remove any redundant RPC's
"RTN","RGCWKDIN",125,0)
DOREG(OPT) ;
"RTN","RGCWKDIN",126,0)
 N RPC,CNT1,CNT2,STAT,IEN
"RTN","RGCWKDIN",127,0)
 S IEN=$$GETOPT^RGUTRPC(OPT)
"RTN","RGCWKDIN",128,0)
 Q:'IEN
"RTN","RGCWKDIN",129,0)
 W !!,"Registering ",OPT," as a subcontext under RGCWF CAREWEB FRAMEWORK...",!
"RTN","RGCWKDIN",130,0)
 I $$REGCTX^RGUTRPC(IEN,CTX)
"RTN","RGCWKDIN",131,0)
 W "Removing redundant RPC references...",!
"RTN","RGCWKDIN",132,0)
 S (CNT1,CNT2)=0
"RTN","RGCWKDIN",133,0)
 F RPC=0:0 S RPC=$O(^DIC(19,IEN,"RPC","B",RPC)) Q:'RPC  D
"RTN","RGCWKDIN",134,0)
 .S STAT=$$REGRPC^RGUTRPC(RPC,CTX,1)
"RTN","RGCWKDIN",135,0)
 .Q:STAT=-1
"RTN","RGCWKDIN",136,0)
 .W $$GET1^DIQ(8994,RPC,.01)_" - "
"RTN","RGCWKDIN",137,0)
 .I STAT=1 W "Removed",! S CNT1=CNT1+1
"RTN","RGCWKDIN",138,0)
 .E  I 'STAT W "Not removed",! S CNT2=CNT2+1
"RTN","RGCWKDIN",139,0)
 W !,CNT1," remote procedure(s) removed",!
"RTN","RGCWKDIN",140,0)
 W:CNT2 CNT2," remote procedure(s) could not be removed",!!
"RTN","RGCWKDIN",141,0)
 Q
"RTN","RGCWKDIN",142,0)
 ; Check if specified routine is installed
"RTN","RGCWKDIN",143,0)
RTNTST(RTN,VN,MSG) ;
"RTN","RGCWKDIN",144,0)
 D:$$RTNVER(RTN)<VN MES(MSG_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",145,0)
 Q
"RTN","RGCWKDIN",146,0)
 ; Get version # for specified routine
"RTN","RGCWKDIN",147,0)
RTNVER(RTN) ;
"RTN","RGCWKDIN",148,0)
 Q $P($T(+2^@RTN),";",3)
"RTN","RGCWKDIN",149,0)
 ; Check patch #s for specified routine
"RTN","RGCWKDIN",150,0)
PATCH(RTN,PN,MSG) ;
"RTN","RGCWKDIN",151,0)
 N X,Y,L,F
"RTN","RGCWKDIN",152,0)
 F X=1:1:$L(PN,",") D
"RTN","RGCWKDIN",153,0)
 .S Y=$P(PN,",",X),F=0
"RTN","RGCWKDIN",154,0)
 .F L=2,3 D  Q:F
"RTN","RGCWKDIN",155,0)
 ..S F=$TR($P($T(+L^@RTN),";",5),"*",",")[(","_Y_",")
"RTN","RGCWKDIN",156,0)
 .D:'F MES(MSG_" patch #"_Y_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",157,0)
 Q
"RTN","RGCWKDIN",158,0)
 ; Display message in MSG and optionally set quit flag to QUIT
"RTN","RGCWKDIN",159,0)
MES(MSG,QUIT) ;
"RTN","RGCWKDIN",160,0)
 D BMES^XPDUTL("  "_$G(MSG))
"RTN","RGCWKDIN",161,0)
 S:$G(QUIT) XPDQUIT=QUIT
"RTN","RGCWKDIN",162,0)
 Q
"RTN","RGCWPTCX")
0^9^B40112263
"RTN","RGCWPTCX",1,0)
RGCWPTCX ;RI/CBMI/DKM - Patient Context Object ;14-Feb-2015 17:32;DKM
"RTN","RGCWPTCX",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 149
"RTN","RGCWPTCX",3,0)
 ; Save/retrieve last patient selected for current institution
"RTN","RGCWPTCX",4,0)
LAST(DATA,DFN) ;
"RTN","RGCWPTCX",5,0)
 D:$$ISACTIVE($G(DFN)) EN^XPAR("USR","RGCWPTCX LAST PATIENT","`"_DUZ(2),"`"_DFN)
"RTN","RGCWPTCX",6,0)
 S DATA=$$GET^XPAR("USR","RGCWPTCX LAST PATIENT",DUZ(2),"I")
"RTN","RGCWPTCX",7,0)
 S:DATA ^DISV(DUZ,"^DPT(")=DATA
"RTN","RGCWPTCX",8,0)
 S:'$$GET^XPAR("ALL","RGCWPTCX RECALL LAST") DATA=""
"RTN","RGCWPTCX",9,0)
 Q
"RTN","RGCWPTCX",10,0)
 ; Return message if data on the legacy system
"RTN","RGCWPTCX",11,0)
 ; DATA(0)=1 if data,  DATA(n)=display message if data
"RTN","RGCWPTCX",12,0)
LEGACY(DATA,DFN) ;
"RTN","RGCWPTCX",13,0)
 S DATA(0)=0
"RTN","RGCWPTCX",14,0)
 I $L($T(HXDATA^A7RDPAGU)) D
"RTN","RGCWPTCX",15,0)
 .D HXDATA^A7RDPAGU(.DATA,DFN)
"RTN","RGCWPTCX",16,0)
 .S:$O(DATA(0)) DATA(0)=1
"RTN","RGCWPTCX",17,0)
 Q
"RTN","RGCWPTCX",18,0)
 ; Return a patient's current location
"RTN","RGCWPTCX",19,0)
INPLOC(DATA,DFN) ;
"RTN","RGCWPTCX",20,0)
 N X
"RTN","RGCWPTCX",21,0)
 S X=$G(^DPT(DFN,.102)),DATA=0
"RTN","RGCWPTCX",22,0)
 S:X X=$P($G(^DGPM(X,0)),U,6)
"RTN","RGCWPTCX",23,0)
 S:X DATA=+$G(^DIC(42,X,44)),$P(DATA,U,2)=$P($G(^DIC(42,X,0)),U),X=$P($G(^DIC(42,X,0)),U,3)
"RTN","RGCWPTCX",24,0)
 S $P(DATA,U,3)=X
"RTN","RGCWPTCX",25,0)
 Q
"RTN","RGCWPTCX",26,0)
 ; Returns true if selectable patient
"RTN","RGCWPTCX",27,0)
ISACTIVE(DFN,QUALS) ;EP
"RTN","RGCWPTCX",28,0)
 N X
"RTN","RGCWPTCX",29,0)
 S:'$D(DEMO) DEMO=+$$GET^XPAR("ALL","RGCWPTCX DEMO MODE",,"Q")
"RTN","RGCWPTCX",30,0)
 S X=$G(^DPT(+DFN,0))
"RTN","RGCWPTCX",31,0)
 Q:'$L(X)!$P(X,U,19) 0
"RTN","RGCWPTCX",32,0)
 I '$P(X,U,21),$$LKPQUAL("@RGCWPTCX DEMO MODE",.QUALS) Q 0
"RTN","RGCWPTCX",33,0)
 Q:$$LKPQUAL("MSC DG ALL SITES HIPAA",.QUALS) 1
"RTN","RGCWPTCX",34,0)
 Q:'$$LKPQUAL("@RGCWPTCX REQUIRES HRN",.QUALS) 1
"RTN","RGCWPTCX",35,0)
 Q ''$L($$HRN(DFN))
"RTN","RGCWPTCX",36,0)
 ; Return requested lookup qualifier
"RTN","RGCWPTCX",37,0)
LKPQUAL(QUAL,CACHE) ;EP
"RTN","RGCWPTCX",38,0)
 N RET
"RTN","RGCWPTCX",39,0)
 S RET=$G(CACHE(QUAL))
"RTN","RGCWPTCX",40,0)
 S:'$L(RET) (RET,CACHE(QUAL))=+$$HASKEY^RGCWFUSR(QUAL)
"RTN","RGCWPTCX",41,0)
 Q RET
"RTN","RGCWPTCX",42,0)
 ; Returns sensitive patient status
"RTN","RGCWPTCX",43,0)
ISSENS(DFN) ;
"RTN","RGCWPTCX",44,0)
 N RET
"RTN","RGCWPTCX",45,0)
 D PTSEC^DGSEC4(.RET,DFN,0)
"RTN","RGCWPTCX",46,0)
 Q $G(RET(1))
"RTN","RGCWPTCX",47,0)
 ; Get DFN from ICN
"RTN","RGCWPTCX",48,0)
ICN2DFN(DATA,ICN) ;
"RTN","RGCWPTCX",49,0)
 S DATA=$S($L($T(GETDFN^MPIF001)):$$GETDFN^MPIF001(ICN),1:"")
"RTN","RGCWPTCX",50,0)
 S:DATA<1 DATA=""
"RTN","RGCWPTCX",51,0)
 Q
"RTN","RGCWPTCX",52,0)
 ; Return ICN
"RTN","RGCWPTCX",53,0)
ICN(DFN) N X
"RTN","RGCWPTCX",54,0)
 S X=$S($L($T(GETICN^MPIF001)):+$$GETICN^MPIF001(DFN),1:"")
"RTN","RGCWPTCX",55,0)
 Q $S(X>0:X,1:"")
"RTN","RGCWPTCX",56,0)
 ; Return HRN given DFN
"RTN","RGCWPTCX",57,0)
HRN(DFN) ;EP
"RTN","RGCWPTCX",58,0)
 N X
"RTN","RGCWPTCX",59,0)
 S X=$G(^AUPNPAT(DFN,41,+$G(DUZ(2)),0))
"RTN","RGCWPTCX",60,0)
 Q $S($P(X,U,3):"",1:$P(X,U,2))
"RTN","RGCWPTCX",61,0)
 ; Return MFN given DFN
"RTN","RGCWPTCX",62,0)
EPI(DFN) ;EP
"RTN","RGCWPTCX",63,0)
 Q $S($$TEST^RGUTOS("MSCDPTID"):$$^MSCDPTID(DFN),1:"")
"RTN","RGCWPTCX",64,0)
 ; Return formatted patient detail report
"RTN","RGCWPTCX",65,0)
PTINQ(DATA,DFN) ;
"RTN","RGCWPTCX",66,0)
 S DATA=$$TMPGBL^CIAVMRPC
"RTN","RGCWPTCX",67,0)
 D CAPTURE^RGUTHFS($TR($$GET^XPAR("ALL","RGCWPTCX DETAIL REPORT"),"~",U),DATA,80)
"RTN","RGCWPTCX",68,0)
 Q
"RTN","RGCWPTCX",69,0)
 ; Build Patient Inquiry
"RTN","RGCWPTCX",70,0)
PTINQB(DFN) ;
"RTN","RGCWPTCX",71,0)
 N DOC,TEAM,X,VAOA,PH,DOD,CAUSE,CAUSE2,NARR
"RTN","RGCWPTCX",72,0)
 S DOD=$$GET1^DIQ(2,DFN,.351)
"RTN","RGCWPTCX",73,0)
 I $L(DOD) D
"RTN","RGCWPTCX",74,0)
 .W !,"******** PATIENT IS DECEASED ************"
"RTN","RGCWPTCX",75,0)
 .W !,"Date of Death: ",DOD
"RTN","RGCWPTCX",76,0)
 .I DUZ("AG")="I" D
"RTN","RGCWPTCX",77,0)
 ..S CAUSE=$$GET1^DIQ(9000001,DFN,1114,"I")
"RTN","RGCWPTCX",78,0)
 ..S CAUSE2=$$GET1^DIQ(80,CAUSE,.01)
"RTN","RGCWPTCX",79,0)
 ..S NARR=$$GET1^DIQ(80,CAUSE,3)
"RTN","RGCWPTCX",80,0)
 ..W:$L(NARR) !,"Underlying Cause: ",CAUSE2_" ("_NARR_")"
"RTN","RGCWPTCX",81,0)
 D EN^RGCWPTC1                                                            ; mas patient inquiry
"RTN","RGCWPTCX",82,0)
 S DOC=$$OUTPTPR^RGCWPTPC(DFN)
"RTN","RGCWPTCX",83,0)
 S TEAM=$$OUTPTTM^RGCWPTPC(DFN)
"RTN","RGCWPTCX",84,0)
 I DOC!TEAM  D
"RTN","RGCWPTCX",85,0)
 .W !!,"Primary Care Information:"
"RTN","RGCWPTCX",86,0)
 .W:DOC !,"Primary Practitioner:  ",$P(DOC,U,2)
"RTN","RGCWPTCX",87,0)
 .W:TEAM !,"Primary Care Team:     ",$P(TEAM,U,2)
"RTN","RGCWPTCX",88,0)
 W !!,"Service Connection/Rated Disabilities:"
"RTN","RGCWPTCX",89,0)
 D DIS^DGRPDB
"RTN","RGCWPTCX",90,0)
 ;IHS/MSC/MGH Added EHR patch 8 Insurance
"RTN","RGCWPTCX",91,0)
 I DUZ("AG")="I" D
"RTN","RGCWPTCX",92,0)
 .S VDT="TODAY",VDT=$$DT^RGUT(VDT),LINE=""
"RTN","RGCWPTCX",93,0)
 .I $$MCR^AUPNPAT(DFN,VDT)=1 S LINE="MEDICARE #"_$$MCR^BTIULO2(DFN)_"/"
"RTN","RGCWPTCX",94,0)
 .I $$MCD^AUPNPAT(DFN,VDT)=1 S LINE=LINE_"MEDICAID #"_$$MCD^BTIULO2(DFN)_"/"
"RTN","RGCWPTCX",95,0)
 .I $$PI^AUPNPAT(DFN,VDT)=1 S LINE=LINE_"PVT INS ("_$$PIN^AUPNPAT(DFN,VDT,"E")_")/"
"RTN","RGCWPTCX",96,0)
 .I LINE]"" D
"RTN","RGCWPTCX",97,0)
 ..W !!,"INSURANCE:"
"RTN","RGCWPTCX",98,0)
 ..W !,?5,$E(LINE,1,$L(LINE)-1)
"RTN","RGCWPTCX",99,0)
 E  D
"RTN","RGCWPTCX",100,0)
 .D DISP^DGIBDSP
"RTN","RGCWPTCX",101,0)
 ;Added EHR patch 7
"RTN","RGCWPTCX",102,0)
 I DUZ("AG")="I" D
"RTN","RGCWPTCX",103,0)
 .S PH=$$GET1^DIQ(9000001,DFN,1801)
"RTN","RGCWPTCX",104,0)
 .I PH'="" W !!,"Other Phone Contact: "_PH
"RTN","RGCWPTCX",105,0)
 D OAD^VADPT                                                           ; get NOK address
"RTN","RGCWPTCX",106,0)
 D:$L(VAOA(9))
"RTN","RGCWPTCX",107,0)
 .W !!,"Next of Kin Information:"
"RTN","RGCWPTCX",108,0)
 .W !,"Name:  ",VAOA(9)                                                ; nok name
"RTN","RGCWPTCX",109,0)
 .W:$L(VAOA(10)) " (",VAOA(10),")"                                     ; relationship
"RTN","RGCWPTCX",110,0)
 .W:$L(VAOA(1)) !?7,VAOA(1)                                            ; address line 1
"RTN","RGCWPTCX",111,0)
 .W:$L(VAOA(2)) !?7,VAOA(2)                                            ; line 2
"RTN","RGCWPTCX",112,0)
 .W:$L(VAOA(3)) !?7,VAOA(3)                                            ; line 3
"RTN","RGCWPTCX",113,0)
 .D:$L(VAOA(4))
"RTN","RGCWPTCX",114,0)
 ..W !?7,VAOA(4)                                                       ; city
"RTN","RGCWPTCX",115,0)
 ..W:$L(VAOA(5)) ", "_$P(VAOA(5),U,2)                                  ; state
"RTN","RGCWPTCX",116,0)
 ..W "  ",$P(VAOA(11),U,2)                                             ; zip+4
"RTN","RGCWPTCX",117,0)
 .W:$L(VAOA(8)) !!?7,"Phone number:  ",VAOA(8)                         ; phone
"RTN","RGCWPTCX",118,0)
 ;IHS/MSC/MGH Find Language Data Patch 8
"RTN","RGCWPTCX",119,0)
 I DUZ("AG")="I" D
"RTN","RGCWPTCX",120,0)
 .N PRILAN,PRETER,PREFLAN,PROF,LANDT,IEN
"RTN","RGCWPTCX",121,0)
 .S LANDT=9999999 S LANDT=$O(^AUPNPAT(DFN,86,LANDT),-1) Q:LANDT=""  D
"RTN","RGCWPTCX",122,0)
 ..S IEN=LANDT_","_DFN
"RTN","RGCWPTCX",123,0)
 ..S PRILAN=$$GET1^DIQ(9000001.86,IEN,.02)
"RTN","RGCWPTCX",124,0)
 ..S PRETER=$$GET1^DIQ(9000001.86,IEN,.03)
"RTN","RGCWPTCX",125,0)
 ..S PREFLAN=$$GET1^DIQ(9000001.86,IEN,.04)
"RTN","RGCWPTCX",126,0)
 ..S PROF=$$GET1^DIQ(9000001.86,IEN,.06)
"RTN","RGCWPTCX",127,0)
 ..W !!,"Language Information:"
"RTN","RGCWPTCX",128,0)
 ..W:$L(PRILAN) !?5,"Primary Language: ",PRILAN
"RTN","RGCWPTCX",129,0)
 ..W:$L(PRETER) ?40,"Interpreter Needed: ",PRETER
"RTN","RGCWPTCX",130,0)
 ..W:$L(PREFLAN) !,?5,"Preferred Language: ",PREFLAN
"RTN","RGCWPTCX",131,0)
 ..W:$L(PROF) ?40,"English Proficiency: ",PROF
"RTN","RGCWPTCX",132,0)
 ;IHS/MSC/MGH Communication method
"RTN","RGCWPTCX",133,0)
 I DUZ("AG")="I" D
"RTN","RGCWPTCX",134,0)
 .N MOC,GEN
"RTN","RGCWPTCX",135,0)
 .W !!,"METHOD OF COMMUNICATION:"
"RTN","RGCWPTCX",136,0)
 .S GEN=$$GET1^DIQ(9000001,DFN,4001)
"RTN","RGCWPTCX",137,0)
 .S MOC=$$GET1^DIQ(9000001,DFN,4002)
"RTN","RGCWPTCX",138,0)
 .I GEN'="" W !?5,"PERMISSION FOR E-MAIL: "_GEN
"RTN","RGCWPTCX",139,0)
 .I MOC'="" W !?5,"PREFERRED METHOD: "_MOC
"RTN","RGCWPTCX",140,0)
 D KVAR^VADPT
"RTN","RGCWPTCX",141,0)
 K PRILAN,PRETER,LANDT,PREFLAN,PROF
"RTN","RGCWPTCX",142,0)
 Q
"RTN","RGCWPTCX",143,0)
SETCTX(DFN) ;PEP - Set the patient context
"RTN","RGCWPTCX",144,0)
 N UID
"RTN","RGCWPTCX",145,0)
 S UID=$$GETUID^CIANBUTL
"RTN","RGCWPTCX",146,0)
 D:$L(UID) QUEUE^CIANBEVT("CONTEXT.PATIENT",+DFN,UID)
"RTN","RGCWPTCX",147,0)
 Q:$Q ''$L(UID)
"RTN","RGCWPTCX",148,0)
 Q
"RTN","RGCWPTCX",149,0)
 ; Check for possible dups
"RTN","RGCWPTCX",150,0)
CHKDUP(DATA,DFN) ; EP
"RTN","RGCWPTCX",151,0)
 N DUPS,CNT,X
"RTN","RGCWPTCX",152,0)
 D GUIBS5A^DPTLK6(.DUPS,DFN)
"RTN","RGCWPTCX",153,0)
 I DUPS(1)<1 M DATA=DUPS Q
"RTN","RGCWPTCX",154,0)
 F X=1:0 S X=$O(DUPS(X)) Q:'X  D
"RTN","RGCWPTCX",155,0)
 .I 'DUPS(X) K DUPS(X) Q
"RTN","RGCWPTCX",156,0)
 .I $P(DUPS(X),U,2)=DFN D
"RTN","RGCWPTCX",157,0)
 ..S DUPS(1)=$$CD1(DUPS(X))
"RTN","RGCWPTCX",158,0)
 ..K DUPS(X)
"RTN","RGCWPTCX",159,0)
 .E  S DUPS(X)=$$CD1(DUPS(X))
"RTN","RGCWPTCX",160,0)
 S CNT=0
"RTN","RGCWPTCX",161,0)
 D CD2(1),CD2("You have selected the following patient:"),CD2(DUPS(1)),CD2()
"RTN","RGCWPTCX",162,0)
 D CD2("However, these patients also have the same last name")
"RTN","RGCWPTCX",163,0)
 D CD2("and the same last 4 digits of their SSNs:"),CD2()
"RTN","RGCWPTCX",164,0)
 F X=1:0 S X=$O(DUPS(X)) Q:'X  D CD2(DUPS(X))
"RTN","RGCWPTCX",165,0)
 D CD2(),CD2("Are you sure this is the correct patient?")
"RTN","RGCWPTCX",166,0)
 Q
"RTN","RGCWPTCX",167,0)
CD1(VAL) Q $P(VAL,U,3)_"   DOB: "_$$ENTRY^RGUTDT($P(VAL,U,4))_"   SSN: "_$$SSN^RGUT($P(VAL,U,5))_"   HRN: "_$$HRN($P(VAL,U,2))
"RTN","RGCWPTCX",168,0)
CD2(VAL) S CNT=CNT+1,DATA(CNT)=$G(VAL)
"RTN","RGCWPTCX",169,0)
 Q
"RTN","RGCWPTCX",170,0)
 ;
"RTN","RGCWPTCX",171,0)
FMTSSN(SSN) ;EP - P7
"RTN","RGCWPTCX",172,0)
 N X
"RTN","RGCWPTCX",173,0)
 S X=$E(SSN,6,$L(SSN))
"RTN","RGCWPTCX",174,0)
 Q "XXX-XX-"_$S($L(X):X,1:"XXXX")
"RTN","RGCWPTCX",175,0)
 ; Iterator for traversing name xref
"RTN","RGCWPTCX",176,0)
NAMEITER(CTX) ;
"RTN","RGCWPTCX",177,0)
 I '$Q D NAMEITER^RGCWSER(CTX,$NA(^DPT("B"))) Q
"RTN","RGCWPTCX",178,0)
 Q $$NAMEITER^RGCWSER(CTX)
"RTN","RGCWPTP1")
0^3^B27498471
"RTN","RGCWPTP1",1,0)
RGCWPTP1 ;RI/CBMI/DKM - Patient List Management ;02-Feb-2015 10:15;DKM
"RTN","RGCWPTP1",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 149
"RTN","RGCWPTP1",3,0)
 ; Return list of patients with clinic appt w/in range
"RTN","RGCWPTP1",4,0)
CLINPTS(DATA,LOC,START,END,MAX) ;EP
"RTN","RGCWPTP1",5,0)
 I +$G(LOC)<1 S DATA(1)="^No clinic identified" Q
"RTN","RGCWPTP1",6,0)
 I '$$ACTLOC^RGCWENCX(LOC) S DATA(1)="^Clinic is not active" Q
"RTN","RGCWPTP1",7,0)
 N DFN,CNT,J,X,DAT,DATX,QUALS,VIEN,VSTR
"RTN","RGCWPTP1",8,0)
 S MAX=$G(MAX,200),CNT=0
"RTN","RGCWPTP1",9,0)
 D:START="" GETPAR^RGCWFPAR(.START,"ORLP DEFAULT CLINIC START DATE",,,"E")
"RTN","RGCWPTP1",10,0)
 D:END="" GETPAR^RGCWFPAR(.END,"ORLP DEFAULT CLINIC STOP DATE",,,"E")
"RTN","RGCWPTP1",11,0)
 D DT^DILF("T",START,.START,"","")
"RTN","RGCWPTP1",12,0)
 D DT^DILF("T",END,.END,"","")
"RTN","RGCWPTP1",13,0)
 I (START=-1)!(END=-1) S DATA(1)="^Error in date range." Q
"RTN","RGCWPTP1",14,0)
 S END=END\1+.9,DAT=START,LOC=+LOC,DATX=$S(START\1=(END\1):"",1:" ")
"RTN","RGCWPTP1",15,0)
 F  S DAT=$O(^SC(LOC,"S",DAT)),J=0 Q:'DAT!(DAT>END)  D:$L($G(^SC(LOC,"S",DAT,1,0)))  Q:CNT'<MAX
"RTN","RGCWPTP1",16,0)
 .S:$L(DATX) DATX=" on "_$$ENTRY^RGUTDT(DAT)
"RTN","RGCWPTP1",17,0)
 .F  S J=$O(^SC(+LOC,"S",DAT,1,J)) Q:'J!(CNT'<MAX)  D
"RTN","RGCWPTP1",18,0)
 ..S X=^SC(LOC,"S",DAT,1,J,0)
"RTN","RGCWPTP1",19,0)
 ..Q:$P(X,U,9)="C"                                                     ; cancelled clinic availability
"RTN","RGCWPTP1",20,0)
 ..S DFN=+X
"RTN","RGCWPTP1",21,0)
 ..S X=$G(^DPT(DFN,"S",DAT,0))
"RTN","RGCWPTP1",22,0)
 ..Q:+X'=LOC                                                           ; appt cancelled/resched
"RTN","RGCWPTP1",23,0)
 ..I $P(X,U,2)'="NT",($P(X,U,2)["C")!($P(X,U,2)["N") Q                 ; quit if appt cancelled or no show
"RTN","RGCWPTP1",24,0)
 ..S VIEN=+$P($G(^SCE(+$P(X,U,20),0)),U,5)
"RTN","RGCWPTP1",25,0)
 ..I VIEN,$D(^AUPNVSIT(VIEN,0)) S VSTR=LOC_";"_+^(0)_";A;"_VIEN
"RTN","RGCWPTP1",26,0)
 ..E  S VSTR=LOC_";"_DAT_";A"
"RTN","RGCWPTP1",27,0)
 ..S:$$ISACTIVE^RGCWPTCX(DFN,.QUALS) CNT=CNT+1,DATA(CNT)=DFN_U_$P(^DPT(DFN,0),U)_U_DATX_U_VSTR
"RTN","RGCWPTP1",28,0)
 I CNT'<MAX D                                                          ;maximum allowable appointments exceeded
"RTN","RGCWPTP1",29,0)
 .K DATA
"RTN","RGCWPTP1",30,0)
 .S DATA(1)="^Too many appointments found; please narrow search range."
"RTN","RGCWPTP1",31,0)
 S:'$D(DATA) DATA(1)="^No appointments."
"RTN","RGCWPTP1",32,0)
 Q
"RTN","RGCWPTP1",33,0)
 ; Return appts for a patient between beginning and end dates for a clinic, if no clinic return all appointments
"RTN","RGCWPTP1",34,0)
PTAPPTS(DATA,DFN,START,END,LOC) ;EP
"RTN","RGCWPTP1",35,0)
 I '$$ACTLOC^RGCWENCX(LOC) S DATA(1)="^Clinic is not active" Q
"RTN","RGCWPTP1",36,0)
 N VASD,VAERR,NUM,CNT,INVDT,INT,EXT,ORSRV
"RTN","RGCWPTP1",37,0)
 S NUM=0,CNT=0
"RTN","RGCWPTP1",38,0)
 I START="" D
"RTN","RGCWPTP1",39,0)
 .D:'$L(LOC) GETPAR^RGCWFPAR(.START,"ORQQAP SEARCH RANGE START",,,"E")
"RTN","RGCWPTP1",40,0)
 .S:START="" START="T"                                                 ;default start date across all clinics is today
"RTN","RGCWPTP1",41,0)
 I END="" D
"RTN","RGCWPTP1",42,0)
 .D:'$L(LOC) GETPAR^RGCWFPAR(.START,"ORQQAP SEARCH RANGE STOP",,,"E")
"RTN","RGCWPTP1",43,0)
 .S:END="" END="T"                                                     ;default end date across all clinics is today
"RTN","RGCWPTP1",44,0)
 D DT^DILF("T",START,.START,"","")
"RTN","RGCWPTP1",45,0)
 D DT^DILF("T",END,.END,"","")
"RTN","RGCWPTP1",46,0)
 I (START=-1)!(END=-1) S DATA(1)="^Error in date range." Q
"RTN","RGCWPTP1",47,0)
 S VASD("F")=START
"RTN","RGCWPTP1",48,0)
 S VASD("T")=END\1+.5
"RTN","RGCWPTP1",49,0)
 S:$L(LOC) VASD("C",LOC)=""
"RTN","RGCWPTP1",50,0)
 S DATA(1)="^No appointments."
"RTN","RGCWPTP1",51,0)
 D SDA^VADPT
"RTN","RGCWPTP1",52,0)
 Q:VAERR=1
"RTN","RGCWPTP1",53,0)
 F  S NUM=$O(^UTILITY("VASD",$J,NUM)) Q:'NUM  D
"RTN","RGCWPTP1",54,0)
 .S INT=^UTILITY("VASD",$J,NUM,"I"),INVDT=9999999-$P(INT,U)
"RTN","RGCWPTP1",55,0)
 .S EXT=^UTILITY("VASD",$J,NUM,"E")
"RTN","RGCWPTP1",56,0)
 .S CNT=CNT+1,DATA(CNT)=$P(INT,U)_U_$P(EXT,U,2)_U_$P(EXT,U,3)_U_$P(EXT,U,4)_U_INVDT
"RTN","RGCWPTP1",57,0)
 K ^UTILITY("VASD",$J)
"RTN","RGCWPTP1",58,0)
 Q
"RTN","RGCWPTP1",59,0)
 ; Return provider list
"RTN","RGCWPTP1",60,0)
PROVLST(DATA,FROM,DIR,MAX) ;EP
"RTN","RGCWPTP1",61,0)
 N IEN,CNT
"RTN","RGCWPTP1",62,0)
 S FROM=$G(FROM),DIR=$G(DIR,1),MAX=$G(MAX,44),CNT=0
"RTN","RGCWPTP1",63,0)
 F  S FROM=$O(^VA(200,"B",FROM),DIR),IEN="" Q:FROM=""  D:$E(FROM)'="*"  Q:CNT'<MAX
"RTN","RGCWPTP1",64,0)
 .F  S IEN=$O(^VA(200,"B",FROM,IEN),DIR) Q:'IEN  D
"RTN","RGCWPTP1",65,0)
 ..I $D(^XUSEC("PROVIDER",IEN)),$$ACTIVE^XUSER(IEN) S CNT=CNT+1,DATA(CNT)=IEN_U_FROM
"RTN","RGCWPTP1",66,0)
 Q
"RTN","RGCWPTP1",67,0)
 ; Return list of patients associated w/ primary provider
"RTN","RGCWPTP1",68,0)
PROVPTS(DATA,PROV) ;EP
"RTN","RGCWPTP1",69,0)
 I +$G(PROV)<1 S DATA(1)="^No provider identified" Q
"RTN","RGCWPTP1",70,0)
 N DFN,CNT,QUALS
"RTN","RGCWPTP1",71,0)
 S (CNT,DFN)=0,DATA(1)="^No patients found."
"RTN","RGCWPTP1",72,0)
 F  S DFN=+$O(^DPT("APR",PROV,DFN)) Q:'DFN  D
"RTN","RGCWPTP1",73,0)
 .S:$$ISACTIVE^RGCWPTCX(DFN,.QUALS) CNT=CNT+1,DATA(CNT)=DFN_U_$P(^DPT(DFN,0),U)
"RTN","RGCWPTP1",74,0)
 Q
"RTN","RGCWPTP1",75,0)
 ; Return list of treating specialties
"RTN","RGCWPTP1",76,0)
SPECLST(DATA,FROM,DIR,MAX) ;EP
"RTN","RGCWPTP1",77,0)
 N CNT,IEN
"RTN","RGCWPTP1",78,0)
 S FROM=$G(FROM),DIR=$G(DIR,1),MAX=$G(MAX,44),CNT=0
"RTN","RGCWPTP1",79,0)
 F  S FROM=$O(^DIC(45.7,"B",FROM),DIR),IEN="" Q:FROM=""  D  Q:CNT'<MAX
"RTN","RGCWPTP1",80,0)
 .F  S IEN=$O(^DIC(45.7,"B",FROM,IEN),DIR) Q:'IEN  D
"RTN","RGCWPTP1",81,0)
 ..S:$$ACTIVE^DGACT(45.7,IEN) CNT=CNT+1,DATA(CNT)=IEN_U_FROM
"RTN","RGCWPTP1",82,0)
 Q
"RTN","RGCWPTP1",83,0)
 ; Return list of patients associated w/ treating specialty
"RTN","RGCWPTP1",84,0)
SPECPTS(DATA,SPEC) ;EP
"RTN","RGCWPTP1",85,0)
 I +$G(SPEC)<1 S DATA(1)="^No specialty identified" Q
"RTN","RGCWPTP1",86,0)
 N CNT,DFN,QUALS
"RTN","RGCWPTP1",87,0)
 S (CNT,DFN)=0,DATA(1)="^No patients found."
"RTN","RGCWPTP1",88,0)
 F  S DFN=+$O(^DPT("ATR",SPEC,DFN)) Q:'DFN  D
"RTN","RGCWPTP1",89,0)
 .S:$$ISACTIVE^RGCWPTCX(DFN,.QUALS) CNT=CNT+1,DATA(CNT)=DFN_U_$P(^DPT(DFN,0),U)
"RTN","RGCWPTP1",90,0)
 Q
"RTN","RGCWPTP1",91,0)
 ; Return list of patients on a ward
"RTN","RGCWPTP1",92,0)
WARDPTS(DATA,LOC) ;EP
"RTN","RGCWPTP1",93,0)
 N CNT,DFN,WARD,QUALS
"RTN","RGCWPTP1",94,0)
 I +$G(LOC)<1 S DATA(1)="^No ward identified." Q
"RTN","RGCWPTP1",95,0)
 S WARD=+$G(^SC(+LOC,42))
"RTN","RGCWPTP1",96,0)
 I '$D(^DIC(42,WARD,0)) S DATA(1)="^Not a valid ward." Q
"RTN","RGCWPTP1",97,0)
 S (CNT,DFN)=0,WARD=$P(^DIC(42,WARD,0),U),DATA(1)="^No patients found."
"RTN","RGCWPTP1",98,0)
 F  S DFN=+$O(^DPT("CN",WARD,DFN)) Q:'DFN  D:$$ISACTIVE^RGCWPTCX(DFN,.QUALS)
"RTN","RGCWPTP1",99,0)
 .S CNT=CNT+1,DATA(CNT)=DFN_U_$P(^DPT(DFN,0),U)_U_$P($G(^DPT(DFN,.101)),U)
"RTN","RGCWPTP1",100,0)
 .S DATA(CNT)=DATA(CNT)_U_$P($$ADMITINF^RGCWENCX(DFN,^DPT("CN",WARD,DFN)),U)
"RTN","RGCWPTP1",101,0)
 Q
"RTN","RGCWPTP1",102,0)
 ; Returns all teams to which a user belongs
"RTN","RGCWPTP1",103,0)
 ;   PER = If nonzero, return personal lists.  Otherwise, return team lists.
"RTN","RGCWPTP1",104,0)
TEAMLST(DATA,PER) ;EP
"RTN","RGCWPTP1",105,0)
 N CNT,IEN,X
"RTN","RGCWPTP1",106,0)
 S (CNT,IEN)=0,PER=''$G(PER)
"RTN","RGCWPTP1",107,0)
 F  S IEN=$O(^OR(100.21,"C",DUZ,IEN)) Q:'IEN  D
"RTN","RGCWPTP1",108,0)
 .S X=$G(^OR(100.21,IEN,0))
"RTN","RGCWPTP1",109,0)
 .S:$P(X,U,2)="P"=PER CNT=CNT+1,DATA(CNT)=IEN_U_X
"RTN","RGCWPTP1",110,0)
 Q
"RTN","RGCWPTP1",111,0)
 ; Return list of patients belonging to a team
"RTN","RGCWPTP1",112,0)
TEAMPTS(DATA,TEAM) ;EP
"RTN","RGCWPTP1",113,0)
 N CNT,IEN,DFN,QUALS
"RTN","RGCWPTP1",114,0)
 S DATA(1)="^No patients found.",(CNT,IEN)=0,TEAM=+TEAM
"RTN","RGCWPTP1",115,0)
 I '$D(^OR(100.21,TEAM,0)) S DATA(1)="^Not a valid team." Q
"RTN","RGCWPTP1",116,0)
 F  S IEN=$O(^OR(100.21,TEAM,10,IEN)) Q:'IEN  S DFN=+$G(^(IEN,0)) D
"RTN","RGCWPTP1",117,0)
 .S:$$ISACTIVE^RGCWPTCX(DFN,.QUALS) CNT=CNT+1,DATA(CNT)=DFN_U_$P(^DPT(DFN,0),U)
"RTN","RGCWPTP1",118,0)
 Q
"RTN","RGCWPTP1",119,0)
 ; Return list of locations
"RTN","RGCWPTP1",120,0)
HOSPLOC(DATA,FROM,DIR,MAX,TYPE,START,END) ;EP
"RTN","RGCWPTP1",121,0)
 D HOSPLOC^RGCWENCX(.DATA,.FROM,.DIR,.MAX,.TYPE,.START,.END)
"RTN","RGCWPTP1",122,0)
 Q
"RTN","RGCWPTP2")
0^4^B6092178
"RTN","RGCWPTP2",1,0)
RGCWPTP2 ;RI/CBMI/DKM - Patient List Management ;02-Feb-2015 10:15;DKM
"RTN","RGCWPTP2",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 149
"RTN","RGCWPTP2",3,0)
 ; Retrieve a given list for a given user
"RTN","RGCWPTP2",4,0)
PLSTPTS(DATA,NAME) ;EP
"RTN","RGCWPTP2",5,0)
 N TMP,ERR,CNT,LP,DFN,PTNM
"RTN","RGCWPTP2",6,0)
 S DATA(1)="^No patients found.",(CNT,LP)=0
"RTN","RGCWPTP2",7,0)
 D GETWP^XPAR(.TMP,"ALL",$$PARAM,$$GETNAME(NAME),.ERR)
"RTN","RGCWPTP2",8,0)
 F  S LP=$O(TMP(LP)) Q:'LP  D
"RTN","RGCWPTP2",9,0)
 .S DFN=+TMP(LP,0)
"RTN","RGCWPTP2",10,0)
 .I DFN D
"RTN","RGCWPTP2",11,0)
 ..S PTNM=$$GET1^DIQ(2,DFN_",",".01")
"RTN","RGCWPTP2",12,0)
 ..S:$L(PTNM) CNT=CNT+1,DATA(CNT)=DFN_U_PTNM
"RTN","RGCWPTP2",13,0)
 Q
"RTN","RGCWPTP2",14,0)
 ; Retrieve a list of personal lists for a user
"RTN","RGCWPTP2",15,0)
PLSTLST(DATA) ;EP
"RTN","RGCWPTP2",16,0)
 N ERR,LP
"RTN","RGCWPTP2",17,0)
 S LP=0
"RTN","RGCWPTP2",18,0)
 D GETLST^XPAR(.DATA,"ALL",$$PARAM,"Q",.ERR)
"RTN","RGCWPTP2",19,0)
 F  S LP=$O(DATA(LP)) Q:'LP  S $P(DATA(LP),U)=$$GETIEN($P(DATA(LP),U,2))
"RTN","RGCWPTP2",20,0)
 Q
"RTN","RGCWPTP2",21,0)
 ; List management API
"RTN","RGCWPTP2",22,0)
MANAGE(DATA,ACTION,NAME,VAL) ;EP
"RTN","RGCWPTP2",23,0)
 S DATA=$$VALIDATE(.NAME,ACTION="C")
"RTN","RGCWPTP2",24,0)
 Q:DATA
"RTN","RGCWPTP2",25,0)
 I ACTION="C" D SETLST(.DATA,NAME) Q
"RTN","RGCWPTP2",26,0)
 I ACTION="R" D RENLST(.DATA,NAME,.VAL) Q
"RTN","RGCWPTP2",27,0)
 I ACTION="S" D SETLST(.DATA,NAME,.VAL) Q
"RTN","RGCWPTP2",28,0)
 I ACTION="D" D DELLST(.DATA,NAME) Q
"RTN","RGCWPTP2",29,0)
 S DATA="-1^Unknown action"
"RTN","RGCWPTP2",30,0)
 Q
"RTN","RGCWPTP2",31,0)
 ; Validate list name
"RTN","RGCWPTP2",32,0)
VALIDATE(NAME,DUP) ;
"RTN","RGCWPTP2",33,0)
 N L
"RTN","RGCWPTP2",34,0)
 S NAME=$$TRIM^RGUT(NAME),L=$L(NAME),DUP=+$G(DUP)
"RTN","RGCWPTP2",35,0)
 Q:L<3!(L>30) "-1^List name must be 3-30 characters in length."
"RTN","RGCWPTP2",36,0)
 Q:NAME'?.(1A,1N,1"_",1" ") "-1^List name contains invalid characters."
"RTN","RGCWPTP2",37,0)
 I DUP,$$GETIEN(NAME) Q "-1^List name already exists."
"RTN","RGCWPTP2",38,0)
 I 'DUP,'$$GETIEN(NAME) Q "-1^List name not found."
"RTN","RGCWPTP2",39,0)
 Q ""
"RTN","RGCWPTP2",40,0)
 ; Rename existing list
"RTN","RGCWPTP2",41,0)
 ;  OLD  - Existing Instance name (aka list name)
"RTN","RGCWPTP2",42,0)
 ;  NEW  - New list name
"RTN","RGCWPTP2",43,0)
RENLST(DATA,OLD,NEW) ;EP
"RTN","RGCWPTP2",44,0)
 S DATA=$$VALIDATE(NEW,1)
"RTN","RGCWPTP2",45,0)
 D:'DATA REP^XPAR("USR",$$PARAM,$$GETNAME(OLD),NEW,.DATA)
"RTN","RGCWPTP2",46,0)
 D:'DATA CHG^XPAR("USR",$$PARAM,NEW,NEW,.DATA)
"RTN","RGCWPTP2",47,0)
 Q
"RTN","RGCWPTP2",48,0)
 ; Set List
"RTN","RGCWPTP2",49,0)
SETLST(DATA,NAME,VAL) ;EP
"RTN","RGCWPTP2",50,0)
 Q:'$L(NAME)
"RTN","RGCWPTP2",51,0)
 S:NAME=+NAME NAME=$$GETNAME(NAME)
"RTN","RGCWPTP2",52,0)
 S VAL=NAME
"RTN","RGCWPTP2",53,0)
 S:$D(VAL)'=11 VAL(1,0)=""
"RTN","RGCWPTP2",54,0)
 D EN^XPAR("USR",$$PARAM,NAME,.VAL,.DATA)
"RTN","RGCWPTP2",55,0)
 Q
"RTN","RGCWPTP2",56,0)
 ; Delete list
"RTN","RGCWPTP2",57,0)
 ;   NAME - List Name
"RTN","RGCWPTP2",58,0)
DELLST(DATA,NAME) ;EP
"RTN","RGCWPTP2",59,0)
 D DEL^XPAR("USR",$$PARAM,$$GETNAME(NAME),.DATA)
"RTN","RGCWPTP2",60,0)
 Q
"RTN","RGCWPTP2",61,0)
 ; Return parameter name/ien
"RTN","RGCWPTP2",62,0)
PARAM(X) Q $S($G(X):$$FIND1^DIC(8989.51,,,$$PARAM),1:"RGCWPTPL PERSONAL LIST")
"RTN","RGCWPTP2",63,0)
 ; Return IEN to file 8989.5
"RTN","RGCWPTP2",64,0)
GETIEN(NAME) ;
"RTN","RGCWPTP2",65,0)
 Q $S(NAME=+NAME:NAME,1:$O(^XTV(8989.5,"AC",$$PARAM(1),+DUZ_";VA(200,",NAME,0)))
"RTN","RGCWPTP2",66,0)
 ; Returns instance name for 8989.5 IEN
"RTN","RGCWPTP2",67,0)
GETNAME(IEN) ;
"RTN","RGCWPTP2",68,0)
 Q $S(IEN=+IEN:$$GET1^DIQ(8989.5,IEN_",",.03),1:IEN)
"RTN","RGCWPTP3")
0^5^B17293499
"RTN","RGCWPTP3",1,0)
RGCWPTP3 ;RI/CBMI/MGH - Patient List Management ;02-Feb-2015 10:15;DKM
"RTN","RGCWPTP3",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 149
"RTN","RGCWPTP3",3,0)
 ; Call logic to manage team lists
"RTN","RGCWPTP3",4,0)
MANAGE(DATA,LIST,ACTION,NAME,VAL) ;
"RTN","RGCWPTP3",5,0)
 D EXEC(12)
"RTN","RGCWPTP3",6,0)
 Q
"RTN","RGCWPTP3",7,0)
 ; Execute logic at specified node
"RTN","RGCWPTP3",8,0)
EXEC(NODE) ;
"RTN","RGCWPTP3",9,0)
 N $ET
"RTN","RGCWPTP3",10,0)
 S $ET="",@$$TRAP^RGUTOS("EXECERR^RGCWPTPL")
"RTN","RGCWPTP3",11,0)
 X $G(^RGCWF(999.2,+LIST,NODE))
"RTN","RGCWPTP3",12,0)
 Q
"RTN","RGCWPTP3",13,0)
 ; List management API
"RTN","RGCWPTP3",14,0)
MAN2(DATA,LIST,ACTION,NAME,VAL) ;EP
"RTN","RGCWPTP3",15,0)
 S DATA=""
"RTN","RGCWPTP3",16,0)
 I ACTION="S"!(ACTION="P")!(ACTION="D") S DATA(1)=$$VALIDATE(NAME)
"RTN","RGCWPTP3",17,0)
 I ACTION="C" S DATA=$$VALIDATE(NAME,1)
"RTN","RGCWPTP3",18,0)
 Q:DATA(1)
"RTN","RGCWPTP3",19,0)
 I ACTION="T" D GETTEAM(.DATA) Q
"RTN","RGCWPTP3",20,0)
 I ACTION="P" D GETLST(.DATA,NAME) Q
"RTN","RGCWPTP3",21,0)
 I ACTION="C" D CRLST(.DATA,NAME) Q
"RTN","RGCWPTP3",22,0)
 I ACTION="S" D SETLST(.DATA,NAME,.VAL) Q
"RTN","RGCWPTP3",23,0)
 I ACTION="D" D DELETE(.DATA,NAME) Q
"RTN","RGCWPTP3",24,0)
 S DATA(1)="-1^Unknown action"
"RTN","RGCWPTP3",25,0)
 Q
"RTN","RGCWPTP3",26,0)
 ;Return the list of providers for this list
"RTN","RGCWPTP3",27,0)
GETLST(DATA,NAME) ;EP
"RTN","RGCWPTP3",28,0)
 N CNT,IEN,PRV,QUALS,DATE,PAT
"RTN","RGCWPTP3",29,0)
 K DATA
"RTN","RGCWPTP3",30,0)
 S DATA(1)="^No Users found.",(CNT,IEN)=0
"RTN","RGCWPTP3",31,0)
 S DATE="TODAY",DATE=$$DT^RGUT(DATE)
"RTN","RGCWPTP3",32,0)
 S TEAM=$$GETIEN(NAME)
"RTN","RGCWPTP3",33,0)
 I '$D(^OR(100.21,TEAM,0)) S DATA(1)="^Not a valid team." Q
"RTN","RGCWPTP3",34,0)
 F  S IEN=$O(^OR(100.21,TEAM,1,IEN)) Q:'IEN  S PRV=+$G(^(IEN,0)) D
"RTN","RGCWPTP3",35,0)
 .S X=$$ACTIVE^RGCWUSCX(PRV,DATE)
"RTN","RGCWPTP3",36,0)
 .I X=1 S CNT=CNT+1,DATA(CNT)=PRV_U_$P(^VA(200,PRV,0),U)_U_"U"
"RTN","RGCWPTP3",37,0)
 .I X=0 S CNT=CNT+1,DATA(CNT)=PRV_"*"_U_$P(^VA(200,PRV,0),U)_U_"U"
"RTN","RGCWPTP3",38,0)
 S IEN=0 F  S IEN=$O(^OR(100.21,TEAM,10,IEN)) Q:'IEN  S PAT=+$G(^(IEN,0)) D
"RTN","RGCWPTP3",39,0)
 .S CNT=CNT+1,DATA(CNT)=PAT_U_$P(^DPT(PAT,0),U)_U_"M"
"RTN","RGCWPTP3",40,0)
 Q
"RTN","RGCWPTP3",41,0)
 ; Validate list name
"RTN","RGCWPTP3",42,0)
VALIDATE(NAME,DUP) ;
"RTN","RGCWPTP3",43,0)
 N L
"RTN","RGCWPTP3",44,0)
 S NAME=$$TRIM^RGUT(NAME),L=$L(NAME),DUP=+$G(DUP)
"RTN","RGCWPTP3",45,0)
 Q:L<3!(L>30) "-1^List name must be 3-30 characters in length."
"RTN","RGCWPTP3",46,0)
 Q:NAME'?.(1A,1N,1"_",1" ") "-1^List name contains invalid characters."
"RTN","RGCWPTP3",47,0)
 I DUP,$$GETIEN(NAME) Q "-1^List name already exists."
"RTN","RGCWPTP3",48,0)
 I 'DUP,'$$GETIEN(NAME) Q "-1^List name not found."
"RTN","RGCWPTP3",49,0)
 Q ""
"RTN","RGCWPTP3",50,0)
CRLST(DATA,NAME) ;EP Create a new team list
"RTN","RGCWPTP3",51,0)
 N DATE,FNUM,FDA,IEN
"RTN","RGCWPTP3",52,0)
 K DATA
"RTN","RGCWPTP3",53,0)
 S DATE="TODAY",DATE=$$DT^RGUT(DATE)
"RTN","RGCWPTP3",54,0)
 S FNUM=100.21
"RTN","RGCWPTP3",55,0)
 S FDA=$NA(FDA(FNUM,"+1,"))
"RTN","RGCWPTP3",56,0)
 S @FDA@(.01)=NAME
"RTN","RGCWPTP3",57,0)
 S @FDA@(.1)=$$UPPER(NAME)
"RTN","RGCWPTP3",58,0)
 S @FDA@(1)="TM"
"RTN","RGCWPTP3",59,0)
 S @FDA@(1.6)=DUZ
"RTN","RGCWPTP3",60,0)
 S @FDA@(1.65)=DATE
"RTN","RGCWPTP3",61,0)
 S @FDA@(1.7)="Y"
"RTN","RGCWPTP3",62,0)
 S DATA(1)=$$UPDATE^BGOUTL(.FDA,"",.IEN)
"RTN","RGCWPTP3",63,0)
 S:'DATA(1) DATA(1)=IEN(1)
"RTN","RGCWPTP3",64,0)
 I $D(IEN(1)) D
"RTN","RGCWPTP3",65,0)
 .S FDA=$NA(FDA(100.212,"+1,"_IEN(1)_","))
"RTN","RGCWPTP3",66,0)
 .S @FDA@(.01)=DUZ
"RTN","RGCWPTP3",67,0)
 .D UPDATE^DIE("","FDA","IEN","ERR")
"RTN","RGCWPTP3",68,0)
 Q
"RTN","RGCWPTP3",69,0)
 ; Set List
"RTN","RGCWPTP3",70,0)
SETLST(DATA,NAME,VAL) ;EP
"RTN","RGCWPTP3",71,0)
 N TEAM,FDA,FNUM,ERR,IEN,CNTU,CNTM,NUM
"RTN","RGCWPTP3",72,0)
 K DATA
"RTN","RGCWPTP3",73,0)
 Q:'$L(NAME)
"RTN","RGCWPTP3",74,0)
 S TEAM=$$GETIEN(NAME)
"RTN","RGCWPTP3",75,0)
 S CNTU=0,CNTM=0
"RTN","RGCWPTP3",76,0)
 I '$D(^OR(100.21,TEAM,0)) S DATA(1)="^Not a valid team." Q
"RTN","RGCWPTP3",77,0)
 D DELLST(.DATA,NAME)
"RTN","RGCWPTP3",78,0)
 S NUM="" F  S NUM=$O(VAL(NUM)) Q:NUM=""  D
"RTN","RGCWPTP3",79,0)
 .I $P(VAL(NUM),U,3)="U"  D
"RTN","RGCWPTP3",80,0)
 ..K FDA,IEN,ERR
"RTN","RGCWPTP3",81,0)
 ..S FDA=$NA(FDA(100.212,"+1,"_TEAM_","))
"RTN","RGCWPTP3",82,0)
 ..S @FDA@(.01)=$P(VAL(NUM),U,1)
"RTN","RGCWPTP3",83,0)
 ..D UPDATE^DIE("","FDA","IEN","ERR")
"RTN","RGCWPTP3",84,0)
 .I $P(VAL(NUM),U,3)="M"  D
"RTN","RGCWPTP3",85,0)
 ..K FDA,IEN,ERR
"RTN","RGCWPTP3",86,0)
 ..S FDA=$NA(FDA(100.2101,"+1,"_TEAM_","))
"RTN","RGCWPTP3",87,0)
 ..S @FDA@(.01)=$P(VAL(NUM),U,1)_";DPT("
"RTN","RGCWPTP3",88,0)
 ..D UPDATE^DIE("","FDA","IEN","ERR")
"RTN","RGCWPTP3",89,0)
 Q
"RTN","RGCWPTP3",90,0)
GETIEN(NAME) ;Get the IEN of the list
"RTN","RGCWPTP3",91,0)
 N IEN
"RTN","RGCWPTP3",92,0)
 S IEN="" S IEN=$O(^OR(100.21,"B",NAME,IEN))
"RTN","RGCWPTP3",93,0)
 Q IEN
"RTN","RGCWPTP3",94,0)
DELLST(DATA,NAME) ;EP
"RTN","RGCWPTP3",95,0)
 N TEAM,FDA,FNUM,PRV,DA,DIK,MEM
"RTN","RGCWPTP3",96,0)
 Q:'$L(NAME)
"RTN","RGCWPTP3",97,0)
 S TEAM=$$GETIEN(NAME)
"RTN","RGCWPTP3",98,0)
 S DATA=0
"RTN","RGCWPTP3",99,0)
 I '$D(^OR(100.21,TEAM,0)) S DATA(1)="^Not a valid team." Q
"RTN","RGCWPTP3",100,0)
 S PRV=0 F  S PRV=$O(^OR(100.21,TEAM,1,PRV)) Q:PRV=""  D
"RTN","RGCWPTP3",101,0)
 .S DA(1)=TEAM,DA=PRV
"RTN","RGCWPTP3",102,0)
 .S DIK="^OR(100.21,DA(1),1,"
"RTN","RGCWPTP3",103,0)
 .S:DA DATA=$$DELETE^BGOUTL(DIK,.DA)
"RTN","RGCWPTP3",104,0)
 S MEM=0 F  S MEM=$O(^OR(100.21,TEAM,10,MEM)) Q:MEM=""  D
"RTN","RGCWPTP3",105,0)
 .S DA(1)=TEAM,DA=MEM
"RTN","RGCWPTP3",106,0)
 .S DIK="^OR(100.21,DA(1),10,"
"RTN","RGCWPTP3",107,0)
 .S:DA DATA=$$DELETE^BGOUTL(DIK,.DA)
"RTN","RGCWPTP3",108,0)
 I DATA="" S DATA=0
"RTN","RGCWPTP3",109,0)
 Q DATA
"RTN","RGCWPTP3",110,0)
DELETE(DATA,NAME) ;Delete entire team
"RTN","RGCWPTP3",111,0)
 N FNUM,IEN
"RTN","RGCWPTP3",112,0)
 K DATA
"RTN","RGCWPTP3",113,0)
 Q:'$L(NAME)
"RTN","RGCWPTP3",114,0)
 S TEAM=$$GETIEN(NAME)
"RTN","RGCWPTP3",115,0)
 S FNUM=100.21,IEN=TEAM
"RTN","RGCWPTP3",116,0)
 S DATA=$$DELETE^BGOUTL(FNUM,IEN)
"RTN","RGCWPTP3",117,0)
 Q
"RTN","RGCWPTP3",118,0)
GETTEAM(DATA) ;Get the teams with this user
"RTN","RGCWPTP3",119,0)
 N CNT,IEN,X
"RTN","RGCWPTP3",120,0)
 S (CNT,IEN)=0
"RTN","RGCWPTP3",121,0)
 F  S IEN=$O(^OR(100.21,"C",DUZ,IEN)) Q:'IEN  D
"RTN","RGCWPTP3",122,0)
 .S X=$G(^OR(100.21,IEN,0))
"RTN","RGCWPTP3",123,0)
 .S:$P(X,U,2)="TM" CNT=CNT+1,DATA(CNT)=IEN_U_X
"RTN","RGCWPTP3",124,0)
 Q
"RTN","RGCWPTP3",125,0)
UPPER(X) ; Convert lower case X to UPPER CASE
"RTN","RGCWPTP3",126,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","RGCWPTPC")
0^6^B8280859
"RTN","RGCWPTPC",1,0)
RGCWPTPC ;RI/CBMI/DKM - RPC calls for provider information ;18-Aug-2014 17:20;DKM
"RTN","RGCWPTPC",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 149
"RTN","RGCWPTPC",3,0)
USESD() Q $G(DUZ("AG"))'="I"
"RTN","RGCWPTPC",4,0)
 ; Get the primary provider
"RTN","RGCWPTPC",5,0)
OUTPTPR(DFN) ;EP
"RTN","RGCWPTPC",6,0)
 Q:$$USESD $$OUTPTPR^SDUTL3(DFN)
"RTN","RGCWPTPC",7,0)
 N PCP
"RTN","RGCWPTPC",8,0)
 S PCP=$$GET1^DIQ(9000001,DFN,.14,"I")
"RTN","RGCWPTPC",9,0)
 Q $S(PCP:PCP_U_$P(^VA(200,PCP,0),U),1:"")
"RTN","RGCWPTPC",10,0)
 ; Get team
"RTN","RGCWPTPC",11,0)
OUTPTTM(DFN) ;EP
"RTN","RGCWPTPC",12,0)
 Q:$$USESD $$OUTPTTM^SDUTL3(DFN)
"RTN","RGCWPTPC",13,0)
 N TM
"RTN","RGCWPTPC",14,0)
 S TM=$O(^BSDPCT("AB",+$$OUTPTPR(DFN),0))
"RTN","RGCWPTPC",15,0)
 Q $S(TM:TM_U_$$GET1^DIQ(9009017.5,TM,.01),1:"")
"RTN","RGCWPTPC",16,0)
 ; Return Primary Care Detail information
"RTN","RGCWPTPC",17,0)
DETAIL(DATA,DFN) ;EP
"RTN","RGCWPTPC",18,0)
 I $$USESD D
"RTN","RGCWPTPC",19,0)
 .N I,X
"RTN","RGCWPTPC",20,0)
 .S X=$$OUTPTTM^SDUTL3(DFN,DT),I=0
"RTN","RGCWPTPC",21,0)
 .I X>0 D
"RTN","RGCWPTPC",22,0)
 ..D ADDDET($P(X,U,2),"Primary Care Team")
"RTN","RGCWPTPC",23,0)
 ..D ADDDET($P($G(^SCTM(404.51,+X,0)),U,2),"Phone")
"RTN","RGCWPTPC",24,0)
 .E  D ADDDET("No Primary Care Team Assigned.")
"RTN","RGCWPTPC",25,0)
 .D ADDPRV("Primary Care Provider",+$$OUTPTPR^SDUTL3(DFN,DT))
"RTN","RGCWPTPC",26,0)
 .D ADDPRV("Associate Provider",+$$OUTPTAP^SDUTL3(DFN,DT))
"RTN","RGCWPTPC",27,0)
 .D ADDPRV("Attending Physician",+$G(^DPT(DFN,.1041)),1)
"RTN","RGCWPTPC",28,0)
 E  D
"RTN","RGCWPTPC",29,0)
 .N I,X,BDPQ,BDPTYPE,BDPCOUNT,BDPRIEN,BDPTYPNM,BDPCPRV
"RTN","RGCWPTPC",30,0)
 .S I=0
"RTN","RGCWPTPC",31,0)
 .D ADDDET("**CURRENT DESIGNATED PROVIDERS - BY PROVIDER CATEGORY TYPE**")
"RTN","RGCWPTPC",32,0)
 .I '$D(^BDPRECN("AA",DFN)) D ADDDET("**--NO EXISTING DESIGNATED PROVIDERS--**") Q
"RTN","RGCWPTPC",33,0)
 .S BDPQ=0,BDPTYPE="",BDPCOUNT=0
"RTN","RGCWPTPC",34,0)
 .F  S BDPTYPE=$O(^BDPRECN("AA",DFN,BDPTYPE)) Q:BDPTYPE=""  D
"RTN","RGCWPTPC",35,0)
 ..S BDPCOUNT=BDPCOUNT+1,BDPRIEN=""
"RTN","RGCWPTPC",36,0)
 ..S BDPTYPNM=$P(^BDPTCAT(BDPTYPE,0),U)                                  ;Type Print
"RTN","RGCWPTPC",37,0)
 ..F  S BDPRIEN=$O(^BDPRECN("AA",DFN,BDPTYPE,BDPRIEN)) Q:BDPRIEN'=+BDPRIEN  D
"RTN","RGCWPTPC",38,0)
 ...S BDPCPRV=+$P($G(^BDPRECN(BDPRIEN,0)),U,3)                           ;Current Provider IEN
"RTN","RGCWPTPC",39,0)
 ...S BDPCPRVP=$S(BDPCPRV:$P($G(^VA(200,BDPCPRV,0)),U),1:"<None Currently Assigned>")
"RTN","RGCWPTPC",40,0)
 ...D ADDDET(BDPCOUNT_"    "_$$LJ^XLFSTR($E(BDPTYPNM,1,30),30)_": "_$$LJ^XLFSTR($E(BDPCPRVP,1,35),45))
"RTN","RGCWPTPC",41,0)
 Q
"RTN","RGCWPTPC",42,0)
ADDDET(TXT,LBL) ;
"RTN","RGCWPTPC",43,0)
 Q:'$L($G(TXT))
"RTN","RGCWPTPC",44,0)
 S:$D(LBL) TXT=$$RJ^XLFSTR(LBL,21)_":  "_TXT
"RTN","RGCWPTPC",45,0)
 S DATA(I)=TXT,I=I+1
"RTN","RGCWPTPC",46,0)
 Q
"RTN","RGCWPTPC",47,0)
ADDPRV(TYP,PRV,FLG) ;
"RTN","RGCWPTPC",48,0)
 D ADDDET(" ")
"RTN","RGCWPTPC",49,0)
 I $D(^VA(200,PRV,0)) D
"RTN","RGCWPTPC",50,0)
 .N X
"RTN","RGCWPTPC",51,0)
 .D ADDDET($P(^VA(200,PRV,0),U),TYP)
"RTN","RGCWPTPC",52,0)
 .S X=$G(^VA(200,PRV,.13))
"RTN","RGCWPTPC",53,0)
 .D ADDDET($P(X,U,7),"Analog Pager")
"RTN","RGCWPTPC",54,0)
 .D ADDDET($P(X,U,8),"Digital Pager")
"RTN","RGCWPTPC",55,0)
 .D ADDDET($P(X,U,2),"Office Phone")
"RTN","RGCWPTPC",56,0)
 E  D:'$G(FLG) ADDDET("No "_TYP_" Assigned.")
"RTN","RGCWPTPC",57,0)
 Q
"RTN","RGCWPTPC",58,0)
 ; Find all providers on the team associated with the primary provider
"RTN","RGCWPTPC",59,0)
TEAM(PRV) ;EP
"RTN","RGCWPTPC",60,0)
 N RGX,RGY,RGTM,RGCT
"RTN","RGCWPTPC",61,0)
 K ^TMP("ORIHS",$J)
"RTN","RGCWPTPC",62,0)
 ;RGX is the team of the primary provider
"RTN","RGCWPTPC",63,0)
 S RGCT=0,RGX=$O(^BSDPCT("AB",PRV,0)),RGY=0
"RTN","RGCWPTPC",64,0)
 Q:'RGX
"RTN","RGCWPTPC",65,0)
 F  S RGY=$O(^BSDPCT(RGX,1,RGY)) Q:RGY=""  D
"RTN","RGCWPTPC",66,0)
 .S RGTM=$P($G(^BSDPCT(RGX,1,RGY,0)),U)
"RTN","RGCWPTPC",67,0)
 .S:RGTM'="" ^TMP("ORIHS",$J,RGTM)=""
"RTN","RGCWPTPC",68,0)
 Q
"RTN","RGCWPTPL")
0^7^B18695330
"RTN","RGCWPTPL",1,0)
RGCWPTPL ;RI/CBMI/DKM - Patient List Management ;02-Feb-2015 10:15;DKM
"RTN","RGCWPTPL",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 149
"RTN","RGCWPTPL",3,0)
 ; Lookup by full or partial SSN
"RTN","RGCWPTPL",4,0)
LOOKUP(DATA,ID) ;
"RTN","RGCWPTPL",5,0)
 N IEN,XREF,CNT,QUALS
"RTN","RGCWPTPL",6,0)
 S DATA=$$TMPGBL^RGCWFRPC,(CNT,IEN)=0,ID=$$UP^XLFSTR($TR(ID,"-")),XREF=$S(ID?4N:"BS",ID?1A4N:"BS5",1:"SSN")
"RTN","RGCWPTPL",7,0)
 F  S IEN=$O(^DPT(XREF,ID,IEN)) Q:'IEN  D
"RTN","RGCWPTPL",8,0)
 .S:$$ISACTIVE^RGCWPTCX(IEN,.QUALS) CNT=CNT+1,@DATA@(CNT)=IEN_U_$P(^DPT(IEN,0),U)_U_$$SSN(IEN)_"   "_$$DOB^DPTLK1(IEN)
"RTN","RGCWPTPL",9,0)
 Q
"RTN","RGCWPTPL",10,0)
 ; Return list of patients with specified HRN
"RTN","RGCWPTPL",11,0)
HRNLKP(DATA,HRN) ;
"RTN","RGCWPTPL",12,0)
 N CNT,DFN,QUALS
"RTN","RGCWPTPL",13,0)
 S CNT=0,HRN=$$UP^XLFSTR($TR(HRN,"-"))
"RTN","RGCWPTPL",14,0)
 S:HRN?1.N HRN=+HRN
"RTN","RGCWPTPL",15,0)
 F DFN=0:0 S DFN=$O(^AUPNPAT("D",HRN,DFN)) Q:'DFN  D:$D(^(DFN,DUZ(2)))
"RTN","RGCWPTPL",16,0)
 .S:$$ISACTIVE^RGCWPTCX(DFN,.QUALS) CNT=CNT+1,DATA(CNT)=DFN_U_$P(^DPT(DFN,0),U)_U_HRN_"   "_$$DOB^DPTLK1(DFN)
"RTN","RGCWPTPL",17,0)
 Q
"RTN","RGCWPTPL",18,0)
 ; Patient lookup using IEN
"RTN","RGCWPTPL",19,0)
IENLKP(DATA,IEN) ;
"RTN","RGCWPTPL",20,0)
 N DFN
"RTN","RGCWPTPL",21,0)
 I $E(IEN)="`" D
"RTN","RGCWPTPL",22,0)
 .S DFN=+$E(IEN,2,$L(IEN))
"RTN","RGCWPTPL",23,0)
 .S:$$ISACTIVE^RGCWPTCX(DFN) DATA(1)=DFN_U_$P(^DPT(DFN,0),U)_U_$$HRN^RGCWPTCX(DFN)_"   "_$$DOB^DPTLK1(DFN)
"RTN","RGCWPTPL",24,0)
 Q
"RTN","RGCWPTPL",25,0)
 ; Patient lookup using DOB
"RTN","RGCWPTPL",26,0)
DOBLKP(DATA,DOB) ;
"RTN","RGCWPTPL",27,0)
 N DFN,%DT,X,Y,CNT,QUALS
"RTN","RGCWPTPL",28,0)
 S DATA=$$TMPGBL^RGCWFRPC
"RTN","RGCWPTPL",29,0)
 I $E(DOB)="B" D
"RTN","RGCWPTPL",30,0)
 .S DOB=$E(DOB,2,$L(DOB)),CNT=0
"RTN","RGCWPTPL",31,0)
 .S %DT="P",X=DOB D ^%DT
"RTN","RGCWPTPL",32,0)
 .I Y>0 S DOB=Y D
"RTN","RGCWPTPL",33,0)
 ..S DFN=0 F  S DFN=$O(^DPT("ADOB",DOB,DFN)) Q:DFN<1  D
"RTN","RGCWPTPL",34,0)
 ...S:$$ISACTIVE^RGCWPTCX(DFN,.QUALS) CNT=CNT+1,@DATA@(CNT)=DFN_U_$P(^DPT(DFN,0),U)_U_$$HRN^RGCWPTCX(DFN)_"   "_$$DOB^DPTLK1(DFN)
"RTN","RGCWPTPL",35,0)
 Q
"RTN","RGCWPTPL",36,0)
 ; Return formatted SSN for patient
"RTN","RGCWPTPL",37,0)
SSN(DFN) N SSN
"RTN","RGCWPTPL",38,0)
 S SSN=$$SSN^DPTLK1(DFN)
"RTN","RGCWPTPL",39,0)
 Q $S(SSN?9N.1"P":$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,10),1:"")
"RTN","RGCWPTPL",40,0)
 ; Return a bolus of patient names
"RTN","RGCWPTPL",41,0)
LISTALL(DATA,FROM,DIR,MAX) ;
"RTN","RGCWPTPL",42,0)
 N CNT,IEN,MAX,GBL,QUALS,DEMO
"RTN","RGCWPTPL",43,0)
 S MAX=$G(MAX,44),CNT=0,DEMO=$$LKPQUAL^RGCWPTCX("@RGCWPTCX DEMO MODE",.QUALS)
"RTN","RGCWPTPL",44,0)
 I DEMO D
"RTN","RGCWPTPL",45,0)
 .S IEN=0,GBL=$NA(^TMP("RGCWPTPL",$J))
"RTN","RGCWPTPL",46,0)
 .K @GBL
"RTN","RGCWPTPL",47,0)
 .F  S IEN=$O(^DPT("ATEST",IEN)) Q:'IEN  S @GBL@($E($P(^DPT(IEN,0),U),1,30),IEN)=""
"RTN","RGCWPTPL",48,0)
 E  I '$$LKPQUAL^RGCWPTCX("MSC DG ALL SITES HIPAA",.QUALS),$D(^DPT("ADIV",DUZ(2))) S GBL=$NA(^(DUZ(2)))
"RTN","RGCWPTPL",49,0)
 E  S GBL=$NA(^DPT("B"))
"RTN","RGCWPTPL",50,0)
 F  S FROM=$O(@GBL@(FROM),DIR),IEN=0 Q:FROM=""  D  Q:CNT'<MAX
"RTN","RGCWPTPL",51,0)
 .F  S IEN=$O(@GBL@(FROM,IEN)) Q:'IEN  D
"RTN","RGCWPTPL",52,0)
 ..I 'DEMO,'($D(@GBL@(FROM,IEN))#2),$$LKPQUAL^RGCWPTCX("@RGCWPTCX IGNORE ALIASES",.QUALS) Q
"RTN","RGCWPTPL",53,0)
 ..S:$$ISACTIVE^RGCWPTCX(IEN,.QUALS) CNT=CNT+1,DATA(CNT)=IEN_U_FROM
"RTN","RGCWPTPL",54,0)
 K:DEMO ^TMP("RGCWPTPL",$J)
"RTN","RGCWPTPL",55,0)
 Q
"RTN","RGCWPTPL",56,0)
 ; Returns information about a list or lists
"RTN","RGCWPTPL",57,0)
 ;   LIST = IEN (19930.4) of list (all lists returned if not specified)
"RTN","RGCWPTPL",58,0)
 ;   Returns IEN^NAME^FLAGS^ENTITY^DFLT
"RTN","RGCWPTPL",59,0)
 ;      where DFLT is default item settings as
"RTN","RGCWPTPL",60,0)
 ;         IEN^NAME^START DATE^END DATE^DATE LABEL
"RTN","RGCWPTPL",61,0)
LISTINFO(DATA,LIST) ;
"RTN","RGCWPTPL",62,0)
 N X,X1,X2,INFO,SEQ,ONE,CNT
"RTN","RGCWPTPL",63,0)
 S LIST=+$G(LIST),DATA="",CNT=0
"RTN","RGCWPTPL",64,0)
 I LIST S X1=LIST-1,X2=LIST
"RTN","RGCWPTPL",65,0)
 E  S X1=0,X2=9999999999
"RTN","RGCWPTPL",66,0)
 F  S X1=$O(^RGCWF(999.2,X1)) Q:'X1!(X1>X2)  S X=^(X1,0) I '$P(X,U,5),$$LISTSCRN(X1) D
"RTN","RGCWPTPL",67,0)
 .S INFO=X1_U_$P(X,U,1,3),SEQ=+$P(X,U,4)
"RTN","RGCWPTPL",68,0)
 .S $P(INFO,U,5)=$TR($$GET^XPAR("ALL",$$PARAMITM,"`"_X1),"~",U)
"RTN","RGCWPTPL",69,0)
 .I LIST S DATA=INFO
"RTN","RGCWPTPL",70,0)
 .E  S CNT=CNT+1,DATA(SEQ*1000+CNT)=INFO
"RTN","RGCWPTPL",71,0)
 Q
"RTN","RGCWPTPL",72,0)
 ; Screen logic for lists
"RTN","RGCWPTPL",73,0)
LISTSCRN(LIST) ;
"RTN","RGCWPTPL",74,0)
 I 1
"RTN","RGCWPTPL",75,0)
 D EXEC(13)
"RTN","RGCWPTPL",76,0)
 Q $T
"RTN","RGCWPTPL",77,0)
 ; Call logic to generate patient list
"RTN","RGCWPTPL",78,0)
LISTPTS(DATA,LIST,IEN,FLT) ;
"RTN","RGCWPTPL",79,0)
 N START,END
"RTN","RGCWPTPL",80,0)
 D PARSEFLT(.FLT,.START,.END)
"RTN","RGCWPTPL",81,0)
 D EXEC(10)
"RTN","RGCWPTPL",82,0)
 Q
"RTN","RGCWPTPL",83,0)
 ; Call logic to generate list selections
"RTN","RGCWPTPL",84,0)
LISTSEL(DATA,LIST,FROM,DIR,MAX,FLT) ;
"RTN","RGCWPTPL",85,0)
 N START,END
"RTN","RGCWPTPL",86,0)
 D PARSEFLT(.FLT,.START,.END)
"RTN","RGCWPTPL",87,0)
 D EXEC(11)
"RTN","RGCWPTPL",88,0)
 Q
"RTN","RGCWPTPL",89,0)
 ; Parse list filter
"RTN","RGCWPTPL",90,0)
PARSEFLT(FLT,START,END) ;
"RTN","RGCWPTPL",91,0)
 S FLT=$P($G(FLT),U),START=$P(FLT,";"),END=$P(FLT,";",2)
"RTN","RGCWPTPL",92,0)
 D:$L(START) DT^DILF("T",START,.START,"","")
"RTN","RGCWPTPL",93,0)
 D:$L(END) DT^DILF("T",END,.END,"","")
"RTN","RGCWPTPL",94,0)
 Q
"RTN","RGCWPTPL",95,0)
 ; Call logic to manage user lists
"RTN","RGCWPTPL",96,0)
MANAGE(DATA,LIST,ACTION,NAME,VAL) ;
"RTN","RGCWPTPL",97,0)
 D EXEC(12)
"RTN","RGCWPTPL",98,0)
 Q
"RTN","RGCWPTPL",99,0)
 ; Execute logic at specified node
"RTN","RGCWPTPL",100,0)
EXEC(NODE) ;
"RTN","RGCWPTPL",101,0)
 N $ET
"RTN","RGCWPTPL",102,0)
 S $ET="",@$$TRAP^RGUTOS("EXECERR^RGCWPTPL")
"RTN","RGCWPTPL",103,0)
 D:'$G(LIST) GETDFLT(.LIST)
"RTN","RGCWPTPL",104,0)
 X $G(^RGCWF(999.2,+LIST,NODE))
"RTN","RGCWPTPL",105,0)
 Q
"RTN","RGCWPTPL",106,0)
EXECERR K DATA
"RTN","RGCWPTPL",107,0)
 S DATA(1)="-1^Error: "_$$EC^%ZOSV
"RTN","RGCWPTPL",108,0)
 I 0
"RTN","RGCWPTPL",109,0)
 Q
"RTN","RGCWPTPL",110,0)
 ; Return default patient list source
"RTN","RGCWPTPL",111,0)
GETDFLT(DATA) ;
"RTN","RGCWPTPL",112,0)
 S DATA=$$GET^XPAR("ALL",$$PARAMSRC)
"RTN","RGCWPTPL",113,0)
 D:DATA LISTINFO(.DATA,DATA)
"RTN","RGCWPTPL",114,0)
 Q
"RTN","RGCWPTPL",115,0)
 ; Save new default patient list settings
"RTN","RGCWPTPL",116,0)
 ;   LIST = Default list (if missing, default is deleted)
"RTN","RGCWPTPL",117,0)
 ;  .VAL  = Default settings for lists (optional)
"RTN","RGCWPTPL",118,0)
SAVEDFLT(DATA,LIST,VAL) ;
"RTN","RGCWPTPL",119,0)
 N LP
"RTN","RGCWPTPL",120,0)
 S LIST=$S($G(LIST)>0:"`"_+LIST,1:"@")
"RTN","RGCWPTPL",121,0)
 D EN^XPAR("USR",$$PARAMSRC,1,LIST,.DATA)
"RTN","RGCWPTPL",122,0)
 I 'DATA,$D(VAL) D
"RTN","RGCWPTPL",123,0)
 .;D NDEL^XPAR("USR",$$PARAMITM)
"RTN","RGCWPTPL",124,0)
 .F LP=0:0 S LP=$O(VAL(LP)) Q:'LP!DATA  D
"RTN","RGCWPTPL",125,0)
 ..S VAL=VAL(LP)
"RTN","RGCWPTPL",126,0)
 ..D:VAL>0 EN^XPAR("USR",$$PARAMITM,"`"_+VAL,$TR($P(VAL,U,5,99),U,"~"),.DATA)
"RTN","RGCWPTPL",127,0)
 Q
"RTN","RGCWPTPL",128,0)
 ; Return date ranges for clinic appointments
"RTN","RGCWPTPL",129,0)
CLINRNG(DATA) ;
"RTN","RGCWPTPL",130,0)
 D GETWP^XPAR(.DATA,"ALL","RGCWPTPL DATE RANGES")
"RTN","RGCWPTPL",131,0)
 Q
"RTN","RGCWPTPL",132,0)
 ; Returns parameter name for default source
"RTN","RGCWPTPL",133,0)
PARAMSRC() Q "RGCWPTPL DEFAULT SOURCE"
"RTN","RGCWPTPL",134,0)
 ; Returns parameter name for default item
"RTN","RGCWPTPL",135,0)
PARAMITM() Q "RGCWPTPL DEFAULT ITEM"
"RTN","RGCWPTPS")
0^8^B4899277
"RTN","RGCWPTPS",1,0)
RGCWPTPS ;RI/CBMI/DKM - Patient search ;30-Jul-2014 11:46;DKM
"RTN","RGCWPTPS",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 149
"RTN","RGCWPTPS",3,0)
SEARCH(DATA,MAX,LNAME,FNAME,MRN,SSN,IEN,SEX,DOB) ;EP
"RTN","RGCWPTPS",4,0)
 N CNT
"RTN","RGCWPTPS",5,0)
 S DATA=$$TMPGBL^RGCWFRPC,CNT=0
"RTN","RGCWPTPS",6,0)
 S MAX=$G(MAX,100),LNAME=$G(LNAME),FNAME=$G(FNAME)
"RTN","RGCWPTPS",7,0)
 S MRN=$G(MRN),SSN=$G(SSN),SEX=$G(SEX),DOB=+$G(DOB),IEN=$G(IEN)
"RTN","RGCWPTPS",8,0)
 I $L(IEN) D  Q
"RTN","RGCWPTPS",9,0)
 .N X
"RTN","RGCWPTPS",10,0)
 .D:IEN=+IEN IENLKP^RGCWPTPL(.X,"`"_IEN),ADD($G(X(1)))
"RTN","RGCWPTPS",11,0)
 I $L(MRN) D  Q
"RTN","RGCWPTPS",12,0)
 .N X
"RTN","RGCWPTPS",13,0)
 .D HRNLKP^RGCWPTPL(.X,MRN)
"RTN","RGCWPTPS",14,0)
 .M @DATA=X
"RTN","RGCWPTPS",15,0)
 I $L(SSN) D  Q
"RTN","RGCWPTPS",16,0)
 .D LOOKUP^RGCWPTPL(.DATA,SSN)
"RTN","RGCWPTPS",17,0)
 I $L(LNAME)<3 D  Q
"RTN","RGCWPTPS",18,0)
 .D ERROR("You must at least supply a SSN, MRN, or last name (minimum 3 characters).")
"RTN","RGCWPTPS",19,0)
 N IEN,GBL,QUALS,DEMO,FROM,LLEN,FLEN,NAME,X0
"RTN","RGCWPTPS",20,0)
 S LNAME=$$UP^XLFSTR(LNAME),FNAME=$$UP^XLFSTR(FNAME),SEX=$$UP^XLFSTR(SEX)
"RTN","RGCWPTPS",21,0)
 S FROM=LNAME,LLEN=$L(LNAME),FLEN=$L(FNAME)
"RTN","RGCWPTPS",22,0)
 S DEMO=$$LKPQUAL^RGCWPTCX("@RGCWPTCX DEMO MODE",.QUALS)
"RTN","RGCWPTPS",23,0)
 I DEMO D
"RTN","RGCWPTPS",24,0)
 .S IEN=0,GBL=$NA(^TMP("RGCWPTPL",$J))
"RTN","RGCWPTPS",25,0)
 .K @GBL
"RTN","RGCWPTPS",26,0)
 .F  S IEN=$O(^DPT("ATEST",IEN)) Q:'IEN  S @GBL@($E($P(^DPT(IEN,0),U),1,30),IEN)=""
"RTN","RGCWPTPS",27,0)
 E  I '$$LKPQUAL^RGCWPTCX("MSC DG ALL SITES HIPAA",.QUALS),$D(^DPT("ADIV",DUZ(2))) S GBL=$NA(^(DUZ(2)))
"RTN","RGCWPTPS",28,0)
 E  S GBL=$NA(^DPT("B"))
"RTN","RGCWPTPS",29,0)
 F  S FROM=$O(@GBL@(FROM)),IEN=0 Q:FROM=""  D  Q:CNT'<MAX
"RTN","RGCWPTPS",30,0)
 .F  S IEN=$O(@GBL@(FROM,IEN)) Q:'IEN  D  Q:CNT'<MAX
"RTN","RGCWPTPS",31,0)
 ..I 'DEMO,'($D(@GBL@(FROM,IEN))#2),$$LKPQUAL^RGCWPTCX("@RGCWPTCX IGNORE ALIASES",.QUALS) Q
"RTN","RGCWPTPS",32,0)
 ..Q:'$$ISACTIVE^RGCWPTCX(IEN,.QUALS)
"RTN","RGCWPTPS",33,0)
 ..S X0=^DPT(IEN,0),NAME=$P(X0,U)
"RTN","RGCWPTPS",34,0)
 ..I $E(NAME,1,LLEN)'=LNAME S MAX=-1 Q
"RTN","RGCWPTPS",35,0)
 ..I FLEN,$E($$TRIM^XLFSTR($P(NAME,",",2)),1,FLEN)'=FNAME Q
"RTN","RGCWPTPS",36,0)
 ..I DOB,+$P(X0,U,3)'=DOB Q
"RTN","RGCWPTPS",37,0)
 ..I $L(SEX),$P(X0,U,2)'=SEX Q
"RTN","RGCWPTPS",38,0)
 ..D ADD(IEN_U_NAME)
"RTN","RGCWPTPS",39,0)
 K:DEMO ^TMP("RGCWPTPL",$J)
"RTN","RGCWPTPS",40,0)
 Q
"RTN","RGCWPTPS",41,0)
ADD(X) S:$L($G(X)) CNT=CNT+1,@DATA@(CNT)=X
"RTN","RGCWPTPS",42,0)
 Q
"RTN","RGCWPTPS",43,0)
ERROR(X) D ADD("-1^"_X)
"RTN","RGCWPTPS",44,0)
 Q
"SEC","^DIC",999.1,999.1,0,"AUDIT")
@
"SEC","^DIC",999.1,999.1,0,"DD")
@
"SEC","^DIC",999.1,999.1,0,"DEL")
@
"SEC","^DIC",999.1,999.1,0,"LAYGO")
@
"SEC","^DIC",999.1,999.1,0,"RD")
@
"SEC","^DIC",999.1,999.1,0,"WR")
@
"SEC","^DIC",999.2,999.2,0,"AUDIT")
@
"SEC","^DIC",999.2,999.2,0,"DD")
@
"SEC","^DIC",999.2,999.2,0,"DEL")
@
"SEC","^DIC",999.2,999.2,0,"LAYGO")
@
"SEC","^DIC",999.2,999.2,0,"RD")
@
"SEC","^DIC",999.2,999.2,0,"WR")
@
"SEC","^DIC",999.201,999.201,0,"AUDIT")
@
"SEC","^DIC",999.201,999.201,0,"DD")
@
"SEC","^DIC",999.201,999.201,0,"DEL")
@
"SEC","^DIC",999.201,999.201,0,"LAYGO")
@
"SEC","^DIC",999.201,999.201,0,"RD")
@
"SEC","^DIC",999.201,999.201,0,"WR")
@
"SEC","^DIC",19941.21,19941.21,0,"AUDIT")
@
"SEC","^DIC",19941.21,19941.21,0,"DD")
@
"SEC","^DIC",19941.21,19941.21,0,"DEL")
@
"SEC","^DIC",19941.21,19941.21,0,"LAYGO")
@
"SEC","^DIC",19941.21,19941.21,0,"RD")
@
"SEC","^DIC",19941.21,19941.21,0,"WR")
@
"TEMP","EC")

"TEMP","FINAL")

"TEMP","INITIAL")

"TEMP","PARAM",1)
RGCWENCX VISIT TYPES^1^A~Ambulatory~Used for workload.
"TEMP","PARAM",2)
RGCWENCX VISIT TYPES^2^E~Historical~Used to document past events.  Not used for workload.
"TEMP","PARAM",3)
RGCWENCX VISIT TYPES^3^T~Telephonic~Used to document informal patient encounters such as telephone conversations.  Not used for workload.
"TEMP","PARAM",4)
RGCWENCX VISIT TYPES^4^C~Chart Review~Used to document chart reviews.  Not used for workload.
"TEMP","PARAM",5)
RGCWENCX VISIT TYPES^5^I~In-Hospital~Used to document ambulatory visits on hospitalized patients.
"TEMP","PARAM",6)
RGCWENCX VISIT TYPES^6^S~Day Surgery~Used to document Day Surgery visits.
"TEMP","PARAM",7)
RGCWENCX VISIT TYPES^7^O~Observation~Observation
"TEMP","PARAM",8)
RGCWENCX VISIT TYPES^8^R~Nursing Home~Used to document nursing home visits.
"TEMP","PARAM",9)
RGCWENCX VISIT TYPES^9^N~Not Found~Used for service categories not otherwise specified.
"TEMP","PTRS",19941.212)
20^19941.21^19.1
"TEMP","PTRS",19941.2121)
21^19941.21^19.1
"TEMP","TGT")
2
"VER")
8.0^22.0
"^DD",999.1,999.1,0)
FIELD^^10^4
"^DD",999.1,999.1,0,"DDA")
N
"^DD",999.1,999.1,0,"DT")
3150211
"^DD",999.1,999.1,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",999.1,999.1,0,"IX","B",999.1,.01)

"^DD",999.1,999.1,0,"NM","CAREWEB SERIALIZATION")

"^DD",999.1,999.1,0,"PT",999.991,.01)

"^DD",999.1,999.1,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",999.1,999.1,.01,1,0)
^.1
"^DD",999.1,999.1,.01,1,1,0)
999.1^B
"^DD",999.1,999.1,.01,1,1,1)
S ^RGCWF(999.1,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.1,.01,1,1,2)
K ^RGCWF(999.1,"B",$E(X,1,30),DA)
"^DD",999.1,999.1,.01,3)
Replace Name of the serialization type (1-30 characters).
"^DD",999.1,999.1,.01,"DT")
3150211
"^DD",999.1,999.1,1,0)
CONTENT TYPE^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",999.1,999.1,1,3)
Content type generated by this serialization type.
"^DD",999.1,999.1,1,"DT")
3150211
"^DD",999.1,999.1,2,0)
SERIALIZER^F^^0;3^K:$L(X)>10!($L(X)<1)!'(X?1.A0.AN) X
"^DD",999.1,999.1,2,3)
Name of serialization routine.
"^DD",999.1,999.1,2,"DT")
3150211
"^DD",999.1,999.1,10,0)
RESOURCE^999.11^^10;0
"^DD",999.1,999.11,0)
RESOURCE SUB-FIELD^^2^8
"^DD",999.1,999.11,0,"DT")
3150211
"^DD",999.1,999.11,0,"IX","B",999.11,.01)

"^DD",999.1,999.11,0,"IX","C",999.11,.01)

"^DD",999.1,999.11,0,"NM","RESOURCE")

"^DD",999.1,999.11,0,"UP")
999.1
"^DD",999.1,999.11,.01,0)
RESOURCE^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.11,.01,1,0)
^.1^^-1
"^DD",999.1,999.11,.01,1,1,0)
999.11^B^MUMPS
"^DD",999.1,999.11,.01,1,1,1)
S ^RGCWF(999.1,DA(1),10,"B",X,DA)=$$TOPTRN^RGCWSER(X)
"^DD",999.1,999.11,.01,1,1,2)
K ^RGCWF(999.1,DA(1),10,"B",X,DA)
"^DD",999.1,999.11,.01,1,1,"DT")
3150211
"^DD",999.1,999.11,.01,1,2,0)
999.11^C^MUMPS
"^DD",999.1,999.11,.01,1,2,1)
S ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)=""
"^DD",999.1,999.11,.01,1,2,2)
K ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)
"^DD",999.1,999.11,.01,1,2,"DT")
3150211
"^DD",999.1,999.11,.01,3)
Enter path name for the resource.
"^DD",999.1,999.11,.01,"DT")
3150211
"^DD",999.1,999.11,1,0)
INTERNAL^S^0:NO;1:YES;^0;2^Q
"^DD",999.1,999.11,1,3)
Enter YES if this is an internal resource.
"^DD",999.1,999.11,1,"DT")
3150221
"^DD",999.1,999.11,2,0)
SOURCE^NJ10,4XO^^0;3^K:'$$VFILE^DILFD(X) X
"^DD",999.1,999.11,2,2)
S Y(0)=Y S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,2.1)
S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,3)
Enter a file or subfile number.
"^DD",999.1,999.11,2,"DT")
3150211
"^DD",999.1,999.11,10,0)
CUSTOM SERIALIZER^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,10,3)
M code to invoke custom serializer.
"^DD",999.1,999.11,10,9)
@
"^DD",999.1,999.11,10,"DT")
3150211
"^DD",999.1,999.11,20,0)
CUSTOM RETRIEVAL^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,20,3)
M code to invoke custom retrieval logic.
"^DD",999.1,999.11,20,9)
@
"^DD",999.1,999.11,20,"DT")
3150211
"^DD",999.1,999.11,30,0)
PROPERTY^999.12I^^30;0
"^DD",999.1,999.11,40,0)
PARAMETER^999.13I^^40;0
"^DD",999.1,999.11,99,0)
DESCRIPTION^F^^99;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.11,99,3)
Enter brief description of this resource.
"^DD",999.1,999.11,99,"DT")
3150211
"^DD",999.1,999.12,0)
PROPERTY SUB-FIELD^^10^5
"^DD",999.1,999.12,0,"DT")
3150211
"^DD",999.1,999.12,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.12,0,"IX","ASEQ",999.12,3)

"^DD",999.1,999.12,0,"IX","B",999.12,.01)

"^DD",999.1,999.12,0,"NM","PROPERTY")

"^DD",999.1,999.12,0,"UP")
999.11
"^DD",999.1,999.12,.01,0)
PROPERTY^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.12,.01,1,0)
^.1
"^DD",999.1,999.12,.01,1,1,0)
999.12^B
"^DD",999.1,999.12,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.12,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)
"^DD",999.1,999.12,.01,3)
Property name to be used in serialization.
"^DD",999.1,999.12,.01,"DT")
3150211
"^DD",999.1,999.12,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.12,1,3)
Field name or # corresponding to this property
"^DD",999.1,999.12,1,"DT")
3150211
"^DD",999.1,999.12,2,0)
TYPE^RS^F:FREE TEXT;R:RAW;B:BOOLEAN;D:DATE;M:MULTIPLE;C:CUSTOM;O:OBJECT;W:WORD PROCESSING;I:INLINE;^0;3^Q
"^DD",999.1,999.12,2,3)
Encoding type for this property.
"^DD",999.1,999.12,2,"DT")
3150211
"^DD",999.1,999.12,3,0)
SEQUENCE^RNJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.12,3,1,0)
^.1
"^DD",999.1,999.12,3,1,1,0)
999.12^ASEQ
"^DD",999.1,999.12,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.12,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.12,3,1,1,"DT")
3150211
"^DD",999.1,999.12,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.12,3,"DT")
3150211
"^DD",999.1,999.12,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.12,10,3)
Enter control data.
"^DD",999.1,999.12,10,21,0)
^^7^7^3150211.121613
"^DD",999.1,999.12,10,21,1,0)
The format of this field depends on the value of the TYPE field.  For those
"^DD",999.1,999.12,10,21,2,0)
TYPE values not listed below, this field will be ignored.
"^DD",999.1,999.12,10,21,3,0)

"^DD",999.1,999.12,10,21,4,0)
C (Custom) - Executable M code.
"^DD",999.1,999.12,10,21,5,0)
O (Object) - Alias name of the target object.
"^DD",999.1,999.12,10,21,6,0)
M (Multiple) - Alias name of the multiple object.
"^DD",999.1,999.12,10,21,7,0)

"^DD",999.1,999.12,10,"DT")
3150211
"^DD",999.1,999.13,0)
PARAMETER SUB-FIELD^^10^6
"^DD",999.1,999.13,0,"DT")
3150211
"^DD",999.1,999.13,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.13,0,"IX","ASEQ",999.13,3)

"^DD",999.1,999.13,0,"IX","B",999.13,.01)

"^DD",999.1,999.13,0,"NM","PARAMETER")

"^DD",999.1,999.13,0,"UP")
999.11
"^DD",999.1,999.13,.01,0)
PARAMETER^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.13,.01,1,0)
^.1
"^DD",999.1,999.13,.01,1,1,0)
999.13^B
"^DD",999.1,999.13,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.13,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)
"^DD",999.1,999.13,.01,3)
Enter name of search parameter.
"^DD",999.1,999.13,.01,"DT")
3150211
"^DD",999.1,999.13,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.13,1,3)
Field name or # corresponding to this parameter.
"^DD",999.1,999.13,1,"DT")
3150211
"^DD",999.1,999.13,2,0)
TYPE^S^N:NUMBER;D:DATE;S:STRING;T:TOKEN;R:REFERENCE;Q:QUANTITY;^0;3^Q
"^DD",999.1,999.13,2,3)
Type of the search parameter.
"^DD",999.1,999.13,2,"DT")
3150211
"^DD",999.1,999.13,3,0)
SEQUENCE^NJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.13,3,1,0)
^.1
"^DD",999.1,999.13,3,1,1,0)
999.13^ASEQ
"^DD",999.1,999.13,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.13,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.13,3,1,1,"DT")
3150211
"^DD",999.1,999.13,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.13,3,"DT")
3150211
"^DD",999.1,999.13,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.13,10,3)
M code to perform filtering.
"^DD",999.1,999.13,10,"DT")
3150211
"^DD",999.1,999.13,20,0)
COHORT^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.13,20,3)
M code to set global selector into X.
"^DD",999.1,999.13,20,9)
@
"^DD",999.1,999.13,20,"DT")
3150211
"^DD",999.2,999.2,0)
FIELD^^13^9
"^DD",999.2,999.2,0,"IX","B",999.2,.01)

"^DD",999.2,999.2,0,"NM","CAREWEB PATIENT LIST")

"^DD",999.2,999.2,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",999.2,999.2,.01,1,0)
^.1
"^DD",999.2,999.2,.01,1,1,0)
999.2^B
"^DD",999.2,999.2,.01,1,1,1)
S ^RGCWF(999.2,"B",$E(X,1,30),DA)=""
"^DD",999.2,999.2,.01,1,1,2)
K ^RGCWF(999.2,"B",$E(X,1,30),DA)
"^DD",999.2,999.2,.01,3)
Answer must be 3-30 characters in length.
"^DD",999.2,999.2,.01,"DT")
3010913
"^DD",999.2,999.2,1,0)
FLAGS^F^^0;2^K:$L(X)>20!($L(X)<1) X
"^DD",999.2,999.2,1,3)
Enter special control flags.
"^DD",999.2,999.2,1,21,0)
^^9^9^3060911.112102
"^DD",999.2,999.2,1,21,1,0)
These flags control how the list appears on the client.  Values are:
"^DD",999.2,999.2,1,21,2,0)

"^DD",999.2,999.2,1,21,3,0)
D:     Date range required
"^DD",999.2,999.2,1,21,4,0)
E:     Sets encounter context
"^DD",999.2,999.2,1,21,5,0)
L:     Item retrieval uses long list
"^DD",999.2,999.2,1,21,6,0)
M:     Convert selection list to mixed case
"^DD",999.2,999.2,1,21,7,0)
N:     Do not cache list
"^DD",999.2,999.2,1,21,8,0)
S:     Sort selection list
"^DD",999.2,999.2,1,21,9,0)
U:     List can be managed by user
"^DD",999.2,999.2,1,"DT")
3010913
"^DD",999.2,999.2,2,0)
ENTITY^F^^0;3^K:$L(X)>20!($L(X)<1) X
"^DD",999.2,999.2,2,3)
Name of single entity in this list.
"^DD",999.2,999.2,2,"DT")
3010918
"^DD",999.2,999.2,3,0)
SEQUENCE^NJ11,0X^^0;4^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."1N.N) X
"^DD",999.2,999.2,3,3)
Type a whole number between 0 and 100000
"^DD",999.2,999.2,3,"DT")
3010917
"^DD",999.2,999.2,4,0)
DISABLE^S^0:NO;1:YES;^0;5^Q
"^DD",999.2,999.2,4,3)
Enter YES to suppress display of this list.
"^DD",999.2,999.2,4,"DT")
3011002
"^DD",999.2,999.2,10,0)
PATIENT RETRIEVAL^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.2,999.2,10,3)
M code to retrieve list.
"^DD",999.2,999.2,10,9)
@
"^DD",999.2,999.2,10,"DT")
3010918
"^DD",999.2,999.2,11,0)
ITEM RETRIEVAL^K^^11;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.2,999.2,11,3)
M code to retrieve item list.
"^DD",999.2,999.2,11,9)
@
"^DD",999.2,999.2,11,"DT")
3010918
"^DD",999.2,999.2,12,0)
LIST MANAGEMENT^K^^12;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.2,999.2,12,3)
M code to invoke management functions.
"^DD",999.2,999.2,12,9)
@
"^DD",999.2,999.2,12,"DT")
3010918
"^DD",999.2,999.2,13,0)
SCREEN^K^^13;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.2,999.2,13,3)
M code to screen entries.
"^DD",999.2,999.2,13,9)
@
"^DD",999.2,999.2,13,"DT")
3011002
"^DD",999.201,999.201,0)
FIELD^^4^5
"^DD",999.201,999.201,0,"IX","B",999.201,.01)

"^DD",999.201,999.201,0,"NM","CAREWEB NOTIFICATION CONTROL")

"^DD",999.201,999.201,0,"PT",999.994,.01)

"^DD",999.201,999.201,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<2)!'(X'?1P.E) X
"^DD",999.201,999.201,.01,1,0)
^.1
"^DD",999.201,999.201,.01,1,1,0)
999.201^B
"^DD",999.201,999.201,.01,1,1,1)
S ^RGCWF(999.201,"B",$E(X,1,30),DA)=""
"^DD",999.201,999.201,.01,1,1,2)
K ^RGCWF(999.201,"B",$E(X,1,30),DA)
"^DD",999.201,999.201,.01,3)
Answer must be 2-30 characters in length.
"^DD",999.201,999.201,.01,"DT")
3030805
"^DD",999.201,999.201,1,0)
IDENT^RK^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,1,3)
Code to check notification identity.  Set $T to true for positive match.
"^DD",999.201,999.201,1,9)
@
"^DD",999.201,999.201,1,21,0)
^^1^1^3030804.150811
"^DD",999.201,999.201,1,21,1,0)
Should check the notification identifier in AID and set $T to true if a match.
"^DD",999.201,999.201,1,"DT")
3030804
"^DD",999.201,999.201,2,0)
PARSE^RK^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,2,3)
Code to parse data elements from notification.
"^DD",999.201,999.201,2,9)
@
"^DD",999.201,999.201,2,21,0)
^^8^8^3030804.170957
"^DD",999.201,999.201,2,21,1,0)
Code to parse standard data elements from notification.  Elements should be
"^DD",999.201,999.201,2,21,2,0)
returned in ALR array as follows:
"^DD",999.201,999.201,2,21,3,0)

"^DD",999.201,999.201,2,21,4,0)
ALR("DFN")=Patient IEN (if patient-orientation)
"^DD",999.201,999.201,2,21,5,0)
ALR("INF")=Info only flag
"^DD",999.201,999.201,2,21,6,0)
ALR("TYP")=Notification type code
"^DD",999.201,999.201,2,21,7,0)
ALR("PRI")=Priority code
"^DD",999.201,999.201,2,21,8,0)
ALR("XTR")=Additional data
"^DD",999.201,999.201,2,"DT")
3030804
"^DD",999.201,999.201,3,0)
PROCESS^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,3,3)
Post processing logic for alert.
"^DD",999.201,999.201,3,9)
@
"^DD",999.201,999.201,3,"DT")
3030805
"^DD",999.201,999.201,4,0)
UPDATE^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,4,3)
Optional logic to update alerts for current user.
"^DD",999.201,999.201,4,9)
@
"^DD",999.201,999.201,4,21,0)
^^2^2^3080128.135828
"^DD",999.201,999.201,4,21,1,0)
This logic provides the opportunity to update alerts (add or delete) 
"^DD",999.201,999.201,4,21,2,0)
for the current user prior to retrieving them.
"^DD",999.201,999.201,4,"DT")
3080128
"^DD",19941.21,19941.21,0)
FIELD^^7^14
"^DD",19941.21,19941.21,0,"DT")
3091007
"^DD",19941.21,19941.21,0,"IX","B",19941.21,.01)

"^DD",19941.21,19941.21,0,"NM","CIA EVENT TYPE")

"^DD",19941.21,19941.21,0,"PT",999.995,.01)

"^DD",19941.21,19941.21,0,"PT",19930.995,.01)

"^DD",19941.21,19941.21,0,"PT",19941.23,1)

"^DD",19941.21,19941.21,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19941.21,19941.21,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",19941.21,19941.21,.01,1,0)
^.1
"^DD",19941.21,19941.21,.01,1,1,0)
19941.21^B
"^DD",19941.21,19941.21,.01,1,1,1)
S ^CIANB(19941.21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.21,.01,1,1,2)
K ^CIANB(19941.21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.21,.01,3)
Answer must be 3-100 characters in length.
"^DD",19941.21,19941.21,.01,"DT")
3030611
"^DD",19941.21,19941.21,1,0)
MONITOR^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,1,3)
M code to invoke monitor for this event type
"^DD",19941.21,19941.21,1,9)
@
"^DD",19941.21,19941.21,1,"DT")
3021021
"^DD",19941.21,19941.21,2,0)
DISABLE^S^0:NO;1:YES;^0;2^Q
"^DD",19941.21,19941.21,2,3)
Enter YES to disable this event type.
"^DD",19941.21,19941.21,2,21,0)
^.001^3^3^3030810^
"^DD",19941.21,19941.21,2,21,1,0)
If set to YES, this event type is disabled.  Once disabled, any attempt to 
"^DD",19941.21,19941.21,2,21,2,0)
enqueue the event will be ignored.  Disabling an event does not affect events
"^DD",19941.21,19941.21,2,21,3,0)
already in the queue. 
"^DD",19941.21,19941.21,2,"DT")
3030810
"^DD",19941.21,19941.21,3,0)
INTERVAL^NJ11,0X^^0;3^K:X<0!(X\1'=X) X
"^DD",19941.21,19941.21,3,3)
Enter the nominal polling interval in seconds.
"^DD",19941.21,19941.21,3,21,0)
^^10^10^3021021.152235
"^DD",19941.21,19941.21,3,21,1,0)
This is the nominal polling interval for the event in seconds.
"^DD",19941.21,19941.21,3,21,2,0)
The actual polling interval is dependent on the event polling
"^DD",19941.21,19941.21,3,21,3,0)
interval set for the client application as a site parameter.
"^DD",19941.21,19941.21,3,21,4,0)
The nominal polling interval guarantees that polling for this
"^DD",19941.21,19941.21,3,21,5,0)
event will not occur more frequently than this setting.
"^DD",19941.21,19941.21,3,21,6,0)
 
"^DD",19941.21,19941.21,3,21,7,0)
For events that are infrequent and/or do not require real time
"^DD",19941.21,19941.21,3,21,8,0)
notification, higher values may be selected for this field to
"^DD",19941.21,19941.21,3,21,9,0)
mitigate impact on system load. 
"^DD",19941.21,19941.21,3,21,10,0)

"^DD",19941.21,19941.21,3,"DT")
3021021
"^DD",19941.21,19941.21,4,0)
LOG EVENT^S^0:NO;1:YES;^0;4^Q
"^DD",19941.21,19941.21,4,3)
Enter YES to enable logging of this event.
"^DD",19941.21,19941.21,4,"DT")
3030611
"^DD",19941.21,19941.21,5,0)
LOG RETENTION^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.21,19941.21,5,3)
Number of days to retain log entries.
"^DD",19941.21,19941.21,5,"DT")
3030611
"^DD",19941.21,19941.21,6,0)
POLLING METHOD^S^0:PER SESSION;1:PER INTERVAL;^0;6^Q
"^DD",19941.21,19941.21,6,3)
Determines how a monitored event is polled.
"^DD",19941.21,19941.21,6,21,0)
^^11^11^3030810.175145
"^DD",19941.21,19941.21,6,21,1,0)
For monitored events, this setting determines how the monitor is invoked
"^DD",19941.21,19941.21,6,21,2,0)
when the polling interval has been reached.  PER SESSION causes the event
"^DD",19941.21,19941.21,6,21,3,0)
monitor to be invoked for each active session, setting the user and
"^DD",19941.21,19941.21,6,21,4,0)
session context prior to each call.  PER INTERVAL cause the event monitor
"^DD",19941.21,19941.21,6,21,5,0)
to be invoked only once per interval.  No user or session context information
"^DD",19941.21,19941.21,6,21,6,0)
is available to the monitor in this case.
"^DD",19941.21,19941.21,6,21,7,0)

"^DD",19941.21,19941.21,6,21,8,0)
PER SESSION is appropriate for events that depend upon a specific user or
"^DD",19941.21,19941.21,6,21,9,0)
session (e.g., notifications).  PER INTERVAL is appropriate for events 
"^DD",19941.21,19941.21,6,21,10,0)
that are independent of a user or session (e.g., status events to display
"^DD",19941.21,19941.21,6,21,11,0)
the host date/time).
"^DD",19941.21,19941.21,6,"DT")
3030810
"^DD",19941.21,19941.21,7,0)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",19941.21,19941.21,7,12)
Restricts to Extended Action Protocols starting with CIAV
"^DD",19941.21,19941.21,7,12.1)
S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X"""
"^DD",19941.21,19941.21,7,"DT")
3091007
"^DD",19941.21,19941.21,10,0)
DISPLAY LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,10,3)
Logic to display stub info in log viewer.
"^DD",19941.21,19941.21,10,9)
@
"^DD",19941.21,19941.21,10,"DT")
3030611
"^DD",19941.21,19941.21,20,0)
PUBLICATION KEY^19941.212P^^20;0
"^DD",19941.21,19941.21,21,0)
SUBSCRIPTION KEY^19941.2121P^^21;0
"^DD",19941.21,19941.21,99,0)
DESCRIPTION^19941.2199^^99;0
"^DD",19941.21,19941.21,100,0)
ERROR DATE/TIME^D^^100;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.21,19941.21,100,3)
Date and time of last error
"^DD",19941.21,19941.21,100,"DT")
3061129
"^DD",19941.21,19941.21,101,0)
ERROR TEXT^F^^100;2^K:$L(X)>240!($L(X)<1) X
"^DD",19941.21,19941.21,101,3)
Answer must be 1-240 characters in length.
"^DD",19941.21,19941.21,101,"DT")
3061129
"^DD",19941.21,19941.212,0)
PUBLICATION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.212,0,"DT")
3021021
"^DD",19941.21,19941.212,0,"IX","B",19941.212,.01)

"^DD",19941.21,19941.212,0,"NM","PUBLICATION KEY")

"^DD",19941.21,19941.212,0,"UP")
19941.21
"^DD",19941.21,19941.212,.01,0)
PUBLICATION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.212,.01,1,0)
^.1
"^DD",19941.21,19941.212,.01,1,1,0)
19941.212^B
"^DD",19941.21,19941.212,.01,1,1,1)
S ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.212,.01,1,1,2)
K ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.212,.01,3)
Security keys required to fire this event.
"^DD",19941.21,19941.212,.01,21,0)
^^2^2^3021021.152715
"^DD",19941.21,19941.212,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.212,.01,21,2,0)
the listed keys in order to fire an event of this type.
"^DD",19941.21,19941.212,.01,"DT")
3040310
"^DD",19941.21,19941.2121,0)
SUBSCRIPTION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.2121,0,"DT")
3021021
"^DD",19941.21,19941.2121,0,"IX","B",19941.2121,.01)

"^DD",19941.21,19941.2121,0,"NM","SUBSCRIPTION KEY")

"^DD",19941.21,19941.2121,0,"UP")
19941.21
"^DD",19941.21,19941.2121,.01,0)
SUBSCRIPTION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.2121,.01,1,0)
^.1
"^DD",19941.21,19941.2121,.01,1,1,0)
19941.2121^B
"^DD",19941.21,19941.2121,.01,1,1,1)
S ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.2121,.01,1,1,2)
K ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.2121,.01,3)
Security keys required to receive this event type.
"^DD",19941.21,19941.2121,.01,21,0)
^^2^2^3021021.153002
"^DD",19941.21,19941.2121,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.2121,.01,21,2,0)
the listed keys in order subscribe to an event of this type. 
"^DD",19941.21,19941.2121,.01,"DT")
3040310
"^DD",19941.21,19941.2199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",19941.21,19941.2199,0,"DT")
3021021
"^DD",19941.21,19941.2199,0,"NM","DESCRIPTION")

"^DD",19941.21,19941.2199,0,"UP")
19941.21
"^DD",19941.21,19941.2199,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",19941.21,19941.2199,.01,3)
Enter a detailed description of this event type.
"^DD",19941.21,19941.2199,.01,"DT")
3021021
"^DIC",999.1,999.1,0)
CAREWEB SERIALIZATION^999.1
"^DIC",999.1,999.1,0,"GL")
^RGCWF(999.1,
"^DIC",999.1,999.1,"%D",0)
^^1^1^3150211.113842
"^DIC",999.1,999.1,"%D",1,0)
Supports serialization of domain objects.
"^DIC",999.1,"B","CAREWEB SERIALIZATION",999.1)

"^DIC",999.2,999.2,0)
CAREWEB PATIENT LIST^999.2
"^DIC",999.2,999.2,0,"GL")
^RGCWF(999.2,
"^DIC",999.2,"B","CAREWEB PATIENT LIST",999.2)

"^DIC",999.201,999.201,0)
CAREWEB NOTIFICATION CONTROL^999.201
"^DIC",999.201,999.201,0,"GL")
^RGCWF(999.201,
"^DIC",999.201,"B","CAREWEB NOTIFICATION CONTROL",999.201)

"^DIC",19941.21,19941.21,0)
CIA EVENT TYPE^19941.21
"^DIC",19941.21,19941.21,0,"GL")
^CIANB(19941.21,
"^DIC",19941.21,"B","CIA EVENT TYPE",19941.21)

**INSTALL NAME**
CAREWEB CWADF 1.0
"BLD",8488,0)
CAREWEB CWADF 1.0^^0^3150226^n
"BLD",8488,4,0)
^9.64PA^19941.21^3
"BLD",8488,4,999.1,0)
999.1
"BLD",8488,4,999.1,222)
n^y^f^^n^^y^o^n
"BLD",8488,4,999.1,224)
I $$SCRN^RGCWKDTP(Y,1)
"BLD",8488,4,999.201,0)
999.201
"BLD",8488,4,999.201,222)
n^y^f^^y^^y^o^n
"BLD",8488,4,999.201,224)
I $$SCRN^RGCWKDTP(Y,4)
"BLD",8488,4,19941.21,0)
19941.21
"BLD",8488,4,19941.21,222)
n^y^f^^y^^y^o^n
"BLD",8488,4,19941.21,224)
I $$SCRN^RGCWKDTP(Y,5)
"BLD",8488,4,"B",999.1,999.1)

"BLD",8488,4,"B",999.201,999.201)

"BLD",8488,4,"B",19941.21,19941.21)

"BLD",8488,6.3)
111
"BLD",8488,"INI")
PRE^RGCWKDIN
"BLD",8488,"INIT")
POST^RGCWKDIN
"BLD",8488,"KRN",0)
^9.67PA^8994^20
"BLD",8488,"KRN",.4,0)
.4
"BLD",8488,"KRN",.401,0)
.401
"BLD",8488,"KRN",.402,0)
.402
"BLD",8488,"KRN",.403,0)
.403
"BLD",8488,"KRN",.5,0)
.5
"BLD",8488,"KRN",.84,0)
.84
"BLD",8488,"KRN",3.6,0)
3.6
"BLD",8488,"KRN",3.8,0)
3.8
"BLD",8488,"KRN",9.2,0)
9.2
"BLD",8488,"KRN",9.8,0)
9.8
"BLD",8488,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",8488,"KRN",9.8,"NM",1,0)
RGCWCACV^^0^B10788821
"BLD",8488,"KRN",9.8,"NM",2,0)
RGCWARCV^^0^B34490110
"BLD",8488,"KRN",9.8,"NM","B","RGCWARCV",2)

"BLD",8488,"KRN",9.8,"NM","B","RGCWCACV",1)

"BLD",8488,"KRN",19,0)
19
"BLD",8488,"KRN",19.1,0)
19.1
"BLD",8488,"KRN",101,0)
101
"BLD",8488,"KRN",409.61,0)
409.61
"BLD",8488,"KRN",771,0)
771
"BLD",8488,"KRN",779.2,0)
779.2
"BLD",8488,"KRN",870,0)
870
"BLD",8488,"KRN",8989.51,0)
8989.51
"BLD",8488,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",8488,"KRN",8989.52,0)
8989.52
"BLD",8488,"KRN",8994,0)
8994
"BLD",8488,"KRN",8994,"NM",0)
^9.68A^6^6
"BLD",8488,"KRN",8994,"NM",1,0)
RGCWCACV CWAD^^0
"BLD",8488,"KRN",8994,"NM",2,0)
RGCWCACV DETAIL^^0
"BLD",8488,"KRN",8994,"NM",3,0)
RGCWCACV LIST^^0
"BLD",8488,"KRN",8994,"NM",4,0)
RGCWCACV PRF^^0
"BLD",8488,"KRN",8994,"NM",5,0)
RGCWARCV DETAIL^^0
"BLD",8488,"KRN",8994,"NM",6,0)
RGCWARCV LIST^^0
"BLD",8488,"KRN",8994,"NM","B","RGCWARCV DETAIL",5)

"BLD",8488,"KRN",8994,"NM","B","RGCWARCV LIST",6)

"BLD",8488,"KRN",8994,"NM","B","RGCWCACV CWAD",1)

"BLD",8488,"KRN",8994,"NM","B","RGCWCACV DETAIL",2)

"BLD",8488,"KRN",8994,"NM","B","RGCWCACV LIST",3)

"BLD",8488,"KRN",8994,"NM","B","RGCWCACV PRF",4)

"BLD",8488,"KRN","B",.4,.4)

"BLD",8488,"KRN","B",.401,.401)

"BLD",8488,"KRN","B",.402,.402)

"BLD",8488,"KRN","B",.403,.403)

"BLD",8488,"KRN","B",.5,.5)

"BLD",8488,"KRN","B",.84,.84)

"BLD",8488,"KRN","B",3.6,3.6)

"BLD",8488,"KRN","B",3.8,3.8)

"BLD",8488,"KRN","B",9.2,9.2)

"BLD",8488,"KRN","B",9.8,9.8)

"BLD",8488,"KRN","B",19,19)

"BLD",8488,"KRN","B",19.1,19.1)

"BLD",8488,"KRN","B",101,101)

"BLD",8488,"KRN","B",409.61,409.61)

"BLD",8488,"KRN","B",771,771)

"BLD",8488,"KRN","B",779.2,779.2)

"BLD",8488,"KRN","B",870,870)

"BLD",8488,"KRN","B",8989.51,8989.51)

"BLD",8488,"KRN","B",8989.52,8989.52)

"BLD",8488,"KRN","B",8994,8994)

"BLD",8488,"PRE")
RGCWKDIN
"BLD",8488,"PRET")
PRETRANS^RGCWKDTP
"BLD",8488,"QUES",0)
^9.62^^
"BLD",8488,"REQB",0)
^9.611^^
"FIA",999.1)
CAREWEB SERIALIZATION
"FIA",999.1,0)
^RGCWF(999.1,
"FIA",999.1,0,0)
999.1I
"FIA",999.1,0,1)
n^y^f^^n^^y^o^n
"FIA",999.1,0,10)

"FIA",999.1,0,11)
I $$SCRN^RGCWKDTP(Y,1)
"FIA",999.1,0,"RLRO")

"FIA",999.1,999.1)
0
"FIA",999.1,999.11)
0
"FIA",999.1,999.12)
0
"FIA",999.1,999.13)
0
"FIA",999.201)
CAREWEB NOTIFICATION CONTROL
"FIA",999.201,0)
^RGCWF(999.201,
"FIA",999.201,0,0)
999.201
"FIA",999.201,0,1)
n^y^f^^y^^y^o^n
"FIA",999.201,0,10)

"FIA",999.201,0,11)
I $$SCRN^RGCWKDTP(Y,4)
"FIA",999.201,0,"RLRO")

"FIA",999.201,999.201)
0
"FIA",19941.21)
CIA EVENT TYPE
"FIA",19941.21,0)
^CIANB(19941.21,
"FIA",19941.21,0,0)
19941.21
"FIA",19941.21,0,1)
n^y^f^^y^^y^o^n
"FIA",19941.21,0,10)

"FIA",19941.21,0,11)
I $$SCRN^RGCWKDTP(Y,5)
"FIA",19941.21,0,"RLRO")

"FIA",19941.21,19941.21)
0
"FIA",19941.21,19941.212)
0
"FIA",19941.21,19941.2121)
0
"FIA",19941.21,19941.2199)
0
"INI")
PRE^RGCWKDIN
"INIT")
POST^RGCWKDIN
"KRN",8994,2672,-1)
0^6
"KRN",8994,2672,0)
RGCWARCV LIST^LIST^RGCWARCV^4^^^^1
"KRN",8994,2672,1,0)
^8994.01^1^1^3110307^
"KRN",8994,2672,1,1,0)
Return adverse reaction data for a patient formatted for list view.
"KRN",8994,2672,2,0)
^8994.02A^3^3
"KRN",8994,2672,2,1,0)
DFN^1^^1^1
"KRN",8994,2672,2,1,1,0)
^^1^1^3051230.103944
"KRN",8994,2672,2,1,1,1,0)
Internal entry number of patient.
"KRN",8994,2672,2,2,0)
UNRL^1^^0^2
"KRN",8994,2672,2,2,1,0)
^^1^1^3110307.111932
"KRN",8994,2672,2,2,1,1,0)
Includes unreleased items.
"KRN",8994,2672,2,3,0)
NOIN^1^^0^3
"KRN",8994,2672,2,3,1,0)
^^1^1^3110307.112001
"KRN",8994,2672,2,3,1,1,0)
Excludes inactive items when set to 1.
"KRN",8994,2672,2,"B","DFN",1)

"KRN",8994,2672,2,"B","NOIN",3)

"KRN",8994,2672,2,"B","UNRL",2)

"KRN",8994,2672,2,"PARAMSEQ",1,1)

"KRN",8994,2672,2,"PARAMSEQ",2,2)

"KRN",8994,2672,2,"PARAMSEQ",3,3)

"KRN",8994,2673,-1)
0^5
"KRN",8994,2673,0)
RGCWARCV DETAIL^DETAIL^RGCWARCV^4^^^^1
"KRN",8994,2673,1,0)
^8994.01^1^1^3051230.103601
"KRN",8994,2673,1,1,0)
Detail view for adverse reactions.
"KRN",8994,2673,2,0)
^8994.02A^2^2
"KRN",8994,2673,2,1,0)
DFN^1^^1^1
"KRN",8994,2673,2,1,1,0)
^^1^1^3051230.103633
"KRN",8994,2673,2,1,1,1,0)
Internal entry number of patient.
"KRN",8994,2673,2,2,0)
ADR^1^^1^2
"KRN",8994,2673,2,2,1,0)
^^1^1^3051230.103719
"KRN",8994,2673,2,2,1,1,0)
The internal entry number of the reaction in file 120.8.
"KRN",8994,2673,2,"B","ADR",2)

"KRN",8994,2673,2,"B","DFN",1)

"KRN",8994,2673,2,"PARAMSEQ",1,1)

"KRN",8994,2673,2,"PARAMSEQ",2,2)

"KRN",8994,2673,3,0)
^^1^1^3051230.103754
"KRN",8994,2673,3,1,0)
Array of text describing details of this adverse reaction.
"KRN",8994,2674,-1)
0^3
"KRN",8994,2674,0)
RGCWCACV LIST^LIST^RGCWCACV^4^^^^1
"KRN",8994,2675,-1)
0^2
"KRN",8994,2675,0)
RGCWCACV DETAIL^DETAIL^RGCWCACV^4^^^^1
"KRN",8994,2676,-1)
0^1
"KRN",8994,2676,0)
RGCWCACV CWAD^CWAD^RGCWCACV^1
"KRN",8994,2676,1,0)
^8994.01^1^1^3051230.104319
"KRN",8994,2676,1,1,0)
Return CWAD flags for a patient.
"KRN",8994,2676,2,0)
^8994.02A^1^1
"KRN",8994,2676,2,1,0)
DFN^1^^1^1
"KRN",8994,2676,2,1,1,0)
^^1^1^3051230.104336
"KRN",8994,2676,2,1,1,1,0)
Internal entry number of patient.
"KRN",8994,2676,2,"B","DFN",1)

"KRN",8994,2676,2,"PARAMSEQ",1,1)

"KRN",8994,2676,3,0)
^^1^1^3051230.104458
"KRN",8994,2676,3,1,0)
Returns string containing one or more of: C, W, A, D.
"KRN",8994,2677,-1)
0^4
"KRN",8994,2677,0)
RGCWCACV PRF^PRF^RGCWCACV^4^^^^1
"MBREQ")
1
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PGL",19941.21,0,7,7)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"PRE")
RGCWKDIN
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","RGCWARCV")
0^2^B34490110
"RTN","RGCWARCV",1,0)
RGCWARCV ;RI/CBMI/DKM - Cover Sheet: Adverse Reactions ;02-Feb-2015 10:15;DKM
"RTN","RGCWARCV",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 111
"RTN","RGCWARCV",3,0)
 ; Return adverse reaction info for a patient
"RTN","RGCWARCV",4,0)
LIST(DATA,DFN,UNRL,NOIN) ;
"RTN","RGCWARCV",5,0)
 N CNT,REASON,LP,LP2,RESTA,IN,INACTIVE,REC,ER,RXN,STA,SEV,SGN,X,Y,Z,X1,RTYP,INACT,ALCNT,REACT
"RTN","RGCWARCV",6,0)
 N NIEN,INZ,INSTA,INIEN,REA2,REACTBY
"RTN","RGCWARCV",7,0)
 S CNT=0
"RTN","RGCWARCV",8,0)
 S UNRL=$G(UNRL),IN=$G(IN),NOIN=$G(NOIN),(LP,CNT,ALCNT)=0,DATA=$$TMPGBL^RGUTRPC
"RTN","RGCWARCV",9,0)
 S Y=$O(^GMR(120.86,DFN,9999999.11,$C(0)),-1) I +Y D
"RTN","RGCWARCV",10,0)
 .I $P($G(^GMR(120.86,DFN,9999999.11,Y,0)),U,4)="" D
"RTN","RGCWARCV",11,0)
 ..S X1="Unassessable"
"RTN","RGCWARCV",12,0)
 ..S INIEN=Y_","_DFN
"RTN","RGCWARCV",13,0)
 ..S REASON=$$GET1^DIQ(120.869999911,INIEN,1)
"RTN","RGCWARCV",14,0)
 ..I REASON'="" D
"RTN","RGCWARCV",15,0)
 ...I REASON="OTHER" S REA2=$$GET1^DIQ(120.869999911,INIEN,5) S REASON=REASON_" "_REA2
"RTN","RGCWARCV",16,0)
 ...D ADD("-1^Unassessable: "_REASON)
"RTN","RGCWARCV",17,0)
 F  S LP=$O(^GMR(120.8,"B",DFN,LP)) Q:'LP  D
"RTN","RGCWARCV",18,0)
 .S INZ=0,REACTBY=""
"RTN","RGCWARCV",19,0)
 .S REC=$G(^GMR(120.8,LP,0)),ER=+$G(^("ER"))
"RTN","RGCWARCV",20,0)
 .Q:(+REC'=DFN)!(ER=1)
"RTN","RGCWARCV",21,0)
 .S Z=$O(^GMR(120.8,LP,9999999.12,$C(0)),-1) I +Z D
"RTN","RGCWARCV",22,0)
 ..S INACT=$P($G(^GMR(120.8,LP,9999999.12,Z,0)),U,1)
"RTN","RGCWARCV",23,0)
 ..S REACT=$P($G(^GMR(120.8,LP,9999999.12,Z,0)),U,4)
"RTN","RGCWARCV",24,0)
 ..I +INACT&(REACT="") S INZ=1
"RTN","RGCWARCV",25,0)
 ..I REACT'="" S REACTBY=$P($G(^GMR(120.8,LP,9999999.12,Z,0)),U,5)
"RTN","RGCWARCV",26,0)
 .S SGN=($P(REC,U,5)=DUZ!(REACTBY=DUZ))&'$P(REC,U,12)
"RTN","RGCWARCV",27,0)
 .I ER=2,'UNRL!'SGN Q
"RTN","RGCWARCV",28,0)
 .S LP2=0,RXN=""
"RTN","RGCWARCV",29,0)
 .F  S LP2=$O(^GMR(120.8,LP,10,LP2)) Q:'LP2  S X=$G(^(LP2,0)) D
"RTN","RGCWARCV",30,0)
 ..S X=$$GET1^DIQ(120.83,+X,.01)
"RTN","RGCWARCV",31,0)
 ..S:$L(X) RXN=RXN_$S($L(RXN):";",1:"")_X
"RTN","RGCWARCV",32,0)
 .S LP2=0,SEV=""
"RTN","RGCWARCV",33,0)
 .F  S LP2=$O(^GMR(120.85,"C",LP,LP2)) Q:'LP2  D
"RTN","RGCWARCV",34,0)
 ..S X=$P($G(^GMR(120.85,LP2,0)),U,14)
"RTN","RGCWARCV",35,0)
 ..S SEV=$S(X>SEV:X,1:SEV)
"RTN","RGCWARCV",36,0)
 .S:SEV SEV=$$EXTERNAL^DILFD(120.85,14.5,,SEV)
"RTN","RGCWARCV",37,0)
 .S STA=$S($P(REC,U,16):"V",$P(REC,U,12):"S",1:"U")
"RTN","RGCWARCV",38,0)
 .S RTYP=$P(REC,U,20)
"RTN","RGCWARCV",39,0)
 .S (INSTA,RESTA)=""
"RTN","RGCWARCV",40,0)
 .Q:(INZ=1)&(+NOIN)
"RTN","RGCWARCV",41,0)
 .I INZ=1 S INSTA=INACT
"RTN","RGCWARCV",42,0)
 .S ALCNT=ALCNT+1
"RTN","RGCWARCV",43,0)
 .D ADD(LP_U_$P(REC,U,2)_U_SEV_U_RXN_U_SGN_U_STA_U_INSTA_U_RTYP)
"RTN","RGCWARCV",44,0)
 I 'ALCNT D
"RTN","RGCWARCV",45,0)
 .S CNT=0
"RTN","RGCWARCV",46,0)
 .S X=$P($G(^GMR(120.86,DFN,0)),U,2)
"RTN","RGCWARCV",47,0)
 .S Y=$O(^GMR(120.86,DFN,9999999.11,$C(0)),-1)
"RTN","RGCWARCV",48,0)
 .I +Y  D
"RTN","RGCWARCV",49,0)
 ..I $P($G(^GMR(120.86,DFN,9999999.11,Y,0)),U,4)="" D
"RTN","RGCWARCV",50,0)
 ...D ADD("^Unassessable "_REASON_" and no "_$S('$L(X):"Allergy Assessment",'X:"Known Allergies",1:"Allergies Found"))
"RTN","RGCWARCV",51,0)
 ..E  D ADD("^No "_$S('$L(X):"Allergy Assessment",'X:"Known Allergies",1:"Allergies Found"))
"RTN","RGCWARCV",52,0)
 .E  D ADD("^No "_$S('$L(X):"Allergy Assessment",'X:"Known Allergies",1:"Allergies Found"))
"RTN","RGCWARCV",53,0)
 Q
"RTN","RGCWARCV",54,0)
 ; Detail view for adverse reaction
"RTN","RGCWARCV",55,0)
DETAIL(DATA,DFN,ADR) ;
"RTN","RGCWARCV",56,0)
 N RXN,LP,LP2,LBL,CNT,Y,INIEN,REASON,X1
"RTN","RGCWARCV",57,0)
 S DATA=$$TMPGBL^RGUTRPC,CNT=0
"RTN","RGCWARCV",58,0)
 I ADR=-1 D  Q
"RTN","RGCWARCV",59,0)
 .S Y=$O(^GMR(120.86,DFN,9999999.11,$C(0)),-1) I +Y D
"RTN","RGCWARCV",60,0)
 ..I $P($G(^GMR(120.86,DFN,9999999.11,Y,0)),U,4)="" D
"RTN","RGCWARCV",61,0)
 ...S INIEN=Y_","_DFN
"RTN","RGCWARCV",62,0)
 ...S REASON=$$GET1^DIQ(120.869999911,INIEN,1)
"RTN","RGCWARCV",63,0)
 ...I REASON'="" D
"RTN","RGCWARCV",64,0)
 ....I REASON="OTHER" S REA2=$$GET1^DIQ(120.869999911,INIEN,5) S REASON=REASON_" "_REA2
"RTN","RGCWARCV",65,0)
 ...D ADD("Unassessable: "_REASON)
"RTN","RGCWARCV",66,0)
 ...D ADD("Date: "_$$GET1^DIQ(120.869999911,INIEN,.01))
"RTN","RGCWARCV",67,0)
 ...D ADD("User: "_$$GET1^DIQ(120.869999911,INIEN,2))
"RTN","RGCWARCV",68,0)
 D EN1^GMRAOR2(ADR,"RXN")
"RTN","RGCWARCV",69,0)
 D ADD($P(RXN,U),"Causative agent:")
"RTN","RGCWARCV",70,0)
 I DUZ("AG")'="I" D
"RTN","RGCWARCV",71,0)
 .S RXNORM=$$RXNORM(ADR)  ;Get the RXNorm code for this agent
"RTN","RGCWARCV",72,0)
 .I +RXNORM D ADD(RXNORM,"RxNorm:")
"RTN","RGCWARCV",73,0)
 I $P(RXN,U,12)'="" D ADD($P(RXN,U,12),"Event:"),ADD()
"RTN","RGCWARCV",74,0)
 D:$D(RXN("S",1)) SYM,ADD()
"RTN","RGCWARCV",75,0)
 D:$D(RXN("V",1)) CLS,ADD()
"RTN","RGCWARCV",76,0)
 D:$D(RXN("I",1)) ING,ADD()
"RTN","RGCWARCV",77,0)
 D ADD($P(RXN,U,2)_"  "_$P(RXN,U,3),"Originated:")
"RTN","RGCWARCV",78,0)
 S X=$$FMTE^XLFDT($P(RXN,U,10)) D ADD(X,"Origination Date:")
"RTN","RGCWARCV",79,0)
 D ADD()
"RTN","RGCWARCV",80,0)
 D:$D(RXN("O",1)) OBS,ADD()
"RTN","RGCWARCV",81,0)
 S X1="" S X1=$P(RXN,U,9)
"RTN","RGCWARCV",82,0)
 I +X1 S X1=" Date: "_$$FMTE^XLFDT(X1)
"RTN","RGCWARCV",83,0)
 D ADD($S($P(RXN,U,4)="VERIFIED":"Yes",1:"No")_" "_X1,"Verified:")
"RTN","RGCWARCV",84,0)
 I $P(RXN,U,4)="VERIFIED" D ADD($P(RXN,U,8),"Verified by:")
"RTN","RGCWARCV",85,0)
 D ADD()
"RTN","RGCWARCV",86,0)
 D ADD($S($P(RXN,U,5)="OBSERVED":"Observed",$P(RXN,U,5)="HISTORICAL":"Historical",1:""),"Observed/Historical:")
"RTN","RGCWARCV",87,0)
 I $P(RXN,U,11)'="" D ADD($P(RXN,U,11),"Source:"),ADD()
"RTN","RGCWARCV",88,0)
 ;IHS/MSC/MGH Add inactive data
"RTN","RGCWARCV",89,0)
 D:$D(RXN("N",1)) INAC,ADD()
"RTN","RGCWARCV",90,0)
 D:$D(RXN("C",1)) COM,ADD()
"RTN","RGCWARCV",91,0)
 ;IHS/MSC/MGH Add last modified
"RTN","RGCWARCV",92,0)
 D LAST
"RTN","RGCWARCV",93,0)
 Q
"RTN","RGCWARCV",94,0)
SYM S LP=0,LBL="Signs/symptoms:"
"RTN","RGCWARCV",95,0)
 F  S LP=$O(RXN("S",LP)) Q:'LP  D ADD(RXN("S",LP),.LBL)
"RTN","RGCWARCV",96,0)
 Q
"RTN","RGCWARCV",97,0)
CLS S LP=0,LBL="Drug Classes:"
"RTN","RGCWARCV",98,0)
 F  S LP=$O(RXN("V",LP)) Q:'LP  D ADD($P(RXN("V",LP),U,2),.LBL)
"RTN","RGCWARCV",99,0)
 Q
"RTN","RGCWARCV",100,0)
ING S LP=0,LBL="Ingredients:"
"RTN","RGCWARCV",101,0)
 F  S LP=$O(RXN("I",LP)) Q:'LP  D ADD($P(RXN("I",LP),U,1),.LBL)
"RTN","RGCWARCV",102,0)
 Q
"RTN","RGCWARCV",103,0)
OBS S LP=0,LBL="Obs dates/severity:"
"RTN","RGCWARCV",104,0)
 F  S LP=$O(RXN("O",LP)) Q:'LP  D ADD($$DT(+RXN("O",LP))_" "_$P(RXN("O",LP),U,2),.LBL)
"RTN","RGCWARCV",105,0)
 Q
"RTN","RGCWARCV",106,0)
INAC ;add inactivity time
"RTN","RGCWARCV",107,0)
 S LP=0
"RTN","RGCWARCV",108,0)
 F  S LP=$O(RXN("N",LP)) Q:'LP  D
"RTN","RGCWARCV",109,0)
 .D ADD($P(RXN("N",LP),U,1),"Inactivation Date:")
"RTN","RGCWARCV",110,0)
 .D ADD($P(RXN("N",LP),U,2),"Inactivation Reason:")
"RTN","RGCWARCV",111,0)
 .D ADD($P(RXN("N",LP),U,3),"Inactivated By:")
"RTN","RGCWARCV",112,0)
 .I $P(RXN("N",LP),U,6)'="" D ADD($P(RXN("N",LP),U,6),"Comment:")
"RTN","RGCWARCV",113,0)
 .I $P(RXN("N",LP),U,4)'="" D
"RTN","RGCWARCV",114,0)
 ..D ADD($P(RXN("N",LP),U,4),"Reactivation Date:")
"RTN","RGCWARCV",115,0)
 ..D ADD($P(RXN("N",LP),U,5),"Reactivated By:")
"RTN","RGCWARCV",116,0)
 Q
"RTN","RGCWARCV",117,0)
LAST ;Get last modified
"RTN","RGCWARCV",118,0)
 N LP,MOD,IIEN,X,Y
"RTN","RGCWARCV",119,0)
 S LP=9999999 S LP=$O(^GMR(120.8,ADR,9999999.14,LP),-1) Q:'+LP  D
"RTN","RGCWARCV",120,0)
 .S MOD=$G(^GMR(120.8,ADR,9999999.14,LP,0))
"RTN","RGCWARCV",121,0)
 .S IIEN=LP_","_ADR_","
"RTN","RGCWARCV",122,0)
 .S X=$$GET1^DIQ(120.899999914,IIEN,.01),Y=$$GET1^DIQ(120.899999914,IIEN,.02)
"RTN","RGCWARCV",123,0)
 .S X=X_" by "_Y
"RTN","RGCWARCV",124,0)
 .D ADD(X,"Last Modified:")
"RTN","RGCWARCV",125,0)
 Q
"RTN","RGCWARCV",126,0)
COM S LP=0,LBL="Comments:"
"RTN","RGCWARCV",127,0)
 D ADD()
"RTN","RGCWARCV",128,0)
 F  S LP=$O(RXN("C",LP)),LP2=0 Q:'LP  D
"RTN","RGCWARCV",129,0)
 .N X
"RTN","RGCWARCV",130,0)
 .D:$L(LBL) ADD(,.LBL)
"RTN","RGCWARCV",131,0)
 .S X=$P(RXN("C",LP),U,2)
"RTN","RGCWARCV",132,0)
 .S:$L(X) X=" by "_X
"RTN","RGCWARCV",133,0)
 .D ADD("   "_$$DT(+RXN("C",LP))_X)
"RTN","RGCWARCV",134,0)
 .F  S LP2=$O(RXN("C",LP,LP2)) Q:'LP2  D ADD("    "_RXN("C",LP,LP2,0))
"RTN","RGCWARCV",135,0)
 Q
"RTN","RGCWARCV",136,0)
RXNORM(ADR) ;Find and add the RxNorm code
"RTN","RGCWARCV",137,0)
 N NDC,RXNORM,TYPE,GEN,DRUG
"RTN","RGCWARCV",138,0)
 S RXNORM=0
"RTN","RGCWARCV",139,0)
 S TYPE=$P($G(^GMR(120.8,ADR,0)),U,3)
"RTN","RGCWARCV",140,0)
 I $P(TYPE,";",2)="PSNDF(50.6," D
"RTN","RGCWARCV",141,0)
 .;Its a VA generic drug, now find all the drugs attached and look for
"RTN","RGCWARCV",142,0)
 .;RXNorm
"RTN","RGCWARCV",143,0)
 .S GEN=$P(TYPE,";",1)
"RTN","RGCWARCV",144,0)
 .S DRUG="" F  S DRUG=$O(^PSDRUG("AND",GEN,DRUG)) Q:'+DRUG!(+RXNORM)  D
"RTN","RGCWARCV",145,0)
 ..S IENS=DRUG_","
"RTN","RGCWARCV",146,0)
 ..S NDC=$$GET1^DIQ(50,IENS,31)
"RTN","RGCWARCV",147,0)
 ..Q:'$L(NDC)
"RTN","RGCWARCV",148,0)
 ..S NDC=$TR(NDC,"-","")
"RTN","RGCWARCV",149,0)
 ..S:$L(NDC)=12 NDC=$E(NDC,2,12)
"RTN","RGCWARCV",150,0)
 ..S RXNORM=+$O(^C0CRXN(176.002,"NDC",NDC,0))
"RTN","RGCWARCV",151,0)
 ..S RXNORM=$$GET1^DIQ(176.002,RXNORM,.01)
"RTN","RGCWARCV",152,0)
 Q RXNORM
"RTN","RGCWARCV",153,0)
 ; Format date/time
"RTN","RGCWARCV",154,0)
DT(Y) D DD^%DT
"RTN","RGCWARCV",155,0)
 Q Y
"RTN","RGCWARCV",156,0)
 ; Add to output array
"RTN","RGCWARCV",157,0)
ADD(TXT,LBL) ;
"RTN","RGCWARCV",158,0)
 S CNT=CNT+1 S @DATA@(CNT)=$S($D(LBL):$$LJ^XLFSTR(LBL,20),1:"")_$G(TXT),LBL=""
"RTN","RGCWARCV",159,0)
 Q
"RTN","RGCWARCV",160,0)
 ; Ingredients and VA drug classes
"RTN","RGCWARCV",161,0)
 ;
"RTN","RGCWCACV")
0^1^B10788821
"RTN","RGCWCACV",1,0)
RGCWCACV ;RI/CBMI/DKM - Cover Sheet: Crisis Alerts;02-Feb-2015 10:15;DKM
"RTN","RGCWCACV",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 111
"RTN","RGCWCACV",3,0)
 ;=================================================================
"RTN","RGCWCACV",4,0)
 ; Return posting list for patient
"RTN","RGCWCACV",5,0)
LIST(DATA,DFN) ;
"RTN","RGCWCACV",6,0)
 S DATA=$NA(^TMP("TIUPPCV",$J))
"RTN","RGCWCACV",7,0)
 D GET(DFN)
"RTN","RGCWCACV",8,0)
 Q
"RTN","RGCWCACV",9,0)
 ; Return allergy/adverse reaction info in report format
"RTN","RGCWCACV",10,0)
DETAIL(DATA,DFN) ;
"RTN","RGCWCACV",11,0)
 N CNT,LP,LP2,RXN,SEV,X
"RTN","RGCWCACV",12,0)
 S DATA=$$TMPGBL^RGUTRPC,(CNT,LP)=0
"RTN","RGCWCACV",13,0)
 D EN1^GMRAOR1(DFN,"RXN")
"RTN","RGCWCACV",14,0)
 S @DATA@(1)=$S($G(RXN)="":"No allergy assessment.",'RXN:"No known allergies.",1:"No allergies found.")
"RTN","RGCWCACV",15,0)
 F  S LP=$O(RXN(LP)) Q:'LP  D
"RTN","RGCWCACV",16,0)
 .S X=RXN(LP),SEV=$P(X,U,2)
"RTN","RGCWCACV",17,0)
 .D ADD($P(X,U)_"     [Severity: "_$S($L(SEV):SEV,1:"Unknown")_"]")
"RTN","RGCWCACV",18,0)
 .S X="  Signs/symptoms:",LP2=0
"RTN","RGCWCACV",19,0)
 .F  S LP2=$O(RXN(LP,"S",LP2)) Q:'LP2  D ADD($P(RXN(LP,"S",LP2),";"),.X)
"RTN","RGCWCACV",20,0)
 Q
"RTN","RGCWCACV",21,0)
 ; RPC to return CWAD flags
"RTN","RGCWCACV",22,0)
CWAD(DATA,DFN) ;
"RTN","RGCWCACV",23,0)
 S DATA=$$CWADX(DFN)
"RTN","RGCWCACV",24,0)
 Q
"RTN","RGCWCACV",25,0)
 ; Return CWAD flags
"RTN","RGCWCACV",26,0)
CWADX(DFN) ;
"RTN","RGCWCACV",27,0)
 N ACRN,CTR,LST
"RTN","RGCWCACV",28,0)
 D GET(DFN)
"RTN","RGCWCACV",29,0)
 S LST="cwadf",CTR=0
"RTN","RGCWCACV",30,0)
 F  S CTR=$O(^TMP("TIUPPCV",$J,CTR)) Q:(CTR'>0)!(LST?4U)  S ACRN=$P($G(^(CTR)),U,2) D:$L(ACRN)=1
"RTN","RGCWCACV",31,0)
 .S:"CWADF"[ACRN LST=$TR(LST,$C($A(ACRN)+32),ACRN)
"RTN","RGCWCACV",32,0)
 K ^TMP("TIUPPCV",$J)
"RTN","RGCWCACV",33,0)
 Q $TR(LST,"cwadf")
"RTN","RGCWCACV",34,0)
 ; Add to output array
"RTN","RGCWCACV",35,0)
ADD(TXT,LBL,IDT) ;
"RTN","RGCWCACV",36,0)
 S CNT=CNT+1,@DATA@(CNT)=$S($D(LBL):$$LJ^XLFSTR(LBL,$G(IDT,20)),1:"")_$G(TXT),LBL=""
"RTN","RGCWCACV",37,0)
 Q
"RTN","RGCWCACV",38,0)
 ; Get CWAD and PRF flags
"RTN","RGCWCACV",39,0)
GET(DFN) N PRF,CNT,RES
"RTN","RGCWCACV",40,0)
 K ^TMP("TIUPPCV",$J)
"RTN","RGCWCACV",41,0)
 Q:'DFN
"RTN","RGCWCACV",42,0)
 D ENCOVER^TIUPP3(DFN)
"RTN","RGCWCACV",43,0)
 S RES=$$GETACT^DGPFAPI(DFN,"PRF")
"RTN","RGCWCACV",44,0)
 S PRF=0,CNT=$O(^TMP("TIUPPCV",$J,""),-1)
"RTN","RGCWCACV",45,0)
 F  S PRF=$O(PRF(PRF)) Q:'PRF  D
"RTN","RGCWCACV",46,0)
 .N X,Y
"RTN","RGCWCACV",47,0)
 .S Y=$O(^DGPF(26.13,"C",DFN,$P(PRF(PRF,"FLAG"),U),0))_"^F"
"RTN","RGCWCACV",48,0)
 .F X="2^FLAG","2^FLAGTYPE","1^ASSIGNDT" S Y=Y_U_$P($G(PRF(PRF,$P(X,U,2))),U,+X)
"RTN","RGCWCACV",49,0)
 .S CNT=CNT+1,^TMP("TIUPPCV",$J,CNT)=Y_U_PRF
"RTN","RGCWCACV",50,0)
 Q
"RTN","RGCWCACV",51,0)
 ; Get patient record flag detail
"RTN","RGCWCACV",52,0)
PRF(DATA,DFN,IEN) ;
"RTN","RGCWCACV",53,0)
 N CNT
"RTN","RGCWCACV",54,0)
 S DATA=$$TMPGBL^RGUTRPC,CNT=0
"RTN","RGCWCACV",55,0)
 I '$G(IEN) D
"RTN","RGCWCACV",56,0)
 .S IEN=0
"RTN","RGCWCACV",57,0)
 .F  S IEN=$O(^DGPF(26.13,"B",DFN,IEN)) Q:'IEN  D
"RTN","RGCWCACV",58,0)
 ..Q:'$P($G(^DGPF(26.13,IEN,0)),U,3)
"RTN","RGCWCACV",59,0)
 ..D:CNT ADD($$REPEAT^XLFSTR("_",80)),ADD("")
"RTN","RGCWCACV",60,0)
 ..D PRFX(DFN,IEN)
"RTN","RGCWCACV",61,0)
 E  D PRFX(DFN,IEN)
"RTN","RGCWCACV",62,0)
 Q
"RTN","RGCWCACV",63,0)
 ; Get patient record detail for a single entry
"RTN","RGCWCACV",64,0)
PRFX(DFN,IEN) ;
"RTN","RGCWCACV",65,0)
 N PRF,CTL
"RTN","RGCWCACV",66,0)
 I $$GETASGN^DGPFAA(IEN,.PRF),$$GETHIST^DGPFAAH($$GETFIRST^DGPFAAH(IEN),.PRF),$$GETFLAG^DGPFUT1($P(PRF("FLAG"),U),.PRF) D
"RTN","RGCWCACV",67,0)
 .Q:+$G(PRF("DFN"))'=DFN
"RTN","RGCWCACV",68,0)
 .D:'CNT ADD($$GET1^DIQ(2,DFN,.01),"Patient:",25),ADD("")
"RTN","RGCWCACV",69,0)
 .F CTL="FLAG^Flag Name","TYPE^Flag Type","STATUS^Assignment Status","ASSIGNDT^Initial Assigned Date","APPRVBY^Approved by","REVIEWDT^Next Review Date","OWNER^Owner Site","ORIGSITE^Originating Site" D
"RTN","RGCWCACV",70,0)
 ..D ADD($P(PRF($P(CTL,U)),U,2),$P(CTL,U,2)_":",25)
"RTN","RGCWCACV",71,0)
 .I $D(PRF("NARR")) D
"RTN","RGCWCACV",72,0)
 ..D ADD(""),ADD("Assignment Narratives:"),ADD("")
"RTN","RGCWCACV",73,0)
 ..M @DATA@(CNT)=PRF("NARR")
"RTN","RGCWCACV",74,0)
 ..S CNT=CNT+1
"RTN","RGCWCACV",75,0)
 Q
"RTN","RGCWKDIN")
0^^B31866196
"RTN","RGCWKDIN",1,0)
RGCKDIN ;RI/CBMI/DKM - CareWeb KIDS installation support ;02-Feb-2015 12:11;DKM
"RTN","RGCWKDIN",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 111
"RTN","RGCWKDIN",3,0)
 ; Environment check
"RTN","RGCWKDIN",4,0)
EC X $G(@XPDGREF@("EC"))
"RTN","RGCWKDIN",5,0)
 Q
"RTN","RGCWKDIN",6,0)
 ; Preinit
"RTN","RGCWKDIN",7,0)
PRE N RGX,RGY
"RTN","RGCWKDIN",8,0)
 D MES(),OBJINST,SDINIT^RGCWFUTL(,60,1)
"RTN","RGCWKDIN",9,0)
 F  D  Q:'RGX
"RTN","RGCWKDIN",10,0)
 .S RGX=$$SHOWSESS^RGCWFUTL
"RTN","RGCWKDIN",11,0)
 .R:RGX "Waiting for active sessions to terminate...",RGY:10,!!
"RTN","RGCWKDIN",12,0)
 .I RGX,RGY=U,$$ASK^RGUT("There are still active sessions.  Are you sure you want to proceed") S RGX=0
"RTN","RGCWKDIN",13,0)
 D MES("Proceeding with installation...")
"RTN","RGCWKDIN",14,0)
 D INITIAL,SAVEOPT
"RTN","RGCWKDIN",15,0)
 Q
"RTN","RGCWKDIN",16,0)
 ; Postinit
"RTN","RGCWKDIN",17,0)
POST N PAR,Y
"RTN","RGCWKDIN",18,0)
 X ^%ZOSF("EON"),^%ZOSF("TRMOFF")
"RTN","RGCWKDIN",19,0)
 D RESPTR,DEFPAR,RESTOPT,REGISTER,FINAL
"RTN","RGCWKDIN",20,0)
 W !!!
"RTN","RGCWKDIN",21,0)
 Q
"RTN","RGCWKDIN",22,0)
 ; Execute initial preinit code, if any
"RTN","RGCWKDIN",23,0)
INITIAL ; EP
"RTN","RGCWKDIN",24,0)
 X $G(@XPDGREF@("INITIAL"))
"RTN","RGCWKDIN",25,0)
 Q
"RTN","RGCWKDIN",26,0)
 ; Execute final postinit code, if any
"RTN","RGCWKDIN",27,0)
FINAL ; EP
"RTN","RGCWKDIN",28,0)
 X $G(@XPDGREF@("FINAL"))
"RTN","RGCWKDIN",29,0)
 Q
"RTN","RGCWKDIN",30,0)
 ; Initializes default parameter values.  Does not affect existing entries.
"RTN","RGCWKDIN",31,0)
DEFPAR N PAR,ENT,VAL,INST,LP,Y
"RTN","RGCWKDIN",32,0)
 D MES("Setting up default site parameters...")
"RTN","RGCWKDIN",33,0)
 F LP=0:0 S LP=$O(@XPDGREF@("PARAM",LP)) Q:'LP  K VAL M VAL=^(LP) D
"RTN","RGCWKDIN",34,0)
 .S Y=VAL,VAL=$$MSG^RGUT($P(Y,U,3,999),"|",0),PAR=$P(Y,U),INST=$P(Y,U,2)
"RTN","RGCWKDIN",35,0)
 .S ENT=$$ENT^RGCWFPAR(PAR),ENT=$P(ENT,U,$L(ENT,U))
"RTN","RGCWKDIN",36,0)
 .D:$L(ENT) ADD^XPAR(ENT,PAR,INST,.VAL)
"RTN","RGCWKDIN",37,0)
 Q
"RTN","RGCWKDIN",38,0)
 ; Delete a file or subfile
"RTN","RGCWKDIN",39,0)
 ;   DIU = File or subfile #
"RTN","RGCWKDIN",40,0)
DELFIL(DIU) ; EP
"RTN","RGCWKDIN",41,0)
 N $ET
"RTN","RGCWKDIN",42,0)
 S $ET="",@$$TRAP^RGUTOS("DELERR^RGCWKDIN")
"RTN","RGCWKDIN",43,0)
 Q:'$D(^DD(DIU))
"RTN","RGCWKDIN",44,0)
 S DIU(0)=$S($D(^DIC(DIU)):"D",1:"S")
"RTN","RGCWKDIN",45,0)
 D EN^DIU2
"RTN","RGCWKDIN",46,0)
 Q
"RTN","RGCWKDIN",47,0)
DELERR N ERR
"RTN","RGCWKDIN",48,0)
 S ERR=$$EC^%ZOSV
"RTN","RGCWKDIN",49,0)
 D MES("An error occurred deleting file #"_$G(DIU))
"RTN","RGCWKDIN",50,0)
 D MES("The error was: "_ERR)
"RTN","RGCWKDIN",51,0)
 D MES("Please delete the file manually after correcting the problem.")
"RTN","RGCWKDIN",52,0)
 Q
"RTN","RGCWKDIN",53,0)
 ; Save ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK option
"RTN","RGCWKDIN",54,0)
SAVEOPT N OPT
"RTN","RGCWKDIN",55,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",56,0)
 Q:'OPT
"RTN","RGCWKDIN",57,0)
 M @XPDGREF@("ITMSAVE")=^DIC(19,OPT,10,"B")
"RTN","RGCWKDIN",58,0)
 M @XPDGREF@("RPCSAVE")=^DIC(19,OPT,"RPC","B")
"RTN","RGCWKDIN",59,0)
 Q
"RTN","RGCWKDIN",60,0)
 ; Restore ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK
"RTN","RGCWKDIN",61,0)
RESTOPT N OPT,ITM,RPC
"RTN","RGCWKDIN",62,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",63,0)
 Q:'OPT
"RTN","RGCWKDIN",64,0)
 F ITM=0:0 S ITM=$O(@XPDGREF@("ITMSAVE",ITM)) Q:'ITM  I $$REGCTX^RGUTRPC(ITM,OPT)
"RTN","RGCWKDIN",65,0)
 F RPC=0:0 S RPC=$O(@XPDGREF@("RPCSAVE",RPC)) Q:'RPC  I $$REGRPC^RGUTRPC(RPC,OPT)
"RTN","RGCWKDIN",66,0)
 Q
"RTN","RGCWKDIN",67,0)
 ; Resolve pointers in multiples (KIDS doesn't)
"RTN","RGCWKDIN",68,0)
RESPTR ; EP
"RTN","RGCWKDIN",69,0)
 N TGT,SRC,SUB,NOD,NAM,VAL,IEN,CNT,SGB,PTR
"RTN","RGCWKDIN",70,0)
 S SUB=0
"RTN","RGCWKDIN",71,0)
 F  S SUB=$O(@XPDGREF@("PTRS",SUB)) Q:'SUB  S X=^(SUB)  D
"RTN","RGCWKDIN",72,0)
 .S NOD=+X,SRC=$P(X,U,2),TGT=$P(X,U,3),SGB=$$ROOT^DILFD(SRC,,1),NAM=""
"RTN","RGCWKDIN",73,0)
 .F  S NAM=$O(@XPDGREF@("PTRS",SUB,NAM)) Q:'$L(NAM)  D
"RTN","RGCWKDIN",74,0)
 ..S IEN=$$FIND1^DIC(SRC,"","QX",NAM),VAL="",CNT=0
"RTN","RGCWKDIN",75,0)
 ..Q:IEN'>0
"RTN","RGCWKDIN",76,0)
 ..K @SGB@(IEN,NOD)
"RTN","RGCWKDIN",77,0)
 ..F  S VAL=$O(@XPDGREF@("PTRS",SUB,NAM,VAL)) Q:'$L(VAL)  D
"RTN","RGCWKDIN",78,0)
 ...S PTR=$$FIND1^DIC(TGT,,"X",VAL)
"RTN","RGCWKDIN",79,0)
 ...I 'PTR D MES("  Failed to resolve "_VAL) Q
"RTN","RGCWKDIN",80,0)
 ...S CNT=CNT+1,@SGB@(IEN,NOD,CNT,0)=PTR,@SGB@(IEN,NOD,"B",PTR,CNT)=""
"RTN","RGCWKDIN",81,0)
 ..S:CNT @SGB@(IEN,NOD,0)=U_SUB_"P^"_CNT_U_CNT
"RTN","RGCWKDIN",82,0)
 Q
"RTN","RGCWKDIN",83,0)
 ; Check binary version against M system
"RTN","RGCWKDIN",84,0)
OBJCHK ; EP
"RTN","RGCWKDIN",85,0)
 N VER,MSYS
"RTN","RGCWKDIN",86,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",87,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",88,0)
 I '$D(VER) D
"RTN","RGCWKDIN",89,0)
 .D MES("This package contains object code that is not supported on "_MSYS_" installations.",2)
"RTN","RGCWKDIN",90,0)
 E  I VER="" D
"RTN","RGCWKDIN",91,0)
 .D MES("This package does not contain object code for this version of "_MSYS_" installations.",2)
"RTN","RGCWKDIN",92,0)
 Q
"RTN","RGCWKDIN",93,0)
 ; Get M system type and target version
"RTN","RGCWKDIN",94,0)
GETMSYS(MSYS,VER) ;
"RTN","RGCWKDIN",95,0)
 K MSYS,VER
"RTN","RGCWKDIN",96,0)
 Q:'$D(@XPDGREF@("OBJ"))
"RTN","RGCWKDIN",97,0)
 S MSYS=$$UP^XLFSTR($P($$VERSION^%ZOSV(1)," ")),MSYS(0)=$S(MSYS="CACHE":1,MSYS="JUMPS":2,1:0)
"RTN","RGCWKDIN",98,0)
 Q:'$D(@XPDGREF@("OBJ",MSYS(0)))
"RTN","RGCWKDIN",99,0)
 S VER=$TR($$VERSION^%ZOSV()," ")
"RTN","RGCWKDIN",100,0)
 F  Q:'$L(VER)  Q:$D(@XPDGREF@("OBJ",MSYS(0),VER))  S VER=$P(VER,".",1,$L(VER,".")-1)
"RTN","RGCWKDIN",101,0)
 Q
"RTN","RGCWKDIN",102,0)
 ; Install routine binaries
"RTN","RGCWKDIN",103,0)
OBJINST ; EP
"RTN","RGCWKDIN",104,0)
 N MSYS,RTN,OBJ,SUB,GBL
"RTN","RGCWKDIN",105,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",106,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",107,0)
 Q:$D(@XPDGREF@("OBJ",MSYS(0)))<10
"RTN","RGCWKDIN",108,0)
 S RTN=""
"RTN","RGCWKDIN",109,0)
 D MES("Installing routine binaries...")
"RTN","RGCWKDIN",110,0)
 F  S RTN=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN)) Q:'$L(RTN)  D
"RTN","RGCWKDIN",111,0)
 .X "ZR  ZS @RTN"
"RTN","RGCWKDIN",112,0)
 .S OBJ="",SUB=0,GBL=$NA(@$S(MSYS(0)=1:"^rOBJ(RTN)",1:"^$R(RTN,""OBJECT"")"))
"RTN","RGCWKDIN",113,0)
 .F  S SUB=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN,SUB)) Q:'SUB  S OBJ=OBJ_^(SUB,0)
"RTN","RGCWKDIN",114,0)
 .S @GBL=$S(MSYS(0)=1:$$DECODE^RGUTUU(OBJ),1:OBJ)
"RTN","RGCWKDIN",115,0)
 Q
"RTN","RGCWKDIN",116,0)
 ; Perform various registration actions
"RTN","RGCWKDIN",117,0)
REGISTER N X,CTX
"RTN","RGCWKDIN",118,0)
 S CTX=$$GETOPT^RGUTRPC("RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",119,0)
 Q:'CTX
"RTN","RGCWKDIN",120,0)
 F X="RGCW","CIAV","CIAU","DG","DDR","RGUT","BEH" D REGNMSP^RGUTRPC(X,CTX)
"RTN","RGCWKDIN",121,0)
 F X="OR CPRS GUI CHART" D DOREG(X)
"RTN","RGCWKDIN",122,0)
 Q
"RTN","RGCWKDIN",123,0)
 ; Add an option as a subcontext to CareWeb Framework
"RTN","RGCWKDIN",124,0)
 ; Remove any redundant RPC's
"RTN","RGCWKDIN",125,0)
DOREG(OPT) ;
"RTN","RGCWKDIN",126,0)
 N RPC,CNT1,CNT2,STAT,IEN
"RTN","RGCWKDIN",127,0)
 S IEN=$$GETOPT^RGUTRPC(OPT)
"RTN","RGCWKDIN",128,0)
 Q:'IEN
"RTN","RGCWKDIN",129,0)
 W !!,"Registering ",OPT," as a subcontext under RGCWF CAREWEB FRAMEWORK...",!
"RTN","RGCWKDIN",130,0)
 I $$REGCTX^RGUTRPC(IEN,CTX)
"RTN","RGCWKDIN",131,0)
 W "Removing redundant RPC references...",!
"RTN","RGCWKDIN",132,0)
 S (CNT1,CNT2)=0
"RTN","RGCWKDIN",133,0)
 F RPC=0:0 S RPC=$O(^DIC(19,IEN,"RPC","B",RPC)) Q:'RPC  D
"RTN","RGCWKDIN",134,0)
 .S STAT=$$REGRPC^RGUTRPC(RPC,CTX,1)
"RTN","RGCWKDIN",135,0)
 .Q:STAT=-1
"RTN","RGCWKDIN",136,0)
 .W $$GET1^DIQ(8994,RPC,.01)_" - "
"RTN","RGCWKDIN",137,0)
 .I STAT=1 W "Removed",! S CNT1=CNT1+1
"RTN","RGCWKDIN",138,0)
 .E  I 'STAT W "Not removed",! S CNT2=CNT2+1
"RTN","RGCWKDIN",139,0)
 W !,CNT1," remote procedure(s) removed",!
"RTN","RGCWKDIN",140,0)
 W:CNT2 CNT2," remote procedure(s) could not be removed",!!
"RTN","RGCWKDIN",141,0)
 Q
"RTN","RGCWKDIN",142,0)
 ; Check if specified routine is installed
"RTN","RGCWKDIN",143,0)
RTNTST(RTN,VN,MSG) ;
"RTN","RGCWKDIN",144,0)
 D:$$RTNVER(RTN)<VN MES(MSG_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",145,0)
 Q
"RTN","RGCWKDIN",146,0)
 ; Get version # for specified routine
"RTN","RGCWKDIN",147,0)
RTNVER(RTN) ;
"RTN","RGCWKDIN",148,0)
 Q $P($T(+2^@RTN),";",3)
"RTN","RGCWKDIN",149,0)
 ; Check patch #s for specified routine
"RTN","RGCWKDIN",150,0)
PATCH(RTN,PN,MSG) ;
"RTN","RGCWKDIN",151,0)
 N X,Y,L,F
"RTN","RGCWKDIN",152,0)
 F X=1:1:$L(PN,",") D
"RTN","RGCWKDIN",153,0)
 .S Y=$P(PN,",",X),F=0
"RTN","RGCWKDIN",154,0)
 .F L=2,3 D  Q:F
"RTN","RGCWKDIN",155,0)
 ..S F=$TR($P($T(+L^@RTN),";",5),"*",",")[(","_Y_",")
"RTN","RGCWKDIN",156,0)
 .D:'F MES(MSG_" patch #"_Y_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",157,0)
 Q
"RTN","RGCWKDIN",158,0)
 ; Display message in MSG and optionally set quit flag to QUIT
"RTN","RGCWKDIN",159,0)
MES(MSG,QUIT) ;
"RTN","RGCWKDIN",160,0)
 D BMES^XPDUTL("  "_$G(MSG))
"RTN","RGCWKDIN",161,0)
 S:$G(QUIT) XPDQUIT=QUIT
"RTN","RGCWKDIN",162,0)
 Q
"SEC","^DIC",999.1,999.1,0,"AUDIT")
@
"SEC","^DIC",999.1,999.1,0,"DD")
@
"SEC","^DIC",999.1,999.1,0,"DEL")
@
"SEC","^DIC",999.1,999.1,0,"LAYGO")
@
"SEC","^DIC",999.1,999.1,0,"RD")
@
"SEC","^DIC",999.1,999.1,0,"WR")
@
"SEC","^DIC",999.201,999.201,0,"AUDIT")
@
"SEC","^DIC",999.201,999.201,0,"DD")
@
"SEC","^DIC",999.201,999.201,0,"DEL")
@
"SEC","^DIC",999.201,999.201,0,"LAYGO")
@
"SEC","^DIC",999.201,999.201,0,"RD")
@
"SEC","^DIC",999.201,999.201,0,"WR")
@
"SEC","^DIC",19941.21,19941.21,0,"AUDIT")
@
"SEC","^DIC",19941.21,19941.21,0,"DD")
@
"SEC","^DIC",19941.21,19941.21,0,"DEL")
@
"SEC","^DIC",19941.21,19941.21,0,"LAYGO")
@
"SEC","^DIC",19941.21,19941.21,0,"RD")
@
"SEC","^DIC",19941.21,19941.21,0,"WR")
@
"TEMP","EC")

"TEMP","FINAL")

"TEMP","INITIAL")

"TEMP","PTRS",19941.212)
20^19941.21^19.1
"TEMP","PTRS",19941.2121)
21^19941.21^19.1
"TEMP","TGT")
7
"VER")
8.0^22.0
"^DD",999.1,999.1,0)
FIELD^^10^4
"^DD",999.1,999.1,0,"DDA")
N
"^DD",999.1,999.1,0,"DT")
3150211
"^DD",999.1,999.1,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",999.1,999.1,0,"IX","B",999.1,.01)

"^DD",999.1,999.1,0,"NM","CAREWEB SERIALIZATION")

"^DD",999.1,999.1,0,"PT",999.991,.01)

"^DD",999.1,999.1,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",999.1,999.1,.01,1,0)
^.1
"^DD",999.1,999.1,.01,1,1,0)
999.1^B
"^DD",999.1,999.1,.01,1,1,1)
S ^RGCWF(999.1,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.1,.01,1,1,2)
K ^RGCWF(999.1,"B",$E(X,1,30),DA)
"^DD",999.1,999.1,.01,3)
Replace Name of the serialization type (1-30 characters).
"^DD",999.1,999.1,.01,"DT")
3150211
"^DD",999.1,999.1,1,0)
CONTENT TYPE^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",999.1,999.1,1,3)
Content type generated by this serialization type.
"^DD",999.1,999.1,1,"DT")
3150211
"^DD",999.1,999.1,2,0)
SERIALIZER^F^^0;3^K:$L(X)>10!($L(X)<1)!'(X?1.A0.AN) X
"^DD",999.1,999.1,2,3)
Name of serialization routine.
"^DD",999.1,999.1,2,"DT")
3150211
"^DD",999.1,999.1,10,0)
RESOURCE^999.11^^10;0
"^DD",999.1,999.11,0)
RESOURCE SUB-FIELD^^2^8
"^DD",999.1,999.11,0,"DT")
3150211
"^DD",999.1,999.11,0,"IX","B",999.11,.01)

"^DD",999.1,999.11,0,"IX","C",999.11,.01)

"^DD",999.1,999.11,0,"NM","RESOURCE")

"^DD",999.1,999.11,0,"UP")
999.1
"^DD",999.1,999.11,.01,0)
RESOURCE^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.11,.01,1,0)
^.1^^-1
"^DD",999.1,999.11,.01,1,1,0)
999.11^B^MUMPS
"^DD",999.1,999.11,.01,1,1,1)
S ^RGCWF(999.1,DA(1),10,"B",X,DA)=$$TOPTRN^RGCWSER(X)
"^DD",999.1,999.11,.01,1,1,2)
K ^RGCWF(999.1,DA(1),10,"B",X,DA)
"^DD",999.1,999.11,.01,1,1,"DT")
3150211
"^DD",999.1,999.11,.01,1,2,0)
999.11^C^MUMPS
"^DD",999.1,999.11,.01,1,2,1)
S ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)=""
"^DD",999.1,999.11,.01,1,2,2)
K ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)
"^DD",999.1,999.11,.01,1,2,"DT")
3150211
"^DD",999.1,999.11,.01,3)
Enter path name for the resource.
"^DD",999.1,999.11,.01,"DT")
3150211
"^DD",999.1,999.11,1,0)
INTERNAL^S^0:NO;1:YES;^0;2^Q
"^DD",999.1,999.11,1,3)
Enter YES if this is an internal resource.
"^DD",999.1,999.11,1,"DT")
3150221
"^DD",999.1,999.11,2,0)
SOURCE^NJ10,4XO^^0;3^K:'$$VFILE^DILFD(X) X
"^DD",999.1,999.11,2,2)
S Y(0)=Y S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,2.1)
S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,3)
Enter a file or subfile number.
"^DD",999.1,999.11,2,"DT")
3150211
"^DD",999.1,999.11,10,0)
CUSTOM SERIALIZER^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,10,3)
M code to invoke custom serializer.
"^DD",999.1,999.11,10,9)
@
"^DD",999.1,999.11,10,"DT")
3150211
"^DD",999.1,999.11,20,0)
CUSTOM RETRIEVAL^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,20,3)
M code to invoke custom retrieval logic.
"^DD",999.1,999.11,20,9)
@
"^DD",999.1,999.11,20,"DT")
3150211
"^DD",999.1,999.11,30,0)
PROPERTY^999.12I^^30;0
"^DD",999.1,999.11,40,0)
PARAMETER^999.13I^^40;0
"^DD",999.1,999.11,99,0)
DESCRIPTION^F^^99;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.11,99,3)
Enter brief description of this resource.
"^DD",999.1,999.11,99,"DT")
3150211
"^DD",999.1,999.12,0)
PROPERTY SUB-FIELD^^10^5
"^DD",999.1,999.12,0,"DT")
3150211
"^DD",999.1,999.12,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.12,0,"IX","ASEQ",999.12,3)

"^DD",999.1,999.12,0,"IX","B",999.12,.01)

"^DD",999.1,999.12,0,"NM","PROPERTY")

"^DD",999.1,999.12,0,"UP")
999.11
"^DD",999.1,999.12,.01,0)
PROPERTY^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.12,.01,1,0)
^.1
"^DD",999.1,999.12,.01,1,1,0)
999.12^B
"^DD",999.1,999.12,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.12,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)
"^DD",999.1,999.12,.01,3)
Property name to be used in serialization.
"^DD",999.1,999.12,.01,"DT")
3150211
"^DD",999.1,999.12,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.12,1,3)
Field name or # corresponding to this property
"^DD",999.1,999.12,1,"DT")
3150211
"^DD",999.1,999.12,2,0)
TYPE^RS^F:FREE TEXT;R:RAW;B:BOOLEAN;D:DATE;M:MULTIPLE;C:CUSTOM;O:OBJECT;W:WORD PROCESSING;I:INLINE;^0;3^Q
"^DD",999.1,999.12,2,3)
Encoding type for this property.
"^DD",999.1,999.12,2,"DT")
3150211
"^DD",999.1,999.12,3,0)
SEQUENCE^RNJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.12,3,1,0)
^.1
"^DD",999.1,999.12,3,1,1,0)
999.12^ASEQ
"^DD",999.1,999.12,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.12,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.12,3,1,1,"DT")
3150211
"^DD",999.1,999.12,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.12,3,"DT")
3150211
"^DD",999.1,999.12,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.12,10,3)
Enter control data.
"^DD",999.1,999.12,10,21,0)
^^7^7^3150211.121613
"^DD",999.1,999.12,10,21,1,0)
The format of this field depends on the value of the TYPE field.  For those
"^DD",999.1,999.12,10,21,2,0)
TYPE values not listed below, this field will be ignored.
"^DD",999.1,999.12,10,21,3,0)

"^DD",999.1,999.12,10,21,4,0)
C (Custom) - Executable M code.
"^DD",999.1,999.12,10,21,5,0)
O (Object) - Alias name of the target object.
"^DD",999.1,999.12,10,21,6,0)
M (Multiple) - Alias name of the multiple object.
"^DD",999.1,999.12,10,21,7,0)

"^DD",999.1,999.12,10,"DT")
3150211
"^DD",999.1,999.13,0)
PARAMETER SUB-FIELD^^10^6
"^DD",999.1,999.13,0,"DT")
3150211
"^DD",999.1,999.13,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.13,0,"IX","ASEQ",999.13,3)

"^DD",999.1,999.13,0,"IX","B",999.13,.01)

"^DD",999.1,999.13,0,"NM","PARAMETER")

"^DD",999.1,999.13,0,"UP")
999.11
"^DD",999.1,999.13,.01,0)
PARAMETER^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.13,.01,1,0)
^.1
"^DD",999.1,999.13,.01,1,1,0)
999.13^B
"^DD",999.1,999.13,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.13,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)
"^DD",999.1,999.13,.01,3)
Enter name of search parameter.
"^DD",999.1,999.13,.01,"DT")
3150211
"^DD",999.1,999.13,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.13,1,3)
Field name or # corresponding to this parameter.
"^DD",999.1,999.13,1,"DT")
3150211
"^DD",999.1,999.13,2,0)
TYPE^S^N:NUMBER;D:DATE;S:STRING;T:TOKEN;R:REFERENCE;Q:QUANTITY;^0;3^Q
"^DD",999.1,999.13,2,3)
Type of the search parameter.
"^DD",999.1,999.13,2,"DT")
3150211
"^DD",999.1,999.13,3,0)
SEQUENCE^NJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.13,3,1,0)
^.1
"^DD",999.1,999.13,3,1,1,0)
999.13^ASEQ
"^DD",999.1,999.13,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.13,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.13,3,1,1,"DT")
3150211
"^DD",999.1,999.13,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.13,3,"DT")
3150211
"^DD",999.1,999.13,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.13,10,3)
M code to perform filtering.
"^DD",999.1,999.13,10,"DT")
3150211
"^DD",999.1,999.13,20,0)
COHORT^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.13,20,3)
M code to set global selector into X.
"^DD",999.1,999.13,20,9)
@
"^DD",999.1,999.13,20,"DT")
3150211
"^DD",999.201,999.201,0)
FIELD^^4^5
"^DD",999.201,999.201,0,"IX","B",999.201,.01)

"^DD",999.201,999.201,0,"NM","CAREWEB NOTIFICATION CONTROL")

"^DD",999.201,999.201,0,"PT",999.994,.01)

"^DD",999.201,999.201,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<2)!'(X'?1P.E) X
"^DD",999.201,999.201,.01,1,0)
^.1
"^DD",999.201,999.201,.01,1,1,0)
999.201^B
"^DD",999.201,999.201,.01,1,1,1)
S ^RGCWF(999.201,"B",$E(X,1,30),DA)=""
"^DD",999.201,999.201,.01,1,1,2)
K ^RGCWF(999.201,"B",$E(X,1,30),DA)
"^DD",999.201,999.201,.01,3)
Answer must be 2-30 characters in length.
"^DD",999.201,999.201,.01,"DT")
3030805
"^DD",999.201,999.201,1,0)
IDENT^RK^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,1,3)
Code to check notification identity.  Set $T to true for positive match.
"^DD",999.201,999.201,1,9)
@
"^DD",999.201,999.201,1,21,0)
^^1^1^3030804.150811
"^DD",999.201,999.201,1,21,1,0)
Should check the notification identifier in AID and set $T to true if a match.
"^DD",999.201,999.201,1,"DT")
3030804
"^DD",999.201,999.201,2,0)
PARSE^RK^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,2,3)
Code to parse data elements from notification.
"^DD",999.201,999.201,2,9)
@
"^DD",999.201,999.201,2,21,0)
^^8^8^3030804.170957
"^DD",999.201,999.201,2,21,1,0)
Code to parse standard data elements from notification.  Elements should be
"^DD",999.201,999.201,2,21,2,0)
returned in ALR array as follows:
"^DD",999.201,999.201,2,21,3,0)

"^DD",999.201,999.201,2,21,4,0)
ALR("DFN")=Patient IEN (if patient-orientation)
"^DD",999.201,999.201,2,21,5,0)
ALR("INF")=Info only flag
"^DD",999.201,999.201,2,21,6,0)
ALR("TYP")=Notification type code
"^DD",999.201,999.201,2,21,7,0)
ALR("PRI")=Priority code
"^DD",999.201,999.201,2,21,8,0)
ALR("XTR")=Additional data
"^DD",999.201,999.201,2,"DT")
3030804
"^DD",999.201,999.201,3,0)
PROCESS^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,3,3)
Post processing logic for alert.
"^DD",999.201,999.201,3,9)
@
"^DD",999.201,999.201,3,"DT")
3030805
"^DD",999.201,999.201,4,0)
UPDATE^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,4,3)
Optional logic to update alerts for current user.
"^DD",999.201,999.201,4,9)
@
"^DD",999.201,999.201,4,21,0)
^^2^2^3080128.135828
"^DD",999.201,999.201,4,21,1,0)
This logic provides the opportunity to update alerts (add or delete) 
"^DD",999.201,999.201,4,21,2,0)
for the current user prior to retrieving them.
"^DD",999.201,999.201,4,"DT")
3080128
"^DD",19941.21,19941.21,0)
FIELD^^7^14
"^DD",19941.21,19941.21,0,"DT")
3091007
"^DD",19941.21,19941.21,0,"IX","B",19941.21,.01)

"^DD",19941.21,19941.21,0,"NM","CIA EVENT TYPE")

"^DD",19941.21,19941.21,0,"PT",999.995,.01)

"^DD",19941.21,19941.21,0,"PT",19930.995,.01)

"^DD",19941.21,19941.21,0,"PT",19941.23,1)

"^DD",19941.21,19941.21,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19941.21,19941.21,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",19941.21,19941.21,.01,1,0)
^.1
"^DD",19941.21,19941.21,.01,1,1,0)
19941.21^B
"^DD",19941.21,19941.21,.01,1,1,1)
S ^CIANB(19941.21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.21,.01,1,1,2)
K ^CIANB(19941.21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.21,.01,3)
Answer must be 3-100 characters in length.
"^DD",19941.21,19941.21,.01,"DT")
3030611
"^DD",19941.21,19941.21,1,0)
MONITOR^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,1,3)
M code to invoke monitor for this event type
"^DD",19941.21,19941.21,1,9)
@
"^DD",19941.21,19941.21,1,"DT")
3021021
"^DD",19941.21,19941.21,2,0)
DISABLE^S^0:NO;1:YES;^0;2^Q
"^DD",19941.21,19941.21,2,3)
Enter YES to disable this event type.
"^DD",19941.21,19941.21,2,21,0)
^.001^3^3^3030810^
"^DD",19941.21,19941.21,2,21,1,0)
If set to YES, this event type is disabled.  Once disabled, any attempt to 
"^DD",19941.21,19941.21,2,21,2,0)
enqueue the event will be ignored.  Disabling an event does not affect events
"^DD",19941.21,19941.21,2,21,3,0)
already in the queue. 
"^DD",19941.21,19941.21,2,"DT")
3030810
"^DD",19941.21,19941.21,3,0)
INTERVAL^NJ11,0X^^0;3^K:X<0!(X\1'=X) X
"^DD",19941.21,19941.21,3,3)
Enter the nominal polling interval in seconds.
"^DD",19941.21,19941.21,3,21,0)
^^10^10^3021021.152235
"^DD",19941.21,19941.21,3,21,1,0)
This is the nominal polling interval for the event in seconds.
"^DD",19941.21,19941.21,3,21,2,0)
The actual polling interval is dependent on the event polling
"^DD",19941.21,19941.21,3,21,3,0)
interval set for the client application as a site parameter.
"^DD",19941.21,19941.21,3,21,4,0)
The nominal polling interval guarantees that polling for this
"^DD",19941.21,19941.21,3,21,5,0)
event will not occur more frequently than this setting.
"^DD",19941.21,19941.21,3,21,6,0)
 
"^DD",19941.21,19941.21,3,21,7,0)
For events that are infrequent and/or do not require real time
"^DD",19941.21,19941.21,3,21,8,0)
notification, higher values may be selected for this field to
"^DD",19941.21,19941.21,3,21,9,0)
mitigate impact on system load. 
"^DD",19941.21,19941.21,3,21,10,0)

"^DD",19941.21,19941.21,3,"DT")
3021021
"^DD",19941.21,19941.21,4,0)
LOG EVENT^S^0:NO;1:YES;^0;4^Q
"^DD",19941.21,19941.21,4,3)
Enter YES to enable logging of this event.
"^DD",19941.21,19941.21,4,"DT")
3030611
"^DD",19941.21,19941.21,5,0)
LOG RETENTION^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.21,19941.21,5,3)
Number of days to retain log entries.
"^DD",19941.21,19941.21,5,"DT")
3030611
"^DD",19941.21,19941.21,6,0)
POLLING METHOD^S^0:PER SESSION;1:PER INTERVAL;^0;6^Q
"^DD",19941.21,19941.21,6,3)
Determines how a monitored event is polled.
"^DD",19941.21,19941.21,6,21,0)
^^11^11^3030810.175145
"^DD",19941.21,19941.21,6,21,1,0)
For monitored events, this setting determines how the monitor is invoked
"^DD",19941.21,19941.21,6,21,2,0)
when the polling interval has been reached.  PER SESSION causes the event
"^DD",19941.21,19941.21,6,21,3,0)
monitor to be invoked for each active session, setting the user and
"^DD",19941.21,19941.21,6,21,4,0)
session context prior to each call.  PER INTERVAL cause the event monitor
"^DD",19941.21,19941.21,6,21,5,0)
to be invoked only once per interval.  No user or session context information
"^DD",19941.21,19941.21,6,21,6,0)
is available to the monitor in this case.
"^DD",19941.21,19941.21,6,21,7,0)

"^DD",19941.21,19941.21,6,21,8,0)
PER SESSION is appropriate for events that depend upon a specific user or
"^DD",19941.21,19941.21,6,21,9,0)
session (e.g., notifications).  PER INTERVAL is appropriate for events 
"^DD",19941.21,19941.21,6,21,10,0)
that are independent of a user or session (e.g., status events to display
"^DD",19941.21,19941.21,6,21,11,0)
the host date/time).
"^DD",19941.21,19941.21,6,"DT")
3030810
"^DD",19941.21,19941.21,7,0)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",19941.21,19941.21,7,12)
Restricts to Extended Action Protocols starting with CIAV
"^DD",19941.21,19941.21,7,12.1)
S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X"""
"^DD",19941.21,19941.21,7,"DT")
3091007
"^DD",19941.21,19941.21,10,0)
DISPLAY LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,10,3)
Logic to display stub info in log viewer.
"^DD",19941.21,19941.21,10,9)
@
"^DD",19941.21,19941.21,10,"DT")
3030611
"^DD",19941.21,19941.21,20,0)
PUBLICATION KEY^19941.212P^^20;0
"^DD",19941.21,19941.21,21,0)
SUBSCRIPTION KEY^19941.2121P^^21;0
"^DD",19941.21,19941.21,99,0)
DESCRIPTION^19941.2199^^99;0
"^DD",19941.21,19941.21,100,0)
ERROR DATE/TIME^D^^100;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.21,19941.21,100,3)
Date and time of last error
"^DD",19941.21,19941.21,100,"DT")
3061129
"^DD",19941.21,19941.21,101,0)
ERROR TEXT^F^^100;2^K:$L(X)>240!($L(X)<1) X
"^DD",19941.21,19941.21,101,3)
Answer must be 1-240 characters in length.
"^DD",19941.21,19941.21,101,"DT")
3061129
"^DD",19941.21,19941.212,0)
PUBLICATION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.212,0,"DT")
3021021
"^DD",19941.21,19941.212,0,"IX","B",19941.212,.01)

"^DD",19941.21,19941.212,0,"NM","PUBLICATION KEY")

"^DD",19941.21,19941.212,0,"UP")
19941.21
"^DD",19941.21,19941.212,.01,0)
PUBLICATION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.212,.01,1,0)
^.1
"^DD",19941.21,19941.212,.01,1,1,0)
19941.212^B
"^DD",19941.21,19941.212,.01,1,1,1)
S ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.212,.01,1,1,2)
K ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.212,.01,3)
Security keys required to fire this event.
"^DD",19941.21,19941.212,.01,21,0)
^^2^2^3021021.152715
"^DD",19941.21,19941.212,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.212,.01,21,2,0)
the listed keys in order to fire an event of this type.
"^DD",19941.21,19941.212,.01,"DT")
3040310
"^DD",19941.21,19941.2121,0)
SUBSCRIPTION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.2121,0,"DT")
3021021
"^DD",19941.21,19941.2121,0,"IX","B",19941.2121,.01)

"^DD",19941.21,19941.2121,0,"NM","SUBSCRIPTION KEY")

"^DD",19941.21,19941.2121,0,"UP")
19941.21
"^DD",19941.21,19941.2121,.01,0)
SUBSCRIPTION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.2121,.01,1,0)
^.1
"^DD",19941.21,19941.2121,.01,1,1,0)
19941.2121^B
"^DD",19941.21,19941.2121,.01,1,1,1)
S ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.2121,.01,1,1,2)
K ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.2121,.01,3)
Security keys required to receive this event type.
"^DD",19941.21,19941.2121,.01,21,0)
^^2^2^3021021.153002
"^DD",19941.21,19941.2121,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.2121,.01,21,2,0)
the listed keys in order subscribe to an event of this type. 
"^DD",19941.21,19941.2121,.01,"DT")
3040310
"^DD",19941.21,19941.2199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",19941.21,19941.2199,0,"DT")
3021021
"^DD",19941.21,19941.2199,0,"NM","DESCRIPTION")

"^DD",19941.21,19941.2199,0,"UP")
19941.21
"^DD",19941.21,19941.2199,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",19941.21,19941.2199,.01,3)
Enter a detailed description of this event type.
"^DD",19941.21,19941.2199,.01,"DT")
3021021
"^DIC",999.1,999.1,0)
CAREWEB SERIALIZATION^999.1
"^DIC",999.1,999.1,0,"GL")
^RGCWF(999.1,
"^DIC",999.1,999.1,"%D",0)
^^1^1^3150211.113842
"^DIC",999.1,999.1,"%D",1,0)
Supports serialization of domain objects.
"^DIC",999.1,"B","CAREWEB SERIALIZATION",999.1)

"^DIC",999.201,999.201,0)
CAREWEB NOTIFICATION CONTROL^999.201
"^DIC",999.201,999.201,0,"GL")
^RGCWF(999.201,
"^DIC",999.201,"B","CAREWEB NOTIFICATION CONTROL",999.201)

"^DIC",19941.21,19941.21,0)
CIA EVENT TYPE^19941.21
"^DIC",19941.21,19941.21,0,"GL")
^CIANB(19941.21,
"^DIC",19941.21,"B","CIA EVENT TYPE",19941.21)

**INSTALL NAME**
CAREWEB ALLERGY COVERSHEET 1.0
"BLD",8489,0)
CAREWEB ALLERGY COVERSHEET 1.0^^0^3150226^n
"BLD",8489,4,0)
^9.64PA^19941.21^3
"BLD",8489,4,999.1,0)
999.1
"BLD",8489,4,999.1,222)
n^y^f^^n^^y^o^n
"BLD",8489,4,999.1,224)
I $$SCRN^RGCWKDTP(Y,1)
"BLD",8489,4,999.201,0)
999.201
"BLD",8489,4,999.201,222)
n^y^f^^y^^y^o^n
"BLD",8489,4,999.201,224)
I $$SCRN^RGCWKDTP(Y,4)
"BLD",8489,4,19941.21,0)
19941.21
"BLD",8489,4,19941.21,222)
n^y^f^^y^^y^o^n
"BLD",8489,4,19941.21,224)
I $$SCRN^RGCWKDTP(Y,5)
"BLD",8489,4,"B",999.1,999.1)

"BLD",8489,4,"B",999.201,999.201)

"BLD",8489,4,"B",19941.21,19941.21)

"BLD",8489,6.3)
108
"BLD",8489,"INI")
PRE^RGCWKDIN
"BLD",8489,"INIT")
POST^RGCWKDIN
"BLD",8489,"KRN",0)
^9.67PA^8994^20
"BLD",8489,"KRN",.4,0)
.4
"BLD",8489,"KRN",.401,0)
.401
"BLD",8489,"KRN",.402,0)
.402
"BLD",8489,"KRN",.403,0)
.403
"BLD",8489,"KRN",.5,0)
.5
"BLD",8489,"KRN",.84,0)
.84
"BLD",8489,"KRN",3.6,0)
3.6
"BLD",8489,"KRN",3.8,0)
3.8
"BLD",8489,"KRN",9.2,0)
9.2
"BLD",8489,"KRN",9.8,0)
9.8
"BLD",8489,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",8489,"KRN",9.8,"NM",1,0)
RGCWARCV^^0^B34490110
"BLD",8489,"KRN",9.8,"NM","B","RGCWARCV",1)

"BLD",8489,"KRN",19,0)
19
"BLD",8489,"KRN",19.1,0)
19.1
"BLD",8489,"KRN",101,0)
101
"BLD",8489,"KRN",409.61,0)
409.61
"BLD",8489,"KRN",771,0)
771
"BLD",8489,"KRN",779.2,0)
779.2
"BLD",8489,"KRN",870,0)
870
"BLD",8489,"KRN",8989.51,0)
8989.51
"BLD",8489,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",8489,"KRN",8989.52,0)
8989.52
"BLD",8489,"KRN",8994,0)
8994
"BLD",8489,"KRN",8994,"NM",0)
^9.68A^^
"BLD",8489,"KRN",8994,"NM",1,0)
RGCWARCV DETAIL^^0
"BLD",8489,"KRN",8994,"NM",2,0)
RGCWARCV LIST^^0
"BLD",8489,"KRN",8994,"NM","B","RGCWARCV DETAIL",1)

"BLD",8489,"KRN",8994,"NM","B","RGCWARCV LIST",2)

"BLD",8489,"KRN","B",.4,.4)

"BLD",8489,"KRN","B",.401,.401)

"BLD",8489,"KRN","B",.402,.402)

"BLD",8489,"KRN","B",.403,.403)

"BLD",8489,"KRN","B",.5,.5)

"BLD",8489,"KRN","B",.84,.84)

"BLD",8489,"KRN","B",3.6,3.6)

"BLD",8489,"KRN","B",3.8,3.8)

"BLD",8489,"KRN","B",9.2,9.2)

"BLD",8489,"KRN","B",9.8,9.8)

"BLD",8489,"KRN","B",19,19)

"BLD",8489,"KRN","B",19.1,19.1)

"BLD",8489,"KRN","B",101,101)

"BLD",8489,"KRN","B",409.61,409.61)

"BLD",8489,"KRN","B",771,771)

"BLD",8489,"KRN","B",779.2,779.2)

"BLD",8489,"KRN","B",870,870)

"BLD",8489,"KRN","B",8989.51,8989.51)

"BLD",8489,"KRN","B",8989.52,8989.52)

"BLD",8489,"KRN","B",8994,8994)

"BLD",8489,"PRE")
RGCWKDIN
"BLD",8489,"PRET")
PRETRANS^RGCWKDTP
"BLD",8489,"QUES",0)
^9.62^^
"BLD",8489,"REQB",0)
^9.611^^
"FIA",999.1)
CAREWEB SERIALIZATION
"FIA",999.1,0)
^RGCWF(999.1,
"FIA",999.1,0,0)
999.1I
"FIA",999.1,0,1)
n^y^f^^n^^y^o^n
"FIA",999.1,0,10)

"FIA",999.1,0,11)
I $$SCRN^RGCWKDTP(Y,1)
"FIA",999.1,0,"RLRO")

"FIA",999.1,999.1)
0
"FIA",999.1,999.11)
0
"FIA",999.1,999.12)
0
"FIA",999.1,999.13)
0
"FIA",999.201)
CAREWEB NOTIFICATION CONTROL
"FIA",999.201,0)
^RGCWF(999.201,
"FIA",999.201,0,0)
999.201
"FIA",999.201,0,1)
n^y^f^^y^^y^o^n
"FIA",999.201,0,10)

"FIA",999.201,0,11)
I $$SCRN^RGCWKDTP(Y,4)
"FIA",999.201,0,"RLRO")

"FIA",999.201,999.201)
0
"FIA",19941.21)
CIA EVENT TYPE
"FIA",19941.21,0)
^CIANB(19941.21,
"FIA",19941.21,0,0)
19941.21
"FIA",19941.21,0,1)
n^y^f^^y^^y^o^n
"FIA",19941.21,0,10)

"FIA",19941.21,0,11)
I $$SCRN^RGCWKDTP(Y,5)
"FIA",19941.21,0,"RLRO")

"FIA",19941.21,19941.21)
0
"FIA",19941.21,19941.212)
0
"FIA",19941.21,19941.2121)
0
"FIA",19941.21,19941.2199)
0
"INI")
PRE^RGCWKDIN
"INIT")
POST^RGCWKDIN
"KRN",8994,2672,-1)
0^2
"KRN",8994,2672,0)
RGCWARCV LIST^LIST^RGCWARCV^4^^^^1
"KRN",8994,2672,1,0)
^8994.01^1^1^3110307^
"KRN",8994,2672,1,1,0)
Return adverse reaction data for a patient formatted for list view.
"KRN",8994,2672,2,0)
^8994.02A^3^3
"KRN",8994,2672,2,1,0)
DFN^1^^1^1
"KRN",8994,2672,2,1,1,0)
^^1^1^3051230.103944
"KRN",8994,2672,2,1,1,1,0)
Internal entry number of patient.
"KRN",8994,2672,2,2,0)
UNRL^1^^0^2
"KRN",8994,2672,2,2,1,0)
^^1^1^3110307.111932
"KRN",8994,2672,2,2,1,1,0)
Includes unreleased items.
"KRN",8994,2672,2,3,0)
NOIN^1^^0^3
"KRN",8994,2672,2,3,1,0)
^^1^1^3110307.112001
"KRN",8994,2672,2,3,1,1,0)
Excludes inactive items when set to 1.
"KRN",8994,2672,2,"B","DFN",1)

"KRN",8994,2672,2,"B","NOIN",3)

"KRN",8994,2672,2,"B","UNRL",2)

"KRN",8994,2672,2,"PARAMSEQ",1,1)

"KRN",8994,2672,2,"PARAMSEQ",2,2)

"KRN",8994,2672,2,"PARAMSEQ",3,3)

"KRN",8994,2673,-1)
0^1
"KRN",8994,2673,0)
RGCWARCV DETAIL^DETAIL^RGCWARCV^4^^^^1
"KRN",8994,2673,1,0)
^8994.01^1^1^3051230.103601
"KRN",8994,2673,1,1,0)
Detail view for adverse reactions.
"KRN",8994,2673,2,0)
^8994.02A^2^2
"KRN",8994,2673,2,1,0)
DFN^1^^1^1
"KRN",8994,2673,2,1,1,0)
^^1^1^3051230.103633
"KRN",8994,2673,2,1,1,1,0)
Internal entry number of patient.
"KRN",8994,2673,2,2,0)
ADR^1^^1^2
"KRN",8994,2673,2,2,1,0)
^^1^1^3051230.103719
"KRN",8994,2673,2,2,1,1,0)
The internal entry number of the reaction in file 120.8.
"KRN",8994,2673,2,"B","ADR",2)

"KRN",8994,2673,2,"B","DFN",1)

"KRN",8994,2673,2,"PARAMSEQ",1,1)

"KRN",8994,2673,2,"PARAMSEQ",2,2)

"KRN",8994,2673,3,0)
^^1^1^3051230.103754
"KRN",8994,2673,3,1,0)
Array of text describing details of this adverse reaction.
"MBREQ")
1
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PGL",19941.21,0,7,7)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"PRE")
RGCWKDIN
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","RGCWARCV")
0^1^B34490110
"RTN","RGCWARCV",1,0)
RGCWARCV ;RI/CBMI/DKM - Cover Sheet: Adverse Reactions ;02-Feb-2015 10:15;DKM
"RTN","RGCWARCV",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 108
"RTN","RGCWARCV",3,0)
 ; Return adverse reaction info for a patient
"RTN","RGCWARCV",4,0)
LIST(DATA,DFN,UNRL,NOIN) ;
"RTN","RGCWARCV",5,0)
 N CNT,REASON,LP,LP2,RESTA,IN,INACTIVE,REC,ER,RXN,STA,SEV,SGN,X,Y,Z,X1,RTYP,INACT,ALCNT,REACT
"RTN","RGCWARCV",6,0)
 N NIEN,INZ,INSTA,INIEN,REA2,REACTBY
"RTN","RGCWARCV",7,0)
 S CNT=0
"RTN","RGCWARCV",8,0)
 S UNRL=$G(UNRL),IN=$G(IN),NOIN=$G(NOIN),(LP,CNT,ALCNT)=0,DATA=$$TMPGBL^RGUTRPC
"RTN","RGCWARCV",9,0)
 S Y=$O(^GMR(120.86,DFN,9999999.11,$C(0)),-1) I +Y D
"RTN","RGCWARCV",10,0)
 .I $P($G(^GMR(120.86,DFN,9999999.11,Y,0)),U,4)="" D
"RTN","RGCWARCV",11,0)
 ..S X1="Unassessable"
"RTN","RGCWARCV",12,0)
 ..S INIEN=Y_","_DFN
"RTN","RGCWARCV",13,0)
 ..S REASON=$$GET1^DIQ(120.869999911,INIEN,1)
"RTN","RGCWARCV",14,0)
 ..I REASON'="" D
"RTN","RGCWARCV",15,0)
 ...I REASON="OTHER" S REA2=$$GET1^DIQ(120.869999911,INIEN,5) S REASON=REASON_" "_REA2
"RTN","RGCWARCV",16,0)
 ...D ADD("-1^Unassessable: "_REASON)
"RTN","RGCWARCV",17,0)
 F  S LP=$O(^GMR(120.8,"B",DFN,LP)) Q:'LP  D
"RTN","RGCWARCV",18,0)
 .S INZ=0,REACTBY=""
"RTN","RGCWARCV",19,0)
 .S REC=$G(^GMR(120.8,LP,0)),ER=+$G(^("ER"))
"RTN","RGCWARCV",20,0)
 .Q:(+REC'=DFN)!(ER=1)
"RTN","RGCWARCV",21,0)
 .S Z=$O(^GMR(120.8,LP,9999999.12,$C(0)),-1) I +Z D
"RTN","RGCWARCV",22,0)
 ..S INACT=$P($G(^GMR(120.8,LP,9999999.12,Z,0)),U,1)
"RTN","RGCWARCV",23,0)
 ..S REACT=$P($G(^GMR(120.8,LP,9999999.12,Z,0)),U,4)
"RTN","RGCWARCV",24,0)
 ..I +INACT&(REACT="") S INZ=1
"RTN","RGCWARCV",25,0)
 ..I REACT'="" S REACTBY=$P($G(^GMR(120.8,LP,9999999.12,Z,0)),U,5)
"RTN","RGCWARCV",26,0)
 .S SGN=($P(REC,U,5)=DUZ!(REACTBY=DUZ))&'$P(REC,U,12)
"RTN","RGCWARCV",27,0)
 .I ER=2,'UNRL!'SGN Q
"RTN","RGCWARCV",28,0)
 .S LP2=0,RXN=""
"RTN","RGCWARCV",29,0)
 .F  S LP2=$O(^GMR(120.8,LP,10,LP2)) Q:'LP2  S X=$G(^(LP2,0)) D
"RTN","RGCWARCV",30,0)
 ..S X=$$GET1^DIQ(120.83,+X,.01)
"RTN","RGCWARCV",31,0)
 ..S:$L(X) RXN=RXN_$S($L(RXN):";",1:"")_X
"RTN","RGCWARCV",32,0)
 .S LP2=0,SEV=""
"RTN","RGCWARCV",33,0)
 .F  S LP2=$O(^GMR(120.85,"C",LP,LP2)) Q:'LP2  D
"RTN","RGCWARCV",34,0)
 ..S X=$P($G(^GMR(120.85,LP2,0)),U,14)
"RTN","RGCWARCV",35,0)
 ..S SEV=$S(X>SEV:X,1:SEV)
"RTN","RGCWARCV",36,0)
 .S:SEV SEV=$$EXTERNAL^DILFD(120.85,14.5,,SEV)
"RTN","RGCWARCV",37,0)
 .S STA=$S($P(REC,U,16):"V",$P(REC,U,12):"S",1:"U")
"RTN","RGCWARCV",38,0)
 .S RTYP=$P(REC,U,20)
"RTN","RGCWARCV",39,0)
 .S (INSTA,RESTA)=""
"RTN","RGCWARCV",40,0)
 .Q:(INZ=1)&(+NOIN)
"RTN","RGCWARCV",41,0)
 .I INZ=1 S INSTA=INACT
"RTN","RGCWARCV",42,0)
 .S ALCNT=ALCNT+1
"RTN","RGCWARCV",43,0)
 .D ADD(LP_U_$P(REC,U,2)_U_SEV_U_RXN_U_SGN_U_STA_U_INSTA_U_RTYP)
"RTN","RGCWARCV",44,0)
 I 'ALCNT D
"RTN","RGCWARCV",45,0)
 .S CNT=0
"RTN","RGCWARCV",46,0)
 .S X=$P($G(^GMR(120.86,DFN,0)),U,2)
"RTN","RGCWARCV",47,0)
 .S Y=$O(^GMR(120.86,DFN,9999999.11,$C(0)),-1)
"RTN","RGCWARCV",48,0)
 .I +Y  D
"RTN","RGCWARCV",49,0)
 ..I $P($G(^GMR(120.86,DFN,9999999.11,Y,0)),U,4)="" D
"RTN","RGCWARCV",50,0)
 ...D ADD("^Unassessable "_REASON_" and no "_$S('$L(X):"Allergy Assessment",'X:"Known Allergies",1:"Allergies Found"))
"RTN","RGCWARCV",51,0)
 ..E  D ADD("^No "_$S('$L(X):"Allergy Assessment",'X:"Known Allergies",1:"Allergies Found"))
"RTN","RGCWARCV",52,0)
 .E  D ADD("^No "_$S('$L(X):"Allergy Assessment",'X:"Known Allergies",1:"Allergies Found"))
"RTN","RGCWARCV",53,0)
 Q
"RTN","RGCWARCV",54,0)
 ; Detail view for adverse reaction
"RTN","RGCWARCV",55,0)
DETAIL(DATA,DFN,ADR) ;
"RTN","RGCWARCV",56,0)
 N RXN,LP,LP2,LBL,CNT,Y,INIEN,REASON,X1
"RTN","RGCWARCV",57,0)
 S DATA=$$TMPGBL^RGUTRPC,CNT=0
"RTN","RGCWARCV",58,0)
 I ADR=-1 D  Q
"RTN","RGCWARCV",59,0)
 .S Y=$O(^GMR(120.86,DFN,9999999.11,$C(0)),-1) I +Y D
"RTN","RGCWARCV",60,0)
 ..I $P($G(^GMR(120.86,DFN,9999999.11,Y,0)),U,4)="" D
"RTN","RGCWARCV",61,0)
 ...S INIEN=Y_","_DFN
"RTN","RGCWARCV",62,0)
 ...S REASON=$$GET1^DIQ(120.869999911,INIEN,1)
"RTN","RGCWARCV",63,0)
 ...I REASON'="" D
"RTN","RGCWARCV",64,0)
 ....I REASON="OTHER" S REA2=$$GET1^DIQ(120.869999911,INIEN,5) S REASON=REASON_" "_REA2
"RTN","RGCWARCV",65,0)
 ...D ADD("Unassessable: "_REASON)
"RTN","RGCWARCV",66,0)
 ...D ADD("Date: "_$$GET1^DIQ(120.869999911,INIEN,.01))
"RTN","RGCWARCV",67,0)
 ...D ADD("User: "_$$GET1^DIQ(120.869999911,INIEN,2))
"RTN","RGCWARCV",68,0)
 D EN1^GMRAOR2(ADR,"RXN")
"RTN","RGCWARCV",69,0)
 D ADD($P(RXN,U),"Causative agent:")
"RTN","RGCWARCV",70,0)
 I DUZ("AG")'="I" D
"RTN","RGCWARCV",71,0)
 .S RXNORM=$$RXNORM(ADR)  ;Get the RXNorm code for this agent
"RTN","RGCWARCV",72,0)
 .I +RXNORM D ADD(RXNORM,"RxNorm:")
"RTN","RGCWARCV",73,0)
 I $P(RXN,U,12)'="" D ADD($P(RXN,U,12),"Event:"),ADD()
"RTN","RGCWARCV",74,0)
 D:$D(RXN("S",1)) SYM,ADD()
"RTN","RGCWARCV",75,0)
 D:$D(RXN("V",1)) CLS,ADD()
"RTN","RGCWARCV",76,0)
 D:$D(RXN("I",1)) ING,ADD()
"RTN","RGCWARCV",77,0)
 D ADD($P(RXN,U,2)_"  "_$P(RXN,U,3),"Originated:")
"RTN","RGCWARCV",78,0)
 S X=$$FMTE^XLFDT($P(RXN,U,10)) D ADD(X,"Origination Date:")
"RTN","RGCWARCV",79,0)
 D ADD()
"RTN","RGCWARCV",80,0)
 D:$D(RXN("O",1)) OBS,ADD()
"RTN","RGCWARCV",81,0)
 S X1="" S X1=$P(RXN,U,9)
"RTN","RGCWARCV",82,0)
 I +X1 S X1=" Date: "_$$FMTE^XLFDT(X1)
"RTN","RGCWARCV",83,0)
 D ADD($S($P(RXN,U,4)="VERIFIED":"Yes",1:"No")_" "_X1,"Verified:")
"RTN","RGCWARCV",84,0)
 I $P(RXN,U,4)="VERIFIED" D ADD($P(RXN,U,8),"Verified by:")
"RTN","RGCWARCV",85,0)
 D ADD()
"RTN","RGCWARCV",86,0)
 D ADD($S($P(RXN,U,5)="OBSERVED":"Observed",$P(RXN,U,5)="HISTORICAL":"Historical",1:""),"Observed/Historical:")
"RTN","RGCWARCV",87,0)
 I $P(RXN,U,11)'="" D ADD($P(RXN,U,11),"Source:"),ADD()
"RTN","RGCWARCV",88,0)
 ;IHS/MSC/MGH Add inactive data
"RTN","RGCWARCV",89,0)
 D:$D(RXN("N",1)) INAC,ADD()
"RTN","RGCWARCV",90,0)
 D:$D(RXN("C",1)) COM,ADD()
"RTN","RGCWARCV",91,0)
 ;IHS/MSC/MGH Add last modified
"RTN","RGCWARCV",92,0)
 D LAST
"RTN","RGCWARCV",93,0)
 Q
"RTN","RGCWARCV",94,0)
SYM S LP=0,LBL="Signs/symptoms:"
"RTN","RGCWARCV",95,0)
 F  S LP=$O(RXN("S",LP)) Q:'LP  D ADD(RXN("S",LP),.LBL)
"RTN","RGCWARCV",96,0)
 Q
"RTN","RGCWARCV",97,0)
CLS S LP=0,LBL="Drug Classes:"
"RTN","RGCWARCV",98,0)
 F  S LP=$O(RXN("V",LP)) Q:'LP  D ADD($P(RXN("V",LP),U,2),.LBL)
"RTN","RGCWARCV",99,0)
 Q
"RTN","RGCWARCV",100,0)
ING S LP=0,LBL="Ingredients:"
"RTN","RGCWARCV",101,0)
 F  S LP=$O(RXN("I",LP)) Q:'LP  D ADD($P(RXN("I",LP),U,1),.LBL)
"RTN","RGCWARCV",102,0)
 Q
"RTN","RGCWARCV",103,0)
OBS S LP=0,LBL="Obs dates/severity:"
"RTN","RGCWARCV",104,0)
 F  S LP=$O(RXN("O",LP)) Q:'LP  D ADD($$DT(+RXN("O",LP))_" "_$P(RXN("O",LP),U,2),.LBL)
"RTN","RGCWARCV",105,0)
 Q
"RTN","RGCWARCV",106,0)
INAC ;add inactivity time
"RTN","RGCWARCV",107,0)
 S LP=0
"RTN","RGCWARCV",108,0)
 F  S LP=$O(RXN("N",LP)) Q:'LP  D
"RTN","RGCWARCV",109,0)
 .D ADD($P(RXN("N",LP),U,1),"Inactivation Date:")
"RTN","RGCWARCV",110,0)
 .D ADD($P(RXN("N",LP),U,2),"Inactivation Reason:")
"RTN","RGCWARCV",111,0)
 .D ADD($P(RXN("N",LP),U,3),"Inactivated By:")
"RTN","RGCWARCV",112,0)
 .I $P(RXN("N",LP),U,6)'="" D ADD($P(RXN("N",LP),U,6),"Comment:")
"RTN","RGCWARCV",113,0)
 .I $P(RXN("N",LP),U,4)'="" D
"RTN","RGCWARCV",114,0)
 ..D ADD($P(RXN("N",LP),U,4),"Reactivation Date:")
"RTN","RGCWARCV",115,0)
 ..D ADD($P(RXN("N",LP),U,5),"Reactivated By:")
"RTN","RGCWARCV",116,0)
 Q
"RTN","RGCWARCV",117,0)
LAST ;Get last modified
"RTN","RGCWARCV",118,0)
 N LP,MOD,IIEN,X,Y
"RTN","RGCWARCV",119,0)
 S LP=9999999 S LP=$O(^GMR(120.8,ADR,9999999.14,LP),-1) Q:'+LP  D
"RTN","RGCWARCV",120,0)
 .S MOD=$G(^GMR(120.8,ADR,9999999.14,LP,0))
"RTN","RGCWARCV",121,0)
 .S IIEN=LP_","_ADR_","
"RTN","RGCWARCV",122,0)
 .S X=$$GET1^DIQ(120.899999914,IIEN,.01),Y=$$GET1^DIQ(120.899999914,IIEN,.02)
"RTN","RGCWARCV",123,0)
 .S X=X_" by "_Y
"RTN","RGCWARCV",124,0)
 .D ADD(X,"Last Modified:")
"RTN","RGCWARCV",125,0)
 Q
"RTN","RGCWARCV",126,0)
COM S LP=0,LBL="Comments:"
"RTN","RGCWARCV",127,0)
 D ADD()
"RTN","RGCWARCV",128,0)
 F  S LP=$O(RXN("C",LP)),LP2=0 Q:'LP  D
"RTN","RGCWARCV",129,0)
 .N X
"RTN","RGCWARCV",130,0)
 .D:$L(LBL) ADD(,.LBL)
"RTN","RGCWARCV",131,0)
 .S X=$P(RXN("C",LP),U,2)
"RTN","RGCWARCV",132,0)
 .S:$L(X) X=" by "_X
"RTN","RGCWARCV",133,0)
 .D ADD("   "_$$DT(+RXN("C",LP))_X)
"RTN","RGCWARCV",134,0)
 .F  S LP2=$O(RXN("C",LP,LP2)) Q:'LP2  D ADD("    "_RXN("C",LP,LP2,0))
"RTN","RGCWARCV",135,0)
 Q
"RTN","RGCWARCV",136,0)
RXNORM(ADR) ;Find and add the RxNorm code
"RTN","RGCWARCV",137,0)
 N NDC,RXNORM,TYPE,GEN,DRUG
"RTN","RGCWARCV",138,0)
 S RXNORM=0
"RTN","RGCWARCV",139,0)
 S TYPE=$P($G(^GMR(120.8,ADR,0)),U,3)
"RTN","RGCWARCV",140,0)
 I $P(TYPE,";",2)="PSNDF(50.6," D
"RTN","RGCWARCV",141,0)
 .;Its a VA generic drug, now find all the drugs attached and look for
"RTN","RGCWARCV",142,0)
 .;RXNorm
"RTN","RGCWARCV",143,0)
 .S GEN=$P(TYPE,";",1)
"RTN","RGCWARCV",144,0)
 .S DRUG="" F  S DRUG=$O(^PSDRUG("AND",GEN,DRUG)) Q:'+DRUG!(+RXNORM)  D
"RTN","RGCWARCV",145,0)
 ..S IENS=DRUG_","
"RTN","RGCWARCV",146,0)
 ..S NDC=$$GET1^DIQ(50,IENS,31)
"RTN","RGCWARCV",147,0)
 ..Q:'$L(NDC)
"RTN","RGCWARCV",148,0)
 ..S NDC=$TR(NDC,"-","")
"RTN","RGCWARCV",149,0)
 ..S:$L(NDC)=12 NDC=$E(NDC,2,12)
"RTN","RGCWARCV",150,0)
 ..S RXNORM=+$O(^C0CRXN(176.002,"NDC",NDC,0))
"RTN","RGCWARCV",151,0)
 ..S RXNORM=$$GET1^DIQ(176.002,RXNORM,.01)
"RTN","RGCWARCV",152,0)
 Q RXNORM
"RTN","RGCWARCV",153,0)
 ; Format date/time
"RTN","RGCWARCV",154,0)
DT(Y) D DD^%DT
"RTN","RGCWARCV",155,0)
 Q Y
"RTN","RGCWARCV",156,0)
 ; Add to output array
"RTN","RGCWARCV",157,0)
ADD(TXT,LBL) ;
"RTN","RGCWARCV",158,0)
 S CNT=CNT+1 S @DATA@(CNT)=$S($D(LBL):$$LJ^XLFSTR(LBL,20),1:"")_$G(TXT),LBL=""
"RTN","RGCWARCV",159,0)
 Q
"RTN","RGCWARCV",160,0)
 ; Ingredients and VA drug classes
"RTN","RGCWARCV",161,0)
 ;
"RTN","RGCWKDIN")
0^^B31866196
"RTN","RGCWKDIN",1,0)
RGCKDIN ;RI/CBMI/DKM - CareWeb KIDS installation support ;02-Feb-2015 12:11;DKM
"RTN","RGCWKDIN",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 108
"RTN","RGCWKDIN",3,0)
 ; Environment check
"RTN","RGCWKDIN",4,0)
EC X $G(@XPDGREF@("EC"))
"RTN","RGCWKDIN",5,0)
 Q
"RTN","RGCWKDIN",6,0)
 ; Preinit
"RTN","RGCWKDIN",7,0)
PRE N RGX,RGY
"RTN","RGCWKDIN",8,0)
 D MES(),OBJINST,SDINIT^RGCWFUTL(,60,1)
"RTN","RGCWKDIN",9,0)
 F  D  Q:'RGX
"RTN","RGCWKDIN",10,0)
 .S RGX=$$SHOWSESS^RGCWFUTL
"RTN","RGCWKDIN",11,0)
 .R:RGX "Waiting for active sessions to terminate...",RGY:10,!!
"RTN","RGCWKDIN",12,0)
 .I RGX,RGY=U,$$ASK^RGUT("There are still active sessions.  Are you sure you want to proceed") S RGX=0
"RTN","RGCWKDIN",13,0)
 D MES("Proceeding with installation...")
"RTN","RGCWKDIN",14,0)
 D INITIAL,SAVEOPT
"RTN","RGCWKDIN",15,0)
 Q
"RTN","RGCWKDIN",16,0)
 ; Postinit
"RTN","RGCWKDIN",17,0)
POST N PAR,Y
"RTN","RGCWKDIN",18,0)
 X ^%ZOSF("EON"),^%ZOSF("TRMOFF")
"RTN","RGCWKDIN",19,0)
 D RESPTR,DEFPAR,RESTOPT,REGISTER,FINAL
"RTN","RGCWKDIN",20,0)
 W !!!
"RTN","RGCWKDIN",21,0)
 Q
"RTN","RGCWKDIN",22,0)
 ; Execute initial preinit code, if any
"RTN","RGCWKDIN",23,0)
INITIAL ; EP
"RTN","RGCWKDIN",24,0)
 X $G(@XPDGREF@("INITIAL"))
"RTN","RGCWKDIN",25,0)
 Q
"RTN","RGCWKDIN",26,0)
 ; Execute final postinit code, if any
"RTN","RGCWKDIN",27,0)
FINAL ; EP
"RTN","RGCWKDIN",28,0)
 X $G(@XPDGREF@("FINAL"))
"RTN","RGCWKDIN",29,0)
 Q
"RTN","RGCWKDIN",30,0)
 ; Initializes default parameter values.  Does not affect existing entries.
"RTN","RGCWKDIN",31,0)
DEFPAR N PAR,ENT,VAL,INST,LP,Y
"RTN","RGCWKDIN",32,0)
 D MES("Setting up default site parameters...")
"RTN","RGCWKDIN",33,0)
 F LP=0:0 S LP=$O(@XPDGREF@("PARAM",LP)) Q:'LP  K VAL M VAL=^(LP) D
"RTN","RGCWKDIN",34,0)
 .S Y=VAL,VAL=$$MSG^RGUT($P(Y,U,3,999),"|",0),PAR=$P(Y,U),INST=$P(Y,U,2)
"RTN","RGCWKDIN",35,0)
 .S ENT=$$ENT^RGCWFPAR(PAR),ENT=$P(ENT,U,$L(ENT,U))
"RTN","RGCWKDIN",36,0)
 .D:$L(ENT) ADD^XPAR(ENT,PAR,INST,.VAL)
"RTN","RGCWKDIN",37,0)
 Q
"RTN","RGCWKDIN",38,0)
 ; Delete a file or subfile
"RTN","RGCWKDIN",39,0)
 ;   DIU = File or subfile #
"RTN","RGCWKDIN",40,0)
DELFIL(DIU) ; EP
"RTN","RGCWKDIN",41,0)
 N $ET
"RTN","RGCWKDIN",42,0)
 S $ET="",@$$TRAP^RGUTOS("DELERR^RGCWKDIN")
"RTN","RGCWKDIN",43,0)
 Q:'$D(^DD(DIU))
"RTN","RGCWKDIN",44,0)
 S DIU(0)=$S($D(^DIC(DIU)):"D",1:"S")
"RTN","RGCWKDIN",45,0)
 D EN^DIU2
"RTN","RGCWKDIN",46,0)
 Q
"RTN","RGCWKDIN",47,0)
DELERR N ERR
"RTN","RGCWKDIN",48,0)
 S ERR=$$EC^%ZOSV
"RTN","RGCWKDIN",49,0)
 D MES("An error occurred deleting file #"_$G(DIU))
"RTN","RGCWKDIN",50,0)
 D MES("The error was: "_ERR)
"RTN","RGCWKDIN",51,0)
 D MES("Please delete the file manually after correcting the problem.")
"RTN","RGCWKDIN",52,0)
 Q
"RTN","RGCWKDIN",53,0)
 ; Save ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK option
"RTN","RGCWKDIN",54,0)
SAVEOPT N OPT
"RTN","RGCWKDIN",55,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",56,0)
 Q:'OPT
"RTN","RGCWKDIN",57,0)
 M @XPDGREF@("ITMSAVE")=^DIC(19,OPT,10,"B")
"RTN","RGCWKDIN",58,0)
 M @XPDGREF@("RPCSAVE")=^DIC(19,OPT,"RPC","B")
"RTN","RGCWKDIN",59,0)
 Q
"RTN","RGCWKDIN",60,0)
 ; Restore ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK
"RTN","RGCWKDIN",61,0)
RESTOPT N OPT,ITM,RPC
"RTN","RGCWKDIN",62,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",63,0)
 Q:'OPT
"RTN","RGCWKDIN",64,0)
 F ITM=0:0 S ITM=$O(@XPDGREF@("ITMSAVE",ITM)) Q:'ITM  I $$REGCTX^RGUTRPC(ITM,OPT)
"RTN","RGCWKDIN",65,0)
 F RPC=0:0 S RPC=$O(@XPDGREF@("RPCSAVE",RPC)) Q:'RPC  I $$REGRPC^RGUTRPC(RPC,OPT)
"RTN","RGCWKDIN",66,0)
 Q
"RTN","RGCWKDIN",67,0)
 ; Resolve pointers in multiples (KIDS doesn't)
"RTN","RGCWKDIN",68,0)
RESPTR ; EP
"RTN","RGCWKDIN",69,0)
 N TGT,SRC,SUB,NOD,NAM,VAL,IEN,CNT,SGB,PTR
"RTN","RGCWKDIN",70,0)
 S SUB=0
"RTN","RGCWKDIN",71,0)
 F  S SUB=$O(@XPDGREF@("PTRS",SUB)) Q:'SUB  S X=^(SUB)  D
"RTN","RGCWKDIN",72,0)
 .S NOD=+X,SRC=$P(X,U,2),TGT=$P(X,U,3),SGB=$$ROOT^DILFD(SRC,,1),NAM=""
"RTN","RGCWKDIN",73,0)
 .F  S NAM=$O(@XPDGREF@("PTRS",SUB,NAM)) Q:'$L(NAM)  D
"RTN","RGCWKDIN",74,0)
 ..S IEN=$$FIND1^DIC(SRC,"","QX",NAM),VAL="",CNT=0
"RTN","RGCWKDIN",75,0)
 ..Q:IEN'>0
"RTN","RGCWKDIN",76,0)
 ..K @SGB@(IEN,NOD)
"RTN","RGCWKDIN",77,0)
 ..F  S VAL=$O(@XPDGREF@("PTRS",SUB,NAM,VAL)) Q:'$L(VAL)  D
"RTN","RGCWKDIN",78,0)
 ...S PTR=$$FIND1^DIC(TGT,,"X",VAL)
"RTN","RGCWKDIN",79,0)
 ...I 'PTR D MES("  Failed to resolve "_VAL) Q
"RTN","RGCWKDIN",80,0)
 ...S CNT=CNT+1,@SGB@(IEN,NOD,CNT,0)=PTR,@SGB@(IEN,NOD,"B",PTR,CNT)=""
"RTN","RGCWKDIN",81,0)
 ..S:CNT @SGB@(IEN,NOD,0)=U_SUB_"P^"_CNT_U_CNT
"RTN","RGCWKDIN",82,0)
 Q
"RTN","RGCWKDIN",83,0)
 ; Check binary version against M system
"RTN","RGCWKDIN",84,0)
OBJCHK ; EP
"RTN","RGCWKDIN",85,0)
 N VER,MSYS
"RTN","RGCWKDIN",86,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",87,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",88,0)
 I '$D(VER) D
"RTN","RGCWKDIN",89,0)
 .D MES("This package contains object code that is not supported on "_MSYS_" installations.",2)
"RTN","RGCWKDIN",90,0)
 E  I VER="" D
"RTN","RGCWKDIN",91,0)
 .D MES("This package does not contain object code for this version of "_MSYS_" installations.",2)
"RTN","RGCWKDIN",92,0)
 Q
"RTN","RGCWKDIN",93,0)
 ; Get M system type and target version
"RTN","RGCWKDIN",94,0)
GETMSYS(MSYS,VER) ;
"RTN","RGCWKDIN",95,0)
 K MSYS,VER
"RTN","RGCWKDIN",96,0)
 Q:'$D(@XPDGREF@("OBJ"))
"RTN","RGCWKDIN",97,0)
 S MSYS=$$UP^XLFSTR($P($$VERSION^%ZOSV(1)," ")),MSYS(0)=$S(MSYS="CACHE":1,MSYS="JUMPS":2,1:0)
"RTN","RGCWKDIN",98,0)
 Q:'$D(@XPDGREF@("OBJ",MSYS(0)))
"RTN","RGCWKDIN",99,0)
 S VER=$TR($$VERSION^%ZOSV()," ")
"RTN","RGCWKDIN",100,0)
 F  Q:'$L(VER)  Q:$D(@XPDGREF@("OBJ",MSYS(0),VER))  S VER=$P(VER,".",1,$L(VER,".")-1)
"RTN","RGCWKDIN",101,0)
 Q
"RTN","RGCWKDIN",102,0)
 ; Install routine binaries
"RTN","RGCWKDIN",103,0)
OBJINST ; EP
"RTN","RGCWKDIN",104,0)
 N MSYS,RTN,OBJ,SUB,GBL
"RTN","RGCWKDIN",105,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",106,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",107,0)
 Q:$D(@XPDGREF@("OBJ",MSYS(0)))<10
"RTN","RGCWKDIN",108,0)
 S RTN=""
"RTN","RGCWKDIN",109,0)
 D MES("Installing routine binaries...")
"RTN","RGCWKDIN",110,0)
 F  S RTN=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN)) Q:'$L(RTN)  D
"RTN","RGCWKDIN",111,0)
 .X "ZR  ZS @RTN"
"RTN","RGCWKDIN",112,0)
 .S OBJ="",SUB=0,GBL=$NA(@$S(MSYS(0)=1:"^rOBJ(RTN)",1:"^$R(RTN,""OBJECT"")"))
"RTN","RGCWKDIN",113,0)
 .F  S SUB=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN,SUB)) Q:'SUB  S OBJ=OBJ_^(SUB,0)
"RTN","RGCWKDIN",114,0)
 .S @GBL=$S(MSYS(0)=1:$$DECODE^RGUTUU(OBJ),1:OBJ)
"RTN","RGCWKDIN",115,0)
 Q
"RTN","RGCWKDIN",116,0)
 ; Perform various registration actions
"RTN","RGCWKDIN",117,0)
REGISTER N X,CTX
"RTN","RGCWKDIN",118,0)
 S CTX=$$GETOPT^RGUTRPC("RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",119,0)
 Q:'CTX
"RTN","RGCWKDIN",120,0)
 F X="RGCW","CIAV","CIAU","DG","DDR","RGUT","BEH" D REGNMSP^RGUTRPC(X,CTX)
"RTN","RGCWKDIN",121,0)
 F X="OR CPRS GUI CHART" D DOREG(X)
"RTN","RGCWKDIN",122,0)
 Q
"RTN","RGCWKDIN",123,0)
 ; Add an option as a subcontext to CareWeb Framework
"RTN","RGCWKDIN",124,0)
 ; Remove any redundant RPC's
"RTN","RGCWKDIN",125,0)
DOREG(OPT) ;
"RTN","RGCWKDIN",126,0)
 N RPC,CNT1,CNT2,STAT,IEN
"RTN","RGCWKDIN",127,0)
 S IEN=$$GETOPT^RGUTRPC(OPT)
"RTN","RGCWKDIN",128,0)
 Q:'IEN
"RTN","RGCWKDIN",129,0)
 W !!,"Registering ",OPT," as a subcontext under RGCWF CAREWEB FRAMEWORK...",!
"RTN","RGCWKDIN",130,0)
 I $$REGCTX^RGUTRPC(IEN,CTX)
"RTN","RGCWKDIN",131,0)
 W "Removing redundant RPC references...",!
"RTN","RGCWKDIN",132,0)
 S (CNT1,CNT2)=0
"RTN","RGCWKDIN",133,0)
 F RPC=0:0 S RPC=$O(^DIC(19,IEN,"RPC","B",RPC)) Q:'RPC  D
"RTN","RGCWKDIN",134,0)
 .S STAT=$$REGRPC^RGUTRPC(RPC,CTX,1)
"RTN","RGCWKDIN",135,0)
 .Q:STAT=-1
"RTN","RGCWKDIN",136,0)
 .W $$GET1^DIQ(8994,RPC,.01)_" - "
"RTN","RGCWKDIN",137,0)
 .I STAT=1 W "Removed",! S CNT1=CNT1+1
"RTN","RGCWKDIN",138,0)
 .E  I 'STAT W "Not removed",! S CNT2=CNT2+1
"RTN","RGCWKDIN",139,0)
 W !,CNT1," remote procedure(s) removed",!
"RTN","RGCWKDIN",140,0)
 W:CNT2 CNT2," remote procedure(s) could not be removed",!!
"RTN","RGCWKDIN",141,0)
 Q
"RTN","RGCWKDIN",142,0)
 ; Check if specified routine is installed
"RTN","RGCWKDIN",143,0)
RTNTST(RTN,VN,MSG) ;
"RTN","RGCWKDIN",144,0)
 D:$$RTNVER(RTN)<VN MES(MSG_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",145,0)
 Q
"RTN","RGCWKDIN",146,0)
 ; Get version # for specified routine
"RTN","RGCWKDIN",147,0)
RTNVER(RTN) ;
"RTN","RGCWKDIN",148,0)
 Q $P($T(+2^@RTN),";",3)
"RTN","RGCWKDIN",149,0)
 ; Check patch #s for specified routine
"RTN","RGCWKDIN",150,0)
PATCH(RTN,PN,MSG) ;
"RTN","RGCWKDIN",151,0)
 N X,Y,L,F
"RTN","RGCWKDIN",152,0)
 F X=1:1:$L(PN,",") D
"RTN","RGCWKDIN",153,0)
 .S Y=$P(PN,",",X),F=0
"RTN","RGCWKDIN",154,0)
 .F L=2,3 D  Q:F
"RTN","RGCWKDIN",155,0)
 ..S F=$TR($P($T(+L^@RTN),";",5),"*",",")[(","_Y_",")
"RTN","RGCWKDIN",156,0)
 .D:'F MES(MSG_" patch #"_Y_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",157,0)
 Q
"RTN","RGCWKDIN",158,0)
 ; Display message in MSG and optionally set quit flag to QUIT
"RTN","RGCWKDIN",159,0)
MES(MSG,QUIT) ;
"RTN","RGCWKDIN",160,0)
 D BMES^XPDUTL("  "_$G(MSG))
"RTN","RGCWKDIN",161,0)
 S:$G(QUIT) XPDQUIT=QUIT
"RTN","RGCWKDIN",162,0)
 Q
"SEC","^DIC",999.1,999.1,0,"AUDIT")
@
"SEC","^DIC",999.1,999.1,0,"DD")
@
"SEC","^DIC",999.1,999.1,0,"DEL")
@
"SEC","^DIC",999.1,999.1,0,"LAYGO")
@
"SEC","^DIC",999.1,999.1,0,"RD")
@
"SEC","^DIC",999.1,999.1,0,"WR")
@
"SEC","^DIC",999.201,999.201,0,"AUDIT")
@
"SEC","^DIC",999.201,999.201,0,"DD")
@
"SEC","^DIC",999.201,999.201,0,"DEL")
@
"SEC","^DIC",999.201,999.201,0,"LAYGO")
@
"SEC","^DIC",999.201,999.201,0,"RD")
@
"SEC","^DIC",999.201,999.201,0,"WR")
@
"SEC","^DIC",19941.21,19941.21,0,"AUDIT")
@
"SEC","^DIC",19941.21,19941.21,0,"DD")
@
"SEC","^DIC",19941.21,19941.21,0,"DEL")
@
"SEC","^DIC",19941.21,19941.21,0,"LAYGO")
@
"SEC","^DIC",19941.21,19941.21,0,"RD")
@
"SEC","^DIC",19941.21,19941.21,0,"WR")
@
"TEMP","EC")

"TEMP","FINAL")

"TEMP","INITIAL")

"TEMP","PTRS",19941.212)
20^19941.21^19.1
"TEMP","PTRS",19941.2121)
21^19941.21^19.1
"TEMP","TGT")
8
"VER")
8.0^22.0
"^DD",999.1,999.1,0)
FIELD^^10^4
"^DD",999.1,999.1,0,"DDA")
N
"^DD",999.1,999.1,0,"DT")
3150211
"^DD",999.1,999.1,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",999.1,999.1,0,"IX","B",999.1,.01)

"^DD",999.1,999.1,0,"NM","CAREWEB SERIALIZATION")

"^DD",999.1,999.1,0,"PT",999.991,.01)

"^DD",999.1,999.1,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",999.1,999.1,.01,1,0)
^.1
"^DD",999.1,999.1,.01,1,1,0)
999.1^B
"^DD",999.1,999.1,.01,1,1,1)
S ^RGCWF(999.1,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.1,.01,1,1,2)
K ^RGCWF(999.1,"B",$E(X,1,30),DA)
"^DD",999.1,999.1,.01,3)
Replace Name of the serialization type (1-30 characters).
"^DD",999.1,999.1,.01,"DT")
3150211
"^DD",999.1,999.1,1,0)
CONTENT TYPE^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",999.1,999.1,1,3)
Content type generated by this serialization type.
"^DD",999.1,999.1,1,"DT")
3150211
"^DD",999.1,999.1,2,0)
SERIALIZER^F^^0;3^K:$L(X)>10!($L(X)<1)!'(X?1.A0.AN) X
"^DD",999.1,999.1,2,3)
Name of serialization routine.
"^DD",999.1,999.1,2,"DT")
3150211
"^DD",999.1,999.1,10,0)
RESOURCE^999.11^^10;0
"^DD",999.1,999.11,0)
RESOURCE SUB-FIELD^^2^8
"^DD",999.1,999.11,0,"DT")
3150211
"^DD",999.1,999.11,0,"IX","B",999.11,.01)

"^DD",999.1,999.11,0,"IX","C",999.11,.01)

"^DD",999.1,999.11,0,"NM","RESOURCE")

"^DD",999.1,999.11,0,"UP")
999.1
"^DD",999.1,999.11,.01,0)
RESOURCE^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.11,.01,1,0)
^.1^^-1
"^DD",999.1,999.11,.01,1,1,0)
999.11^B^MUMPS
"^DD",999.1,999.11,.01,1,1,1)
S ^RGCWF(999.1,DA(1),10,"B",X,DA)=$$TOPTRN^RGCWSER(X)
"^DD",999.1,999.11,.01,1,1,2)
K ^RGCWF(999.1,DA(1),10,"B",X,DA)
"^DD",999.1,999.11,.01,1,1,"DT")
3150211
"^DD",999.1,999.11,.01,1,2,0)
999.11^C^MUMPS
"^DD",999.1,999.11,.01,1,2,1)
S ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)=""
"^DD",999.1,999.11,.01,1,2,2)
K ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)
"^DD",999.1,999.11,.01,1,2,"DT")
3150211
"^DD",999.1,999.11,.01,3)
Enter path name for the resource.
"^DD",999.1,999.11,.01,"DT")
3150211
"^DD",999.1,999.11,1,0)
INTERNAL^S^0:NO;1:YES;^0;2^Q
"^DD",999.1,999.11,1,3)
Enter YES if this is an internal resource.
"^DD",999.1,999.11,1,"DT")
3150221
"^DD",999.1,999.11,2,0)
SOURCE^NJ10,4XO^^0;3^K:'$$VFILE^DILFD(X) X
"^DD",999.1,999.11,2,2)
S Y(0)=Y S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,2.1)
S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,3)
Enter a file or subfile number.
"^DD",999.1,999.11,2,"DT")
3150211
"^DD",999.1,999.11,10,0)
CUSTOM SERIALIZER^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,10,3)
M code to invoke custom serializer.
"^DD",999.1,999.11,10,9)
@
"^DD",999.1,999.11,10,"DT")
3150211
"^DD",999.1,999.11,20,0)
CUSTOM RETRIEVAL^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,20,3)
M code to invoke custom retrieval logic.
"^DD",999.1,999.11,20,9)
@
"^DD",999.1,999.11,20,"DT")
3150211
"^DD",999.1,999.11,30,0)
PROPERTY^999.12I^^30;0
"^DD",999.1,999.11,40,0)
PARAMETER^999.13I^^40;0
"^DD",999.1,999.11,99,0)
DESCRIPTION^F^^99;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.11,99,3)
Enter brief description of this resource.
"^DD",999.1,999.11,99,"DT")
3150211
"^DD",999.1,999.12,0)
PROPERTY SUB-FIELD^^10^5
"^DD",999.1,999.12,0,"DT")
3150211
"^DD",999.1,999.12,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.12,0,"IX","ASEQ",999.12,3)

"^DD",999.1,999.12,0,"IX","B",999.12,.01)

"^DD",999.1,999.12,0,"NM","PROPERTY")

"^DD",999.1,999.12,0,"UP")
999.11
"^DD",999.1,999.12,.01,0)
PROPERTY^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.12,.01,1,0)
^.1
"^DD",999.1,999.12,.01,1,1,0)
999.12^B
"^DD",999.1,999.12,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.12,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)
"^DD",999.1,999.12,.01,3)
Property name to be used in serialization.
"^DD",999.1,999.12,.01,"DT")
3150211
"^DD",999.1,999.12,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.12,1,3)
Field name or # corresponding to this property
"^DD",999.1,999.12,1,"DT")
3150211
"^DD",999.1,999.12,2,0)
TYPE^RS^F:FREE TEXT;R:RAW;B:BOOLEAN;D:DATE;M:MULTIPLE;C:CUSTOM;O:OBJECT;W:WORD PROCESSING;I:INLINE;^0;3^Q
"^DD",999.1,999.12,2,3)
Encoding type for this property.
"^DD",999.1,999.12,2,"DT")
3150211
"^DD",999.1,999.12,3,0)
SEQUENCE^RNJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.12,3,1,0)
^.1
"^DD",999.1,999.12,3,1,1,0)
999.12^ASEQ
"^DD",999.1,999.12,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.12,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.12,3,1,1,"DT")
3150211
"^DD",999.1,999.12,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.12,3,"DT")
3150211
"^DD",999.1,999.12,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.12,10,3)
Enter control data.
"^DD",999.1,999.12,10,21,0)
^^7^7^3150211.121613
"^DD",999.1,999.12,10,21,1,0)
The format of this field depends on the value of the TYPE field.  For those
"^DD",999.1,999.12,10,21,2,0)
TYPE values not listed below, this field will be ignored.
"^DD",999.1,999.12,10,21,3,0)

"^DD",999.1,999.12,10,21,4,0)
C (Custom) - Executable M code.
"^DD",999.1,999.12,10,21,5,0)
O (Object) - Alias name of the target object.
"^DD",999.1,999.12,10,21,6,0)
M (Multiple) - Alias name of the multiple object.
"^DD",999.1,999.12,10,21,7,0)

"^DD",999.1,999.12,10,"DT")
3150211
"^DD",999.1,999.13,0)
PARAMETER SUB-FIELD^^10^6
"^DD",999.1,999.13,0,"DT")
3150211
"^DD",999.1,999.13,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.13,0,"IX","ASEQ",999.13,3)

"^DD",999.1,999.13,0,"IX","B",999.13,.01)

"^DD",999.1,999.13,0,"NM","PARAMETER")

"^DD",999.1,999.13,0,"UP")
999.11
"^DD",999.1,999.13,.01,0)
PARAMETER^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.13,.01,1,0)
^.1
"^DD",999.1,999.13,.01,1,1,0)
999.13^B
"^DD",999.1,999.13,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.13,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)
"^DD",999.1,999.13,.01,3)
Enter name of search parameter.
"^DD",999.1,999.13,.01,"DT")
3150211
"^DD",999.1,999.13,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.13,1,3)
Field name or # corresponding to this parameter.
"^DD",999.1,999.13,1,"DT")
3150211
"^DD",999.1,999.13,2,0)
TYPE^S^N:NUMBER;D:DATE;S:STRING;T:TOKEN;R:REFERENCE;Q:QUANTITY;^0;3^Q
"^DD",999.1,999.13,2,3)
Type of the search parameter.
"^DD",999.1,999.13,2,"DT")
3150211
"^DD",999.1,999.13,3,0)
SEQUENCE^NJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.13,3,1,0)
^.1
"^DD",999.1,999.13,3,1,1,0)
999.13^ASEQ
"^DD",999.1,999.13,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.13,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.13,3,1,1,"DT")
3150211
"^DD",999.1,999.13,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.13,3,"DT")
3150211
"^DD",999.1,999.13,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.13,10,3)
M code to perform filtering.
"^DD",999.1,999.13,10,"DT")
3150211
"^DD",999.1,999.13,20,0)
COHORT^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.13,20,3)
M code to set global selector into X.
"^DD",999.1,999.13,20,9)
@
"^DD",999.1,999.13,20,"DT")
3150211
"^DD",999.201,999.201,0)
FIELD^^4^5
"^DD",999.201,999.201,0,"IX","B",999.201,.01)

"^DD",999.201,999.201,0,"NM","CAREWEB NOTIFICATION CONTROL")

"^DD",999.201,999.201,0,"PT",999.994,.01)

"^DD",999.201,999.201,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<2)!'(X'?1P.E) X
"^DD",999.201,999.201,.01,1,0)
^.1
"^DD",999.201,999.201,.01,1,1,0)
999.201^B
"^DD",999.201,999.201,.01,1,1,1)
S ^RGCWF(999.201,"B",$E(X,1,30),DA)=""
"^DD",999.201,999.201,.01,1,1,2)
K ^RGCWF(999.201,"B",$E(X,1,30),DA)
"^DD",999.201,999.201,.01,3)
Answer must be 2-30 characters in length.
"^DD",999.201,999.201,.01,"DT")
3030805
"^DD",999.201,999.201,1,0)
IDENT^RK^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,1,3)
Code to check notification identity.  Set $T to true for positive match.
"^DD",999.201,999.201,1,9)
@
"^DD",999.201,999.201,1,21,0)
^^1^1^3030804.150811
"^DD",999.201,999.201,1,21,1,0)
Should check the notification identifier in AID and set $T to true if a match.
"^DD",999.201,999.201,1,"DT")
3030804
"^DD",999.201,999.201,2,0)
PARSE^RK^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,2,3)
Code to parse data elements from notification.
"^DD",999.201,999.201,2,9)
@
"^DD",999.201,999.201,2,21,0)
^^8^8^3030804.170957
"^DD",999.201,999.201,2,21,1,0)
Code to parse standard data elements from notification.  Elements should be
"^DD",999.201,999.201,2,21,2,0)
returned in ALR array as follows:
"^DD",999.201,999.201,2,21,3,0)

"^DD",999.201,999.201,2,21,4,0)
ALR("DFN")=Patient IEN (if patient-orientation)
"^DD",999.201,999.201,2,21,5,0)
ALR("INF")=Info only flag
"^DD",999.201,999.201,2,21,6,0)
ALR("TYP")=Notification type code
"^DD",999.201,999.201,2,21,7,0)
ALR("PRI")=Priority code
"^DD",999.201,999.201,2,21,8,0)
ALR("XTR")=Additional data
"^DD",999.201,999.201,2,"DT")
3030804
"^DD",999.201,999.201,3,0)
PROCESS^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,3,3)
Post processing logic for alert.
"^DD",999.201,999.201,3,9)
@
"^DD",999.201,999.201,3,"DT")
3030805
"^DD",999.201,999.201,4,0)
UPDATE^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,4,3)
Optional logic to update alerts for current user.
"^DD",999.201,999.201,4,9)
@
"^DD",999.201,999.201,4,21,0)
^^2^2^3080128.135828
"^DD",999.201,999.201,4,21,1,0)
This logic provides the opportunity to update alerts (add or delete) 
"^DD",999.201,999.201,4,21,2,0)
for the current user prior to retrieving them.
"^DD",999.201,999.201,4,"DT")
3080128
"^DD",19941.21,19941.21,0)
FIELD^^7^14
"^DD",19941.21,19941.21,0,"DT")
3091007
"^DD",19941.21,19941.21,0,"IX","B",19941.21,.01)

"^DD",19941.21,19941.21,0,"NM","CIA EVENT TYPE")

"^DD",19941.21,19941.21,0,"PT",999.995,.01)

"^DD",19941.21,19941.21,0,"PT",19930.995,.01)

"^DD",19941.21,19941.21,0,"PT",19941.23,1)

"^DD",19941.21,19941.21,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19941.21,19941.21,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",19941.21,19941.21,.01,1,0)
^.1
"^DD",19941.21,19941.21,.01,1,1,0)
19941.21^B
"^DD",19941.21,19941.21,.01,1,1,1)
S ^CIANB(19941.21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.21,.01,1,1,2)
K ^CIANB(19941.21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.21,.01,3)
Answer must be 3-100 characters in length.
"^DD",19941.21,19941.21,.01,"DT")
3030611
"^DD",19941.21,19941.21,1,0)
MONITOR^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,1,3)
M code to invoke monitor for this event type
"^DD",19941.21,19941.21,1,9)
@
"^DD",19941.21,19941.21,1,"DT")
3021021
"^DD",19941.21,19941.21,2,0)
DISABLE^S^0:NO;1:YES;^0;2^Q
"^DD",19941.21,19941.21,2,3)
Enter YES to disable this event type.
"^DD",19941.21,19941.21,2,21,0)
^.001^3^3^3030810^
"^DD",19941.21,19941.21,2,21,1,0)
If set to YES, this event type is disabled.  Once disabled, any attempt to 
"^DD",19941.21,19941.21,2,21,2,0)
enqueue the event will be ignored.  Disabling an event does not affect events
"^DD",19941.21,19941.21,2,21,3,0)
already in the queue. 
"^DD",19941.21,19941.21,2,"DT")
3030810
"^DD",19941.21,19941.21,3,0)
INTERVAL^NJ11,0X^^0;3^K:X<0!(X\1'=X) X
"^DD",19941.21,19941.21,3,3)
Enter the nominal polling interval in seconds.
"^DD",19941.21,19941.21,3,21,0)
^^10^10^3021021.152235
"^DD",19941.21,19941.21,3,21,1,0)
This is the nominal polling interval for the event in seconds.
"^DD",19941.21,19941.21,3,21,2,0)
The actual polling interval is dependent on the event polling
"^DD",19941.21,19941.21,3,21,3,0)
interval set for the client application as a site parameter.
"^DD",19941.21,19941.21,3,21,4,0)
The nominal polling interval guarantees that polling for this
"^DD",19941.21,19941.21,3,21,5,0)
event will not occur more frequently than this setting.
"^DD",19941.21,19941.21,3,21,6,0)
 
"^DD",19941.21,19941.21,3,21,7,0)
For events that are infrequent and/or do not require real time
"^DD",19941.21,19941.21,3,21,8,0)
notification, higher values may be selected for this field to
"^DD",19941.21,19941.21,3,21,9,0)
mitigate impact on system load. 
"^DD",19941.21,19941.21,3,21,10,0)

"^DD",19941.21,19941.21,3,"DT")
3021021
"^DD",19941.21,19941.21,4,0)
LOG EVENT^S^0:NO;1:YES;^0;4^Q
"^DD",19941.21,19941.21,4,3)
Enter YES to enable logging of this event.
"^DD",19941.21,19941.21,4,"DT")
3030611
"^DD",19941.21,19941.21,5,0)
LOG RETENTION^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.21,19941.21,5,3)
Number of days to retain log entries.
"^DD",19941.21,19941.21,5,"DT")
3030611
"^DD",19941.21,19941.21,6,0)
POLLING METHOD^S^0:PER SESSION;1:PER INTERVAL;^0;6^Q
"^DD",19941.21,19941.21,6,3)
Determines how a monitored event is polled.
"^DD",19941.21,19941.21,6,21,0)
^^11^11^3030810.175145
"^DD",19941.21,19941.21,6,21,1,0)
For monitored events, this setting determines how the monitor is invoked
"^DD",19941.21,19941.21,6,21,2,0)
when the polling interval has been reached.  PER SESSION causes the event
"^DD",19941.21,19941.21,6,21,3,0)
monitor to be invoked for each active session, setting the user and
"^DD",19941.21,19941.21,6,21,4,0)
session context prior to each call.  PER INTERVAL cause the event monitor
"^DD",19941.21,19941.21,6,21,5,0)
to be invoked only once per interval.  No user or session context information
"^DD",19941.21,19941.21,6,21,6,0)
is available to the monitor in this case.
"^DD",19941.21,19941.21,6,21,7,0)

"^DD",19941.21,19941.21,6,21,8,0)
PER SESSION is appropriate for events that depend upon a specific user or
"^DD",19941.21,19941.21,6,21,9,0)
session (e.g., notifications).  PER INTERVAL is appropriate for events 
"^DD",19941.21,19941.21,6,21,10,0)
that are independent of a user or session (e.g., status events to display
"^DD",19941.21,19941.21,6,21,11,0)
the host date/time).
"^DD",19941.21,19941.21,6,"DT")
3030810
"^DD",19941.21,19941.21,7,0)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",19941.21,19941.21,7,12)
Restricts to Extended Action Protocols starting with CIAV
"^DD",19941.21,19941.21,7,12.1)
S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X"""
"^DD",19941.21,19941.21,7,"DT")
3091007
"^DD",19941.21,19941.21,10,0)
DISPLAY LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,10,3)
Logic to display stub info in log viewer.
"^DD",19941.21,19941.21,10,9)
@
"^DD",19941.21,19941.21,10,"DT")
3030611
"^DD",19941.21,19941.21,20,0)
PUBLICATION KEY^19941.212P^^20;0
"^DD",19941.21,19941.21,21,0)
SUBSCRIPTION KEY^19941.2121P^^21;0
"^DD",19941.21,19941.21,99,0)
DESCRIPTION^19941.2199^^99;0
"^DD",19941.21,19941.21,100,0)
ERROR DATE/TIME^D^^100;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.21,19941.21,100,3)
Date and time of last error
"^DD",19941.21,19941.21,100,"DT")
3061129
"^DD",19941.21,19941.21,101,0)
ERROR TEXT^F^^100;2^K:$L(X)>240!($L(X)<1) X
"^DD",19941.21,19941.21,101,3)
Answer must be 1-240 characters in length.
"^DD",19941.21,19941.21,101,"DT")
3061129
"^DD",19941.21,19941.212,0)
PUBLICATION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.212,0,"DT")
3021021
"^DD",19941.21,19941.212,0,"IX","B",19941.212,.01)

"^DD",19941.21,19941.212,0,"NM","PUBLICATION KEY")

"^DD",19941.21,19941.212,0,"UP")
19941.21
"^DD",19941.21,19941.212,.01,0)
PUBLICATION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.212,.01,1,0)
^.1
"^DD",19941.21,19941.212,.01,1,1,0)
19941.212^B
"^DD",19941.21,19941.212,.01,1,1,1)
S ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.212,.01,1,1,2)
K ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.212,.01,3)
Security keys required to fire this event.
"^DD",19941.21,19941.212,.01,21,0)
^^2^2^3021021.152715
"^DD",19941.21,19941.212,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.212,.01,21,2,0)
the listed keys in order to fire an event of this type.
"^DD",19941.21,19941.212,.01,"DT")
3040310
"^DD",19941.21,19941.2121,0)
SUBSCRIPTION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.2121,0,"DT")
3021021
"^DD",19941.21,19941.2121,0,"IX","B",19941.2121,.01)

"^DD",19941.21,19941.2121,0,"NM","SUBSCRIPTION KEY")

"^DD",19941.21,19941.2121,0,"UP")
19941.21
"^DD",19941.21,19941.2121,.01,0)
SUBSCRIPTION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.2121,.01,1,0)
^.1
"^DD",19941.21,19941.2121,.01,1,1,0)
19941.2121^B
"^DD",19941.21,19941.2121,.01,1,1,1)
S ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.2121,.01,1,1,2)
K ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.2121,.01,3)
Security keys required to receive this event type.
"^DD",19941.21,19941.2121,.01,21,0)
^^2^2^3021021.153002
"^DD",19941.21,19941.2121,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.2121,.01,21,2,0)
the listed keys in order subscribe to an event of this type. 
"^DD",19941.21,19941.2121,.01,"DT")
3040310
"^DD",19941.21,19941.2199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",19941.21,19941.2199,0,"DT")
3021021
"^DD",19941.21,19941.2199,0,"NM","DESCRIPTION")

"^DD",19941.21,19941.2199,0,"UP")
19941.21
"^DD",19941.21,19941.2199,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",19941.21,19941.2199,.01,3)
Enter a detailed description of this event type.
"^DD",19941.21,19941.2199,.01,"DT")
3021021
"^DIC",999.1,999.1,0)
CAREWEB SERIALIZATION^999.1
"^DIC",999.1,999.1,0,"GL")
^RGCWF(999.1,
"^DIC",999.1,999.1,"%D",0)
^^1^1^3150211.113842
"^DIC",999.1,999.1,"%D",1,0)
Supports serialization of domain objects.
"^DIC",999.1,"B","CAREWEB SERIALIZATION",999.1)

"^DIC",999.201,999.201,0)
CAREWEB NOTIFICATION CONTROL^999.201
"^DIC",999.201,999.201,0,"GL")
^RGCWF(999.201,
"^DIC",999.201,"B","CAREWEB NOTIFICATION CONTROL",999.201)

"^DIC",19941.21,19941.21,0)
CIA EVENT TYPE^19941.21
"^DIC",19941.21,19941.21,0,"GL")
^CIANB(19941.21,
"^DIC",19941.21,"B","CIA EVENT TYPE",19941.21)

**INSTALL NAME**
CAREWEB CONSULT COVERSHEET 1.0
"BLD",8490,0)
CAREWEB CONSULT COVERSHEET 1.0^^0^3150226^n
"BLD",8490,4,0)
^9.64PA^19941.21^3
"BLD",8490,4,999.1,0)
999.1
"BLD",8490,4,999.1,222)
n^y^f^^n^^y^o^n
"BLD",8490,4,999.1,224)
I $$SCRN^RGCWKDTP(Y,1)
"BLD",8490,4,999.201,0)
999.201
"BLD",8490,4,999.201,222)
n^y^f^^y^^y^o^n
"BLD",8490,4,999.201,224)
I $$SCRN^RGCWKDTP(Y,4)
"BLD",8490,4,19941.21,0)
19941.21
"BLD",8490,4,19941.21,222)
n^y^f^^y^^y^o^n
"BLD",8490,4,19941.21,224)
I $$SCRN^RGCWKDTP(Y,5)
"BLD",8490,4,"B",999.1,999.1)

"BLD",8490,4,"B",999.201,999.201)

"BLD",8490,4,"B",19941.21,19941.21)

"BLD",8490,6.3)
108
"BLD",8490,"INI")
PRE^RGCWKDIN
"BLD",8490,"INIT")
POST^RGCWKDIN
"BLD",8490,"KRN",0)
^9.67PA^8994^20
"BLD",8490,"KRN",.4,0)
.4
"BLD",8490,"KRN",.401,0)
.401
"BLD",8490,"KRN",.402,0)
.402
"BLD",8490,"KRN",.403,0)
.403
"BLD",8490,"KRN",.5,0)
.5
"BLD",8490,"KRN",.84,0)
.84
"BLD",8490,"KRN",3.6,0)
3.6
"BLD",8490,"KRN",3.8,0)
3.8
"BLD",8490,"KRN",9.2,0)
9.2
"BLD",8490,"KRN",9.8,0)
9.8
"BLD",8490,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",8490,"KRN",9.8,"NM",1,0)
RGCWCNCV^^0^B1722106
"BLD",8490,"KRN",9.8,"NM","B","RGCWCNCV",1)

"BLD",8490,"KRN",19,0)
19
"BLD",8490,"KRN",19.1,0)
19.1
"BLD",8490,"KRN",101,0)
101
"BLD",8490,"KRN",409.61,0)
409.61
"BLD",8490,"KRN",771,0)
771
"BLD",8490,"KRN",779.2,0)
779.2
"BLD",8490,"KRN",870,0)
870
"BLD",8490,"KRN",8989.51,0)
8989.51
"BLD",8490,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",8490,"KRN",8989.52,0)
8989.52
"BLD",8490,"KRN",8994,0)
8994
"BLD",8490,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",8490,"KRN",8994,"NM",1,0)
RGCWCNCV DETAIL^^0
"BLD",8490,"KRN",8994,"NM",2,0)
RGCWCNCV LIST^^0
"BLD",8490,"KRN",8994,"NM","B","RGCWCNCV DETAIL",1)

"BLD",8490,"KRN",8994,"NM","B","RGCWCNCV LIST",2)

"BLD",8490,"KRN","B",.4,.4)

"BLD",8490,"KRN","B",.401,.401)

"BLD",8490,"KRN","B",.402,.402)

"BLD",8490,"KRN","B",.403,.403)

"BLD",8490,"KRN","B",.5,.5)

"BLD",8490,"KRN","B",.84,.84)

"BLD",8490,"KRN","B",3.6,3.6)

"BLD",8490,"KRN","B",3.8,3.8)

"BLD",8490,"KRN","B",9.2,9.2)

"BLD",8490,"KRN","B",9.8,9.8)

"BLD",8490,"KRN","B",19,19)

"BLD",8490,"KRN","B",19.1,19.1)

"BLD",8490,"KRN","B",101,101)

"BLD",8490,"KRN","B",409.61,409.61)

"BLD",8490,"KRN","B",771,771)

"BLD",8490,"KRN","B",779.2,779.2)

"BLD",8490,"KRN","B",870,870)

"BLD",8490,"KRN","B",8989.51,8989.51)

"BLD",8490,"KRN","B",8989.52,8989.52)

"BLD",8490,"KRN","B",8994,8994)

"BLD",8490,"PRE")
RGCWKDIN
"BLD",8490,"PRET")
PRETRANS^RGCWKDTP
"BLD",8490,"QUES",0)
^9.62^^
"BLD",8490,"REQB",0)
^9.611^^
"FIA",999.1)
CAREWEB SERIALIZATION
"FIA",999.1,0)
^RGCWF(999.1,
"FIA",999.1,0,0)
999.1I
"FIA",999.1,0,1)
n^y^f^^n^^y^o^n
"FIA",999.1,0,10)

"FIA",999.1,0,11)
I $$SCRN^RGCWKDTP(Y,1)
"FIA",999.1,0,"RLRO")

"FIA",999.1,999.1)
0
"FIA",999.1,999.11)
0
"FIA",999.1,999.12)
0
"FIA",999.1,999.13)
0
"FIA",999.201)
CAREWEB NOTIFICATION CONTROL
"FIA",999.201,0)
^RGCWF(999.201,
"FIA",999.201,0,0)
999.201
"FIA",999.201,0,1)
n^y^f^^y^^y^o^n
"FIA",999.201,0,10)

"FIA",999.201,0,11)
I $$SCRN^RGCWKDTP(Y,4)
"FIA",999.201,0,"RLRO")

"FIA",999.201,999.201)
0
"FIA",19941.21)
CIA EVENT TYPE
"FIA",19941.21,0)
^CIANB(19941.21,
"FIA",19941.21,0,0)
19941.21
"FIA",19941.21,0,1)
n^y^f^^y^^y^o^n
"FIA",19941.21,0,10)

"FIA",19941.21,0,11)
I $$SCRN^RGCWKDTP(Y,5)
"FIA",19941.21,0,"RLRO")

"FIA",19941.21,19941.21)
0
"FIA",19941.21,19941.212)
0
"FIA",19941.21,19941.2121)
0
"FIA",19941.21,19941.2199)
0
"INI")
PRE^RGCWKDIN
"INIT")
POST^RGCWKDIN
"KRN",8994,2678,-1)
0^2
"KRN",8994,2678,0)
RGCWCNCV LIST^LIST^RGCWCNCV^4^^^^1
"KRN",8994,2679,-1)
0^1
"KRN",8994,2679,0)
RGCWCNCV DETAIL^DETAIL^RGCWCNCV^4^^^^1
"MBREQ")
1
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PGL",19941.21,0,7,7)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"PRE")
RGCWKDIN
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","RGCWCNCV")
0^1^B1722106
"RTN","RGCWCNCV",1,0)
RGCWCNCV ;RI/CBMI/DKM - Cover Sheet: Consult Orders;02-Feb-2015 10:15;DKM
"RTN","RGCWCNCV",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 108
"RTN","RGCWCNCV",3,0)
 ;=================================================================
"RTN","RGCWCNCV",4,0)
 ; List consult orders
"RTN","RGCWCNCV",5,0)
 ; ADT = Number of hours prior to retrieve
"RTN","RGCWCNCV",6,0)
LIST(DATA,DFN,ADT) ;
"RTN","RGCWCNCV",7,0)
 N ORGRP,ORVP,ORLIST,LP,X,YY
"RTN","RGCWCNCV",8,0)
 S DATA=$$TMPGBL^RGUTRPC,ADT=+$G(ADT)
"RTN","RGCWCNCV",9,0)
 K ^TMP("GMRCR",$J)
"RTN","RGCWCNCV",10,0)
 D OER^GMRCSLM1(DFN,"","","","",2)                                     ; Condensed format
"RTN","RGCWCNCV",11,0)
 I $P($G(^TMP("GMRCR",$J,"CS",0)),U,4)>0 D
"RTN","RGCWCNCV",12,0)
 .S LP=0
"RTN","RGCWCNCV",13,0)
 .F  S LP=$O(^TMP("GMRCR",$J,"CS",LP)) Q:LP<1  D
"RTN","RGCWCNCV",14,0)
 ..S X=^TMP("GMRCR",$J,"CS",LP,0)
"RTN","RGCWCNCV",15,0)
 ..S YY=$$FDATA(X)
"RTN","RGCWCNCV",16,0)
 ..S:$L(YY) @DATA@(LP)=YY
"RTN","RGCWCNCV",17,0)
 K ^TMP("GMRCR",$J)
"RTN","RGCWCNCV",18,0)
 Q
"RTN","RGCWCNCV",19,0)
 ; Formats data, returning IEN^STATUS^FORMATTED DATE^TYPE^FM DT
"RTN","RGCWCNCV",20,0)
FDATA(X) Q $S('$L(X):"",1:$P(X,U)_U_$P(X,U,4)_U_$$ENTRY^RGUTDT($P(X,U,2))_U_$P(X,U,3)_U_$P(X,U,2))
"RTN","RGCWCNCV",21,0)
 ; Detail of specific consult order
"RTN","RGCWCNCV",22,0)
 ; IEN = IEN of consult order
"RTN","RGCWCNCV",23,0)
DETAIL(DATA,DFN,IEN) ;
"RTN","RGCWCNCV",24,0)
 N GMRCOER
"RTN","RGCWCNCV",25,0)
 S GMRCOER=2                                                           ; Data style
"RTN","RGCWCNCV",26,0)
 K ^TMP("GMRCR",$J)
"RTN","RGCWCNCV",27,0)
 D DT^GMRCSLM2(+IEN)
"RTN","RGCWCNCV",28,0)
 S DATA=$NA(^TMP("GMRCR",$J,"DT"))
"RTN","RGCWCNCV",29,0)
 Q
"RTN","RGCWKDIN")
0^^B31866196
"RTN","RGCWKDIN",1,0)
RGCKDIN ;RI/CBMI/DKM - CareWeb KIDS installation support ;02-Feb-2015 12:11;DKM
"RTN","RGCWKDIN",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 108
"RTN","RGCWKDIN",3,0)
 ; Environment check
"RTN","RGCWKDIN",4,0)
EC X $G(@XPDGREF@("EC"))
"RTN","RGCWKDIN",5,0)
 Q
"RTN","RGCWKDIN",6,0)
 ; Preinit
"RTN","RGCWKDIN",7,0)
PRE N RGX,RGY
"RTN","RGCWKDIN",8,0)
 D MES(),OBJINST,SDINIT^RGCWFUTL(,60,1)
"RTN","RGCWKDIN",9,0)
 F  D  Q:'RGX
"RTN","RGCWKDIN",10,0)
 .S RGX=$$SHOWSESS^RGCWFUTL
"RTN","RGCWKDIN",11,0)
 .R:RGX "Waiting for active sessions to terminate...",RGY:10,!!
"RTN","RGCWKDIN",12,0)
 .I RGX,RGY=U,$$ASK^RGUT("There are still active sessions.  Are you sure you want to proceed") S RGX=0
"RTN","RGCWKDIN",13,0)
 D MES("Proceeding with installation...")
"RTN","RGCWKDIN",14,0)
 D INITIAL,SAVEOPT
"RTN","RGCWKDIN",15,0)
 Q
"RTN","RGCWKDIN",16,0)
 ; Postinit
"RTN","RGCWKDIN",17,0)
POST N PAR,Y
"RTN","RGCWKDIN",18,0)
 X ^%ZOSF("EON"),^%ZOSF("TRMOFF")
"RTN","RGCWKDIN",19,0)
 D RESPTR,DEFPAR,RESTOPT,REGISTER,FINAL
"RTN","RGCWKDIN",20,0)
 W !!!
"RTN","RGCWKDIN",21,0)
 Q
"RTN","RGCWKDIN",22,0)
 ; Execute initial preinit code, if any
"RTN","RGCWKDIN",23,0)
INITIAL ; EP
"RTN","RGCWKDIN",24,0)
 X $G(@XPDGREF@("INITIAL"))
"RTN","RGCWKDIN",25,0)
 Q
"RTN","RGCWKDIN",26,0)
 ; Execute final postinit code, if any
"RTN","RGCWKDIN",27,0)
FINAL ; EP
"RTN","RGCWKDIN",28,0)
 X $G(@XPDGREF@("FINAL"))
"RTN","RGCWKDIN",29,0)
 Q
"RTN","RGCWKDIN",30,0)
 ; Initializes default parameter values.  Does not affect existing entries.
"RTN","RGCWKDIN",31,0)
DEFPAR N PAR,ENT,VAL,INST,LP,Y
"RTN","RGCWKDIN",32,0)
 D MES("Setting up default site parameters...")
"RTN","RGCWKDIN",33,0)
 F LP=0:0 S LP=$O(@XPDGREF@("PARAM",LP)) Q:'LP  K VAL M VAL=^(LP) D
"RTN","RGCWKDIN",34,0)
 .S Y=VAL,VAL=$$MSG^RGUT($P(Y,U,3,999),"|",0),PAR=$P(Y,U),INST=$P(Y,U,2)
"RTN","RGCWKDIN",35,0)
 .S ENT=$$ENT^RGCWFPAR(PAR),ENT=$P(ENT,U,$L(ENT,U))
"RTN","RGCWKDIN",36,0)
 .D:$L(ENT) ADD^XPAR(ENT,PAR,INST,.VAL)
"RTN","RGCWKDIN",37,0)
 Q
"RTN","RGCWKDIN",38,0)
 ; Delete a file or subfile
"RTN","RGCWKDIN",39,0)
 ;   DIU = File or subfile #
"RTN","RGCWKDIN",40,0)
DELFIL(DIU) ; EP
"RTN","RGCWKDIN",41,0)
 N $ET
"RTN","RGCWKDIN",42,0)
 S $ET="",@$$TRAP^RGUTOS("DELERR^RGCWKDIN")
"RTN","RGCWKDIN",43,0)
 Q:'$D(^DD(DIU))
"RTN","RGCWKDIN",44,0)
 S DIU(0)=$S($D(^DIC(DIU)):"D",1:"S")
"RTN","RGCWKDIN",45,0)
 D EN^DIU2
"RTN","RGCWKDIN",46,0)
 Q
"RTN","RGCWKDIN",47,0)
DELERR N ERR
"RTN","RGCWKDIN",48,0)
 S ERR=$$EC^%ZOSV
"RTN","RGCWKDIN",49,0)
 D MES("An error occurred deleting file #"_$G(DIU))
"RTN","RGCWKDIN",50,0)
 D MES("The error was: "_ERR)
"RTN","RGCWKDIN",51,0)
 D MES("Please delete the file manually after correcting the problem.")
"RTN","RGCWKDIN",52,0)
 Q
"RTN","RGCWKDIN",53,0)
 ; Save ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK option
"RTN","RGCWKDIN",54,0)
SAVEOPT N OPT
"RTN","RGCWKDIN",55,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",56,0)
 Q:'OPT
"RTN","RGCWKDIN",57,0)
 M @XPDGREF@("ITMSAVE")=^DIC(19,OPT,10,"B")
"RTN","RGCWKDIN",58,0)
 M @XPDGREF@("RPCSAVE")=^DIC(19,OPT,"RPC","B")
"RTN","RGCWKDIN",59,0)
 Q
"RTN","RGCWKDIN",60,0)
 ; Restore ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK
"RTN","RGCWKDIN",61,0)
RESTOPT N OPT,ITM,RPC
"RTN","RGCWKDIN",62,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",63,0)
 Q:'OPT
"RTN","RGCWKDIN",64,0)
 F ITM=0:0 S ITM=$O(@XPDGREF@("ITMSAVE",ITM)) Q:'ITM  I $$REGCTX^RGUTRPC(ITM,OPT)
"RTN","RGCWKDIN",65,0)
 F RPC=0:0 S RPC=$O(@XPDGREF@("RPCSAVE",RPC)) Q:'RPC  I $$REGRPC^RGUTRPC(RPC,OPT)
"RTN","RGCWKDIN",66,0)
 Q
"RTN","RGCWKDIN",67,0)
 ; Resolve pointers in multiples (KIDS doesn't)
"RTN","RGCWKDIN",68,0)
RESPTR ; EP
"RTN","RGCWKDIN",69,0)
 N TGT,SRC,SUB,NOD,NAM,VAL,IEN,CNT,SGB,PTR
"RTN","RGCWKDIN",70,0)
 S SUB=0
"RTN","RGCWKDIN",71,0)
 F  S SUB=$O(@XPDGREF@("PTRS",SUB)) Q:'SUB  S X=^(SUB)  D
"RTN","RGCWKDIN",72,0)
 .S NOD=+X,SRC=$P(X,U,2),TGT=$P(X,U,3),SGB=$$ROOT^DILFD(SRC,,1),NAM=""
"RTN","RGCWKDIN",73,0)
 .F  S NAM=$O(@XPDGREF@("PTRS",SUB,NAM)) Q:'$L(NAM)  D
"RTN","RGCWKDIN",74,0)
 ..S IEN=$$FIND1^DIC(SRC,"","QX",NAM),VAL="",CNT=0
"RTN","RGCWKDIN",75,0)
 ..Q:IEN'>0
"RTN","RGCWKDIN",76,0)
 ..K @SGB@(IEN,NOD)
"RTN","RGCWKDIN",77,0)
 ..F  S VAL=$O(@XPDGREF@("PTRS",SUB,NAM,VAL)) Q:'$L(VAL)  D
"RTN","RGCWKDIN",78,0)
 ...S PTR=$$FIND1^DIC(TGT,,"X",VAL)
"RTN","RGCWKDIN",79,0)
 ...I 'PTR D MES("  Failed to resolve "_VAL) Q
"RTN","RGCWKDIN",80,0)
 ...S CNT=CNT+1,@SGB@(IEN,NOD,CNT,0)=PTR,@SGB@(IEN,NOD,"B",PTR,CNT)=""
"RTN","RGCWKDIN",81,0)
 ..S:CNT @SGB@(IEN,NOD,0)=U_SUB_"P^"_CNT_U_CNT
"RTN","RGCWKDIN",82,0)
 Q
"RTN","RGCWKDIN",83,0)
 ; Check binary version against M system
"RTN","RGCWKDIN",84,0)
OBJCHK ; EP
"RTN","RGCWKDIN",85,0)
 N VER,MSYS
"RTN","RGCWKDIN",86,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",87,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",88,0)
 I '$D(VER) D
"RTN","RGCWKDIN",89,0)
 .D MES("This package contains object code that is not supported on "_MSYS_" installations.",2)
"RTN","RGCWKDIN",90,0)
 E  I VER="" D
"RTN","RGCWKDIN",91,0)
 .D MES("This package does not contain object code for this version of "_MSYS_" installations.",2)
"RTN","RGCWKDIN",92,0)
 Q
"RTN","RGCWKDIN",93,0)
 ; Get M system type and target version
"RTN","RGCWKDIN",94,0)
GETMSYS(MSYS,VER) ;
"RTN","RGCWKDIN",95,0)
 K MSYS,VER
"RTN","RGCWKDIN",96,0)
 Q:'$D(@XPDGREF@("OBJ"))
"RTN","RGCWKDIN",97,0)
 S MSYS=$$UP^XLFSTR($P($$VERSION^%ZOSV(1)," ")),MSYS(0)=$S(MSYS="CACHE":1,MSYS="JUMPS":2,1:0)
"RTN","RGCWKDIN",98,0)
 Q:'$D(@XPDGREF@("OBJ",MSYS(0)))
"RTN","RGCWKDIN",99,0)
 S VER=$TR($$VERSION^%ZOSV()," ")
"RTN","RGCWKDIN",100,0)
 F  Q:'$L(VER)  Q:$D(@XPDGREF@("OBJ",MSYS(0),VER))  S VER=$P(VER,".",1,$L(VER,".")-1)
"RTN","RGCWKDIN",101,0)
 Q
"RTN","RGCWKDIN",102,0)
 ; Install routine binaries
"RTN","RGCWKDIN",103,0)
OBJINST ; EP
"RTN","RGCWKDIN",104,0)
 N MSYS,RTN,OBJ,SUB,GBL
"RTN","RGCWKDIN",105,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",106,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",107,0)
 Q:$D(@XPDGREF@("OBJ",MSYS(0)))<10
"RTN","RGCWKDIN",108,0)
 S RTN=""
"RTN","RGCWKDIN",109,0)
 D MES("Installing routine binaries...")
"RTN","RGCWKDIN",110,0)
 F  S RTN=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN)) Q:'$L(RTN)  D
"RTN","RGCWKDIN",111,0)
 .X "ZR  ZS @RTN"
"RTN","RGCWKDIN",112,0)
 .S OBJ="",SUB=0,GBL=$NA(@$S(MSYS(0)=1:"^rOBJ(RTN)",1:"^$R(RTN,""OBJECT"")"))
"RTN","RGCWKDIN",113,0)
 .F  S SUB=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN,SUB)) Q:'SUB  S OBJ=OBJ_^(SUB,0)
"RTN","RGCWKDIN",114,0)
 .S @GBL=$S(MSYS(0)=1:$$DECODE^RGUTUU(OBJ),1:OBJ)
"RTN","RGCWKDIN",115,0)
 Q
"RTN","RGCWKDIN",116,0)
 ; Perform various registration actions
"RTN","RGCWKDIN",117,0)
REGISTER N X,CTX
"RTN","RGCWKDIN",118,0)
 S CTX=$$GETOPT^RGUTRPC("RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",119,0)
 Q:'CTX
"RTN","RGCWKDIN",120,0)
 F X="RGCW","CIAV","CIAU","DG","DDR","RGUT","BEH" D REGNMSP^RGUTRPC(X,CTX)
"RTN","RGCWKDIN",121,0)
 F X="OR CPRS GUI CHART" D DOREG(X)
"RTN","RGCWKDIN",122,0)
 Q
"RTN","RGCWKDIN",123,0)
 ; Add an option as a subcontext to CareWeb Framework
"RTN","RGCWKDIN",124,0)
 ; Remove any redundant RPC's
"RTN","RGCWKDIN",125,0)
DOREG(OPT) ;
"RTN","RGCWKDIN",126,0)
 N RPC,CNT1,CNT2,STAT,IEN
"RTN","RGCWKDIN",127,0)
 S IEN=$$GETOPT^RGUTRPC(OPT)
"RTN","RGCWKDIN",128,0)
 Q:'IEN
"RTN","RGCWKDIN",129,0)
 W !!,"Registering ",OPT," as a subcontext under RGCWF CAREWEB FRAMEWORK...",!
"RTN","RGCWKDIN",130,0)
 I $$REGCTX^RGUTRPC(IEN,CTX)
"RTN","RGCWKDIN",131,0)
 W "Removing redundant RPC references...",!
"RTN","RGCWKDIN",132,0)
 S (CNT1,CNT2)=0
"RTN","RGCWKDIN",133,0)
 F RPC=0:0 S RPC=$O(^DIC(19,IEN,"RPC","B",RPC)) Q:'RPC  D
"RTN","RGCWKDIN",134,0)
 .S STAT=$$REGRPC^RGUTRPC(RPC,CTX,1)
"RTN","RGCWKDIN",135,0)
 .Q:STAT=-1
"RTN","RGCWKDIN",136,0)
 .W $$GET1^DIQ(8994,RPC,.01)_" - "
"RTN","RGCWKDIN",137,0)
 .I STAT=1 W "Removed",! S CNT1=CNT1+1
"RTN","RGCWKDIN",138,0)
 .E  I 'STAT W "Not removed",! S CNT2=CNT2+1
"RTN","RGCWKDIN",139,0)
 W !,CNT1," remote procedure(s) removed",!
"RTN","RGCWKDIN",140,0)
 W:CNT2 CNT2," remote procedure(s) could not be removed",!!
"RTN","RGCWKDIN",141,0)
 Q
"RTN","RGCWKDIN",142,0)
 ; Check if specified routine is installed
"RTN","RGCWKDIN",143,0)
RTNTST(RTN,VN,MSG) ;
"RTN","RGCWKDIN",144,0)
 D:$$RTNVER(RTN)<VN MES(MSG_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",145,0)
 Q
"RTN","RGCWKDIN",146,0)
 ; Get version # for specified routine
"RTN","RGCWKDIN",147,0)
RTNVER(RTN) ;
"RTN","RGCWKDIN",148,0)
 Q $P($T(+2^@RTN),";",3)
"RTN","RGCWKDIN",149,0)
 ; Check patch #s for specified routine
"RTN","RGCWKDIN",150,0)
PATCH(RTN,PN,MSG) ;
"RTN","RGCWKDIN",151,0)
 N X,Y,L,F
"RTN","RGCWKDIN",152,0)
 F X=1:1:$L(PN,",") D
"RTN","RGCWKDIN",153,0)
 .S Y=$P(PN,",",X),F=0
"RTN","RGCWKDIN",154,0)
 .F L=2,3 D  Q:F
"RTN","RGCWKDIN",155,0)
 ..S F=$TR($P($T(+L^@RTN),";",5),"*",",")[(","_Y_",")
"RTN","RGCWKDIN",156,0)
 .D:'F MES(MSG_" patch #"_Y_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",157,0)
 Q
"RTN","RGCWKDIN",158,0)
 ; Display message in MSG and optionally set quit flag to QUIT
"RTN","RGCWKDIN",159,0)
MES(MSG,QUIT) ;
"RTN","RGCWKDIN",160,0)
 D BMES^XPDUTL("  "_$G(MSG))
"RTN","RGCWKDIN",161,0)
 S:$G(QUIT) XPDQUIT=QUIT
"RTN","RGCWKDIN",162,0)
 Q
"SEC","^DIC",999.1,999.1,0,"AUDIT")
@
"SEC","^DIC",999.1,999.1,0,"DD")
@
"SEC","^DIC",999.1,999.1,0,"DEL")
@
"SEC","^DIC",999.1,999.1,0,"LAYGO")
@
"SEC","^DIC",999.1,999.1,0,"RD")
@
"SEC","^DIC",999.1,999.1,0,"WR")
@
"SEC","^DIC",999.201,999.201,0,"AUDIT")
@
"SEC","^DIC",999.201,999.201,0,"DD")
@
"SEC","^DIC",999.201,999.201,0,"DEL")
@
"SEC","^DIC",999.201,999.201,0,"LAYGO")
@
"SEC","^DIC",999.201,999.201,0,"RD")
@
"SEC","^DIC",999.201,999.201,0,"WR")
@
"SEC","^DIC",19941.21,19941.21,0,"AUDIT")
@
"SEC","^DIC",19941.21,19941.21,0,"DD")
@
"SEC","^DIC",19941.21,19941.21,0,"DEL")
@
"SEC","^DIC",19941.21,19941.21,0,"LAYGO")
@
"SEC","^DIC",19941.21,19941.21,0,"RD")
@
"SEC","^DIC",19941.21,19941.21,0,"WR")
@
"TEMP","EC")

"TEMP","FINAL")

"TEMP","INITIAL")

"TEMP","PTRS",19941.212)
20^19941.21^19.1
"TEMP","PTRS",19941.2121)
21^19941.21^19.1
"TEMP","TGT")
9
"VER")
8.0^22.0
"^DD",999.1,999.1,0)
FIELD^^10^4
"^DD",999.1,999.1,0,"DDA")
N
"^DD",999.1,999.1,0,"DT")
3150211
"^DD",999.1,999.1,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",999.1,999.1,0,"IX","B",999.1,.01)

"^DD",999.1,999.1,0,"NM","CAREWEB SERIALIZATION")

"^DD",999.1,999.1,0,"PT",999.991,.01)

"^DD",999.1,999.1,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",999.1,999.1,.01,1,0)
^.1
"^DD",999.1,999.1,.01,1,1,0)
999.1^B
"^DD",999.1,999.1,.01,1,1,1)
S ^RGCWF(999.1,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.1,.01,1,1,2)
K ^RGCWF(999.1,"B",$E(X,1,30),DA)
"^DD",999.1,999.1,.01,3)
Replace Name of the serialization type (1-30 characters).
"^DD",999.1,999.1,.01,"DT")
3150211
"^DD",999.1,999.1,1,0)
CONTENT TYPE^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",999.1,999.1,1,3)
Content type generated by this serialization type.
"^DD",999.1,999.1,1,"DT")
3150211
"^DD",999.1,999.1,2,0)
SERIALIZER^F^^0;3^K:$L(X)>10!($L(X)<1)!'(X?1.A0.AN) X
"^DD",999.1,999.1,2,3)
Name of serialization routine.
"^DD",999.1,999.1,2,"DT")
3150211
"^DD",999.1,999.1,10,0)
RESOURCE^999.11^^10;0
"^DD",999.1,999.11,0)
RESOURCE SUB-FIELD^^2^8
"^DD",999.1,999.11,0,"DT")
3150211
"^DD",999.1,999.11,0,"IX","B",999.11,.01)

"^DD",999.1,999.11,0,"IX","C",999.11,.01)

"^DD",999.1,999.11,0,"NM","RESOURCE")

"^DD",999.1,999.11,0,"UP")
999.1
"^DD",999.1,999.11,.01,0)
RESOURCE^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.11,.01,1,0)
^.1^^-1
"^DD",999.1,999.11,.01,1,1,0)
999.11^B^MUMPS
"^DD",999.1,999.11,.01,1,1,1)
S ^RGCWF(999.1,DA(1),10,"B",X,DA)=$$TOPTRN^RGCWSER(X)
"^DD",999.1,999.11,.01,1,1,2)
K ^RGCWF(999.1,DA(1),10,"B",X,DA)
"^DD",999.1,999.11,.01,1,1,"DT")
3150211
"^DD",999.1,999.11,.01,1,2,0)
999.11^C^MUMPS
"^DD",999.1,999.11,.01,1,2,1)
S ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)=""
"^DD",999.1,999.11,.01,1,2,2)
K ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)
"^DD",999.1,999.11,.01,1,2,"DT")
3150211
"^DD",999.1,999.11,.01,3)
Enter path name for the resource.
"^DD",999.1,999.11,.01,"DT")
3150211
"^DD",999.1,999.11,1,0)
INTERNAL^S^0:NO;1:YES;^0;2^Q
"^DD",999.1,999.11,1,3)
Enter YES if this is an internal resource.
"^DD",999.1,999.11,1,"DT")
3150221
"^DD",999.1,999.11,2,0)
SOURCE^NJ10,4XO^^0;3^K:'$$VFILE^DILFD(X) X
"^DD",999.1,999.11,2,2)
S Y(0)=Y S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,2.1)
S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,3)
Enter a file or subfile number.
"^DD",999.1,999.11,2,"DT")
3150211
"^DD",999.1,999.11,10,0)
CUSTOM SERIALIZER^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,10,3)
M code to invoke custom serializer.
"^DD",999.1,999.11,10,9)
@
"^DD",999.1,999.11,10,"DT")
3150211
"^DD",999.1,999.11,20,0)
CUSTOM RETRIEVAL^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,20,3)
M code to invoke custom retrieval logic.
"^DD",999.1,999.11,20,9)
@
"^DD",999.1,999.11,20,"DT")
3150211
"^DD",999.1,999.11,30,0)
PROPERTY^999.12I^^30;0
"^DD",999.1,999.11,40,0)
PARAMETER^999.13I^^40;0
"^DD",999.1,999.11,99,0)
DESCRIPTION^F^^99;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.11,99,3)
Enter brief description of this resource.
"^DD",999.1,999.11,99,"DT")
3150211
"^DD",999.1,999.12,0)
PROPERTY SUB-FIELD^^10^5
"^DD",999.1,999.12,0,"DT")
3150211
"^DD",999.1,999.12,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.12,0,"IX","ASEQ",999.12,3)

"^DD",999.1,999.12,0,"IX","B",999.12,.01)

"^DD",999.1,999.12,0,"NM","PROPERTY")

"^DD",999.1,999.12,0,"UP")
999.11
"^DD",999.1,999.12,.01,0)
PROPERTY^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.12,.01,1,0)
^.1
"^DD",999.1,999.12,.01,1,1,0)
999.12^B
"^DD",999.1,999.12,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.12,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)
"^DD",999.1,999.12,.01,3)
Property name to be used in serialization.
"^DD",999.1,999.12,.01,"DT")
3150211
"^DD",999.1,999.12,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.12,1,3)
Field name or # corresponding to this property
"^DD",999.1,999.12,1,"DT")
3150211
"^DD",999.1,999.12,2,0)
TYPE^RS^F:FREE TEXT;R:RAW;B:BOOLEAN;D:DATE;M:MULTIPLE;C:CUSTOM;O:OBJECT;W:WORD PROCESSING;I:INLINE;^0;3^Q
"^DD",999.1,999.12,2,3)
Encoding type for this property.
"^DD",999.1,999.12,2,"DT")
3150211
"^DD",999.1,999.12,3,0)
SEQUENCE^RNJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.12,3,1,0)
^.1
"^DD",999.1,999.12,3,1,1,0)
999.12^ASEQ
"^DD",999.1,999.12,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.12,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.12,3,1,1,"DT")
3150211
"^DD",999.1,999.12,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.12,3,"DT")
3150211
"^DD",999.1,999.12,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.12,10,3)
Enter control data.
"^DD",999.1,999.12,10,21,0)
^^7^7^3150211.121613
"^DD",999.1,999.12,10,21,1,0)
The format of this field depends on the value of the TYPE field.  For those
"^DD",999.1,999.12,10,21,2,0)
TYPE values not listed below, this field will be ignored.
"^DD",999.1,999.12,10,21,3,0)

"^DD",999.1,999.12,10,21,4,0)
C (Custom) - Executable M code.
"^DD",999.1,999.12,10,21,5,0)
O (Object) - Alias name of the target object.
"^DD",999.1,999.12,10,21,6,0)
M (Multiple) - Alias name of the multiple object.
"^DD",999.1,999.12,10,21,7,0)

"^DD",999.1,999.12,10,"DT")
3150211
"^DD",999.1,999.13,0)
PARAMETER SUB-FIELD^^10^6
"^DD",999.1,999.13,0,"DT")
3150211
"^DD",999.1,999.13,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.13,0,"IX","ASEQ",999.13,3)

"^DD",999.1,999.13,0,"IX","B",999.13,.01)

"^DD",999.1,999.13,0,"NM","PARAMETER")

"^DD",999.1,999.13,0,"UP")
999.11
"^DD",999.1,999.13,.01,0)
PARAMETER^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.13,.01,1,0)
^.1
"^DD",999.1,999.13,.01,1,1,0)
999.13^B
"^DD",999.1,999.13,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.13,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)
"^DD",999.1,999.13,.01,3)
Enter name of search parameter.
"^DD",999.1,999.13,.01,"DT")
3150211
"^DD",999.1,999.13,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.13,1,3)
Field name or # corresponding to this parameter.
"^DD",999.1,999.13,1,"DT")
3150211
"^DD",999.1,999.13,2,0)
TYPE^S^N:NUMBER;D:DATE;S:STRING;T:TOKEN;R:REFERENCE;Q:QUANTITY;^0;3^Q
"^DD",999.1,999.13,2,3)
Type of the search parameter.
"^DD",999.1,999.13,2,"DT")
3150211
"^DD",999.1,999.13,3,0)
SEQUENCE^NJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.13,3,1,0)
^.1
"^DD",999.1,999.13,3,1,1,0)
999.13^ASEQ
"^DD",999.1,999.13,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.13,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.13,3,1,1,"DT")
3150211
"^DD",999.1,999.13,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.13,3,"DT")
3150211
"^DD",999.1,999.13,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.13,10,3)
M code to perform filtering.
"^DD",999.1,999.13,10,"DT")
3150211
"^DD",999.1,999.13,20,0)
COHORT^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.13,20,3)
M code to set global selector into X.
"^DD",999.1,999.13,20,9)
@
"^DD",999.1,999.13,20,"DT")
3150211
"^DD",999.201,999.201,0)
FIELD^^4^5
"^DD",999.201,999.201,0,"IX","B",999.201,.01)

"^DD",999.201,999.201,0,"NM","CAREWEB NOTIFICATION CONTROL")

"^DD",999.201,999.201,0,"PT",999.994,.01)

"^DD",999.201,999.201,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<2)!'(X'?1P.E) X
"^DD",999.201,999.201,.01,1,0)
^.1
"^DD",999.201,999.201,.01,1,1,0)
999.201^B
"^DD",999.201,999.201,.01,1,1,1)
S ^RGCWF(999.201,"B",$E(X,1,30),DA)=""
"^DD",999.201,999.201,.01,1,1,2)
K ^RGCWF(999.201,"B",$E(X,1,30),DA)
"^DD",999.201,999.201,.01,3)
Answer must be 2-30 characters in length.
"^DD",999.201,999.201,.01,"DT")
3030805
"^DD",999.201,999.201,1,0)
IDENT^RK^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,1,3)
Code to check notification identity.  Set $T to true for positive match.
"^DD",999.201,999.201,1,9)
@
"^DD",999.201,999.201,1,21,0)
^^1^1^3030804.150811
"^DD",999.201,999.201,1,21,1,0)
Should check the notification identifier in AID and set $T to true if a match.
"^DD",999.201,999.201,1,"DT")
3030804
"^DD",999.201,999.201,2,0)
PARSE^RK^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,2,3)
Code to parse data elements from notification.
"^DD",999.201,999.201,2,9)
@
"^DD",999.201,999.201,2,21,0)
^^8^8^3030804.170957
"^DD",999.201,999.201,2,21,1,0)
Code to parse standard data elements from notification.  Elements should be
"^DD",999.201,999.201,2,21,2,0)
returned in ALR array as follows:
"^DD",999.201,999.201,2,21,3,0)

"^DD",999.201,999.201,2,21,4,0)
ALR("DFN")=Patient IEN (if patient-orientation)
"^DD",999.201,999.201,2,21,5,0)
ALR("INF")=Info only flag
"^DD",999.201,999.201,2,21,6,0)
ALR("TYP")=Notification type code
"^DD",999.201,999.201,2,21,7,0)
ALR("PRI")=Priority code
"^DD",999.201,999.201,2,21,8,0)
ALR("XTR")=Additional data
"^DD",999.201,999.201,2,"DT")
3030804
"^DD",999.201,999.201,3,0)
PROCESS^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,3,3)
Post processing logic for alert.
"^DD",999.201,999.201,3,9)
@
"^DD",999.201,999.201,3,"DT")
3030805
"^DD",999.201,999.201,4,0)
UPDATE^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,4,3)
Optional logic to update alerts for current user.
"^DD",999.201,999.201,4,9)
@
"^DD",999.201,999.201,4,21,0)
^^2^2^3080128.135828
"^DD",999.201,999.201,4,21,1,0)
This logic provides the opportunity to update alerts (add or delete) 
"^DD",999.201,999.201,4,21,2,0)
for the current user prior to retrieving them.
"^DD",999.201,999.201,4,"DT")
3080128
"^DD",19941.21,19941.21,0)
FIELD^^7^14
"^DD",19941.21,19941.21,0,"DT")
3091007
"^DD",19941.21,19941.21,0,"IX","B",19941.21,.01)

"^DD",19941.21,19941.21,0,"NM","CIA EVENT TYPE")

"^DD",19941.21,19941.21,0,"PT",999.995,.01)

"^DD",19941.21,19941.21,0,"PT",19930.995,.01)

"^DD",19941.21,19941.21,0,"PT",19941.23,1)

"^DD",19941.21,19941.21,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19941.21,19941.21,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",19941.21,19941.21,.01,1,0)
^.1
"^DD",19941.21,19941.21,.01,1,1,0)
19941.21^B
"^DD",19941.21,19941.21,.01,1,1,1)
S ^CIANB(19941.21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.21,.01,1,1,2)
K ^CIANB(19941.21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.21,.01,3)
Answer must be 3-100 characters in length.
"^DD",19941.21,19941.21,.01,"DT")
3030611
"^DD",19941.21,19941.21,1,0)
MONITOR^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,1,3)
M code to invoke monitor for this event type
"^DD",19941.21,19941.21,1,9)
@
"^DD",19941.21,19941.21,1,"DT")
3021021
"^DD",19941.21,19941.21,2,0)
DISABLE^S^0:NO;1:YES;^0;2^Q
"^DD",19941.21,19941.21,2,3)
Enter YES to disable this event type.
"^DD",19941.21,19941.21,2,21,0)
^.001^3^3^3030810^
"^DD",19941.21,19941.21,2,21,1,0)
If set to YES, this event type is disabled.  Once disabled, any attempt to 
"^DD",19941.21,19941.21,2,21,2,0)
enqueue the event will be ignored.  Disabling an event does not affect events
"^DD",19941.21,19941.21,2,21,3,0)
already in the queue. 
"^DD",19941.21,19941.21,2,"DT")
3030810
"^DD",19941.21,19941.21,3,0)
INTERVAL^NJ11,0X^^0;3^K:X<0!(X\1'=X) X
"^DD",19941.21,19941.21,3,3)
Enter the nominal polling interval in seconds.
"^DD",19941.21,19941.21,3,21,0)
^^10^10^3021021.152235
"^DD",19941.21,19941.21,3,21,1,0)
This is the nominal polling interval for the event in seconds.
"^DD",19941.21,19941.21,3,21,2,0)
The actual polling interval is dependent on the event polling
"^DD",19941.21,19941.21,3,21,3,0)
interval set for the client application as a site parameter.
"^DD",19941.21,19941.21,3,21,4,0)
The nominal polling interval guarantees that polling for this
"^DD",19941.21,19941.21,3,21,5,0)
event will not occur more frequently than this setting.
"^DD",19941.21,19941.21,3,21,6,0)
 
"^DD",19941.21,19941.21,3,21,7,0)
For events that are infrequent and/or do not require real time
"^DD",19941.21,19941.21,3,21,8,0)
notification, higher values may be selected for this field to
"^DD",19941.21,19941.21,3,21,9,0)
mitigate impact on system load. 
"^DD",19941.21,19941.21,3,21,10,0)

"^DD",19941.21,19941.21,3,"DT")
3021021
"^DD",19941.21,19941.21,4,0)
LOG EVENT^S^0:NO;1:YES;^0;4^Q
"^DD",19941.21,19941.21,4,3)
Enter YES to enable logging of this event.
"^DD",19941.21,19941.21,4,"DT")
3030611
"^DD",19941.21,19941.21,5,0)
LOG RETENTION^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.21,19941.21,5,3)
Number of days to retain log entries.
"^DD",19941.21,19941.21,5,"DT")
3030611
"^DD",19941.21,19941.21,6,0)
POLLING METHOD^S^0:PER SESSION;1:PER INTERVAL;^0;6^Q
"^DD",19941.21,19941.21,6,3)
Determines how a monitored event is polled.
"^DD",19941.21,19941.21,6,21,0)
^^11^11^3030810.175145
"^DD",19941.21,19941.21,6,21,1,0)
For monitored events, this setting determines how the monitor is invoked
"^DD",19941.21,19941.21,6,21,2,0)
when the polling interval has been reached.  PER SESSION causes the event
"^DD",19941.21,19941.21,6,21,3,0)
monitor to be invoked for each active session, setting the user and
"^DD",19941.21,19941.21,6,21,4,0)
session context prior to each call.  PER INTERVAL cause the event monitor
"^DD",19941.21,19941.21,6,21,5,0)
to be invoked only once per interval.  No user or session context information
"^DD",19941.21,19941.21,6,21,6,0)
is available to the monitor in this case.
"^DD",19941.21,19941.21,6,21,7,0)

"^DD",19941.21,19941.21,6,21,8,0)
PER SESSION is appropriate for events that depend upon a specific user or
"^DD",19941.21,19941.21,6,21,9,0)
session (e.g., notifications).  PER INTERVAL is appropriate for events 
"^DD",19941.21,19941.21,6,21,10,0)
that are independent of a user or session (e.g., status events to display
"^DD",19941.21,19941.21,6,21,11,0)
the host date/time).
"^DD",19941.21,19941.21,6,"DT")
3030810
"^DD",19941.21,19941.21,7,0)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",19941.21,19941.21,7,12)
Restricts to Extended Action Protocols starting with CIAV
"^DD",19941.21,19941.21,7,12.1)
S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X"""
"^DD",19941.21,19941.21,7,"DT")
3091007
"^DD",19941.21,19941.21,10,0)
DISPLAY LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,10,3)
Logic to display stub info in log viewer.
"^DD",19941.21,19941.21,10,9)
@
"^DD",19941.21,19941.21,10,"DT")
3030611
"^DD",19941.21,19941.21,20,0)
PUBLICATION KEY^19941.212P^^20;0
"^DD",19941.21,19941.21,21,0)
SUBSCRIPTION KEY^19941.2121P^^21;0
"^DD",19941.21,19941.21,99,0)
DESCRIPTION^19941.2199^^99;0
"^DD",19941.21,19941.21,100,0)
ERROR DATE/TIME^D^^100;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.21,19941.21,100,3)
Date and time of last error
"^DD",19941.21,19941.21,100,"DT")
3061129
"^DD",19941.21,19941.21,101,0)
ERROR TEXT^F^^100;2^K:$L(X)>240!($L(X)<1) X
"^DD",19941.21,19941.21,101,3)
Answer must be 1-240 characters in length.
"^DD",19941.21,19941.21,101,"DT")
3061129
"^DD",19941.21,19941.212,0)
PUBLICATION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.212,0,"DT")
3021021
"^DD",19941.21,19941.212,0,"IX","B",19941.212,.01)

"^DD",19941.21,19941.212,0,"NM","PUBLICATION KEY")

"^DD",19941.21,19941.212,0,"UP")
19941.21
"^DD",19941.21,19941.212,.01,0)
PUBLICATION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.212,.01,1,0)
^.1
"^DD",19941.21,19941.212,.01,1,1,0)
19941.212^B
"^DD",19941.21,19941.212,.01,1,1,1)
S ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.212,.01,1,1,2)
K ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.212,.01,3)
Security keys required to fire this event.
"^DD",19941.21,19941.212,.01,21,0)
^^2^2^3021021.152715
"^DD",19941.21,19941.212,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.212,.01,21,2,0)
the listed keys in order to fire an event of this type.
"^DD",19941.21,19941.212,.01,"DT")
3040310
"^DD",19941.21,19941.2121,0)
SUBSCRIPTION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.2121,0,"DT")
3021021
"^DD",19941.21,19941.2121,0,"IX","B",19941.2121,.01)

"^DD",19941.21,19941.2121,0,"NM","SUBSCRIPTION KEY")

"^DD",19941.21,19941.2121,0,"UP")
19941.21
"^DD",19941.21,19941.2121,.01,0)
SUBSCRIPTION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.2121,.01,1,0)
^.1
"^DD",19941.21,19941.2121,.01,1,1,0)
19941.2121^B
"^DD",19941.21,19941.2121,.01,1,1,1)
S ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.2121,.01,1,1,2)
K ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.2121,.01,3)
Security keys required to receive this event type.
"^DD",19941.21,19941.2121,.01,21,0)
^^2^2^3021021.153002
"^DD",19941.21,19941.2121,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.2121,.01,21,2,0)
the listed keys in order subscribe to an event of this type. 
"^DD",19941.21,19941.2121,.01,"DT")
3040310
"^DD",19941.21,19941.2199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",19941.21,19941.2199,0,"DT")
3021021
"^DD",19941.21,19941.2199,0,"NM","DESCRIPTION")

"^DD",19941.21,19941.2199,0,"UP")
19941.21
"^DD",19941.21,19941.2199,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",19941.21,19941.2199,.01,3)
Enter a detailed description of this event type.
"^DD",19941.21,19941.2199,.01,"DT")
3021021
"^DIC",999.1,999.1,0)
CAREWEB SERIALIZATION^999.1
"^DIC",999.1,999.1,0,"GL")
^RGCWF(999.1,
"^DIC",999.1,999.1,"%D",0)
^^1^1^3150211.113842
"^DIC",999.1,999.1,"%D",1,0)
Supports serialization of domain objects.
"^DIC",999.1,"B","CAREWEB SERIALIZATION",999.1)

"^DIC",999.201,999.201,0)
CAREWEB NOTIFICATION CONTROL^999.201
"^DIC",999.201,999.201,0,"GL")
^RGCWF(999.201,
"^DIC",999.201,"B","CAREWEB NOTIFICATION CONTROL",999.201)

"^DIC",19941.21,19941.21,0)
CIA EVENT TYPE^19941.21
"^DIC",19941.21,19941.21,0,"GL")
^CIANB(19941.21,
"^DIC",19941.21,"B","CIA EVENT TYPE",19941.21)

**INSTALL NAME**
CAREWEB LAB COVERSHEET 1.0
"BLD",8491,0)
CAREWEB LAB COVERSHEET 1.0^^0^3150226^n
"BLD",8491,4,0)
^9.64PA^19941.21^3
"BLD",8491,4,999.1,0)
999.1
"BLD",8491,4,999.1,222)
n^y^f^^n^^y^o^n
"BLD",8491,4,999.1,224)
I $$SCRN^RGCWKDTP(Y,1)
"BLD",8491,4,999.201,0)
999.201
"BLD",8491,4,999.201,222)
n^y^f^^y^^y^o^n
"BLD",8491,4,999.201,224)
I $$SCRN^RGCWKDTP(Y,4)
"BLD",8491,4,19941.21,0)
19941.21
"BLD",8491,4,19941.21,222)
n^y^f^^y^^y^o^n
"BLD",8491,4,19941.21,224)
I $$SCRN^RGCWKDTP(Y,5)
"BLD",8491,4,"B",999.1,999.1)

"BLD",8491,4,"B",999.201,999.201)

"BLD",8491,4,"B",19941.21,19941.21)

"BLD",8491,6.3)
110
"BLD",8491,"INI")
PRE^RGCWKDIN
"BLD",8491,"INIT")
POST^RGCWKDIN
"BLD",8491,"KRN",0)
^9.67PA^8994^20
"BLD",8491,"KRN",.4,0)
.4
"BLD",8491,"KRN",.401,0)
.401
"BLD",8491,"KRN",.402,0)
.402
"BLD",8491,"KRN",.403,0)
.403
"BLD",8491,"KRN",.5,0)
.5
"BLD",8491,"KRN",.84,0)
.84
"BLD",8491,"KRN",3.6,0)
3.6
"BLD",8491,"KRN",3.8,0)
3.8
"BLD",8491,"KRN",9.2,0)
9.2
"BLD",8491,"KRN",9.8,0)
9.8
"BLD",8491,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",8491,"KRN",9.8,"NM",1,0)
RGCWLRCV^^0^B721835
"BLD",8491,"KRN",9.8,"NM","B","RGCWLRCV",1)

"BLD",8491,"KRN",19,0)
19
"BLD",8491,"KRN",19.1,0)
19.1
"BLD",8491,"KRN",101,0)
101
"BLD",8491,"KRN",409.61,0)
409.61
"BLD",8491,"KRN",771,0)
771
"BLD",8491,"KRN",779.2,0)
779.2
"BLD",8491,"KRN",870,0)
870
"BLD",8491,"KRN",8989.51,0)
8989.51
"BLD",8491,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",8491,"KRN",8989.51,"NM",1,0)
RGCWLRCV DATE RANGE^^0
"BLD",8491,"KRN",8989.51,"NM","B","RGCWLRCV DATE RANGE",1)

"BLD",8491,"KRN",8989.52,0)
8989.52
"BLD",8491,"KRN",8994,0)
8994
"BLD",8491,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",8491,"KRN",8994,"NM",1,0)
RGCWLRCV DETAIL^^0
"BLD",8491,"KRN",8994,"NM",2,0)
RGCWLRCV LIST^^0
"BLD",8491,"KRN",8994,"NM","B","RGCWLRCV DETAIL",1)

"BLD",8491,"KRN",8994,"NM","B","RGCWLRCV LIST",2)

"BLD",8491,"KRN","B",.4,.4)

"BLD",8491,"KRN","B",.401,.401)

"BLD",8491,"KRN","B",.402,.402)

"BLD",8491,"KRN","B",.403,.403)

"BLD",8491,"KRN","B",.5,.5)

"BLD",8491,"KRN","B",.84,.84)

"BLD",8491,"KRN","B",3.6,3.6)

"BLD",8491,"KRN","B",3.8,3.8)

"BLD",8491,"KRN","B",9.2,9.2)

"BLD",8491,"KRN","B",9.8,9.8)

"BLD",8491,"KRN","B",19,19)

"BLD",8491,"KRN","B",19.1,19.1)

"BLD",8491,"KRN","B",101,101)

"BLD",8491,"KRN","B",409.61,409.61)

"BLD",8491,"KRN","B",771,771)

"BLD",8491,"KRN","B",779.2,779.2)

"BLD",8491,"KRN","B",870,870)

"BLD",8491,"KRN","B",8989.51,8989.51)

"BLD",8491,"KRN","B",8989.52,8989.52)

"BLD",8491,"KRN","B",8994,8994)

"BLD",8491,"PRE")
RGCWKDIN
"BLD",8491,"PRET")
PRETRANS^RGCWKDTP
"BLD",8491,"QUES",0)
^9.62^^
"BLD",8491,"REQB",0)
^9.611^^
"FIA",999.1)
CAREWEB SERIALIZATION
"FIA",999.1,0)
^RGCWF(999.1,
"FIA",999.1,0,0)
999.1I
"FIA",999.1,0,1)
n^y^f^^n^^y^o^n
"FIA",999.1,0,10)

"FIA",999.1,0,11)
I $$SCRN^RGCWKDTP(Y,1)
"FIA",999.1,0,"RLRO")

"FIA",999.1,999.1)
0
"FIA",999.1,999.11)
0
"FIA",999.1,999.12)
0
"FIA",999.1,999.13)
0
"FIA",999.201)
CAREWEB NOTIFICATION CONTROL
"FIA",999.201,0)
^RGCWF(999.201,
"FIA",999.201,0,0)
999.201
"FIA",999.201,0,1)
n^y^f^^y^^y^o^n
"FIA",999.201,0,10)

"FIA",999.201,0,11)
I $$SCRN^RGCWKDTP(Y,4)
"FIA",999.201,0,"RLRO")

"FIA",999.201,999.201)
0
"FIA",19941.21)
CIA EVENT TYPE
"FIA",19941.21,0)
^CIANB(19941.21,
"FIA",19941.21,0,0)
19941.21
"FIA",19941.21,0,1)
n^y^f^^y^^y^o^n
"FIA",19941.21,0,10)

"FIA",19941.21,0,11)
I $$SCRN^RGCWKDTP(Y,5)
"FIA",19941.21,0,"RLRO")

"FIA",19941.21,19941.21)
0
"FIA",19941.21,19941.212)
0
"FIA",19941.21,19941.2121)
0
"FIA",19941.21,19941.2199)
0
"INI")
PRE^RGCWKDIN
"INIT")
POST^RGCWKDIN
"KRN",8989.51,403,-1)
0^1
"KRN",8989.51,403,0)
RGCWLRCV DATE RANGE^Duration for Lab Order Display^1^Inpatient/Outpatient^Number of Days to Display
"KRN",8989.51,403,1)
N^1:100000:0^Enter the number of days to search back in time for lab orders/results.
"KRN",8989.51,403,6)
S^I:Inpatient;O:Outpatient^Enter I for inpatient settings; O for outpatient settings.
"KRN",8989.51,403,20,0)
^^3^3^3050919.161123
"KRN",8989.51,403,20,1,0)
The number of days back in time to search for lab orders/results. If not 
"KRN",8989.51,403,20,2,0)
indicated, the default period of 2 days will be used. The maximum number of 
"KRN",8989.51,403,20,3,0)
days is 100,000 or about 220 years.
"KRN",8989.51,403,30,0)
^8989.513I^6^5
"KRN",8989.51,403,30,1,0)
100^200
"KRN",8989.51,403,30,2,0)
200^44
"KRN",8989.51,403,30,3,0)
300^49
"KRN",8989.51,403,30,4,0)
400^4
"KRN",8989.51,403,30,6,0)
900^4.2
"KRN",8994,2680,-1)
0^2
"KRN",8994,2680,0)
RGCWLRCV LIST^LIST^RGCWLRCV^2
"KRN",8994,2680,1,0)
^8994.01^2^2^3000104^
"KRN",8994,2680,1,1,0)
Returns a list of labs to display on the CPRS GUI cover sheet for a
"KRN",8994,2680,1,2,0)
patient.
"KRN",8994,2681,-1)
0^1
"KRN",8994,2681,0)
RGCWLRCV DETAIL^DETAIL^RGCWLRCV^4^^^^1
"KRN",8994,2681,1,0)
^8994.01^1^1^3000105^
"KRN",8994,2681,1,1,0)
Returns results of a CPRS order.
"MBREQ")
1
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PGL",19941.21,0,7,7)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"PRE")
RGCWKDIN
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","RGCWKDIN")
0^^B31866196
"RTN","RGCWKDIN",1,0)
RGCKDIN ;RI/CBMI/DKM - CareWeb KIDS installation support ;02-Feb-2015 12:11;DKM
"RTN","RGCWKDIN",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 110
"RTN","RGCWKDIN",3,0)
 ; Environment check
"RTN","RGCWKDIN",4,0)
EC X $G(@XPDGREF@("EC"))
"RTN","RGCWKDIN",5,0)
 Q
"RTN","RGCWKDIN",6,0)
 ; Preinit
"RTN","RGCWKDIN",7,0)
PRE N RGX,RGY
"RTN","RGCWKDIN",8,0)
 D MES(),OBJINST,SDINIT^RGCWFUTL(,60,1)
"RTN","RGCWKDIN",9,0)
 F  D  Q:'RGX
"RTN","RGCWKDIN",10,0)
 .S RGX=$$SHOWSESS^RGCWFUTL
"RTN","RGCWKDIN",11,0)
 .R:RGX "Waiting for active sessions to terminate...",RGY:10,!!
"RTN","RGCWKDIN",12,0)
 .I RGX,RGY=U,$$ASK^RGUT("There are still active sessions.  Are you sure you want to proceed") S RGX=0
"RTN","RGCWKDIN",13,0)
 D MES("Proceeding with installation...")
"RTN","RGCWKDIN",14,0)
 D INITIAL,SAVEOPT
"RTN","RGCWKDIN",15,0)
 Q
"RTN","RGCWKDIN",16,0)
 ; Postinit
"RTN","RGCWKDIN",17,0)
POST N PAR,Y
"RTN","RGCWKDIN",18,0)
 X ^%ZOSF("EON"),^%ZOSF("TRMOFF")
"RTN","RGCWKDIN",19,0)
 D RESPTR,DEFPAR,RESTOPT,REGISTER,FINAL
"RTN","RGCWKDIN",20,0)
 W !!!
"RTN","RGCWKDIN",21,0)
 Q
"RTN","RGCWKDIN",22,0)
 ; Execute initial preinit code, if any
"RTN","RGCWKDIN",23,0)
INITIAL ; EP
"RTN","RGCWKDIN",24,0)
 X $G(@XPDGREF@("INITIAL"))
"RTN","RGCWKDIN",25,0)
 Q
"RTN","RGCWKDIN",26,0)
 ; Execute final postinit code, if any
"RTN","RGCWKDIN",27,0)
FINAL ; EP
"RTN","RGCWKDIN",28,0)
 X $G(@XPDGREF@("FINAL"))
"RTN","RGCWKDIN",29,0)
 Q
"RTN","RGCWKDIN",30,0)
 ; Initializes default parameter values.  Does not affect existing entries.
"RTN","RGCWKDIN",31,0)
DEFPAR N PAR,ENT,VAL,INST,LP,Y
"RTN","RGCWKDIN",32,0)
 D MES("Setting up default site parameters...")
"RTN","RGCWKDIN",33,0)
 F LP=0:0 S LP=$O(@XPDGREF@("PARAM",LP)) Q:'LP  K VAL M VAL=^(LP) D
"RTN","RGCWKDIN",34,0)
 .S Y=VAL,VAL=$$MSG^RGUT($P(Y,U,3,999),"|",0),PAR=$P(Y,U),INST=$P(Y,U,2)
"RTN","RGCWKDIN",35,0)
 .S ENT=$$ENT^RGCWFPAR(PAR),ENT=$P(ENT,U,$L(ENT,U))
"RTN","RGCWKDIN",36,0)
 .D:$L(ENT) ADD^XPAR(ENT,PAR,INST,.VAL)
"RTN","RGCWKDIN",37,0)
 Q
"RTN","RGCWKDIN",38,0)
 ; Delete a file or subfile
"RTN","RGCWKDIN",39,0)
 ;   DIU = File or subfile #
"RTN","RGCWKDIN",40,0)
DELFIL(DIU) ; EP
"RTN","RGCWKDIN",41,0)
 N $ET
"RTN","RGCWKDIN",42,0)
 S $ET="",@$$TRAP^RGUTOS("DELERR^RGCWKDIN")
"RTN","RGCWKDIN",43,0)
 Q:'$D(^DD(DIU))
"RTN","RGCWKDIN",44,0)
 S DIU(0)=$S($D(^DIC(DIU)):"D",1:"S")
"RTN","RGCWKDIN",45,0)
 D EN^DIU2
"RTN","RGCWKDIN",46,0)
 Q
"RTN","RGCWKDIN",47,0)
DELERR N ERR
"RTN","RGCWKDIN",48,0)
 S ERR=$$EC^%ZOSV
"RTN","RGCWKDIN",49,0)
 D MES("An error occurred deleting file #"_$G(DIU))
"RTN","RGCWKDIN",50,0)
 D MES("The error was: "_ERR)
"RTN","RGCWKDIN",51,0)
 D MES("Please delete the file manually after correcting the problem.")
"RTN","RGCWKDIN",52,0)
 Q
"RTN","RGCWKDIN",53,0)
 ; Save ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK option
"RTN","RGCWKDIN",54,0)
SAVEOPT N OPT
"RTN","RGCWKDIN",55,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",56,0)
 Q:'OPT
"RTN","RGCWKDIN",57,0)
 M @XPDGREF@("ITMSAVE")=^DIC(19,OPT,10,"B")
"RTN","RGCWKDIN",58,0)
 M @XPDGREF@("RPCSAVE")=^DIC(19,OPT,"RPC","B")
"RTN","RGCWKDIN",59,0)
 Q
"RTN","RGCWKDIN",60,0)
 ; Restore ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK
"RTN","RGCWKDIN",61,0)
RESTOPT N OPT,ITM,RPC
"RTN","RGCWKDIN",62,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",63,0)
 Q:'OPT
"RTN","RGCWKDIN",64,0)
 F ITM=0:0 S ITM=$O(@XPDGREF@("ITMSAVE",ITM)) Q:'ITM  I $$REGCTX^RGUTRPC(ITM,OPT)
"RTN","RGCWKDIN",65,0)
 F RPC=0:0 S RPC=$O(@XPDGREF@("RPCSAVE",RPC)) Q:'RPC  I $$REGRPC^RGUTRPC(RPC,OPT)
"RTN","RGCWKDIN",66,0)
 Q
"RTN","RGCWKDIN",67,0)
 ; Resolve pointers in multiples (KIDS doesn't)
"RTN","RGCWKDIN",68,0)
RESPTR ; EP
"RTN","RGCWKDIN",69,0)
 N TGT,SRC,SUB,NOD,NAM,VAL,IEN,CNT,SGB,PTR
"RTN","RGCWKDIN",70,0)
 S SUB=0
"RTN","RGCWKDIN",71,0)
 F  S SUB=$O(@XPDGREF@("PTRS",SUB)) Q:'SUB  S X=^(SUB)  D
"RTN","RGCWKDIN",72,0)
 .S NOD=+X,SRC=$P(X,U,2),TGT=$P(X,U,3),SGB=$$ROOT^DILFD(SRC,,1),NAM=""
"RTN","RGCWKDIN",73,0)
 .F  S NAM=$O(@XPDGREF@("PTRS",SUB,NAM)) Q:'$L(NAM)  D
"RTN","RGCWKDIN",74,0)
 ..S IEN=$$FIND1^DIC(SRC,"","QX",NAM),VAL="",CNT=0
"RTN","RGCWKDIN",75,0)
 ..Q:IEN'>0
"RTN","RGCWKDIN",76,0)
 ..K @SGB@(IEN,NOD)
"RTN","RGCWKDIN",77,0)
 ..F  S VAL=$O(@XPDGREF@("PTRS",SUB,NAM,VAL)) Q:'$L(VAL)  D
"RTN","RGCWKDIN",78,0)
 ...S PTR=$$FIND1^DIC(TGT,,"X",VAL)
"RTN","RGCWKDIN",79,0)
 ...I 'PTR D MES("  Failed to resolve "_VAL) Q
"RTN","RGCWKDIN",80,0)
 ...S CNT=CNT+1,@SGB@(IEN,NOD,CNT,0)=PTR,@SGB@(IEN,NOD,"B",PTR,CNT)=""
"RTN","RGCWKDIN",81,0)
 ..S:CNT @SGB@(IEN,NOD,0)=U_SUB_"P^"_CNT_U_CNT
"RTN","RGCWKDIN",82,0)
 Q
"RTN","RGCWKDIN",83,0)
 ; Check binary version against M system
"RTN","RGCWKDIN",84,0)
OBJCHK ; EP
"RTN","RGCWKDIN",85,0)
 N VER,MSYS
"RTN","RGCWKDIN",86,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",87,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",88,0)
 I '$D(VER) D
"RTN","RGCWKDIN",89,0)
 .D MES("This package contains object code that is not supported on "_MSYS_" installations.",2)
"RTN","RGCWKDIN",90,0)
 E  I VER="" D
"RTN","RGCWKDIN",91,0)
 .D MES("This package does not contain object code for this version of "_MSYS_" installations.",2)
"RTN","RGCWKDIN",92,0)
 Q
"RTN","RGCWKDIN",93,0)
 ; Get M system type and target version
"RTN","RGCWKDIN",94,0)
GETMSYS(MSYS,VER) ;
"RTN","RGCWKDIN",95,0)
 K MSYS,VER
"RTN","RGCWKDIN",96,0)
 Q:'$D(@XPDGREF@("OBJ"))
"RTN","RGCWKDIN",97,0)
 S MSYS=$$UP^XLFSTR($P($$VERSION^%ZOSV(1)," ")),MSYS(0)=$S(MSYS="CACHE":1,MSYS="JUMPS":2,1:0)
"RTN","RGCWKDIN",98,0)
 Q:'$D(@XPDGREF@("OBJ",MSYS(0)))
"RTN","RGCWKDIN",99,0)
 S VER=$TR($$VERSION^%ZOSV()," ")
"RTN","RGCWKDIN",100,0)
 F  Q:'$L(VER)  Q:$D(@XPDGREF@("OBJ",MSYS(0),VER))  S VER=$P(VER,".",1,$L(VER,".")-1)
"RTN","RGCWKDIN",101,0)
 Q
"RTN","RGCWKDIN",102,0)
 ; Install routine binaries
"RTN","RGCWKDIN",103,0)
OBJINST ; EP
"RTN","RGCWKDIN",104,0)
 N MSYS,RTN,OBJ,SUB,GBL
"RTN","RGCWKDIN",105,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",106,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",107,0)
 Q:$D(@XPDGREF@("OBJ",MSYS(0)))<10
"RTN","RGCWKDIN",108,0)
 S RTN=""
"RTN","RGCWKDIN",109,0)
 D MES("Installing routine binaries...")
"RTN","RGCWKDIN",110,0)
 F  S RTN=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN)) Q:'$L(RTN)  D
"RTN","RGCWKDIN",111,0)
 .X "ZR  ZS @RTN"
"RTN","RGCWKDIN",112,0)
 .S OBJ="",SUB=0,GBL=$NA(@$S(MSYS(0)=1:"^rOBJ(RTN)",1:"^$R(RTN,""OBJECT"")"))
"RTN","RGCWKDIN",113,0)
 .F  S SUB=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN,SUB)) Q:'SUB  S OBJ=OBJ_^(SUB,0)
"RTN","RGCWKDIN",114,0)
 .S @GBL=$S(MSYS(0)=1:$$DECODE^RGUTUU(OBJ),1:OBJ)
"RTN","RGCWKDIN",115,0)
 Q
"RTN","RGCWKDIN",116,0)
 ; Perform various registration actions
"RTN","RGCWKDIN",117,0)
REGISTER N X,CTX
"RTN","RGCWKDIN",118,0)
 S CTX=$$GETOPT^RGUTRPC("RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",119,0)
 Q:'CTX
"RTN","RGCWKDIN",120,0)
 F X="RGCW","CIAV","CIAU","DG","DDR","RGUT","BEH" D REGNMSP^RGUTRPC(X,CTX)
"RTN","RGCWKDIN",121,0)
 F X="OR CPRS GUI CHART" D DOREG(X)
"RTN","RGCWKDIN",122,0)
 Q
"RTN","RGCWKDIN",123,0)
 ; Add an option as a subcontext to CareWeb Framework
"RTN","RGCWKDIN",124,0)
 ; Remove any redundant RPC's
"RTN","RGCWKDIN",125,0)
DOREG(OPT) ;
"RTN","RGCWKDIN",126,0)
 N RPC,CNT1,CNT2,STAT,IEN
"RTN","RGCWKDIN",127,0)
 S IEN=$$GETOPT^RGUTRPC(OPT)
"RTN","RGCWKDIN",128,0)
 Q:'IEN
"RTN","RGCWKDIN",129,0)
 W !!,"Registering ",OPT," as a subcontext under RGCWF CAREWEB FRAMEWORK...",!
"RTN","RGCWKDIN",130,0)
 I $$REGCTX^RGUTRPC(IEN,CTX)
"RTN","RGCWKDIN",131,0)
 W "Removing redundant RPC references...",!
"RTN","RGCWKDIN",132,0)
 S (CNT1,CNT2)=0
"RTN","RGCWKDIN",133,0)
 F RPC=0:0 S RPC=$O(^DIC(19,IEN,"RPC","B",RPC)) Q:'RPC  D
"RTN","RGCWKDIN",134,0)
 .S STAT=$$REGRPC^RGUTRPC(RPC,CTX,1)
"RTN","RGCWKDIN",135,0)
 .Q:STAT=-1
"RTN","RGCWKDIN",136,0)
 .W $$GET1^DIQ(8994,RPC,.01)_" - "
"RTN","RGCWKDIN",137,0)
 .I STAT=1 W "Removed",! S CNT1=CNT1+1
"RTN","RGCWKDIN",138,0)
 .E  I 'STAT W "Not removed",! S CNT2=CNT2+1
"RTN","RGCWKDIN",139,0)
 W !,CNT1," remote procedure(s) removed",!
"RTN","RGCWKDIN",140,0)
 W:CNT2 CNT2," remote procedure(s) could not be removed",!!
"RTN","RGCWKDIN",141,0)
 Q
"RTN","RGCWKDIN",142,0)
 ; Check if specified routine is installed
"RTN","RGCWKDIN",143,0)
RTNTST(RTN,VN,MSG) ;
"RTN","RGCWKDIN",144,0)
 D:$$RTNVER(RTN)<VN MES(MSG_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",145,0)
 Q
"RTN","RGCWKDIN",146,0)
 ; Get version # for specified routine
"RTN","RGCWKDIN",147,0)
RTNVER(RTN) ;
"RTN","RGCWKDIN",148,0)
 Q $P($T(+2^@RTN),";",3)
"RTN","RGCWKDIN",149,0)
 ; Check patch #s for specified routine
"RTN","RGCWKDIN",150,0)
PATCH(RTN,PN,MSG) ;
"RTN","RGCWKDIN",151,0)
 N X,Y,L,F
"RTN","RGCWKDIN",152,0)
 F X=1:1:$L(PN,",") D
"RTN","RGCWKDIN",153,0)
 .S Y=$P(PN,",",X),F=0
"RTN","RGCWKDIN",154,0)
 .F L=2,3 D  Q:F
"RTN","RGCWKDIN",155,0)
 ..S F=$TR($P($T(+L^@RTN),";",5),"*",",")[(","_Y_",")
"RTN","RGCWKDIN",156,0)
 .D:'F MES(MSG_" patch #"_Y_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",157,0)
 Q
"RTN","RGCWKDIN",158,0)
 ; Display message in MSG and optionally set quit flag to QUIT
"RTN","RGCWKDIN",159,0)
MES(MSG,QUIT) ;
"RTN","RGCWKDIN",160,0)
 D BMES^XPDUTL("  "_$G(MSG))
"RTN","RGCWKDIN",161,0)
 S:$G(QUIT) XPDQUIT=QUIT
"RTN","RGCWKDIN",162,0)
 Q
"RTN","RGCWLRCV")
0^1^B721835
"RTN","RGCWLRCV",1,0)
RGCWLRCV ;RI/CBMI/DKM - Support for lab cover sheet component ;18-Mar-2014 23:21;DKM
"RTN","RGCWLRCV",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 110
"RTN","RGCWLRCV",3,0)
 ; RPC: RGCWLRCV LIST
"RTN","RGCWLRCV",4,0)
LIST(DATA,DFN) ;EP - return lab order for patient
"RTN","RGCWLRCV",5,0)
 D LIST^ORQOR1(.DATA,DFN,"LAB",4,"T-"_$$RNGLAB(DFN),"T","AW",1)
"RTN","RGCWLRCV",6,0)
 Q
"RTN","RGCWLRCV",7,0)
 ; RPC: RGCWLRCV DETAIL
"RTN","RGCWLRCV",8,0)
DETAIL(DATA,DFN,ORID,ID) ;EP - Return results of order identified by ID
"RTN","RGCWLRCV",9,0)
 N ORESULTS,ORVP,LCNT
"RTN","RGCWLRCV",10,0)
 K ^TMP("ORXPND",$J)
"RTN","RGCWLRCV",11,0)
 S ORESULTS=1,LCNT=0,ORVP=DFN_";DPT("
"RTN","RGCWLRCV",12,0)
 D ORDERS^ORCXPND1
"RTN","RGCWLRCV",13,0)
 K ^TMP("ORXPND",$J,"VIDEO")
"RTN","RGCWLRCV",14,0)
 S DATA=$NA(^TMP("ORXPND",$J))
"RTN","RGCWLRCV",15,0)
 Q
"RTN","RGCWLRCV",16,0)
 ; Return days back for patient
"RTN","RGCWLRCV",17,0)
RNGLAB(DFN) ;
"RTN","RGCWLRCV",18,0)
 N INOUT
"RTN","RGCWLRCV",19,0)
 S INOUT=$S($L($G(^DPT(DFN,.1))):"I",1:"O")
"RTN","RGCWLRCV",20,0)
 Q $$GET^XPAR("ALL","RGCWLRCV DATE RANGE",INOUT,"I")
"SEC","^DIC",999.1,999.1,0,"AUDIT")
@
"SEC","^DIC",999.1,999.1,0,"DD")
@
"SEC","^DIC",999.1,999.1,0,"DEL")
@
"SEC","^DIC",999.1,999.1,0,"LAYGO")
@
"SEC","^DIC",999.1,999.1,0,"RD")
@
"SEC","^DIC",999.1,999.1,0,"WR")
@
"SEC","^DIC",999.201,999.201,0,"AUDIT")
@
"SEC","^DIC",999.201,999.201,0,"DD")
@
"SEC","^DIC",999.201,999.201,0,"DEL")
@
"SEC","^DIC",999.201,999.201,0,"LAYGO")
@
"SEC","^DIC",999.201,999.201,0,"RD")
@
"SEC","^DIC",999.201,999.201,0,"WR")
@
"SEC","^DIC",19941.21,19941.21,0,"AUDIT")
@
"SEC","^DIC",19941.21,19941.21,0,"DD")
@
"SEC","^DIC",19941.21,19941.21,0,"DEL")
@
"SEC","^DIC",19941.21,19941.21,0,"LAYGO")
@
"SEC","^DIC",19941.21,19941.21,0,"RD")
@
"SEC","^DIC",19941.21,19941.21,0,"WR")
@
"TEMP","EC")

"TEMP","FINAL")

"TEMP","INITIAL")

"TEMP","PARAM",1)
RGCWLRCV DATE RANGE^O^30
"TEMP","PARAM",2)
RGCWLRCV DATE RANGE^I^2
"TEMP","PTRS",19941.212)
20^19941.21^19.1
"TEMP","PTRS",19941.2121)
21^19941.21^19.1
"TEMP","TGT")
10
"VER")
8.0^22.0
"^DD",999.1,999.1,0)
FIELD^^10^4
"^DD",999.1,999.1,0,"DDA")
N
"^DD",999.1,999.1,0,"DT")
3150211
"^DD",999.1,999.1,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",999.1,999.1,0,"IX","B",999.1,.01)

"^DD",999.1,999.1,0,"NM","CAREWEB SERIALIZATION")

"^DD",999.1,999.1,0,"PT",999.991,.01)

"^DD",999.1,999.1,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",999.1,999.1,.01,1,0)
^.1
"^DD",999.1,999.1,.01,1,1,0)
999.1^B
"^DD",999.1,999.1,.01,1,1,1)
S ^RGCWF(999.1,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.1,.01,1,1,2)
K ^RGCWF(999.1,"B",$E(X,1,30),DA)
"^DD",999.1,999.1,.01,3)
Replace Name of the serialization type (1-30 characters).
"^DD",999.1,999.1,.01,"DT")
3150211
"^DD",999.1,999.1,1,0)
CONTENT TYPE^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",999.1,999.1,1,3)
Content type generated by this serialization type.
"^DD",999.1,999.1,1,"DT")
3150211
"^DD",999.1,999.1,2,0)
SERIALIZER^F^^0;3^K:$L(X)>10!($L(X)<1)!'(X?1.A0.AN) X
"^DD",999.1,999.1,2,3)
Name of serialization routine.
"^DD",999.1,999.1,2,"DT")
3150211
"^DD",999.1,999.1,10,0)
RESOURCE^999.11^^10;0
"^DD",999.1,999.11,0)
RESOURCE SUB-FIELD^^2^8
"^DD",999.1,999.11,0,"DT")
3150211
"^DD",999.1,999.11,0,"IX","B",999.11,.01)

"^DD",999.1,999.11,0,"IX","C",999.11,.01)

"^DD",999.1,999.11,0,"NM","RESOURCE")

"^DD",999.1,999.11,0,"UP")
999.1
"^DD",999.1,999.11,.01,0)
RESOURCE^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.11,.01,1,0)
^.1^^-1
"^DD",999.1,999.11,.01,1,1,0)
999.11^B^MUMPS
"^DD",999.1,999.11,.01,1,1,1)
S ^RGCWF(999.1,DA(1),10,"B",X,DA)=$$TOPTRN^RGCWSER(X)
"^DD",999.1,999.11,.01,1,1,2)
K ^RGCWF(999.1,DA(1),10,"B",X,DA)
"^DD",999.1,999.11,.01,1,1,"DT")
3150211
"^DD",999.1,999.11,.01,1,2,0)
999.11^C^MUMPS
"^DD",999.1,999.11,.01,1,2,1)
S ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)=""
"^DD",999.1,999.11,.01,1,2,2)
K ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)
"^DD",999.1,999.11,.01,1,2,"DT")
3150211
"^DD",999.1,999.11,.01,3)
Enter path name for the resource.
"^DD",999.1,999.11,.01,"DT")
3150211
"^DD",999.1,999.11,1,0)
INTERNAL^S^0:NO;1:YES;^0;2^Q
"^DD",999.1,999.11,1,3)
Enter YES if this is an internal resource.
"^DD",999.1,999.11,1,"DT")
3150221
"^DD",999.1,999.11,2,0)
SOURCE^NJ10,4XO^^0;3^K:'$$VFILE^DILFD(X) X
"^DD",999.1,999.11,2,2)
S Y(0)=Y S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,2.1)
S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,3)
Enter a file or subfile number.
"^DD",999.1,999.11,2,"DT")
3150211
"^DD",999.1,999.11,10,0)
CUSTOM SERIALIZER^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,10,3)
M code to invoke custom serializer.
"^DD",999.1,999.11,10,9)
@
"^DD",999.1,999.11,10,"DT")
3150211
"^DD",999.1,999.11,20,0)
CUSTOM RETRIEVAL^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,20,3)
M code to invoke custom retrieval logic.
"^DD",999.1,999.11,20,9)
@
"^DD",999.1,999.11,20,"DT")
3150211
"^DD",999.1,999.11,30,0)
PROPERTY^999.12I^^30;0
"^DD",999.1,999.11,40,0)
PARAMETER^999.13I^^40;0
"^DD",999.1,999.11,99,0)
DESCRIPTION^F^^99;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.11,99,3)
Enter brief description of this resource.
"^DD",999.1,999.11,99,"DT")
3150211
"^DD",999.1,999.12,0)
PROPERTY SUB-FIELD^^10^5
"^DD",999.1,999.12,0,"DT")
3150211
"^DD",999.1,999.12,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.12,0,"IX","ASEQ",999.12,3)

"^DD",999.1,999.12,0,"IX","B",999.12,.01)

"^DD",999.1,999.12,0,"NM","PROPERTY")

"^DD",999.1,999.12,0,"UP")
999.11
"^DD",999.1,999.12,.01,0)
PROPERTY^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.12,.01,1,0)
^.1
"^DD",999.1,999.12,.01,1,1,0)
999.12^B
"^DD",999.1,999.12,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.12,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)
"^DD",999.1,999.12,.01,3)
Property name to be used in serialization.
"^DD",999.1,999.12,.01,"DT")
3150211
"^DD",999.1,999.12,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.12,1,3)
Field name or # corresponding to this property
"^DD",999.1,999.12,1,"DT")
3150211
"^DD",999.1,999.12,2,0)
TYPE^RS^F:FREE TEXT;R:RAW;B:BOOLEAN;D:DATE;M:MULTIPLE;C:CUSTOM;O:OBJECT;W:WORD PROCESSING;I:INLINE;^0;3^Q
"^DD",999.1,999.12,2,3)
Encoding type for this property.
"^DD",999.1,999.12,2,"DT")
3150211
"^DD",999.1,999.12,3,0)
SEQUENCE^RNJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.12,3,1,0)
^.1
"^DD",999.1,999.12,3,1,1,0)
999.12^ASEQ
"^DD",999.1,999.12,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.12,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.12,3,1,1,"DT")
3150211
"^DD",999.1,999.12,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.12,3,"DT")
3150211
"^DD",999.1,999.12,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.12,10,3)
Enter control data.
"^DD",999.1,999.12,10,21,0)
^^7^7^3150211.121613
"^DD",999.1,999.12,10,21,1,0)
The format of this field depends on the value of the TYPE field.  For those
"^DD",999.1,999.12,10,21,2,0)
TYPE values not listed below, this field will be ignored.
"^DD",999.1,999.12,10,21,3,0)

"^DD",999.1,999.12,10,21,4,0)
C (Custom) - Executable M code.
"^DD",999.1,999.12,10,21,5,0)
O (Object) - Alias name of the target object.
"^DD",999.1,999.12,10,21,6,0)
M (Multiple) - Alias name of the multiple object.
"^DD",999.1,999.12,10,21,7,0)

"^DD",999.1,999.12,10,"DT")
3150211
"^DD",999.1,999.13,0)
PARAMETER SUB-FIELD^^10^6
"^DD",999.1,999.13,0,"DT")
3150211
"^DD",999.1,999.13,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.13,0,"IX","ASEQ",999.13,3)

"^DD",999.1,999.13,0,"IX","B",999.13,.01)

"^DD",999.1,999.13,0,"NM","PARAMETER")

"^DD",999.1,999.13,0,"UP")
999.11
"^DD",999.1,999.13,.01,0)
PARAMETER^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.13,.01,1,0)
^.1
"^DD",999.1,999.13,.01,1,1,0)
999.13^B
"^DD",999.1,999.13,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.13,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)
"^DD",999.1,999.13,.01,3)
Enter name of search parameter.
"^DD",999.1,999.13,.01,"DT")
3150211
"^DD",999.1,999.13,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.13,1,3)
Field name or # corresponding to this parameter.
"^DD",999.1,999.13,1,"DT")
3150211
"^DD",999.1,999.13,2,0)
TYPE^S^N:NUMBER;D:DATE;S:STRING;T:TOKEN;R:REFERENCE;Q:QUANTITY;^0;3^Q
"^DD",999.1,999.13,2,3)
Type of the search parameter.
"^DD",999.1,999.13,2,"DT")
3150211
"^DD",999.1,999.13,3,0)
SEQUENCE^NJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.13,3,1,0)
^.1
"^DD",999.1,999.13,3,1,1,0)
999.13^ASEQ
"^DD",999.1,999.13,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.13,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.13,3,1,1,"DT")
3150211
"^DD",999.1,999.13,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.13,3,"DT")
3150211
"^DD",999.1,999.13,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.13,10,3)
M code to perform filtering.
"^DD",999.1,999.13,10,"DT")
3150211
"^DD",999.1,999.13,20,0)
COHORT^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.13,20,3)
M code to set global selector into X.
"^DD",999.1,999.13,20,9)
@
"^DD",999.1,999.13,20,"DT")
3150211
"^DD",999.201,999.201,0)
FIELD^^4^5
"^DD",999.201,999.201,0,"IX","B",999.201,.01)

"^DD",999.201,999.201,0,"NM","CAREWEB NOTIFICATION CONTROL")

"^DD",999.201,999.201,0,"PT",999.994,.01)

"^DD",999.201,999.201,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<2)!'(X'?1P.E) X
"^DD",999.201,999.201,.01,1,0)
^.1
"^DD",999.201,999.201,.01,1,1,0)
999.201^B
"^DD",999.201,999.201,.01,1,1,1)
S ^RGCWF(999.201,"B",$E(X,1,30),DA)=""
"^DD",999.201,999.201,.01,1,1,2)
K ^RGCWF(999.201,"B",$E(X,1,30),DA)
"^DD",999.201,999.201,.01,3)
Answer must be 2-30 characters in length.
"^DD",999.201,999.201,.01,"DT")
3030805
"^DD",999.201,999.201,1,0)
IDENT^RK^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,1,3)
Code to check notification identity.  Set $T to true for positive match.
"^DD",999.201,999.201,1,9)
@
"^DD",999.201,999.201,1,21,0)
^^1^1^3030804.150811
"^DD",999.201,999.201,1,21,1,0)
Should check the notification identifier in AID and set $T to true if a match.
"^DD",999.201,999.201,1,"DT")
3030804
"^DD",999.201,999.201,2,0)
PARSE^RK^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,2,3)
Code to parse data elements from notification.
"^DD",999.201,999.201,2,9)
@
"^DD",999.201,999.201,2,21,0)
^^8^8^3030804.170957
"^DD",999.201,999.201,2,21,1,0)
Code to parse standard data elements from notification.  Elements should be
"^DD",999.201,999.201,2,21,2,0)
returned in ALR array as follows:
"^DD",999.201,999.201,2,21,3,0)

"^DD",999.201,999.201,2,21,4,0)
ALR("DFN")=Patient IEN (if patient-orientation)
"^DD",999.201,999.201,2,21,5,0)
ALR("INF")=Info only flag
"^DD",999.201,999.201,2,21,6,0)
ALR("TYP")=Notification type code
"^DD",999.201,999.201,2,21,7,0)
ALR("PRI")=Priority code
"^DD",999.201,999.201,2,21,8,0)
ALR("XTR")=Additional data
"^DD",999.201,999.201,2,"DT")
3030804
"^DD",999.201,999.201,3,0)
PROCESS^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,3,3)
Post processing logic for alert.
"^DD",999.201,999.201,3,9)
@
"^DD",999.201,999.201,3,"DT")
3030805
"^DD",999.201,999.201,4,0)
UPDATE^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,4,3)
Optional logic to update alerts for current user.
"^DD",999.201,999.201,4,9)
@
"^DD",999.201,999.201,4,21,0)
^^2^2^3080128.135828
"^DD",999.201,999.201,4,21,1,0)
This logic provides the opportunity to update alerts (add or delete) 
"^DD",999.201,999.201,4,21,2,0)
for the current user prior to retrieving them.
"^DD",999.201,999.201,4,"DT")
3080128
"^DD",19941.21,19941.21,0)
FIELD^^7^14
"^DD",19941.21,19941.21,0,"DT")
3091007
"^DD",19941.21,19941.21,0,"IX","B",19941.21,.01)

"^DD",19941.21,19941.21,0,"NM","CIA EVENT TYPE")

"^DD",19941.21,19941.21,0,"PT",999.995,.01)

"^DD",19941.21,19941.21,0,"PT",19930.995,.01)

"^DD",19941.21,19941.21,0,"PT",19941.23,1)

"^DD",19941.21,19941.21,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19941.21,19941.21,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",19941.21,19941.21,.01,1,0)
^.1
"^DD",19941.21,19941.21,.01,1,1,0)
19941.21^B
"^DD",19941.21,19941.21,.01,1,1,1)
S ^CIANB(19941.21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.21,.01,1,1,2)
K ^CIANB(19941.21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.21,.01,3)
Answer must be 3-100 characters in length.
"^DD",19941.21,19941.21,.01,"DT")
3030611
"^DD",19941.21,19941.21,1,0)
MONITOR^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,1,3)
M code to invoke monitor for this event type
"^DD",19941.21,19941.21,1,9)
@
"^DD",19941.21,19941.21,1,"DT")
3021021
"^DD",19941.21,19941.21,2,0)
DISABLE^S^0:NO;1:YES;^0;2^Q
"^DD",19941.21,19941.21,2,3)
Enter YES to disable this event type.
"^DD",19941.21,19941.21,2,21,0)
^.001^3^3^3030810^
"^DD",19941.21,19941.21,2,21,1,0)
If set to YES, this event type is disabled.  Once disabled, any attempt to 
"^DD",19941.21,19941.21,2,21,2,0)
enqueue the event will be ignored.  Disabling an event does not affect events
"^DD",19941.21,19941.21,2,21,3,0)
already in the queue. 
"^DD",19941.21,19941.21,2,"DT")
3030810
"^DD",19941.21,19941.21,3,0)
INTERVAL^NJ11,0X^^0;3^K:X<0!(X\1'=X) X
"^DD",19941.21,19941.21,3,3)
Enter the nominal polling interval in seconds.
"^DD",19941.21,19941.21,3,21,0)
^^10^10^3021021.152235
"^DD",19941.21,19941.21,3,21,1,0)
This is the nominal polling interval for the event in seconds.
"^DD",19941.21,19941.21,3,21,2,0)
The actual polling interval is dependent on the event polling
"^DD",19941.21,19941.21,3,21,3,0)
interval set for the client application as a site parameter.
"^DD",19941.21,19941.21,3,21,4,0)
The nominal polling interval guarantees that polling for this
"^DD",19941.21,19941.21,3,21,5,0)
event will not occur more frequently than this setting.
"^DD",19941.21,19941.21,3,21,6,0)
 
"^DD",19941.21,19941.21,3,21,7,0)
For events that are infrequent and/or do not require real time
"^DD",19941.21,19941.21,3,21,8,0)
notification, higher values may be selected for this field to
"^DD",19941.21,19941.21,3,21,9,0)
mitigate impact on system load. 
"^DD",19941.21,19941.21,3,21,10,0)

"^DD",19941.21,19941.21,3,"DT")
3021021
"^DD",19941.21,19941.21,4,0)
LOG EVENT^S^0:NO;1:YES;^0;4^Q
"^DD",19941.21,19941.21,4,3)
Enter YES to enable logging of this event.
"^DD",19941.21,19941.21,4,"DT")
3030611
"^DD",19941.21,19941.21,5,0)
LOG RETENTION^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.21,19941.21,5,3)
Number of days to retain log entries.
"^DD",19941.21,19941.21,5,"DT")
3030611
"^DD",19941.21,19941.21,6,0)
POLLING METHOD^S^0:PER SESSION;1:PER INTERVAL;^0;6^Q
"^DD",19941.21,19941.21,6,3)
Determines how a monitored event is polled.
"^DD",19941.21,19941.21,6,21,0)
^^11^11^3030810.175145
"^DD",19941.21,19941.21,6,21,1,0)
For monitored events, this setting determines how the monitor is invoked
"^DD",19941.21,19941.21,6,21,2,0)
when the polling interval has been reached.  PER SESSION causes the event
"^DD",19941.21,19941.21,6,21,3,0)
monitor to be invoked for each active session, setting the user and
"^DD",19941.21,19941.21,6,21,4,0)
session context prior to each call.  PER INTERVAL cause the event monitor
"^DD",19941.21,19941.21,6,21,5,0)
to be invoked only once per interval.  No user or session context information
"^DD",19941.21,19941.21,6,21,6,0)
is available to the monitor in this case.
"^DD",19941.21,19941.21,6,21,7,0)

"^DD",19941.21,19941.21,6,21,8,0)
PER SESSION is appropriate for events that depend upon a specific user or
"^DD",19941.21,19941.21,6,21,9,0)
session (e.g., notifications).  PER INTERVAL is appropriate for events 
"^DD",19941.21,19941.21,6,21,10,0)
that are independent of a user or session (e.g., status events to display
"^DD",19941.21,19941.21,6,21,11,0)
the host date/time).
"^DD",19941.21,19941.21,6,"DT")
3030810
"^DD",19941.21,19941.21,7,0)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",19941.21,19941.21,7,12)
Restricts to Extended Action Protocols starting with CIAV
"^DD",19941.21,19941.21,7,12.1)
S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X"""
"^DD",19941.21,19941.21,7,"DT")
3091007
"^DD",19941.21,19941.21,10,0)
DISPLAY LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,10,3)
Logic to display stub info in log viewer.
"^DD",19941.21,19941.21,10,9)
@
"^DD",19941.21,19941.21,10,"DT")
3030611
"^DD",19941.21,19941.21,20,0)
PUBLICATION KEY^19941.212P^^20;0
"^DD",19941.21,19941.21,21,0)
SUBSCRIPTION KEY^19941.2121P^^21;0
"^DD",19941.21,19941.21,99,0)
DESCRIPTION^19941.2199^^99;0
"^DD",19941.21,19941.21,100,0)
ERROR DATE/TIME^D^^100;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.21,19941.21,100,3)
Date and time of last error
"^DD",19941.21,19941.21,100,"DT")
3061129
"^DD",19941.21,19941.21,101,0)
ERROR TEXT^F^^100;2^K:$L(X)>240!($L(X)<1) X
"^DD",19941.21,19941.21,101,3)
Answer must be 1-240 characters in length.
"^DD",19941.21,19941.21,101,"DT")
3061129
"^DD",19941.21,19941.212,0)
PUBLICATION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.212,0,"DT")
3021021
"^DD",19941.21,19941.212,0,"IX","B",19941.212,.01)

"^DD",19941.21,19941.212,0,"NM","PUBLICATION KEY")

"^DD",19941.21,19941.212,0,"UP")
19941.21
"^DD",19941.21,19941.212,.01,0)
PUBLICATION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.212,.01,1,0)
^.1
"^DD",19941.21,19941.212,.01,1,1,0)
19941.212^B
"^DD",19941.21,19941.212,.01,1,1,1)
S ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.212,.01,1,1,2)
K ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.212,.01,3)
Security keys required to fire this event.
"^DD",19941.21,19941.212,.01,21,0)
^^2^2^3021021.152715
"^DD",19941.21,19941.212,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.212,.01,21,2,0)
the listed keys in order to fire an event of this type.
"^DD",19941.21,19941.212,.01,"DT")
3040310
"^DD",19941.21,19941.2121,0)
SUBSCRIPTION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.2121,0,"DT")
3021021
"^DD",19941.21,19941.2121,0,"IX","B",19941.2121,.01)

"^DD",19941.21,19941.2121,0,"NM","SUBSCRIPTION KEY")

"^DD",19941.21,19941.2121,0,"UP")
19941.21
"^DD",19941.21,19941.2121,.01,0)
SUBSCRIPTION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.2121,.01,1,0)
^.1
"^DD",19941.21,19941.2121,.01,1,1,0)
19941.2121^B
"^DD",19941.21,19941.2121,.01,1,1,1)
S ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.2121,.01,1,1,2)
K ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.2121,.01,3)
Security keys required to receive this event type.
"^DD",19941.21,19941.2121,.01,21,0)
^^2^2^3021021.153002
"^DD",19941.21,19941.2121,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.2121,.01,21,2,0)
the listed keys in order subscribe to an event of this type. 
"^DD",19941.21,19941.2121,.01,"DT")
3040310
"^DD",19941.21,19941.2199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",19941.21,19941.2199,0,"DT")
3021021
"^DD",19941.21,19941.2199,0,"NM","DESCRIPTION")

"^DD",19941.21,19941.2199,0,"UP")
19941.21
"^DD",19941.21,19941.2199,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",19941.21,19941.2199,.01,3)
Enter a detailed description of this event type.
"^DD",19941.21,19941.2199,.01,"DT")
3021021
"^DIC",999.1,999.1,0)
CAREWEB SERIALIZATION^999.1
"^DIC",999.1,999.1,0,"GL")
^RGCWF(999.1,
"^DIC",999.1,999.1,"%D",0)
^^1^1^3150211.113842
"^DIC",999.1,999.1,"%D",1,0)
Supports serialization of domain objects.
"^DIC",999.1,"B","CAREWEB SERIALIZATION",999.1)

"^DIC",999.201,999.201,0)
CAREWEB NOTIFICATION CONTROL^999.201
"^DIC",999.201,999.201,0,"GL")
^RGCWF(999.201,
"^DIC",999.201,"B","CAREWEB NOTIFICATION CONTROL",999.201)

"^DIC",19941.21,19941.21,0)
CIA EVENT TYPE^19941.21
"^DIC",19941.21,19941.21,0,"GL")
^CIANB(19941.21,
"^DIC",19941.21,"B","CIA EVENT TYPE",19941.21)

**INSTALL NAME**
CAREWEB VITALS 1.0
"BLD",8499,0)
CAREWEB VITALS 1.0^^0^3150226^n
"BLD",8499,4,0)
^9.64PA^999.21^4
"BLD",8499,4,999.1,0)
999.1
"BLD",8499,4,999.1,222)
n^y^f^^n^^y^o^n
"BLD",8499,4,999.1,224)
I $$SCRN^RGCWKDTP(Y,1)
"BLD",8499,4,999.201,0)
999.201
"BLD",8499,4,999.201,222)
n^y^f^^y^^y^o^n
"BLD",8499,4,999.201,224)
I $$SCRN^RGCWKDTP(Y,4)
"BLD",8499,4,999.21,0)
999.21
"BLD",8499,4,999.21,222)
y^y^f^^n^^y^o^n
"BLD",8499,4,19941.21,0)
19941.21
"BLD",8499,4,19941.21,222)
n^y^f^^y^^y^o^n
"BLD",8499,4,19941.21,224)
I $$SCRN^RGCWKDTP(Y,5)
"BLD",8499,4,"B",999.1,999.1)

"BLD",8499,4,"B",999.201,999.201)

"BLD",8499,4,"B",999.21,999.21)

"BLD",8499,4,"B",19941.21,19941.21)

"BLD",8499,6.3)
107
"BLD",8499,"INI")
PRE^RGCWKDIN
"BLD",8499,"INIT")
POST^RGCWKDIN
"BLD",8499,"KRN",0)
^9.67PA^8994^20
"BLD",8499,"KRN",.4,0)
.4
"BLD",8499,"KRN",.401,0)
.401
"BLD",8499,"KRN",.402,0)
.402
"BLD",8499,"KRN",.403,0)
.403
"BLD",8499,"KRN",.5,0)
.5
"BLD",8499,"KRN",.84,0)
.84
"BLD",8499,"KRN",3.6,0)
3.6
"BLD",8499,"KRN",3.8,0)
3.8
"BLD",8499,"KRN",9.2,0)
9.2
"BLD",8499,"KRN",9.8,0)
9.8
"BLD",8499,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",8499,"KRN",9.8,"NM",1,0)
RGCWVM^^0^B174083110
"BLD",8499,"KRN",9.8,"NM",2,0)
RGCWVM2^^0^B60323852
"BLD",8499,"KRN",9.8,"NM",3,0)
RGCWVMC^^0^B15698048
"BLD",8499,"KRN",9.8,"NM",4,0)
RGCWVMC2^^0^B11058740
"BLD",8499,"KRN",9.8,"NM",5,0)
RGCWVMER^^0^B23054989
"BLD",8499,"KRN",9.8,"NM",6,0)
RGCWVMIN^^0^B678147
"BLD",8499,"KRN",9.8,"NM",7,0)
RGCWVMRP^^0^B10141484
"BLD",8499,"KRN",9.8,"NM","B","RGCWVM",1)

"BLD",8499,"KRN",9.8,"NM","B","RGCWVM2",2)

"BLD",8499,"KRN",9.8,"NM","B","RGCWVMC",3)

"BLD",8499,"KRN",9.8,"NM","B","RGCWVMC2",4)

"BLD",8499,"KRN",9.8,"NM","B","RGCWVMER",5)

"BLD",8499,"KRN",9.8,"NM","B","RGCWVMIN",6)

"BLD",8499,"KRN",9.8,"NM","B","RGCWVMRP",7)

"BLD",8499,"KRN",19,0)
19
"BLD",8499,"KRN",19.1,0)
19.1
"BLD",8499,"KRN",101,0)
101
"BLD",8499,"KRN",409.61,0)
409.61
"BLD",8499,"KRN",771,0)
771
"BLD",8499,"KRN",779.2,0)
779.2
"BLD",8499,"KRN",870,0)
870
"BLD",8499,"KRN",8989.51,0)
8989.51
"BLD",8499,"KRN",8989.51,"NM",0)
^9.68A^7^7
"BLD",8499,"KRN",8989.51,"NM",1,0)
RGCWVM DATA ENTRY^^0
"BLD",8499,"KRN",8989.51,"NM",2,0)
RGCWVM DEFAULT UNITS^^0
"BLD",8499,"KRN",8989.51,"NM",3,0)
RGCWVM ERROR RPT^^0
"BLD",8499,"KRN",8989.51,"NM",4,0)
RGCWVM NEW DATE DEFAULT^^0
"BLD",8499,"KRN",8989.51,"NM",5,0)
RGCWVM TEMPLATE^^0
"BLD",8499,"KRN",8989.51,"NM",6,0)
RGCWVM USE VMSR^^0
"BLD",8499,"KRN",8989.51,"NM",7,0)
RGCWVM VITAL LIST^^0
"BLD",8499,"KRN",8989.51,"NM","B","RGCWVM DATA ENTRY",1)

"BLD",8499,"KRN",8989.51,"NM","B","RGCWVM DEFAULT UNITS",2)

"BLD",8499,"KRN",8989.51,"NM","B","RGCWVM ERROR RPT",3)

"BLD",8499,"KRN",8989.51,"NM","B","RGCWVM NEW DATE DEFAULT",4)

"BLD",8499,"KRN",8989.51,"NM","B","RGCWVM TEMPLATE",5)

"BLD",8499,"KRN",8989.51,"NM","B","RGCWVM USE VMSR",6)

"BLD",8499,"KRN",8989.51,"NM","B","RGCWVM VITAL LIST",7)

"BLD",8499,"KRN",8989.52,0)
8989.52
"BLD",8499,"KRN",8994,0)
8994
"BLD",8499,"KRN",8994,"NM",0)
^9.68A^14^14
"BLD",8499,"KRN",8994,"NM",1,0)
RGCWVM DETAIL^^0
"BLD",8499,"KRN",8994,"NM",2,0)
RGCWVM GRID^^0
"BLD",8499,"KRN",8994,"NM",3,0)
RGCWVM HELP^^0
"BLD",8499,"KRN",8994,"NM",4,0)
RGCWVM LASTVIT^^0
"BLD",8499,"KRN",8994,"NM",5,0)
RGCWVM LIST^^0
"BLD",8499,"KRN",8994,"NM",6,0)
RGCWVM PCTILE^^0
"BLD",8499,"KRN",8994,"NM",7,0)
RGCWVM SAVE^^0
"BLD",8499,"KRN",8994,"NM",8,0)
RGCWVM TEMPLATE^^0
"BLD",8499,"KRN",8994,"NM",9,0)
RGCWVM VALIDATE^^0
"BLD",8499,"KRN",8994,"NM",10,0)
RGCWVM2 EIE^^0
"BLD",8499,"KRN",8994,"NM",11,0)
RGCWVM2 GETCATP^^0
"BLD",8499,"KRN",8994,"NM",12,0)
RGCWVM2 GETCATS^^0
"BLD",8499,"KRN",8994,"NM",13,0)
RGCWVM2 QUAL^^0
"BLD",8499,"KRN",8994,"NM",14,0)
RGCWVM2 VUNITS^^0
"BLD",8499,"KRN",8994,"NM","B","RGCWVM DETAIL",1)

"BLD",8499,"KRN",8994,"NM","B","RGCWVM GRID",2)

"BLD",8499,"KRN",8994,"NM","B","RGCWVM HELP",3)

"BLD",8499,"KRN",8994,"NM","B","RGCWVM LASTVIT",4)

"BLD",8499,"KRN",8994,"NM","B","RGCWVM LIST",5)

"BLD",8499,"KRN",8994,"NM","B","RGCWVM PCTILE",6)

"BLD",8499,"KRN",8994,"NM","B","RGCWVM SAVE",7)

"BLD",8499,"KRN",8994,"NM","B","RGCWVM TEMPLATE",8)

"BLD",8499,"KRN",8994,"NM","B","RGCWVM VALIDATE",9)

"BLD",8499,"KRN",8994,"NM","B","RGCWVM2 EIE",10)

"BLD",8499,"KRN",8994,"NM","B","RGCWVM2 GETCATP",11)

"BLD",8499,"KRN",8994,"NM","B","RGCWVM2 GETCATS",12)

"BLD",8499,"KRN",8994,"NM","B","RGCWVM2 QUAL",13)

"BLD",8499,"KRN",8994,"NM","B","RGCWVM2 VUNITS",14)

"BLD",8499,"KRN","B",.4,.4)

"BLD",8499,"KRN","B",.401,.401)

"BLD",8499,"KRN","B",.402,.402)

"BLD",8499,"KRN","B",.403,.403)

"BLD",8499,"KRN","B",.5,.5)

"BLD",8499,"KRN","B",.84,.84)

"BLD",8499,"KRN","B",3.6,3.6)

"BLD",8499,"KRN","B",3.8,3.8)

"BLD",8499,"KRN","B",9.2,9.2)

"BLD",8499,"KRN","B",9.8,9.8)

"BLD",8499,"KRN","B",19,19)

"BLD",8499,"KRN","B",19.1,19.1)

"BLD",8499,"KRN","B",101,101)

"BLD",8499,"KRN","B",409.61,409.61)

"BLD",8499,"KRN","B",771,771)

"BLD",8499,"KRN","B",779.2,779.2)

"BLD",8499,"KRN","B",870,870)

"BLD",8499,"KRN","B",8989.51,8989.51)

"BLD",8499,"KRN","B",8989.52,8989.52)

"BLD",8499,"KRN","B",8994,8994)

"BLD",8499,"PRE")
RGCWKDIN
"BLD",8499,"PRET")
PRETRANS^RGCWKDTP
"BLD",8499,"QUES",0)
^9.62^^
"BLD",8499,"REQB",0)
^9.611^^
"DATA",999.21,1,0)
HEIGHT^0^in^cm^^^HT
"DATA",999.21,1,1)
S X=X*2.54
"DATA",999.21,1,2)
S X=X/2.54
"DATA",999.21,1,3,0)
^999.2109^484^484^3050304.141427
"DATA",999.21,1,3,1,0)
M;0;1.267004226;49.98888408;0.053112191
"DATA",999.21,1,3,2,0)
M;0.5;0.511237696;52.6959753;0.048692684
"DATA",999.21,1,3,3,0)
M;1.5;-0.45224446;56.62842855;0.04411683
"DATA",999.21,1,3,4,0)
M;2.5;-0.990594599;59.60895343;0.041795583
"DATA",999.21,1,3,5,0)
M;3.5;-1.285837689;62.07700027;0.040454126
"DATA",999.21,1,3,6,0)
M;4.5;-1.43031238;64.2168641;0.039633879
"DATA",999.21,1,3,7,0)
M;5.5;-1.47657547;66.1253149;0.039123813
"DATA",999.21,1,3,8,0)
M;6.5;-1.456837849;67.8601799;0.038811994
"DATA",999.21,1,3,9,0)
M;7.5;-1.391898768;69.45908458;0.038633209
"DATA",999.21,1,3,10,0)
M;8.5;-1.29571459;70.94803912;0.038546833
"DATA",999.21,1,3,11,0)
M;9.5;-1.177919048;72.34586111;0.038526262
"DATA",999.21,1,3,12,0)
M;10.5;-1.045326049;73.6666541;0.038553387
"DATA",999.21,1,3,13,0)
M;11.5;-0.902800887;74.92129717;0.038615501
"DATA",999.21,1,3,14,0)
M;12.5;-0.753908107;76.11837536;0.038703461
"DATA",999.21,1,3,15,0)
M;13.5;-0.601263523;77.26479911;0.038810557
"DATA",999.21,1,3,16,0)
M;14.5;-0.446805039;78.36622309;0.038931784
"DATA",999.21,1,3,17,0)
M;15.5;-0.291974772;79.4273405;0.039063356
"DATA",999.21,1,3,18,0)
M;16.5;-0.13784767;80.45209492;0.039202382
"DATA",999.21,1,3,19,0)
M;17.5;0.014776155;81.44383603;0.039346629
"DATA",999.21,1,3,20,0)
M;18.5;0.165304169;82.40543643;0.039494365
"DATA",999.21,1,3,21,0)
M;19.5;0.313301809;83.33938063;0.039644238
"DATA",999.21,1,3,22,0)
M;20.5;0.458455471;84.24783394;0.039795189
"DATA",999.21,1,3,23,0)
M;21.5;0.600544631;85.13269658;0.039946388
"DATA",999.21,1,3,24,0)
M;22.5;0.739438953;85.9956488;0.040097181
"DATA",999.21,1,3,25,0)
M;23.5;0.875000447;86.8381751;0.04024706
"DATA",999.21,1,3,26,0)
M;24.5;1.00720807;87.66160934;0.040395626
"DATA",999.21,1,3,27,0)
M;25.5;0.837251351;88.45247282;0.040577525
"DATA",999.21,1,3,28,0)
M;26.5;0.681492975;89.22326434;0.040723122
"DATA",999.21,1,3,29,0)
M;27.5;0.538779654;89.97549228;0.040833194
"DATA",999.21,1,3,30,0)
M;28.5;0.407697153;90.71040853;0.040909059
"DATA",999.21,1,3,31,0)
M;29.5;0.286762453;91.42907762;0.040952433
"DATA",999.21,1,3,32,0)
M;30.5;0.174489485;92.13242379;0.04096533
"DATA",999.21,1,3,33,0)
M;31.5;0.069444521;92.82127167;0.040949976
"DATA",999.21,1,3,34,0)
M;32.5;-0.029720564;93.49637946;0.040908737
"DATA",999.21,1,3,35,0)
M;33.5;-0.124251789;94.15846546;0.040844062
"DATA",999.21,1,3,36,0)
M;34.5;-0.215288396;94.80822923;0.040758431
"DATA",999.21,1,3,37,0)
M;35.5;-0.30385434;95.44636981;0.040654312
"DATA",999.21,1,3,38,0)
M;36.5;-0.390918369;96.07359106;0.04053412
"DATA",999.21,1,3,39,0)
M;37.5;-0.254801167;95.91474929;0.040572876
"DATA",999.21,1,3,40,0)
M;38.5;-0.125654535;96.54734328;0.04061691
"DATA",999.21,1,3,41,0)
M;39.5;-0.00316735;97.17191309;0.040666414
"DATA",999.21,1,3,42,0)
M;40.5;0.11291221;97.78897727;0.040721467
"DATA",999.21,1,3,43,0)
M;41.5;0.222754969;98.3990283;0.040782045
"DATA",999.21,1,3,44,0)
M;42.5;0.326530126;99.00254338;0.040848042
"DATA",999.21,1,3,45,0)
M;43.5;0.42436156;99.599977;0.040919281
"DATA",999.21,1,3,46,0)
M;44.5;0.516353108;100.191764;0.040995524
"DATA",999.21,1,3,47,0)
M;45.5;0.602595306;100.7783198;0.041076485
"DATA",999.21,1,3,48,0)
M;46.5;0.683170764;101.3600411;0.041161838
"DATA",999.21,1,3,49,0)
M;47.5;0.758158406;101.9373058;0.041251224
"DATA",999.21,1,3,50,0)
M;48.5;0.827636736;102.5104735;0.041344257
"DATA",999.21,1,3,51,0)
M;49.5;0.891686306;103.0798852;0.041440534
"DATA",999.21,1,3,52,0)
M;50.5;0.95039153;103.645864;0.041539635
"DATA",999.21,1,3,53,0)
M;51.5;1.003830006;104.208713;0.041641136
"DATA",999.21,1,3,54,0)
M;52.5;1.05213569;104.7687256;0.041744602
"DATA",999.21,1,3,55,0)
M;53.5;1.0953669;105.3261638;0.041849607
"DATA",999.21,1,3,56,0)
M;54.5;1.133652119;105.8812823;0.041955723
"DATA",999.21,1,3,57,0)
M;55.5;1.167104213;106.4343146;0.042062532
"DATA",999.21,1,3,58,0)
M;56.5;1.195845353;106.9854769;0.042169628
"DATA",999.21,1,3,59,0)
M;57.5;1.220004233;107.534968;0.042276619
"DATA",999.21,1,3,60,0)
M;58.5;1.239715856;108.0829695;0.042383129
"DATA",999.21,1,3,61,0)
M;59.5;1.255121285;108.6296457;0.042488804
"DATA",999.21,1,3,62,0)
M;60.5;1.266367398;109.1751441;0.042593311
"DATA",999.21,1,3,63,0)
M;61.5;1.273606657;109.7195954;0.042696342
"DATA",999.21,1,3,64,0)
M;62.5;1.276996893;110.2631136;0.042797615
"DATA",999.21,1,3,65,0)
M;63.5;1.276701119;110.8057967;0.042896877
"DATA",999.21,1,3,66,0)
M;64.5;1.272887366;111.3477265;0.042993904
"DATA",999.21,1,3,67,0)
M;65.5;1.265728536;111.8889694;0.043088503
"DATA",999.21,1,3,68,0)
M;66.5;1.255402281;112.4295761;0.043180513
"DATA",999.21,1,3,69,0)
M;67.5;1.242090871;112.9695827;0.043269806
"DATA",999.21,1,3,70,0)
M;68.5;1.225981067;113.5090108;0.043356287
"DATA",999.21,1,3,71,0)
M;69.5;1.207263978;114.0478678;0.043439893
"DATA",999.21,1,3,72,0)
M;70.5;1.186140222;114.5861486;0.043520597
"DATA",999.21,1,3,73,0)
M;71.5;1.162796198;115.1238315;0.043598407
"DATA",999.21,1,3,74,0)
M;72.5;1.137442868;115.6608862;0.043673359
"DATA",999.21,1,3,75,0)
M;73.5;1.110286487;116.1972691;0.043745523
"DATA",999.21,1,3,76,0)
M;74.5;1.081536236;116.732925;0.043815003
"DATA",999.21,1,3,77,0)
M;75.5;1.05140374;117.2677879;0.043881929
"DATA",999.21,1,3,78,0)
M;76.5;1.020102497;117.8017819;0.043946461
"DATA",999.21,1,3,79,0)
M;77.5;0.987847213;118.3348215;0.044008785
"DATA",999.21,1,3,80,0)
M;78.5;0.954853043;118.8668123;0.044069112
"DATA",999.21,1,3,81,0)
M;79.5;0.921334742;119.397652;0.044127675
"DATA",999.21,1,3,82,0)
M;80.5;0.887505723;119.9272309;0.044184725
"DATA",999.21,1,3,83,0)
M;81.5;0.85357703;120.455433;0.044240532
"DATA",999.21,1,3,84,0)
M;82.5;0.819756239;120.9821362;0.044295379
"DATA",999.21,1,3,85,0)
M;83.5;0.786246296;121.5072136;0.044349559
"DATA",999.21,1,3,86,0)
M;84.5;0.753244292;122.0305342;0.044403374
"DATA",999.21,1,3,87,0)
M;85.5;0.720940222;122.5519634;0.04445713
"DATA",999.21,1,3,88,0)
M;86.5;0.689515708;123.0713645;0.044511135
"DATA",999.21,1,3,89,0)
M;87.5;0.659142731;123.588599;0.044565693
"DATA",999.21,1,3,90,0)
M;88.5;0.629997853;124.1035312;0.044621104
"DATA",999.21,1,3,91,0)
M;89.5;0.602203984;124.6160161;0.044677662
"DATA",999.21,1,3,92,0)
M;90.5;0.575908038;125.1259182;0.044735646
"DATA",999.21,1,3,93,0)
M;91.5;0.55123134;125.6331012;0.044795322
"DATA",999.21,1,3,94,0)
M;92.5;0.528279901;126.1374319;0.044856941
"DATA",999.21,1,3,95,0)
M;93.5;0.507143576;126.6387804;0.04492073
"DATA",999.21,1,3,96,0)
M;94.5;0.487895344;127.1370217;0.044986899
"DATA",999.21,1,3,97,0)
M;95.5;0.470590753;127.6320362;0.045055632
"DATA",999.21,1,3,98,0)
M;96.5;0.455267507;128.1237104;0.045127088
"DATA",999.21,1,3,99,0)
M;97.5;0.441945241;128.6119383;0.045201399
"DATA",999.21,1,3,100,0)
M;98.5;0.430625458;129.096622;0.045278671
"DATA",999.21,1,3,101,0)
M;99.5;0.421291648;129.5776723;0.045358979
"DATA",999.21,1,3,102,0)
M;100.5;0.413909588;130.0550101;0.045442372
"DATA",999.21,1,3,103,0)
M;101.5;0.408427813;130.5285669;0.045528869
"DATA",999.21,1,3,104,0)
M;102.5;0.404778262;130.9982857;0.045618459
"DATA",999.21,1,3,105,0)
M;103.5;0.402877077;131.4641218;0.045711105
"DATA",999.21,1,3,106,0)
M;104.5;0.402625561;131.9260439;0.045806742
"DATA",999.21,1,3,107,0)
M;105.5;0.40391127;132.3840348;0.045905281
"DATA",999.21,1,3,108,0)
M;106.5;0.406609232;132.838092;0.046006604
"DATA",999.21,1,3,109,0)
M;107.5;0.410583274;133.2882291;0.046110573
"DATA",999.21,1,3,110,0)
M;108.5;0.415687443;133.7344759;0.046217028
"DATA",999.21,1,3,111,0)
M;109.5;0.421767514;134.1768801;0.04632579
"DATA",999.21,1,3,112,0)
M;110.5;0.428662551;134.6155076;0.046436662
"DATA",999.21,1,3,113,0)
M;111.5;0.436206531;135.0504433;0.04654943
"DATA",999.21,1,3,114,0)
M;112.5;0.44423;135.4817925;0.046663871
"DATA",999.21,1,3,115,0)
M;113.5;0.45256176;135.9096813;0.046779748
"DATA",999.21,1,3,116,0)
M;114.5;0.461030578;136.3342577;0.046896817
"DATA",999.21,1,3,117,0)
M;115.5;0.469466904;136.7556923;0.047014827
"DATA",999.21,1,3,118,0)
M;116.5;0.477704608;137.1741794;0.047133525
"DATA",999.21,1,3,119,0)
M;117.5;0.48558272;137.5899378;0.047252654
"DATA",999.21,1,3,120,0)
M;118.5;0.492947182;138.0032114;0.047371961
"DATA",999.21,1,3,121,0)
M;119.5;0.499652617;138.4142703;0.047491194
"DATA",999.21,1,3,122,0)
M;120.5;0.505564115;138.8234114;0.047610108
"DATA",999.21,1,3,123,0)
M;121.5;0.510559047;139.2309592;0.047728463
"DATA",999.21,1,3,124,0)
M;122.5;0.514528903;139.6372663;0.04784603
"DATA",999.21,1,3,125,0)
M;123.5;0.517381177;140.042714;0.047962592
"DATA",999.21,1,3,126,0)
M;124.5;0.519041285;140.4477127;0.048077942
"DATA",999.21,1,3,127,0)
M;125.5;0.519454524;140.8527022;0.048191889
"DATA",999.21,1,3,128,0)
M;126.5;0.518588072;141.2581515;0.048304259
"DATA",999.21,1,3,129,0)
M;127.5;0.516433004;141.6645592;0.048414893
"DATA",999.21,1,3,130,0)
M;128.5;0.513006312;142.072452;0.048523648
"DATA",999.21,1,3,131,0)
M;129.5;0.508352901;142.4823852;0.048630402
"DATA",999.21,1,3,132,0)
M;130.5;0.502547502;142.8949403;0.04873505
"DATA",999.21,1,3,133,0)
M;131.5;0.495696454;143.3107241;0.048837504
"DATA",999.21,1,3,134,0)
M;132.5;0.487939275;143.7303663;0.048937694
"DATA",999.21,1,3,135,0)
M;133.5;0.479449924;144.1545167;0.049035564
"DATA",999.21,1,3,136,0)
M;134.5;0.470437652;144.5838414;0.049131073
"DATA",999.21,1,3,137,0)
M;135.5;0.461147305;145.0190192;0.049224189
"DATA",999.21,1,3,138,0)
M;136.5;0.451858946;145.4607359;0.049314887
"DATA",999.21,1,3,139,0)
M;137.5;0.442886661;145.9096784;0.049403145
"DATA",999.21,1,3,140,0)
M;138.5;0.434576385;146.3665278;0.049488934
"DATA",999.21,1,3,141,0)
M;139.5;0.427302633;146.8319513;0.049572216
"DATA",999.21,1,3,142,0)
M;140.5;0.421464027;147.3065929;0.049652935
"DATA",999.21,1,3,143,0)
M;141.5;0.417477538;147.7910635;0.049731004
"DATA",999.21,1,3,144,0)
M;142.5;0.415771438;148.2859294;0.0498063
"DATA",999.21,1,3,145,0)
M;143.5;0.416777012;148.7917006;0.04987865
"DATA",999.21,1,3,146,0)
M;144.5;0.420919142;149.3088178;0.049947823
"DATA",999.21,1,3,147,0)
M;145.5;0.428606007;149.8376391;0.050013518
"DATA",999.21,1,3,148,0)
M;146.5;0.440218167;150.3784267;0.050075353
"DATA",999.21,1,3,149,0)
M;147.5;0.456097443;150.9313331;0.050132858
"DATA",999.21,1,3,150,0)
M;148.5;0.476536014;151.4963887;0.050185471
"DATA",999.21,1,3,151,0)
M;149.5;0.501766234;152.0734897;0.050232532
"DATA",999.21,1,3,152,0)
M;150.5;0.531951655;152.6623878;0.050273285
"DATA",999.21,1,3,153,0)
M;151.5;0.567179725;153.2626819;0.050306885
"DATA",999.21,1,3,154,0)
M;152.5;0.607456565;153.8738124;0.050332406
"DATA",999.21,1,3,155,0)
M;153.5;0.652704121;154.495058;0.05034886
"DATA",999.21,1,3,156,0)
M;154.5;0.702759868;155.1255365;0.050355216
"DATA",999.21,1,3,157,0)
M;155.5;0.757379106;155.7642086;0.050350423
"DATA",999.21,1,3,158,0)
M;156.5;0.816239713;156.4098858;0.050333444
"DATA",999.21,1,3,159,0)
M;157.5;0.878947416;157.0612415;0.050303283
"DATA",999.21,1,3,160,0)
M;158.5;0.945053486;157.7168289;0.050259018
"DATA",999.21,1,3,161,0)
M;159.5;1.014046108;158.3750929;0.050199837
"DATA",999.21,1,3,162,0)
M;160.5;1.085383319;159.034399;0.050125062
"DATA",999.21,1,3,163,0)
M;161.5;1.158487278;159.6930501;0.05003418
"DATA",999.21,1,3,164,0)
M;162.5;1.232768816;160.3493168;0.049926861
"DATA",999.21,1,3,165,0)
M;163.5;1.307628899;161.0014586;0.049802977
"DATA",999.21,1,3,166,0)
M;164.5;1.382473225;161.6477515;0.04966261
"DATA",999.21,1,3,167,0)
M;165.5;1.456720479;162.2865119;0.049506051
"DATA",999.21,1,3,168,0)
M;166.5;1.529810247;162.9161202;0.049333801
"DATA",999.21,1,3,169,0)
M;167.5;1.601219573;163.535045;0.049146553
"DATA",999.21,1,3,170,0)
M;168.5;1.670433444;164.1418486;0.04894519
"DATA",999.21,1,3,171,0)
M;169.5;1.736995571;164.7352199;0.048730749
"DATA",999.21,1,3,172,0)
M;170.5;1.800483802;165.3139755;0.048504404
"DATA",999.21,1,3,173,0)
M;171.5;1.860518777;165.8770715;0.048267442
"DATA",999.21,1,3,174,0)
M;172.5;1.916765525;166.4236087;0.04802123
"DATA",999.21,1,3,175,0)
M;173.5;1.968934444;166.9528354;0.047767192
"DATA",999.21,1,3,176,0)
M;174.5;2.016781776;167.4641466;0.047506783
"DATA",999.21,1,3,177,0)
M;175.5;2.060109658;167.9570814;0.047241456
"DATA",999.21,1,3,178,0)
M;176.5;2.098765817;168.4313175;0.04697265
"DATA",999.21,1,3,179,0)
M;177.5;2.132642948;168.8866644;0.046701759
"DATA",999.21,1,3,180,0)
M;178.5;2.16167779;169.3230548;0.046430122
"DATA",999.21,1,3,181,0)
M;179.5;2.185849904;169.7405351;0.046159004
"DATA",999.21,1,3,182,0)
M;180.5;2.205180153;170.139255;0.045889585
"DATA",999.21,1,3,183,0)
M;181.5;2.219728869;170.5194567;0.045622955
"DATA",999.21,1,3,184,0)
M;182.5;2.2295937;170.881464;0.045360101
"DATA",999.21,1,3,185,0)
M;183.5;2.234907144;171.2256717;0.045101913
"DATA",999.21,1,3,186,0)
M;184.5;2.235833767;171.5525345;0.044849174
"DATA",999.21,1,3,187,0)
M;185.5;2.232567138;171.8625576;0.044602566
"DATA",999.21,1,3,188,0)
M;186.5;2.2253265;172.1562865;0.044362674
"DATA",999.21,1,3,189,0)
M;187.5;2.214353232;172.4342983;0.044129985
"DATA",999.21,1,3,190,0)
M;188.5;2.199905902;172.6971935;0.043904897
"DATA",999.21,1,3,191,0)
M;189.5;2.182262864;172.9455898;0.043687723
"DATA",999.21,1,3,192,0)
M;190.5;2.161704969;173.180112;0.043478698
"DATA",999.21,1,3,193,0)
M;191.5;2.138524662;173.4013896;0.043277987
"DATA",999.21,1,3,194,0)
M;192.5;2.113023423;173.6100518;0.043085685
"DATA",999.21,1,3,195,0)
M;193.5;2.085490286;173.8067179;0.042901835
"DATA",999.21,1,3,196,0)
M;194.5;2.0562195;173.9919998;0.042726424
"DATA",999.21,1,3,197,0)
M;195.5;2.025496648;174.1664951;0.042559396
"DATA",999.21,1,3,198,0)
M;196.5;1.993598182;174.3307855;0.042400652
"DATA",999.21,1,3,199,0)
M;197.5;1.960789092;174.4854344;0.042250063
"DATA",999.21,1,3,200,0)
M;198.5;1.927320937;174.6309856;0.042107465
"DATA",999.21,1,3,201,0)
M;199.5;1.89343024;174.7679617;0.041972676
"DATA",999.21,1,3,202,0)
M;200.5;1.859337259;174.8968634;0.041845488
"DATA",999.21,1,3,203,0)
M;201.5;1.825245107;175.0181691;0.041725679
"DATA",999.21,1,3,204,0)
M;202.5;1.791339209;175.1323345;0.041613015
"DATA",999.21,1,3,205,0)
M;203.5;1.757787065;175.2397926;0.041507249
"DATA",999.21,1,3,206,0)
M;204.5;1.724738292;175.340954;0.041408129
"DATA",999.21,1,3,207,0)
M;205.5;1.692324905;175.4362071;0.041315398
"DATA",999.21,1,3,208,0)
M;206.5;1.660661815;175.5259191;0.041228796
"DATA",999.21,1,3,209,0)
M;207.5;1.629847495;175.6104358;0.04114806
"DATA",999.21,1,3,210,0)
M;208.5;1.599964788;175.690083;0.041072931
"DATA",999.21,1,3,211,0)
M;209.5;1.571081817;175.7651671;0.04100315
"DATA",999.21,1,3,212,0)
M;210.5;1.543252982;175.8359757;0.040938463
"DATA",999.21,1,3,213,0)
M;211.5;1.516519998;175.9027788;0.040878617
"DATA",999.21,1,3,214,0)
M;212.5;1.490912963;175.9658293;0.040823368
"DATA",999.21,1,3,215,0)
M;213.5;1.466451429;176.0253641;0.040772475
"DATA",999.21,1,3,216,0)
M;214.5;1.44314546;176.081605;0.040725706
"DATA",999.21,1,3,217,0)
M;215.5;1.420996665;176.1347593;0.040682834
"DATA",999.21,1,3,218,0)
M;216.5;1.399999187;176.1850208;0.04064364
"DATA",999.21,1,3,219,0)
M;217.5;1.380140651;176.2325707;0.040607913
"DATA",999.21,1,3,220,0)
M;218.5;1.361403047;176.2775781;0.040575448
"DATA",999.21,1,3,221,0)
M;219.5;1.343763564;176.3202008;0.040546051
"DATA",999.21,1,3,222,0)
M;220.5;1.327195355;176.3605864;0.040519532
"DATA",999.21,1,3,223,0)
M;221.5;1.311668242;176.3988725;0.040495713
"DATA",999.21,1,3,224,0)
M;222.5;1.297149359;176.4351874;0.040474421
"DATA",999.21,1,3,225,0)
M;223.5;1.283603728;176.469651;0.040455493
"DATA",999.21,1,3,226,0)
M;224.5;1.270994782;176.5023751;0.040438773
"DATA",999.21,1,3,227,0)
M;225.5;1.25928483;176.533464;0.040424111
"DATA",999.21,1,3,228,0)
M;226.5;1.248435461;176.5630153;0.040411366
"DATA",999.21,1,3,229,0)
M;227.5;1.23840791;176.5911197;0.040400405
"DATA",999.21,1,3,230,0)
M;228.5;1.229163362;176.6178621;0.040391101
"DATA",999.21,1,3,231,0)
M;229.5;1.220663228;176.6433219;0.040383334
"DATA",999.21,1,3,232,0)
M;230.5;1.212869374;176.6675729;0.04037699
"DATA",999.21,1,3,233,0)
M;231.5;1.20574431;176.6906844;0.040371962
"DATA",999.21,1,3,234,0)
M;232.5;1.199251356;176.712721;0.040368149
"DATA",999.21,1,3,235,0)
M;233.5;1.19335477;176.733743;0.040365456
"DATA",999.21,1,3,236,0)
M;234.5;1.188019859;176.753807;0.040363795
"DATA",999.21,1,3,237,0)
M;235.5;1.183213059;176.7729657;0.04036308
"DATA",999.21,1,3,238,0)
M;236.5;1.178901998;176.7912687;0.040363233
"DATA",999.21,1,3,239,0)
M;237.5;1.175055543;176.8087622;0.040364179
"DATA",999.21,1,3,240,0)
M;238.5;1.171643828;176.8254895;0.04036585
"DATA",999.21,1,3,241,0)
M;239.5;1.16863827;176.8414914;0.04036818
"DATA",999.21,1,3,242,0)
M;240;1.167279219;176.8492322;0.040369574
"DATA",999.21,1,3,243,0)
F;0;-1.295960857;49.28639612;0.05008556
"DATA",999.21,1,3,244,0)
F;0.5;-0.809249882;51.68358057;0.046818545
"DATA",999.21,1,3,245,0)
F;1.5;-0.050782985;55.28612813;0.0434439
"DATA",999.21,1,3,246,0)
F;2.5;0.476851407;58.09381906;0.041716103
"DATA",999.21,1,3,247,0)
F;3.5;0.843299612;60.45980763;0.040705173
"DATA",999.21,1,3,248,0)
F;4.5;1.097562257;62.53669656;0.040079765
"DATA",999.21,1,3,249,0)
F;5.5;1.272509641;64.40632762;0.039686845
"DATA",999.21,1,3,250,0)
F;6.5;1.390428859;66.11841553;0.039444555
"DATA",999.21,1,3,251,0)
F;7.5;1.466733925;67.70574419;0.039304738
"DATA",999.21,1,3,252,0)
F;8.5;1.512301976;69.19123614;0.03923711
"DATA",999.21,1,3,253,0)
F;9.5;1.534950767;70.59163924;0.039221665
"DATA",999.21,1,3,254,0)
F;10.5;1.540390875;71.91961673;0.039244672
"DATA",999.21,1,3,255,0)
F;11.5;1.532852892;73.1850104;0.03929642
"DATA",999.21,1,3,256,0)
F;12.5;1.51550947;74.39564379;0.039369875
"DATA",999.21,1,3,257,0)
F;13.5;1.490765028;75.5578544;0.039459832
"DATA",999.21,1,3,258,0)
F;14.5;1.460458255;76.67685871;0.039562382
"DATA",999.21,1,3,259,0)
F;15.5;1.426006009;77.75700986;0.039674542
"DATA",999.21,1,3,260,0)
F;16.5;1.388507095;78.80198406;0.03979401
"DATA",999.21,1,3,261,0)
F;17.5;1.348818127;79.81491852;0.039918994
"DATA",999.21,1,3,262,0)
F;18.5;1.307609654;80.79851532;0.040048084
"DATA",999.21,1,3,263,0)
F;19.5;1.265408149;81.75512092;0.040180162
"DATA",999.21,1,3,264,0)
F;20.5;1.222627732;82.6867881;0.04031434
"DATA",999.21,1,3,265,0)
F;21.5;1.179594365;83.59532461;0.040449904
"DATA",999.21,1,3,266,0)
F;22.5;1.136564448;84.48233206;0.040586283
"DATA",999.21,1,3,267,0)
F;23.5;1.093731947;85.34923624;0.040723015
"DATA",999.21,1,3,268,0)
F;24.5;1.051272912;86.1973169;0.040859727
"DATA",999.21,1,3,269,0)
F;25.5;1.041951175;87.09026318;0.041142161
"DATA",999.21,1,3,270,0)
F;26.5;1.012592236;87.95714182;0.041349399
"DATA",999.21,1,3,271,0)
F;27.5;0.970541909;88.7960184;0.041500428
"DATA",999.21,1,3,272,0)
F;28.5;0.921129988;89.6055115;0.041610508
"DATA",999.21,1,3,273,0)
F;29.5;0.868221392;90.38476689;0.041691761
"DATA",999.21,1,3,274,0)
F;30.5;0.81454413;91.13341722;0.04175368
"DATA",999.21,1,3,275,0)
F;31.5;0.761957977;91.8515436;0.041803562
"DATA",999.21,1,3,276,0)
F;32.5;0.711660228;92.5396352;0.041846882
"DATA",999.21,1,3,277,0)
F;33.5;0.664323379;93.19854429;0.041887626
"DATA",999.21,1,3,278,0)
F;34.5;0.620285102;93.82945392;0.041928568
"DATA",999.21,1,3,279,0)
F;35.5;0.57955631;94.43382278;0.041971514
"DATA",999.21,1,3,280,0)
F;36.5;0.54198094;95.01335709;0.042017509
"DATA",999.21,1,3,281,0)
F;37.5;0.511429832;94.79643239;0.042104522
"DATA",999.21,1,3,282,0)
F;38.5;0.482799937;95.37391918;0.042199507
"DATA",999.21,1,3,283,0)
F;39.5;0.455521041;95.94692677;0.042300333
"DATA",999.21,1,3,284,0)
F;40.5;0.429150288;96.51644912;0.042405225
"DATA",999.21,1,3,285,0)
F;41.5;0.403351725;97.08337211;0.042512706
"DATA",999.21,1,3,286,0)
F;42.5;0.377878239;97.6484807;0.042621565
"DATA",999.21,1,3,287,0)
F;43.5;0.352555862;98.21246579;0.042730809
"DATA",999.21,1,3,288,0)
F;44.5;0.327270297;98.77593069;0.042839638
"DATA",999.21,1,3,289,0)
F;45.5;0.301955463;99.33939735;0.042947412
"DATA",999.21,1,3,290,0)
F;46.5;0.276583851;99.9033122;0.043053626
"DATA",999.21,1,3,291,0)
F;47.5;0.251158446;100.4680516;0.043157889
"DATA",999.21,1,3,292,0)
F;48.5;0.225705996;101.033927;0.043259907
"DATA",999.21,1,3,293,0)
F;49.5;0.20027145;101.6011898;0.043359463
"DATA",999.21,1,3,294,0)
F;50.5;0.174913356;102.1700358;0.043456406
"DATA",999.21,1,3,295,0)
F;51.5;0.149700081;102.7406094;0.043550638
"DATA",999.21,1,3,296,0)
F;52.5;0.12470671;103.3130077;0.043642107
"DATA",999.21,1,3,297,0)
F;53.5;0.100012514;103.8872839;0.043730791
"DATA",999.21,1,3,298,0)
F;54.5;0.075698881;104.4634511;0.043816701
"DATA",999.21,1,3,299,0)
F;55.5;0.051847635;105.0414853;0.043899867
"DATA",999.21,1,3,300,0)
F;56.5;0.02853967;105.6213287;0.043980337
"DATA",999.21,1,3,301,0)
F;57.5;0.005853853;106.2028921;0.044058171
"DATA",999.21,1,3,302,0)
F;58.5;-0.016133871;106.7860583;0.04413344
"DATA",999.21,1,3,303,0)
F;59.5;-0.037351181;107.3706841;0.044206218
"DATA",999.21,1,3,304,0)
F;60.5;-0.057729947;107.9566031;0.044276588
"DATA",999.21,1,3,305,0)
F;61.5;-0.077206672;108.5436278;0.044344632
"DATA",999.21,1,3,306,0)
F;62.5;-0.09572283;109.1315521;0.044410436
"DATA",999.21,1,3,307,0)
F;63.5;-0.113225128;109.7201531;0.044474084
"DATA",999.21,1,3,308,0)
F;64.5;-0.129665689;110.3091934;0.044535662
"DATA",999.21,1,3,309,0)
F;65.5;-0.145002179;110.8984228;0.044595254
"DATA",999.21,1,3,310,0)
F;66.5;-0.159197885;111.4875806;0.044652942
"DATA",999.21,1,3,311,0)
F;67.5;-0.172221748;112.0763967;0.044708809
"DATA",999.21,1,3,312,0)
F;68.5;-0.184048358;112.6645943;0.044762936
"DATA",999.21,1,3,313,0)
F;69.5;-0.194660215;113.2518902;0.044815402
"DATA",999.21,1,3,314,0)
F;70.5;-0.204030559;113.8380006;0.044866288
"DATA",999.21,1,3,315,0)
F;71.5;-0.212174408;114.4226317;0.044915672
"DATA",999.21,1,3,316,0)
F;72.5;-0.219069129;115.0054978;0.044963636
"DATA",999.21,1,3,317,0)
F;73.5;-0.224722166;115.5863089;0.045010259
"DATA",999.21,1,3,318,0)
F;74.5;-0.229140412;116.1647782;0.045055624
"DATA",999.21,1,3,319,0)
F;75.5;-0.232335686;116.7406221;0.045099817
"DATA",999.21,1,3,320,0)
F;76.5;-0.234324563;117.3135622;0.045142924
"DATA",999.21,1,3,321,0)
F;77.5;-0.235128195;117.8833259;0.045185036
"DATA",999.21,1,3,322,0)
F;78.5;-0.234772114;118.4496481;0.045226249
"DATA",999.21,1,3,323,0)
F;79.5;-0.233286033;119.0122722;0.045266662
"DATA",999.21,1,3,324,0)
F;80.5;-0.230703633;119.5709513;0.045306383
"DATA",999.21,1,3,325,0)
F;81.5;-0.227062344;120.1254495;0.045345524
"DATA",999.21,1,3,326,0)
F;82.5;-0.222403111;120.6755427;0.045384203
"DATA",999.21,1,3,327,0)
F;83.5;-0.216770161;121.22102;0.045422551
"DATA",999.21,1,3,328,0)
F;84.5;-0.210210748;121.7616844;0.045460702
"DATA",999.21,1,3,329,0)
F;85.5;-0.202774891;122.2973542;0.045498803
"DATA",999.21,1,3,330,0)
F;86.5;-0.194515104;122.827864;0.045537012
"DATA",999.21,1,3,331,0)
F;87.5;-0.185486099;123.3530652;0.045575495
"DATA",999.21,1,3,332,0)
F;88.5;-0.175744476;123.8728276;0.045614432
"DATA",999.21,1,3,333,0)
F;89.5;-0.165348396;124.38704;0.045654016
"DATA",999.21,1,3,334,0)
F;90.5;-0.15435722;124.8956114;0.04569445
"DATA",999.21,1,3,335,0)
F;91.5;-0.142831123;125.398472;0.045735953
"DATA",999.21,1,3,336,0)
F;92.5;-0.130830669;125.895574;0.045778759
"DATA",999.21,1,3,337,0)
F;93.5;-0.118416354;126.3868929;0.045823114
"DATA",999.21,1,3,338,0)
F;94.5;-0.105648092;126.8724284;0.04586928
"DATA",999.21,1,3,339,0)
F;95.5;-0.092584657;127.3522056;0.045917535
"DATA",999.21,1,3,340,0)
F;96.5;-0.079283065;127.8262759;0.045968169
"DATA",999.21,1,3,341,0)
F;97.5;-0.065797888;128.2947187;0.04602149
"DATA",999.21,1,3,342,0)
F;98.5;-0.0521805;128.757642;0.046077818
"DATA",999.21,1,3,343,0)
F;99.5;-0.03847825;129.2151839;0.046137487
"DATA",999.21,1,3,344,0)
F;100.5;-0.024733545;129.6675143;0.046200842
"DATA",999.21,1,3,345,0)
F;101.5;-0.010982868;130.1148354;0.04626824
"DATA",999.21,1,3,346,0)
F;102.5;0.002744306;130.5573839;0.046340046
"DATA",999.21,1,3,347,0)
F;103.5;0.016426655;130.995432;0.046416629
"DATA",999.21,1,3,348,0)
F;104.5;0.030052231;131.4292887;0.046498361
"DATA",999.21,1,3,349,0)
F;105.5;0.043619747;131.8593015;0.046585611
"DATA",999.21,1,3,350,0)
F;106.5;0.05713988;132.2858574;0.046678741
"DATA",999.21,1,3,351,0)
F;107.5;0.070636605;132.7093845;0.046778099
"DATA",999.21,1,3,352,0)
F;108.5;0.08414848;133.1303527;0.04688401
"DATA",999.21,1,3,353,0)
F;109.5;0.097729873;133.5492749;0.046996769
"DATA",999.21,1,3,354,0)
F;110.5;0.111452039;133.9667073;0.047116633
"DATA",999.21,1,3,355,0)
F;111.5;0.125404005;134.3832499;0.047243801
"DATA",999.21,1,3,356,0)
F;112.5;0.13969316;134.7995463;0.047378413
"DATA",999.21,1,3,357,0)
F;113.5;0.154445482;135.2162826;0.047520521
"DATA",999.21,1,3,358,0)
F;114.5;0.169805275;135.634186;0.047670085
"DATA",999.21,1,3,359,0)
F;115.5;0.185934346;136.0540223;0.047826946
"DATA",999.21,1,3,360,0)
F;116.5;0.203010488;136.4765925;0.04799081
"DATA",999.21,1,3,361,0)
F;117.5;0.2212252;136.9027281;0.048161228
"DATA",999.21,1,3,362,0)
F;118.5;0.240780542;137.3332846;0.04833757
"DATA",999.21,1,3,363,0)
F;119.5;0.261885086;137.7691339;0.048519011
"DATA",999.21,1,3,364,0)
F;120.5;0.284748919;138.2111552;0.048704503
"DATA",999.21,1,3,365,0)
F;121.5;0.309577733;138.6602228;0.048892759
"DATA",999.21,1,3,366,0)
F;122.5;0.336566048;139.1171933;0.049082239
"DATA",999.21,1,3,367,0)
F;123.5;0.365889711;139.5828898;0.049271137
"DATA",999.21,1,3,368,0)
F;124.5;0.397699038;140.0580848;0.049457371
"DATA",999.21,1,3,369,0)
F;125.5;0.432104409;140.5434787;0.049638596
"DATA",999.21,1,3,370,0)
F;126.5;0.46917993;141.0396832;0.049812203
"DATA",999.21,1,3,371,0)
F;127.5;0.508943272;141.5471945;0.049975355
"DATA",999.21,1,3,372,0)
F;128.5;0.551354277;142.0663731;0.050125012
"DATA",999.21,1,3,373,0)
F;129.5;0.596307363;142.59742;0.050257992
"DATA",999.21,1,3,374,0)
F;130.5;0.643626542;143.1403553;0.050371024
"DATA",999.21,1,3,375,0)
F;131.5;0.693062173;143.6949981;0.050460835
"DATA",999.21,1,3,376,0)
F;132.5;0.744289752;144.2609497;0.050524236
"DATA",999.21,1,3,377,0)
F;133.5;0.79691098;144.8375809;0.050558224
"DATA",999.21,1,3,378,0)
F;134.5;0.85045728;145.4240246;0.050560083
"DATA",999.21,1,3,379,0)
F;135.5;0.904395871;146.0191748;0.050527494
"DATA",999.21,1,3,380,0)
F;136.5;0.958138449;146.621692;0.050458634
"DATA",999.21,1,3,381,0)
F;137.5;1.011054559;147.2300177;0.050352269
"DATA",999.21,1,3,382,0)
F;138.5;1.062474568;147.8423918;0.050207825
"DATA",999.21,1,3,383,0)
F;139.5;1.111727029;148.4568879;0.050025434
"DATA",999.21,1,3,384,0)
F;140.5;1.158135105;149.0714413;0.049805967
"DATA",999.21,1,3,385,0)
F;141.5;1.201050821;149.6838943;0.049551023
"DATA",999.21,1,3,386,0)
F;142.5;1.239852328;150.2920328;0.049262895
"DATA",999.21,1,3,387,0)
F;143.5;1.274006058;150.8936469;0.048944504
"DATA",999.21,1,3,388,0)
F;144.5;1.303044695;151.4865636;0.048599314
"DATA",999.21,1,3,389,0)
F;145.5;1.326605954;152.0686985;0.048231224
"DATA",999.21,1,3,390,0)
F;146.5;1.344443447;152.6380955;0.047844442
"DATA",999.21,1,3,391,0)
F;147.5;1.356437773;153.1929631;0.047443362
"DATA",999.21,1,3,392,0)
F;148.5;1.362602695;153.7317031;0.04703243
"DATA",999.21,1,3,393,0)
F;149.5;1.363085725;154.2529332;0.046616026
"DATA",999.21,1,3,394,0)
F;150.5;1.358162799;154.755501;0.046198356
"DATA",999.21,1,3,395,0)
F;151.5;1.348227142;155.2384904;0.04578335
"DATA",999.21,1,3,396,0)
F;152.5;1.333772923;155.7012216;0.045374597
"DATA",999.21,1,3,397,0)
F;153.5;1.315374704;156.1432438;0.044975281
"DATA",999.21,1,3,398,0)
F;154.5;1.293664024;156.564323;0.044588148
"DATA",999.21,1,3,399,0)
F;155.5;1.269304678;156.9644258;0.044215488
"DATA",999.21,1,3,400,0)
F;156.5;1.242968236;157.3436995;0.043859135
"DATA",999.21,1,3,401,0)
F;157.5;1.21531127;157.7024507;0.04352048
"DATA",999.21,1,3,402,0)
F;158.5;1.186955477;158.0411233;0.043200497
"DATA",999.21,1,3,403,0)
F;159.5;1.158471522;158.3602756;0.042899776
"DATA",999.21,1,3,404,0)
F;160.5;1.130367088;158.6605588;0.042618565
"DATA",999.21,1,3,405,0)
F;161.5;1.103079209;158.9426964;0.042356812
"DATA",999.21,1,3,406,0)
F;162.5;1.076970655;159.2074654;0.042114211
"DATA",999.21,1,3,407,0)
F;163.5;1.052329922;159.455679;0.041890247
"DATA",999.21,1,3,408,0)
F;164.5;1.029374161;159.688172;0.04168424
"DATA",999.21,1,3,409,0)
F;165.5;1.008254396;159.9057871;0.041495379
"DATA",999.21,1,3,410,0)
F;166.5;0.989062282;160.1093647;0.041322765
"DATA",999.21,1,3,411,0)
F;167.5;0.971837799;160.299733;0.041165437
"DATA",999.21,1,3,412,0)
F;168.5;0.95657215;160.4776996;0.041022401
"DATA",999.21,1,3,413,0)
F;169.5;0.94324228;160.6440526;0.040892651
"DATA",999.21,1,3,414,0)
F;170.5;0.931767062;160.7995428;0.040775193
"DATA",999.21,1,3,415,0)
F;171.5;0.922058291;160.9448916;0.040669052
"DATA",999.21,1,3,416,0)
F;172.5;0.914012643;161.0807857;0.040573288
"DATA",999.21,1,3,417,0)
F;173.5;0.907516917;161.2078755;0.040487005
"DATA",999.21,1,3,418,0)
F;174.5;0.902452436;161.3267744;0.040409354
"DATA",999.21,1,3,419,0)
F;175.5;0.898698641;161.4380593;0.040339537
"DATA",999.21,1,3,420,0)
F;176.5;0.896143482;161.5422726;0.040276811
"DATA",999.21,1,3,421,0)
F;177.5;0.894659668;161.639917;0.040220488
"DATA",999.21,1,3,422,0)
F;178.5;0.89413892;161.7314645;0.040169932
"DATA",999.21,1,3,423,0)
F;179.5;0.894475371;161.8173534;0.040124562
"DATA",999.21,1,3,424,0)
F;180.5;0.895569834;161.8979913;0.040083845
"DATA",999.21,1,3,425,0)
F;181.5;0.897330209;161.9737558;0.040047295
"DATA",999.21,1,3,426,0)
F;182.5;0.899671635;162.0449969;0.040014473
"DATA",999.21,1,3,427,0)
F;183.5;0.902516442;162.1120386;0.03998498
"DATA",999.21,1,3,428,0)
F;184.5;0.905793969;162.17518;0.039958458
"DATA",999.21,1,3,429,0)
F;185.5;0.909440266;162.2346979;0.039934584
"DATA",999.21,1,3,430,0)
F;186.5;0.913397733;162.2908474;0.039913066
"DATA",999.21,1,3,431,0)
F;187.5;0.91761471;162.343864;0.039893644
"DATA",999.21,1,3,432,0)
F;188.5;0.922045055;162.3939652;0.039876087
"DATA",999.21,1,3,433,0)
F;189.5;0.926647697;162.4413513;0.039860185
"DATA",999.21,1,3,434,0)
F;190.5;0.931386217;162.4862071;0.039845754
"DATA",999.21,1,3,435,0)
F;191.5;0.93622842;162.5287029;0.039832629
"DATA",999.21,1,3,436,0)
F;192.5;0.941145943;162.5689958;0.039820663
"DATA",999.21,1,3,437,0)
F;193.5;0.94611388;162.6072309;0.039809725
"DATA",999.21,1,3,438,0)
F;194.5;0.95111043;162.6435418;0.0397997
"DATA",999.21,1,3,439,0)
F;195.5;0.956116576;162.6780519;0.039790485
"DATA",999.21,1,3,440,0)
F;196.5;0.961115792;162.7108751;0.039781991
"DATA",999.21,1,3,441,0)
F;197.5;0.966093766;162.7421168;0.039774136
"DATA",999.21,1,3,442,0)
F;198.5;0.971038162;162.7718741;0.03976685
"DATA",999.21,1,3,443,0)
F;199.5;0.975938391;162.8002371;0.03976007
"DATA",999.21,1,3,444,0)
F;200.5;0.980785418;162.8272889;0.039753741
"DATA",999.21,1,3,445,0)
F;201.5;0.985571579;162.8531067;0.039747815
"DATA",999.21,1,3,446,0)
F;202.5;0.99029042;162.8777619;0.039742249
"DATA",999.21,1,3,447,0)
F;203.5;0.994936555;162.9013208;0.039737004
"DATA",999.21,1,3,448,0)
F;204.5;0.999505539;162.9238449;0.039732048
"DATA",999.21,1,3,449,0)
F;205.5;1.003993753;162.9453912;0.039727352
"DATA",999.21,1,3,450,0)
F;206.5;1.0083983;162.9660131;0.03972289
"DATA",999.21,1,3,451,0)
F;207.5;1.012716921;162.9857599;0.03971864
"DATA",999.21,1,3,452,0)
F;208.5;1.016947912;163.0046776;0.039714581
"DATA",999.21,1,3,453,0)
F;209.5;1.021090055;163.0228094;0.039710697
"DATA",999.21,1,3,454,0)
F;210.5;1.025142554;163.0401953;0.039706971
"DATA",999.21,1,3,455,0)
F;211.5;1.029104983;163.0568727;0.039703391
"DATA",999.21,1,3,456,0)
F;212.5;1.032977233;163.0728768;0.039699945
"DATA",999.21,1,3,457,0)
F;213.5;1.036759475;163.0882404;0.039696623
"DATA",999.21,1,3,458,0)
F;214.5;1.040452117;163.1029943;0.039693415
"DATA",999.21,1,3,459,0)
F;215.5;1.044055774;163.1171673;0.039690313
"DATA",999.21,1,3,460,0)
F;216.5;1.047571238;163.1307866;0.039687311
"DATA",999.21,1,3,461,0)
F;217.5;1.050999451;163.1438776;0.039684402
"DATA",999.21,1,3,462,0)
F;218.5;1.054341482;163.1564644;0.039681581
"DATA",999.21,1,3,463,0)
F;219.5;1.057598512;163.1685697;0.039678842
"DATA",999.21,1,3,464,0)
F;220.5;1.060771808;163.1802146;0.039676182
"DATA",999.21,1,3,465,0)
F;221.5;1.063862715;163.1914194;0.039673596
"DATA",999.21,1,3,466,0)
F;222.5;1.066872639;163.202203;0.039671082
"DATA",999.21,1,3,467,0)
F;223.5;1.069803036;163.2125835;0.039668635
"DATA",999.21,1,3,468,0)
F;224.5;1.072655401;163.2225779;0.039666254
"DATA",999.21,1,3,469,0)
F;225.5;1.075431258;163.2322024;0.039663936
"DATA",999.21,1,3,470,0)
F;226.5;1.078132156;163.2414722;0.039661679
"DATA",999.21,1,3,471,0)
F;227.5;1.080759655;163.2504019;0.039659481
"DATA",999.21,1,3,472,0)
F;228.5;1.083315329;163.2590052;0.039657339
"DATA",999.21,1,3,473,0)
F;229.5;1.085800751;163.2672954;0.039655252
"DATA",999.21,1,3,474,0)
F;230.5;1.088217496;163.2752848;0.039653218
"DATA",999.21,1,3,475,0)
F;231.5;1.090567133;163.2829854;0.039651237
"DATA",999.21,1,3,476,0)
F;232.5;1.092851222;163.2904086;0.039649306
"DATA",999.21,1,3,477,0)
F;233.5;1.095071313;163.297565;0.039647424
"DATA",999.21,1,3,478,0)
F;234.5;1.097228939;163.304465;0.039645591
"DATA",999.21,1,3,479,0)
F;235.5;1.099325619;163.3111185;0.039643804
"DATA",999.21,1,3,480,0)
F;236.5;1.101362852;163.3175349;0.039642063
"DATA",999.21,1,3,481,0)
F;237.5;1.103342119;163.3237231;0.039640367
"DATA",999.21,1,3,482,0)
F;238.5;1.105264876;163.3296918;0.039638715
"DATA",999.21,1,3,483,0)
F;239.5;1.107132561;163.3354491;0.039637105
"DATA",999.21,1,3,484,0)
F;240;1.108046193;163.338251;0.039636316
"DATA",999.21,1,4)
D VALIDNUM(.X,10,150)
"DATA",999.21,1,99,0)
^^5^5^3050512.000719
"DATA",999.21,1,99,1,0)
Enter height in centimeters (if metric units enabled) or inches.
"DATA",999.21,1,99,2,0)

"DATA",999.21,1,99,3,0)
To force units regardless of metric setting, append cm or in to the value.
"DATA",999.21,1,99,4,0)

"DATA",999.21,1,99,5,0)
Feet and inches may be entered as <ft>'<in>".  For example, 5'8".
"DATA",999.21,2,0)
WEIGHT^0^lb^kg^^^WT
"DATA",999.21,2,1)
S X=X/2.2046226
"DATA",999.21,2,2)
S X=X*2.2046226
"DATA",999.21,2,3,0)
^999.2109^484^484^3070611^^^
"DATA",999.21,2,3,1,0)
M;0;1.815151075;3.530203168;0.152385273
"DATA",999.21,2,3,2,0)
M;0.5;1.547523128;4.003106424;0.146025021
"DATA",999.21,2,3,3,0)
M;1.5;1.068795548;4.879525083;0.136478767
"DATA",999.21,2,3,4,0)
M;2.5;0.695973505;5.672888765;0.129677511
"DATA",999.21,2,3,5,0)
M;3.5;0.41981509;6.391391982;0.124717085
"DATA",999.21,2,3,6,0)
M;4.5;0.219866801;7.041836432;0.121040119
"DATA",999.21,2,3,7,0)
M;5.5;0.077505598;7.630425182;0.1182712
"DATA",999.21,2,3,8,0)
M;6.5;-0.02190761;8.162951035;0.116153695
"DATA",999.21,2,3,9,0)
M;7.5;-0.0894409;8.644832479;0.114510349
"DATA",999.21,2,3,10,0)
M;8.5;-0.1334091;9.081119817;0.113217163
"DATA",999.21,2,3,11,0)
M;9.5;-0.1600954;9.476500305;0.11218624
"DATA",999.21,2,3,12,0)
M;10.5;-0.17429685;9.835307701;0.111354536
"DATA",999.21,2,3,13,0)
M;11.5;-0.1797189;10.16153567;0.110676413
"DATA",999.21,2,3,14,0)
M;12.5;-0.179254;10.45885399;0.110118635
"DATA",999.21,2,3,15,0)
M;13.5;-0.17518447;10.7306256;0.109656941
"DATA",999.21,2,3,16,0)
M;14.5;-0.16932268;10.97992482;0.109273653
"DATA",999.21,2,3,17,0)
M;15.5;-0.1631139;11.20955529;0.10895596
"DATA",999.21,2,3,18,0)
M;16.5;-0.15770999;11.4220677;0.108694678
"DATA",999.21,2,3,19,0)
M;17.5;-0.15402279;11.61977698;0.108483324
"DATA",999.21,2,3,20,0)
M;18.5;-0.15276214;11.80477902;0.108317416
"DATA",999.21,2,3,21,0)
M;19.5;-0.15446658;11.9789663;0.108193944
"DATA",999.21,2,3,22,0)
M;20.5;-0.15952202;12.14404334;0.108110954
"DATA",999.21,2,3,23,0)
M;21.5;-0.16817926;12.30154103;0.108067236
"DATA",999.21,2,3,24,0)
M;22.5;-0.1805668;12.45283028;0.108062078
"DATA",999.21,2,3,25,0)
M;23.5;-0.19670196;12.59913494;0.108095077
"DATA",999.21,2,3,26,0)
M;24.5;-0.21650121;12.74154396;0.108166005
"DATA",999.21,2,3,27,0)
M;25.5;-0.23979048;12.88102276;0.108274705
"DATA",999.21,2,3,28,0)
M;26.5;-0.26631585;13.01842382;0.108421024
"DATA",999.21,2,3,29,0)
M;27.5;-0.29575496;13.1544966;0.108604769
"DATA",999.21,2,3,30,0)
M;28.5;-0.32772936;13.28989667;0.108825681
"DATA",999.21,2,3,31,0)
M;29.5;-0.36181746;13.42519408;0.109083423
"DATA",999.21,2,3,32,0)
M;30.5;-0.39756808;13.56088113;0.109377581
"DATA",999.21,2,3,33,0)
M;31.5;-0.43452025;13.69737858;0.109707646
"DATA",999.21,2,3,34,0)
M;32.5;-0.47218875;13.83504622;0.110073084
"DATA",999.21,2,3,35,0)
M;33.5;-0.51012309;13.97418199;0.110473238
"DATA",999.21,2,3,36,0)
M;34.5;-0.54788557;14.1150324;0.1109074
"DATA",999.21,2,3,37,0)
M;35.5;-0.5850701;14.25779618;0.111374787
"DATA",999.21,2,3,38,0)
M;36.5;-0.621319726;14.40262749;0.111874514
"DATA",999.21,2,3,39,0)
M;37.5;-0.656295986;14.54964614;0.112405687
"DATA",999.21,2,3,40,0)
M;38.5;-0.689735029;14.69893326;0.112967254
"DATA",999.21,2,3,41,0)
M;39.5;-0.721410388;14.85054151;0.11355811
"DATA",999.21,2,3,42,0)
M;40.5;-0.751175223;15.00449143;0.114176956
"DATA",999.21,2,3,43,0)
M;41.5;-0.778904279;15.16078454;0.114822482
"DATA",999.21,2,3,44,0)
M;42.5;-0.804515498;15.31940246;0.115493292
"DATA",999.21,2,3,45,0)
M;43.5;-0.828003255;15.48030313;0.116187777
"DATA",999.21,2,3,46,0)
M;44.5;-0.849380372;15.64343309;0.116904306
"DATA",999.21,2,3,47,0)
M;45.5;-0.86869965;15.80872535;0.117641148
"DATA",999.21,2,3,48,0)
M;46.5;-0.886033992;15.97610456;0.118396541
"DATA",999.21,2,3,49,0)
M;47.5;-0.901507878;16.14548194;0.119168555
"DATA",999.21,2,3,50,0)
M;48.5;-0.915241589;16.31676727;0.11995532
"DATA",999.21,2,3,51,0)
M;49.5;-0.927377772;16.4898646;0.120754916
"DATA",999.21,2,3,52,0)
M;50.5;-0.938069819;16.66467529;0.121565421
"DATA",999.21,2,3,53,0)
M;51.5;-0.94747794;16.84109948;0.122384927
"DATA",999.21,2,3,54,0)
M;52.5;-0.955765694;17.01903746;0.123211562
"DATA",999.21,2,3,55,0)
M;53.5;-0.963096972;17.1983908;0.124043503
"DATA",999.21,2,3,56,0)
M;54.5;-0.969633434;17.37906341;0.124878992
"DATA",999.21,2,3,57,0)
M;55.5;-0.975532355;17.56096245;0.125716348
"DATA",999.21,2,3,58,0)
M;56.5;-0.980937915;17.74400082;0.126554022
"DATA",999.21,2,3,59,0)
M;57.5;-0.986006518;17.92809121;0.127390453
"DATA",999.21,2,3,60,0)
M;58.5;-0.99086694;18.11315625;0.128224294
"DATA",999.21,2,3,61,0)
M;59.5;-0.995644402;18.29912286;0.129054277
"DATA",999.21,2,3,62,0)
M;60.5;-1.000453886;18.48592413;0.129879257
"DATA",999.21,2,3,63,0)
M;61.5;-1.005399668;18.67349965;0.130698212
"DATA",999.21,2,3,64,0)
M;62.5;-1.010575003;18.86179576;0.131510245
"DATA",999.21,2,3,65,0)
M;63.5;-1.016061941;19.05076579;0.132314586
"DATA",999.21,2,3,66,0)
M;64.5;-1.021931241;19.24037019;0.133110593
"DATA",999.21,2,3,67,0)
M;65.5;-1.028242376;19.43057662;0.133897752
"DATA",999.21,2,3,68,0)
M;66.5;-1.035043608;19.62136007;0.134675673
"DATA",999.21,2,3,69,0)
M;67.5;-1.042372125;19.8127028;0.13544409
"DATA",999.21,2,3,70,0)
M;68.5;-1.050254232;20.0045944;0.13620286
"DATA",999.21,2,3,71,0)
M;69.5;-1.058705595;20.19703171;0.136951959
"DATA",999.21,2,3,72,0)
M;70.5;-1.067731529;20.39001872;0.137691478
"DATA",999.21,2,3,73,0)
M;71.5;-1.077321193;20.58356862;0.138421673
"DATA",999.21,2,3,74,0)
M;72.5;-1.087471249;20.77769565;0.139142773
"DATA",999.21,2,3,75,0)
M;73.5;-1.098152984;20.97242631;0.139855242
"DATA",999.21,2,3,76,0)
M;74.5;-1.10933408;21.16779192;0.140559605
"DATA",999.21,2,3,77,0)
M;75.5;-1.120974043;21.36383013;0.141256489
"DATA",999.21,2,3,78,0)
M;76.5;-1.133024799;21.56058467;0.141946613
"DATA",999.21,2,3,79,0)
M;77.5;-1.145431351;21.75810506;0.142630785
"DATA",999.21,2,3,80,0)
M;78.5;-1.158132499;21.95644627;0.143309898
"DATA",999.21,2,3,81,0)
M;79.5;-1.171061612;22.15566842;0.143984924
"DATA",999.21,2,3,82,0)
M;80.5;-1.184141975;22.35583862;0.144656953
"DATA",999.21,2,3,83,0)
M;81.5;-1.197307185;22.55702268;0.145327009
"DATA",999.21,2,3,84,0)
M;82.5;-1.210475099;22.75929558;0.145996289
"DATA",999.21,2,3,85,0)
M;83.5;-1.223565263;22.9627344;0.146666
"DATA",999.21,2,3,86,0)
M;84.5;-1.236497304;23.16741888;0.147337375
"DATA",999.21,2,3,87,0)
M;85.5;-1.249186293;23.37343341;0.148011715
"DATA",999.21,2,3,88,0)
M;86.5;-1.261555446;23.58086145;0.148690256
"DATA",999.21,2,3,89,0)
M;87.5;-1.273523619;23.78979096;0.149374297
"DATA",999.21,2,3,90,0)
M;88.5;-1.285013783;24.00031064;0.150065107
"DATA",999.21,2,3,91,0)
M;89.5;-1.295952066;24.21251028;0.150763933
"DATA",999.21,2,3,92,0)
M;90.5;-1.306268473;24.42648043;0.151471982
"DATA",999.21,2,3,93,0)
M;91.5;-1.31589753;24.642312;0.152190413
"DATA",999.21,2,3,94,0)
M;92.5;-1.324778843;24.86009596;0.152920322
"DATA",999.21,2,3,95,0)
M;93.5;-1.332857581;25.07992303;0.153662731
"DATA",999.21,2,3,96,0)
M;94.5;-1.340080195;25.30188584;0.154418635
"DATA",999.21,2,3,97,0)
M;95.5;-1.346412105;25.52606977;0.155188768
"DATA",999.21,2,3,98,0)
M;96.5;-1.351813296;25.75256528;0.155973912
"DATA",999.21,2,3,99,0)
M;97.5;-1.356253969;25.9814599;0.156774684
"DATA",999.21,2,3,100,0)
M;98.5;-1.359710858;26.2128399;0.157591579
"DATA",999.21,2,3,101,0)
M;99.5;-1.362167159;26.44679027;0.158424964
"DATA",999.21,2,3,102,0)
M;100.5;-1.363612378;26.68339457;0.159275071
"DATA",999.21,2,3,103,0)
M;101.5;-1.364042106;26.92273494;0.160141995
"DATA",999.21,2,3,104,0)
M;102.5;-1.363457829;27.16489199;0.161025689
"DATA",999.21,2,3,105,0)
M;103.5;-1.361865669;27.40994539;0.161925976
"DATA",999.21,2,3,106,0)
M;104.5;-1.35928261;27.65796978;0.162842452
"DATA",999.21,2,3,107,0)
M;105.5;-1.355720571;27.90904433;0.163774719
"DATA",999.21,2,3,108,0)
M;106.5;-1.351202536;28.16324264;0.164722138
"DATA",999.21,2,3,109,0)
M;107.5;-1.345754408;28.42063744;0.165683945
"DATA",999.21,2,3,110,0)
M;108.5;-1.339405453;28.68130005;0.166659247
"DATA",999.21,2,3,111,0)
M;109.5;-1.332188093;28.94530029;0.167647017
"DATA",999.21,2,3,112,0)
M;110.5;-1.324137479;29.21270645;0.168646104
"DATA",999.21,2,3,113,0)
M;111.5;-1.315291073;29.48358527;0.169655235
"DATA",999.21,2,3,114,0)
M;112.5;-1.30568824;29.75800198;0.170673022
"DATA",999.21,2,3,115,0)
M;113.5;-1.295369867;30.03602021;0.17169797
"DATA",999.21,2,3,116,0)
M;114.5;-1.284374967;30.31770417;0.17272854
"DATA",999.21,2,3,117,0)
M;115.5;-1.272750864;30.60311107;0.173762961
"DATA",999.21,2,3,118,0)
M;116.5;-1.260539193;30.89230072;0.174799493
"DATA",999.21,2,3,119,0)
M;117.5;-1.247783611;31.18532984;0.175836284
"DATA",999.21,2,3,120,0)
M;118.5;-1.234527763;31.48225315;0.176871417
"DATA",999.21,2,3,121,0)
M;119.5;-1.220815047;31.78312329;0.177902912
"DATA",999.21,2,3,122,0)
M;120.5;-1.206688407;32.08799062;0.17892874
"DATA",999.21,2,3,123,0)
M;121.5;-1.19219015;32.39690313;0.17994683
"DATA",999.21,2,3,124,0)
M;122.5;-1.177361786;32.7099062;0.180955078
"DATA",999.21,2,3,125,0)
M;123.5;-1.162243894;33.02704244;0.181951361
"DATA",999.21,2,3,126,0)
M;124.5;-1.146876007;33.34835148;0.182933537
"DATA",999.21,2,3,127,0)
M;125.5;-1.131296524;33.67386973;0.183899465
"DATA",999.21,2,3,128,0)
M;126.5;-1.115542634;34.00363017;0.184847006
"DATA",999.21,2,3,129,0)
M;127.5;-1.099650267;34.33766207;0.185774041
"DATA",999.21,2,3,130,0)
M;128.5;-1.083654055;34.67599076;0.18667847
"DATA",999.21,2,3,131,0)
M;129.5;-1.067587314;35.01863732;0.187558229
"DATA",999.21,2,3,132,0)
M;130.5;-1.051482972;35.36561737;0.18841128
"DATA",999.21,2,3,133,0)
M;131.5;-1.035367321;35.71694723;0.189235738
"DATA",999.21,2,3,134,0)
M;132.5;-1.019277299;36.07262569;0.190029545
"DATA",999.21,2,3,135,0)
M;133.5;-1.003235326;36.43265996;0.190790973
"DATA",999.21,2,3,136,0)
M;134.5;-0.987269866;36.79704392;0.191518224
"DATA",999.21,2,3,137,0)
M;135.5;-0.971406609;37.1657671;0.192209619
"DATA",999.21,2,3,138,0)
M;136.5;-0.955670107;37.53881268;0.192863569
"DATA",999.21,2,3,139,0)
M;137.5;-0.940083834;37.91615721;0.193478582
"DATA",999.21,2,3,140,0)
M;138.5;-0.924670244;38.2977703;0.194053274
"DATA",999.21,2,3,141,0)
M;139.5;-0.909450843;38.6836143;0.194586368
"DATA",999.21,2,3,142,0)
M;140.5;-0.894446258;39.07364401;0.195076705
"DATA",999.21,2,3,143,0)
M;141.5;-0.879676305;39.46780643;0.195523246
"DATA",999.21,2,3,144,0)
M;142.5;-0.865160071;39.86604044;0.195925079
"DATA",999.21,2,3,145,0)
M;143.5;-0.850915987;40.26827652;0.196281418
"DATA",999.21,2,3,146,0)
M;144.5;-0.836961905;40.67443658;0.196591612
"DATA",999.21,2,3,147,0)
M;145.5;-0.823315176;41.08443363;0.19685514
"DATA",999.21,2,3,148,0)
M;146.5;-0.809992726;41.49817164;0.19707162
"DATA",999.21,2,3,149,0)
M;147.5;-0.797011132;41.91554528;0.197240806
"DATA",999.21,2,3,150,0)
M;148.5;-0.784386693;42.33643978;0.197362591
"DATA",999.21,2,3,151,0)
M;149.5;-0.772135506;42.76073078;0.197437004
"DATA",999.21,2,3,152,0)
M;150.5;-0.760273528;43.18828419;0.19746421
"DATA",999.21,2,3,153,0)
M;151.5;-0.748815968;43.61895703;0.197444522
"DATA",999.21,2,3,154,0)
M;152.5;-0.737780398;44.0525931;0.197378345
"DATA",999.21,2,3,155,0)
M;153.5;-0.727181568;44.48903027;0.197266263
"DATA",999.21,2,3,156,0)
M;154.5;-0.717035494;44.92809483;0.197108968
"DATA",999.21,2,3,157,0)
M;155.5;-0.707358338;45.36960315;0.196907274
"DATA",999.21,2,3,158,0)
M;156.5;-0.698166437;45.81336172;0.196662115
"DATA",999.21,2,3,159,0)
M;157.5;-0.689476327;46.25916729;0.196374538
"DATA",999.21,2,3,160,0)
M;158.5;-0.68130475;46.70680701;0.196045701
"DATA",999.21,2,3,161,0)
M;159.5;-0.673668658;47.15605863;0.195676862
"DATA",999.21,2,3,162,0)
M;160.5;-0.666585194;47.60669074;0.19526938
"DATA",999.21,2,3,163,0)
M;161.5;-0.660069969;48.05846572;0.19482473
"DATA",999.21,2,3,164,0)
M;162.5;-0.654142602;48.51113138;0.19434441
"DATA",999.21,2,3,165,0)
M;163.5;-0.648819666;48.96443224;0.193830046
"DATA",999.21,2,3,166,0)
M;164.5;-0.644118611;49.41810374;0.193283319
"DATA",999.21,2,3,167,0)
M;165.5;-0.640056805;49.87187409;0.192705974
"DATA",999.21,2,3,168,0)
M;166.5;-0.636651424;50.32546478;0.192099812
"DATA",999.21,2,3,169,0)
M;167.5;-0.633919328;50.77859121;0.191466681
"DATA",999.21,2,3,170,0)
M;168.5;-0.631876912;51.23096332;0.190808471
"DATA",999.21,2,3,171,0)
M;169.5;-0.63053994;51.68228625;0.190127105
"DATA",999.21,2,3,172,0)
M;170.5;-0.629923353;52.13226113;0.18942453
"DATA",999.21,2,3,173,0)
M;171.5;-0.630041066;52.58058583;0.188702714
"DATA",999.21,2,3,174,0)
M;172.5;-0.630905733;53.02695588;0.187963636
"DATA",999.21,2,3,175,0)
M;173.5;-0.632528509;53.47106525;0.187209281
"DATA",999.21,2,3,176,0)
M;174.5;-0.634918779;53.91260737;0.18644163
"DATA",999.21,2,3,177,0)
M;175.5;-0.638083884;54.35127608;0.185662657
"DATA",999.21,2,3,178,0)
M;176.5;-0.642028835;54.78676659;0.184874323
"DATA",999.21,2,3,179,0)
M;177.5;-0.646756013;55.21877657;0.184078567
"DATA",999.21,2,3,180,0)
M;178.5;-0.652262297;55.64701131;0.183277339
"DATA",999.21,2,3,181,0)
M;179.5;-0.658551638;56.07116407;0.182472427
"DATA",999.21,2,3,182,0)
M;180.5;-0.665609025;56.49095862;0.181665781
"DATA",999.21,2,3,183,0)
M;181.5;-0.673425951;56.90610886;0.18085918
"DATA",999.21,2,3,184,0)
M;182.5;-0.681987284;57.31634059;0.180054395
"DATA",999.21,2,3,185,0)
M;183.5;-0.691273614;57.72138846;0.179253153
"DATA",999.21,2,3,186,0)
M;184.5;-0.701261055;58.12099696;0.178457127
"DATA",999.21,2,3,187,0)
M;185.5;-0.711921092;58.51492143;0.177667942
"DATA",999.21,2,3,188,0)
M;186.5;-0.723218488;58.90293208;0.176887192
"DATA",999.21,2,3,189,0)
M;187.5;-0.735121189;59.28479948;0.176116307
"DATA",999.21,2,3,190,0)
M;188.5;-0.747580416;59.66032626;0.175356814
"DATA",999.21,2,3,191,0)
M;189.5;-0.760550666;60.02931704;0.174610071
"DATA",999.21,2,3,192,0)
M;190.5;-0.773984558;60.39158721;0.173877336
"DATA",999.21,2,3,193,0)
M;191.5;-0.787817728;60.74698785;0.173159953
"DATA",999.21,2,3,194,0)
M;192.5;-0.801993069;61.09536847;0.172459052
"DATA",999.21,2,3,195,0)
M;193.5;-0.816446409;61.43660077;0.171775726
"DATA",999.21,2,3,196,0)
M;194.5;-0.831110299;61.77057372;0.171110986
"DATA",999.21,2,3,197,0)
M;195.5;-0.845914498;62.09719399;0.170465756
"DATA",999.21,2,3,198,0)
M;196.5;-0.860786514;62.41638628;0.169840869
"DATA",999.21,2,3,199,0)
M;197.5;-0.875652181;62.72809362;0.169237063
"DATA",999.21,2,3,200,0)
M;198.5;-0.890436283;63.03227756;0.168654971
"DATA",999.21,2,3,201,0)
M;199.5;-0.905063185;63.32891841;0.168095124
"DATA",999.21,2,3,202,0)
M;200.5;-0.91945749;63.61801537;0.16755794
"DATA",999.21,2,3,203,0)
M;201.5;-0.933544683;63.89958662;0.167043722
"DATA",999.21,2,3,204,0)
M;202.5;-0.947251765;64.17366943;0.166552654
"DATA",999.21,2,3,205,0)
M;203.5;-0.960507855;64.44032016;0.166084798
"DATA",999.21,2,3,206,0)
M;204.5;-0.973244762;64.69961427;0.16564009
"DATA",999.21,2,3,207,0)
M;205.5;-0.985397502;64.95164625;0.165218341
"DATA",999.21,2,3,208,0)
M;206.5;-0.996904762;65.1965295;0.164819236
"DATA",999.21,2,3,209,0)
M;207.5;-1.007705555;65.43440186;0.16444238
"DATA",999.21,2,3,210,0)
M;208.5;-1.017756047;65.66540015;0.164087103
"DATA",999.21,2,3,211,0)
M;209.5;-1.027002713;65.88970117;0.163752791
"DATA",999.21,2,3,212,0)
M;210.5;-1.035402243;66.10749114;0.163438661
"DATA",999.21,2,3,213,0)
M;211.5;-1.042916356;66.31897311;0.163143825
"DATA",999.21,2,3,214,0)
M;212.5;-1.049511871;66.52436618;0.162867311
"DATA",999.21,2,3,215,0)
M;213.5;-1.055160732;66.72390443;0.162608072
"DATA",999.21,2,3,216,0)
M;214.5;-1.059840019;66.91783563;0.162365006
"DATA",999.21,2,3,217,0)
M;215.5;-1.063531973;67.10641956;0.162136973
"DATA",999.21,2,3,218,0)
M;216.5;-1.066224038;67.28992603;0.161922819
"DATA",999.21,2,3,219,0)
M;217.5;-1.067908908;67.46863255;0.161721398
"DATA",999.21,2,3,220,0)
M;218.5;-1.068589885;67.64281378;0.16153153
"DATA",999.21,2,3,221,0)
M;219.5;-1.068261146;67.8127675;0.161352313
"DATA",999.21,2,3,222,0)
M;220.5;-1.066933756;67.97877331;0.161182785
"DATA",999.21,2,3,223,0)
M;221.5;-1.064620976;68.14111022;0.161022184
"DATA",999.21,2,3,224,0)
M;222.5;-1.061341755;68.30004741;0.160869943
"DATA",999.21,2,3,225,0)
M;223.5;-1.057116957;68.4558454;0.160725793
"DATA",999.21,2,3,226,0)
M;224.5;-1.051988979;68.60872174;0.160589574
"DATA",999.21,2,3,227,0)
M;225.5;-1.04599033;68.75889263;0.1604617
"DATA",999.21,2,3,228,0)
M;226.5;-1.039168248;68.90653028;0.160342924
"DATA",999.21,2,3,229,0)
M;227.5;-1.031579574;69.05176427;0.160234478
"DATA",999.21,2,3,230,0)
M;228.5;-1.023291946;69.19467288;0.160138158
"DATA",999.21,2,3,231,0)
M;229.5;-1.014385118;69.33527376;0.160056393
"DATA",999.21,2,3,232,0)
M;230.5;-1.004952366;69.47351373;0.159992344
"DATA",999.21,2,3,233,0)
M;231.5;-0.995101924;69.60925782;0.159949989
"DATA",999.21,2,3,234,0)
M;232.5;-0.984958307;69.74227758;0.159934231
"DATA",999.21,2,3,235,0)
M;233.5;-0.974663325;69.87223885;0.159951004
"DATA",999.21,2,3,236,0)
M;234.5;-0.964376555;69.99868896;0.160007394
"DATA",999.21,2,3,237,0)
M;235.5;-0.954274945;70.12104381;0.160111769
"DATA",999.21,2,3,238,0)
M;236.5;-0.944551187;70.23857482;0.160273918
"DATA",999.21,2,3,239,0)
M;237.5;-0.935410427;70.35039626;0.160505203
"DATA",999.21,2,3,240,0)
M;238.5;-0.927059784;70.45546105;0.160818788
"DATA",999.21,2,3,241,0)
M;239.5;-0.919718461;70.55252127;0.161229617
"DATA",999.21,2,3,242,0)
M;240;-0.91648762;70.59761453;0.161476792
"DATA",999.21,2,3,243,0)
F;0;1.509187507;3.39918645;0.142106724
"DATA",999.21,2,3,244,0)
F;0.5;1.357944315;3.79752846;0.138075916
"DATA",999.21,2,3,245,0)
F;1.5;1.105537708;4.544776513;0.131733888
"DATA",999.21,2,3,246,0)
F;2.5;0.902596648;5.230584214;0.126892697
"DATA",999.21,2,3,247,0)
F;3.5;0.734121414;5.859960798;0.123025182
"DATA",999.21,2,3,248,0)
F;4.5;0.590235275;6.437587751;0.119840911
"DATA",999.21,2,3,249,0)
F;5.5;0.464391566;6.967850457;0.117166868
"DATA",999.21,2,3,250,0)
F;6.5;0.352164071;7.454854109;0.11489384
"DATA",999.21,2,3,251,0)
F;7.5;0.250497889;7.902436186;0.112949644
"DATA",999.21,2,3,252,0)
F;8.5;0.15724751;8.314178377;0.11128469
"DATA",999.21,2,3,253,0)
F;9.5;0.070885725;8.693418423;0.109863709
"DATA",999.21,2,3,254,0)
F;10.5;-0.00968493;9.043261854;0.10866078
"DATA",999.21,2,3,255,0)
F;11.5;-0.085258;9.366593571;0.10765621
"DATA",999.21,2,3,256,0)
F;12.5;-0.15640945;9.666089185;0.106834517
"DATA",999.21,2,3,257,0)
F;13.5;-0.22355869;9.944226063;0.106183085
"DATA",999.21,2,3,258,0)
F;14.5;-0.28701346;10.20329397;0.105691242
"DATA",999.21,2,3,259,0)
F;15.5;-0.34699919;10.4454058;0.105349631
"DATA",999.21,2,3,260,0)
F;16.5;-0.40368918;10.67250698;0.105149754
"DATA",999.21,2,3,261,0)
F;17.5;-0.45721877;10.88638558;0.105083666
"DATA",999.21,2,3,262,0)
F;18.5;-0.50770077;11.08868151;0.105143752
"DATA",999.21,2,3,263,0)
F;19.5;-0.55523599;11.28089537;0.105322575
"DATA",999.21,2,3,264,0)
F;20.5;-0.59992113;11.46439708;0.10561278
"DATA",999.21,2,3,265,0)
F;21.5;-0.64185418;11.64043402;0.106007025
"DATA",999.21,2,3,266,0)
F;22.5;-0.6811381;11.81013895;0.106497957
"DATA",999.21,2,3,267,0)
F;23.5;-0.71788283;11.97453748;0.107078197
"DATA",999.21,2,3,268,0)
F;24.5;-0.75220617;12.13455528;0.107740346
"DATA",999.21,2,3,269,0)
F;25.5;-0.78423359;12.2910249;0.108477009
"DATA",999.21,2,3,270,0)
F;26.5;-0.81409743;12.44469237;0.109280822
"DATA",999.21,2,3,271,0)
F;27.5;-0.8419355;12.59622335;0.110144488
"DATA",999.21,2,3,272,0)
F;28.5;-0.86788939;12.74620911;0.111060814
"DATA",999.21,2,3,273,0)
F;29.5;-0.89210264;12.89517218;0.112022758
"DATA",999.21,2,3,274,0)
F;30.5;-0.91471881;13.04357164;0.113023466
"DATA",999.21,2,3,275,0)
F;31.5;-0.93587966;13.19180827;0.114056316
"DATA",999.21,2,3,276,0)
F;32.5;-0.95572344;13.34022934;0.115114952
"DATA",999.21,2,3,277,0)
F;33.5;-0.97438101;13.48913357;0.116193337
"DATA",999.21,2,3,278,0)
F;34.5;-0.99198075;13.63877446;0.11728575
"DATA",999.21,2,3,279,0)
F;35.5;-1.00864074;13.78936547;0.118386847
"DATA",999.21,2,3,280,0)
F;36.5;-1.024471278;13.94108332;0.119491669
"DATA",999.21,2,3,281,0)
F;37.5;-1.039573604;14.09407175;0.120595658
"DATA",999.21,2,3,282,0)
F;38.5;-1.054039479;14.24844498;0.121694676
"DATA",999.21,2,3,283,0)
F;39.5;-1.067946784;14.40429169;0.12278503
"DATA",999.21,2,3,284,0)
F;40.5;-1.081374153;14.56167529;0.1238634
"DATA",999.21,2,3,285,0)
F;41.5;-1.094381409;14.72064045;0.124926943
"DATA",999.21,2,3,286,0)
F;42.5;-1.107021613;14.88121352;0.125973221
"DATA",999.21,2,3,287,0)
F;43.5;-1.119338692;15.04340553;0.127000212
"DATA",999.21,2,3,288,0)
F;44.5;-1.131367831;15.20721443;0.128006292
"DATA",999.21,2,3,289,0)
F;45.5;-1.143135936;15.37262729;0.128990225
"DATA",999.21,2,3,290,0)
F;46.5;-1.15466215;15.53962221;0.129951143
"DATA",999.21,2,3,291,0)
F;47.5;-1.165958392;15.70817017;0.130888527
"DATA",999.21,2,3,292,0)
F;48.5;-1.177029925;15.87823668;0.131802186
"DATA",999.21,2,3,293,0)
F;49.5;-1.187871001;16.04978452;0.132692269
"DATA",999.21,2,3,294,0)
F;50.5;-1.198484073;16.2227706;0.133559108
"DATA",999.21,2,3,295,0)
F;51.5;-1.208853947;16.39715363;0.134403386
"DATA",999.21,2,3,296,0)
F;52.5;-1.218965087;16.57289122;0.13522599
"DATA",999.21,2,3,297,0)
F;53.5;-1.228798212;16.74994187;0.136028014
"DATA",999.21,2,3,298,0)
F;54.5;-1.238330855;16.92826587;0.136810739
"DATA",999.21,2,3,299,0)
F;55.5;-1.247537914;17.10782615;0.137575606
"DATA",999.21,2,3,300,0)
F;56.5;-1.256392179;17.28858894;0.138324193
"DATA",999.21,2,3,301,0)
F;57.5;-1.264864846;17.47052444;0.139058192
"DATA",999.21,2,3,302,0)
F;58.5;-1.272926011;17.65360733;0.139779387
"DATA",999.21,2,3,303,0)
F;59.5;-1.28054514;17.83781722;0.140489635
"DATA",999.21,2,3,304,0)
F;60.5;-1.287691525;18.02313904;0.141190842
"DATA",999.21,2,3,305,0)
F;61.5;-1.294332076;18.20956418;0.141884974
"DATA",999.21,2,3,306,0)
F;62.5;-1.300441561;18.3970876;0.142573939
"DATA",999.21,2,3,307,0)
F;63.5;-1.305989011;18.58571243;0.143259709
"DATA",999.21,2,3,308,0)
F;64.5;-1.310946941;18.77544728;0.143944216
"DATA",999.21,2,3,309,0)
F;65.5;-1.315289534;18.966307;0.144629359
"DATA",999.21,2,3,310,0)
F;66.5;-1.318992925;19.15831267;0.14531699
"DATA",999.21,2,3,311,0)
F;67.5;-1.322035315;19.35149163;0.146008903
"DATA",999.21,2,3,312,0)
F;68.5;-1.324398133;19.54587708;0.146706813
"DATA",999.21,2,3,313,0)
F;69.5;-1.326064539;19.74150854;0.147412363
"DATA",999.21,2,3,314,0)
F;70.5;-1.327020415;19.93843145;0.148127109
"DATA",999.21,2,3,315,0)
F;71.5;-1.327256387;20.13669623;0.148852482
"DATA",999.21,2,3,316,0)
F;72.5;-1.326763834;20.33635961;0.149589838
"DATA",999.21,2,3,317,0)
F;73.5;-1.325538668;20.53748298;0.1503404
"DATA",999.21,2,3,318,0)
F;74.5;-1.323579654;20.74013277;0.151105277
"DATA",999.21,2,3,319,0)
F;75.5;-1.320888012;20.94438028;0.151885464
"DATA",999.21,2,3,320,0)
F;76.5;-1.317468695;21.15030093;0.152681819
"DATA",999.21,2,3,321,0)
F;77.5;-1.313331446;21.35797332;0.15349505
"DATA",999.21,2,3,322,0)
F;78.5;-1.308487081;21.56748045;0.154325756
"DATA",999.21,2,3,323,0)
F;79.5;-1.302948173;21.77890902;0.155174414
"DATA",999.21,2,3,324,0)
F;80.5;-1.296733913;21.99234686;0.15604132
"DATA",999.21,2,3,325,0)
F;81.5;-1.289863329;22.20788541;0.156926667
"DATA",999.21,2,3,326,0)
F;82.5;-1.282358762;22.4256177;0.157830504
"DATA",999.21,2,3,327,0)
F;83.5;-1.274244931;22.64563824;0.158752743
"DATA",999.21,2,3,328,0)
F;84.5;-1.265548787;22.86804258;0.159693163
"DATA",999.21,2,3,329,0)
F;85.5;-1.256299378;23.09292679;0.16065141
"DATA",999.21,2,3,330,0)
F;86.5;-1.24653066;23.32038549;0.161626956
"DATA",999.21,2,3,331,0)
F;87.5;-1.236266832;23.55051871;0.162619308
"DATA",999.21,2,3,332,0)
F;88.5;-1.225551344;23.78341652;0.1636276
"DATA",999.21,2,3,333,0)
F;89.5;-1.214410914;24.01917703;0.1646511
"DATA",999.21,2,3,334,0)
F;90.5;-1.202884389;24.25789074;0.165688808
"DATA",999.21,2,3,335,0)
F;91.5;-1.191007906;24.49964778;0.166739662
"DATA",999.21,2,3,336,0)
F;92.5;-1.178818621;24.74453536;0.167802495
"DATA",999.21,2,3,337,0)
F;93.5;-1.166354376;24.99263735;0.168876037
"DATA",999.21,2,3,338,0)
F;94.5;-1.153653688;25.24403371;0.169958922
"DATA",999.21,2,3,339,0)
F;95.5;-1.140751404;25.49880264;0.171049756
"DATA",999.21,2,3,340,0)
F;96.5;-1.127684095;25.7570168;0.172147043
"DATA",999.21,2,3,341,0)
F;97.5;-1.114490244;26.01874261;0.173249185
"DATA",999.21,2,3,342,0)
F;98.5;-1.101204848;26.28404312;0.174354569
"DATA",999.21,2,3,343,0)
F;99.5;-1.087863413;26.55297507;0.175461512
"DATA",999.21,2,3,344,0)
F;100.5;-1.074500927;26.82558904;0.176568284
"DATA",999.21,2,3,345,0)
F;101.5;-1.061151213;27.1019295;0.177673124
"DATA",999.21,2,3,346,0)
F;102.5;-1.047847141;27.38203422;0.178774242
"DATA",999.21,2,3,347,0)
F;103.5;-1.034620551;27.66593402;0.179869829
"DATA",999.21,2,3,348,0)
F;104.5;-1.021502197;27.9536524;0.180958063
"DATA",999.21,2,3,349,0)
F;105.5;-1.008521695;28.24520531;0.182037118
"DATA",999.21,2,3,350,0)
F;106.5;-0.995707494;28.54060085;0.183105172
"DATA",999.21,2,3,351,0)
F;107.5;-0.983086844;28.83983907;0.18416041
"DATA",999.21,2,3,352,0)
F;108.5;-0.970685789;29.14291171;0.185201039
"DATA",999.21,2,3,353,0)
F;109.5;-0.958529157;29.44980208;0.186225287
"DATA",999.21,2,3,354,0)
F;110.5;-0.946640568;29.76048479;0.187231416
"DATA",999.21,2,3,355,0)
F;111.5;-0.935042447;30.0749257;0.188217723
"DATA",999.21,2,3,356,0)
F;112.5;-0.923756041;30.39308176;0.18918255
"DATA",999.21,2,3,357,0)
F;113.5;-0.912801445;30.71490093;0.190124286
"DATA",999.21,2,3,358,0)
F;114.5;-0.902197638;31.0403221;0.191041375
"DATA",999.21,2,3,359,0)
F;115.5;-0.891962513;31.36927506;0.191932319
"DATA",999.21,2,3,360,0)
F;116.5;-0.882112919;31.7016805;0.192795682
"DATA",999.21,2,3,361,0)
F;117.5;-0.872664706;32.03744999;0.193630095
"DATA",999.21,2,3,362,0)
F;118.5;-0.863632768;32.37648607;0.19443426
"DATA",999.21,2,3,363,0)
F;119.5;-0.855031092;32.71868225;0.195206948
"DATA",999.21,2,3,364,0)
F;120.5;-0.846872805;33.06392318;0.195947008
"DATA",999.21,2,3,365,0)
F;121.5;-0.839170224;33.4120847;0.196653365
"DATA",999.21,2,3,366,0)
F;122.5;-0.831934903;33.76303402;0.197325023
"DATA",999.21,2,3,367,0)
F;123.5;-0.825177688;34.1166299;0.197961065
"DATA",999.21,2,3,368,0)
F;124.5;-0.818908758;34.47272283;0.198560655
"DATA",999.21,2,3,369,0)
F;125.5;-0.813137675;34.83115524;0.199123037
"DATA",999.21,2,3,370,0)
F;126.5;-0.807873433;35.19176177;0.199647538
"DATA",999.21,2,3,371,0)
F;127.5;-0.803122613;35.55437176;0.200133598
"DATA",999.21,2,3,372,0)
F;128.5;-0.79889771;35.91879976;0.200580618
"DATA",999.21,2,3,373,0)
F;129.5;-0.795203499;36.28486194;0.200988216
"DATA",999.21,2,3,374,0)
F;130.5;-0.792047959;36.65236365;0.201356017
"DATA",999.21,2,3,375,0)
F;131.5;-0.789435274;37.02110818;0.201683791
"DATA",999.21,2,3,376,0)
F;132.5;-0.787374433;37.39088668;0.201971282
"DATA",999.21,2,3,377,0)
F;133.5;-0.785870695;37.76148905;0.202218375
"DATA",999.21,2,3,378,0)
F;134.5;-0.784929893;38.1326991;0.202425006
"DATA",999.21,2,3,379,0)
F;135.5;-0.784557605;38.50429603;0.202591183
"DATA",999.21,2,3,380,0)
F;136.5;-0.78475917;38.87605489;0.20271698
"DATA",999.21,2,3,381,0)
F;137.5;-0.785539703;39.24774707;0.202802535
"DATA",999.21,2,3,382,0)
F;138.5;-0.786904102;39.61914076;0.202848049
"DATA",999.21,2,3,383,0)
F;139.5;-0.788858208;39.98999994;0.202853758
"DATA",999.21,2,3,384,0)
F;140.5;-0.791403051;40.36009244;0.202820053
"DATA",999.21,2,3,385,0)
F;141.5;-0.794546352;40.72917544;0.202747236
"DATA",999.21,2,3,386,0)
F;142.5;-0.79829102;41.09701099;0.202635758
"DATA",999.21,2,3,387,0)
F;143.5;-0.802640891;41.46335907;0.202486098
"DATA",999.21,2,3,388,0)
F;144.5;-0.807599577;41.82797963;0.202298783
"DATA",999.21,2,3,389,0)
F;145.5;-0.813170461;42.19063313;0.202074385
"DATA",999.21,2,3,390,0)
F;146.5;-0.819356692;42.55108107;0.201813521
"DATA",999.21,2,3,391,0)
F;147.5;-0.826161176;42.90908653;0.201516851
"DATA",999.21,2,3,392,0)
F;148.5;-0.833586038;43.2644155;0.201185082
"DATA",999.21,2,3,393,0)
F;149.5;-0.841634949;43.61683402;0.200818928
"DATA",999.21,2,3,394,0)
F;150.5;-0.850307441;43.9661169;0.200419208
"DATA",999.21,2,3,395,0)
F;151.5;-0.859607525;44.31203579;0.199986681
"DATA",999.21,2,3,396,0)
F;152.5;-0.869534339;44.65437319;0.199522233
"DATA",999.21,2,3,397,0)
F;153.5;-0.880088651;44.99291356;0.199026736
"DATA",999.21,2,3,398,0)
F;154.5;-0.891270585;45.32744704;0.198501096
"DATA",999.21,2,3,399,0)
F;155.5;-0.903079458;45.65777013;0.197946255
"DATA",999.21,2,3,400,0)
F;156.5;-0.915513542;45.98368656;0.197363191
"DATA",999.21,2,3,401,0)
F;157.5;-0.928569454;46.30500858;0.196752931
"DATA",999.21,2,3,402,0)
F;158.5;-0.942245864;46.62155183;0.196116472
"DATA",999.21,2,3,403,0)
F;159.5;-0.956537923;46.93314404;0.19545489
"DATA",999.21,2,3,404,0)
F;160.5;-0.971440492;47.23962058;0.194769279
"DATA",999.21,2,3,405,0)
F;161.5;-0.986947308;47.54082604;0.194060758
"DATA",999.21,2,3,406,0)
F;162.5;-1.003050887;47.83661466;0.193330477
"DATA",999.21,2,3,407,0)
F;163.5;-1.019742425;48.12685082;0.192579614
"DATA",999.21,2,3,408,0)
F;164.5;-1.037011698;48.41140938;0.191809374
"DATA",999.21,2,3,409,0)
F;165.5;-1.054846957;48.69017613;0.191020995
"DATA",999.21,2,3,410,0)
F;166.5;-1.073234825;48.9630481;0.190215739
"DATA",999.21,2,3,411,0)
F;167.5;-1.092160195;49.22993391;0.189394901
"DATA",999.21,2,3,412,0)
F;168.5;-1.111606122;49.49075409;0.188559804
"DATA",999.21,2,3,413,0)
F;169.5;-1.131553723;49.74544132;0.187711798
"DATA",999.21,2,3,414,0)
F;170.5;-1.151982079;49.99394068;0.186852266
"DATA",999.21,2,3,415,0)
F;171.5;-1.172868141;50.23620985;0.185982617
"DATA",999.21,2,3,416,0)
F;172.5;-1.19418462;50.47222213;0.185104331
"DATA",999.21,2,3,417,0)
F;173.5;-1.215907492;50.70195581;0.184218803
"DATA",999.21,2,3,418,0)
F;174.5;-1.238005268;50.92540942;0.183327556
"DATA",999.21,2,3,419,0)
F;175.5;-1.260445591;51.14259229;0.182432113
"DATA",999.21,2,3,420,0)
F;176.5;-1.283193626;51.3535268;0.181534018
"DATA",999.21,2,3,421,0)
F;177.5;-1.306212032;51.55824831;0.180634839
"DATA",999.21,2,3,422,0)
F;178.5;-1.329460945;51.75680513;0.179736168
"DATA",999.21,2,3,423,0)
F;179.5;-1.35289798;51.94925841;0.178839614
"DATA",999.21,2,3,424,0)
F;180.5;-1.376478254;52.13568193;0.177946804
"DATA",999.21,2,3,425,0)
F;181.5;-1.400154426;52.31616197;0.177059379
"DATA",999.21,2,3,426,0)
F;182.5;-1.423876772;52.49079703;0.17617899
"DATA",999.21,2,3,427,0)
F;183.5;-1.447593267;52.65969757;0.175307296
"DATA",999.21,2,3,428,0)
F;184.5;-1.471249702;52.82298572;0.174445958
"DATA",999.21,2,3,429,0)
F;185.5;-1.494789826;52.9807949;0.173596636
"DATA",999.21,2,3,430,0)
F;186.5;-1.518155513;53.13326946;0.172760982
"DATA",999.21,2,3,431,0)
F;187.5;-1.541286949;53.28056425;0.17194064
"DATA",999.21,2,3,432,0)
F;188.5;-1.564122852;53.42284417;0.171137232
"DATA",999.21,2,3,433,0)
F;189.5;-1.586600712;53.5602837;0.170352363
"DATA",999.21,2,3,434,0)
F;190.5;-1.608657054;53.69306637;0.169587605
"DATA",999.21,2,3,435,0)
F;191.5;-1.630227728;53.82138422;0.168844497
"DATA",999.21,2,3,436,0)
F;192.5;-1.651248208;53.94543725;0.168124538
"DATA",999.21,2,3,437,0)
F;193.5;-1.67165392;54.06543278;0.167429179
"DATA",999.21,2,3,438,0)
F;194.5;-1.691380583;54.18158486;0.166759816
"DATA",999.21,2,3,439,0)
F;195.5;-1.710364557;54.29411356;0.166117788
"DATA",999.21,2,3,440,0)
F;196.5;-1.728543207;54.40324431;0.165504365
"DATA",999.21,2,3,441,0)
F;197.5;-1.745855274;54.50920717;0.164920747
"DATA",999.21,2,3,442,0)
F;198.5;-1.762241248;54.61223603;0.164368054
"DATA",999.21,2,3,443,0)
F;199.5;-1.777643747;54.71256787;0.16384732
"DATA",999.21,2,3,444,0)
F;200.5;-1.792007891;54.81044184;0.163359491
"DATA",999.21,2,3,445,0)
F;201.5;-1.805281675;54.90609842;0.162905415
"DATA",999.21,2,3,446,0)
F;202.5;-1.817416335;54.99977846;0.162485839
"DATA",999.21,2,3,447,0)
F;203.5;-1.828366707;55.09172217;0.162101402
"DATA",999.21,2,3,448,0)
F;204.5;-1.838091576;55.18216811;0.161752634
"DATA",999.21,2,3,449,0)
F;205.5;-1.846554015;55.271352;0.161439944
"DATA",999.21,2,3,450,0)
F;206.5;-1.853721704;55.35950558;0.161163623
"DATA",999.21,2,3,451,0)
F;207.5;-1.859567242;55.44685531;0.160923833
"DATA",999.21,2,3,452,0)
F;208.5;-1.864068443;55.53362107;0.160720609
"DATA",999.21,2,3,453,0)
F;209.5;-1.86720861;55.62001464;0.16055385
"DATA",999.21,2,3,454,0)
F;210.5;-1.8689768;55.70623826;0.160423319
"DATA",999.21,2,3,455,0)
F;211.5;-1.869371157;55.79247939;0.160328578
"DATA",999.21,2,3,456,0)
F;212.5;-1.868386498;55.87892356;0.160269232
"DATA",999.21,2,3,457,0)
F;213.5;-1.866033924;55.96573022;0.160244549
"DATA",999.21,2,3,458,0)
F;214.5;-1.862327775;56.05304601;0.160253714
"DATA",999.21,2,3,459,0)
F;215.5;-1.857289195;56.14099882;0.160295765
"DATA",999.21,2,3,460,0)
F;216.5;-1.850946286;56.22969564;0.16036959
"DATA",999.21,2,3,461,0)
F;217.5;-1.84333425;56.3192203;0.16047393
"DATA",999.21,2,3,462,0)
F;218.5;-1.834495505;56.40963105;0.160607377
"DATA",999.21,2,3,463,0)
F;219.5;-1.824479785;56.50095811;0.16076838
"DATA",999.21,2,3,464,0)
F;220.5;-1.813344222;56.59320107;0.160955249
"DATA",999.21,2,3,465,0)
F;221.5;-1.801153404;56.68632619;0.161166157
"DATA",999.21,2,3,466,0)
F;222.5;-1.787979408;56.78026364;0.161399151
"DATA",999.21,2,3,467,0)
F;223.5;-1.773901816;56.87490465;0.161652158
"DATA",999.21,2,3,468,0)
F;224.5;-1.759007704;56.97009856;0.161922998
"DATA",999.21,2,3,469,0)
F;225.5;-1.743391606;57.06564989;0.162209399
"DATA",999.21,2,3,470,0)
F;226.5;-1.72715546;57.16131528;0.162509006
"DATA",999.21,2,3,471,0)
F;227.5;-1.710410733;57.25679821;0.162819353
"DATA",999.21,2,3,472,0)
F;228.5;-1.693267093;57.35175792;0.163138124
"DATA",999.21,2,3,473,0)
F;229.5;-1.67585442;57.44578172;0.163462715
"DATA",999.21,2,3,474,0)
F;230.5;-1.658302847;57.53840429;0.163790683
"DATA",999.21,2,3,475,0)
F;231.5;-1.640747464;57.62910094;0.164119574
"DATA",999.21,2,3,476,0)
F;232.5;-1.623332891;57.7172758;0.164446997
"DATA",999.21,2,3,477,0)
F;233.5;-1.606209374;57.80226553;0.164770638
"DATA",999.21,2,3,478,0)
F;234.5;-1.589533346;57.88333502;0.165088289
"DATA",999.21,2,3,479,0)
F;235.5;-1.573467222;57.95967458;0.165397881
"DATA",999.21,2,3,480,0)
F;236.5;-1.558179166;58.0303973;0.165697507
"DATA",999.21,2,3,481,0)
F;237.5;-1.543846192;58.09453209;0.165985386
"DATA",999.21,2,3,482,0)
F;238.5;-1.530642461;58.15103575;0.166260109
"DATA",999.21,2,3,483,0)
F;239.5;-1.518754013;58.1987714;0.16652037
"DATA",999.21,2,3,484,0)
F;240;-1.51336185;58.21897289;0.166644749
"DATA",999.21,2,4)
S:X?1.N1" "1.N X=$P(X," ",2)/16+X D VALIDNUM(.X,1,1000)
"DATA",999.21,2,99,0)
^999.2199^6^6^3070611^^
"DATA",999.21,2,99,1,0)
Enter weight in kilograms (if metric units enabled) or pounds.
"DATA",999.21,2,99,2,0)

"DATA",999.21,2,99,3,0)
To force units regardless of metric setting, append kg or lb to the value.
"DATA",999.21,2,99,4,0)

"DATA",999.21,2,99,5,0)
If metric units are not enabled, entering two integer values separated by
"DATA",999.21,2,99,6,0)
a space is interpreted as pounds and ounces.
"DATA",999.21,3,0)
TEMPERATURE^0^F^C^^^TMP
"DATA",999.21,3,1)
S X=(X-32)*(5/9)
"DATA",999.21,3,2)
S X=X*9/5+32
"DATA",999.21,3,4)
D VALIDNUM(.X,70,120)
"DATA",999.21,3,99,0)
^^3^3^3050512.001056
"DATA",999.21,3,99,1,0)
Enter temperature in degrees Centigrade (if metric units enabled) or Fahrenheit.
"DATA",999.21,3,99,2,0)

"DATA",999.21,3,99,3,0)
To force units regardless of metric setting, append C or F to the value.
"DATA",999.21,4,0)
BLOOD PRESSURE^0^mmHg^mmHg^90^150^BP
"DATA",999.21,4,4)
D VALIDBP(.X,20,275,20,200)
"DATA",999.21,4,99,0)
^999.2199^8^8^3060206^^
"DATA",999.21,4,99,1,0)
Enter a blood pressure measurement, in mmHg, in the format:
"DATA",999.21,4,99,2,0)

"DATA",999.21,4,99,3,0)
     <Systolic>/<Diastolic>
"DATA",999.21,4,99,4,0)

"DATA",999.21,4,99,5,0)
For example,
"DATA",999.21,4,99,6,0)

"DATA",999.21,4,99,7,0)
       120/95
"DATA",999.21,4,99,8,0)

"DATA",999.21,5,0)
PULSE^0^/min^^60^100^PU
"DATA",999.21,5,4)
D VALIDINT(.X,0,300)
"DATA",999.21,5,99,0)
^^1^1^3060202.223617
"DATA",999.21,5,99,1,0)
Enter pulse as beats per minute.  Allowable range is 30-250 bpm.
"DATA",999.21,6,0)
HEAD CIRCUMFERENCE^0^in^cm^^^HC
"DATA",999.21,6,1)
S X=X*2.54
"DATA",999.21,6,2)
S X=X/2.54
"DATA",999.21,6,3,0)
^999.2109^76^76^3060202^^
"DATA",999.21,6,3,1,0)
M;0;4.427825037;35.81366835;0.052172542
"DATA",999.21,6,3,2,0)
M;0.5;4.310927464;37.19361054;0.047259148
"DATA",999.21,6,3,3,0)
M;1.5;3.869576802;39.20742929;0.040947903
"DATA",999.21,6,3,4,0)
M;2.5;3.305593039;40.65233195;0.037027722
"DATA",999.21,6,3,5,0)
M;3.5;2.720590297;41.76516959;0.034364245
"DATA",999.21,6,3,6,0)
M;4.5;2.16804824;42.66116148;0.032462175
"DATA",999.21,6,3,7,0)
M;5.5;1.675465689;43.40488731;0.031064702
"DATA",999.21,6,3,8,0)
M;6.5;1.255160322;44.03609923;0.03002267
"DATA",999.21,6,3,9,0)
M;7.5;0.91054114;44.58096912;0.029242173
"DATA",999.21,6,3,10,0)
M;8.5;0.639510474;45.05761215;0.028660454
"DATA",999.21,6,3,11,0)
M;9.5;0.436978864;45.4790756;0.0282336
"DATA",999.21,6,3,12,0)
M;10.5;0.296275856;45.85505706;0.027929764
"DATA",999.21,6,3,13,0)
M;11.5;0.210107251;46.19295427;0.027725179
"DATA",999.21,6,3,14,0)
M;12.5;0.171147024;46.49853438;0.027601686
"DATA",999.21,6,3,15,0)
M;13.5;0.172393886;46.77637684;0.027545148
"DATA",999.21,6,3,16,0)
M;14.5;0.207371541;47.03017599;0.027544382
"DATA",999.21,6,3,17,0)
M;15.5;0.270226126;47.2629533;0.027590417
"DATA",999.21,6,3,18,0)
M;16.5;0.355757274;47.47720989;0.02767598
"DATA",999.21,6,3,19,0)
M;17.5;0.459407627;47.67503833;0.027795115
"DATA",999.21,6,3,20,0)
M;18.5;0.577227615;47.85820606;0.0279429
"DATA",999.21,6,3,21,0)
M;19.5;0.705826778;48.02821867;0.028115241
"DATA",999.21,6,3,22,0)
M;20.5;0.842319055;48.18636864;0.028308707
"DATA",999.21,6,3,23,0)
M;21.5;0.984266833;48.3337732;0.028520407
"DATA",999.21,6,3,24,0)
M;22.5;1.129626698;48.47140432;0.028747896
"DATA",999.21,6,3,25,0)
M;23.5;1.276691223;48.60011223;0.028989089
"DATA",999.21,6,3,26,0)
M;24.5;1.424084853;48.72064621;0.029242207
"DATA",999.21,6,3,27,0)
M;25.5;1.570621291;48.83366629;0.029505723
"DATA",999.21,6,3,28,0)
M;26.5;1.715393998;48.93976089;0.029778323
"DATA",999.21,6,3,29,0)
M;27.5;1.857652984;49.03945383;0.030058871
"DATA",999.21,6,3,30,0)
M;28.5;1.996810563;49.13321432;0.030346384
"DATA",999.21,6,3,31,0)
M;29.5;2.132411346;49.22146409;0.030640006
"DATA",999.21,6,3,32,0)
M;30.5;2.264111009;49.30458348;0.030938992
"DATA",999.21,6,3,33,0)
M;31.5;2.391658052;49.38291658;0.031242693
"DATA",999.21,6,3,34,0)
M;32.5;2.514878222;49.45677569;0.031550537
"DATA",999.21,6,3,35,0)
M;33.5;2.633661226;49.526445;0.031862026
"DATA",999.21,6,3,36,0)
M;34.5;2.747949445;49.59218385;0.03217672
"DATA",999.21,6,3,37,0)
M;35.5;2.857728375;49.65422952;0.032494231
"DATA",999.21,6,3,38,0)
M;36;2.910932095;49.68393611;0.032653934
"DATA",999.21,6,3,39,0)
F;0;-1.298749689;34.7115617;0.046905108
"DATA",999.21,6,3,40,0)
F;0.5;-1.440271514;36.03453876;0.042999604
"DATA",999.21,6,3,41,0)
F;1.5;-1.581016348;37.97671987;0.038067862
"DATA",999.21,6,3,42,0)
F;2.5;-1.593136386;39.3801263;0.035079612
"DATA",999.21,6,3,43,0)
F;3.5;-1.521492427;40.46773733;0.033096443
"DATA",999.21,6,3,44,0)
F;4.5;-1.394565915;41.34841008;0.03170963
"DATA",999.21,6,3,45,0)
F;5.5;-1.231713389;42.0833507;0.030709039
"DATA",999.21,6,3,46,0)
F;6.5;-1.046582628;42.71033603;0.029974303
"DATA",999.21,6,3,47,0)
F;7.5;-0.848932692;43.25428882;0.029430992
"DATA",999.21,6,3,48,0)
F;8.5;-0.645779124;43.73249646;0.029030379
"DATA",999.21,6,3,49,0)
F;9.5;-0.442165412;44.15742837;0.028739112
"DATA",999.21,6,3,50,0)
F;10.5;-0.24163206;44.53836794;0.028533537
"DATA",999.21,6,3,51,0)
F;11.5;-0.046673786;44.88240562;0.028396382
"DATA",999.21,6,3,52,0)
F;12.5;0.141031094;45.19507651;0.028314722
"DATA",999.21,6,3,53,0)
F;13.5;0.320403169;45.48078147;0.028278682
"DATA",999.21,6,3,54,0)
F;14.5;0.490807133;45.74307527;0.028280585
"DATA",999.21,6,3,55,0)
F;15.5;0.65193505;45.98486901;0.028314363
"DATA",999.21,6,3,56,0)
F;16.5;0.803718086;46.20857558;0.028375159
"DATA",999.21,6,3,57,0)
F;17.5;0.946259679;46.41621635;0.028459033
"DATA",999.21,6,3,58,0)
F;18.5;1.079784984;46.60950084;0.028562759
"DATA",999.21,6,3,59,0)
F;19.5;1.204602687;46.78988722;0.028683666
"DATA",999.21,6,3,60,0)
F;20.5;1.321076285;46.95862881;0.028819525
"DATA",999.21,6,3,61,0)
F;21.5;1.429602576;47.11681039;0.028968459
"DATA",999.21,6,3,62,0)
F;22.5;1.530595677;47.26537682;0.029128879
"DATA",999.21,6,3,63,0)
F;23.5;1.624475262;47.40515585;0.029299426
"DATA",999.21,6,3,64,0)
F;24.5;1.71165803;47.53687649;0.029478937
"DATA",999.21,6,3,65,0)
F;25.5;1.792551616;47.66118396;0.029666406
"DATA",999.21,6,3,66,0)
F;26.5;1.867550375;47.77865186;0.02986096
"DATA",999.21,6,3,67,0)
F;27.5;1.93703258;47.8897923;0.030061839
"DATA",999.21,6,3,68,0)
F;28.5;2.001358669;47.99506422;0.030268375
"DATA",999.21,6,3,69,0)
F;29.5;2.060870301;48.09488048;0.030479985
"DATA",999.21,6,3,70,0)
F;30.5;2.115889982;48.18961365;0.03069615
"DATA",999.21,6,3,71,0)
F;31.5;2.16672113;48.2796011;0.030916413
"DATA",999.21,6,3,72,0)
F;32.5;2.21364844;48.36514917;0.031140368
"DATA",999.21,6,3,73,0)
F;33.5;2.256943216;48.44653703;0.031367651
"DATA",999.21,6,3,74,0)
F;34.5;2.296844024;48.52401894;0.031597939
"DATA",999.21,6,3,75,0)
F;35.5;2.333589434;48.59782828;0.031830942
"DATA",999.21,6,3,76,0)
F;36;2.350847202;48.63342328;0.031948378 
"DATA",999.21,6,4)
D VALIDNUM(.X,10,30)
"DATA",999.21,6,99,0)
^999.2199^5^5^3060202^
"DATA",999.21,6,99,1,0)
Enter head circumference in centimeters (if metric units enabled) or inches.
"DATA",999.21,6,99,2,0)

"DATA",999.21,6,99,3,0)
To force units regardless of metric setting, append cm or in to the value.
"DATA",999.21,6,99,4,0)

"DATA",999.21,6,99,5,0)
Valid range is 10-30 inches (25.4-76.2 centimeters), inclusive.
"DATA",999.21,7,0)
HEARING^^^^^^HE
"DATA",999.21,7,4)
S X=$$UP^XLFSTR(X) I X'="A",X'="N" S X="-1^Input must be either (N)ormal or (A)bnormal."
"DATA",999.21,7,99,0)
^999.2199^5^5^3060207^
"DATA",999.21,7,99,1,0)
Enter one of the following:
"DATA",999.21,7,99,2,0)

"DATA",999.21,7,99,3,0)
       A       for abnormal
"DATA",999.21,7,99,4,0)
       N       for normal
"DATA",999.21,7,99,5,0)

"DATA",999.21,8,0)
VISION UNCORRECTED^^^^^^VU
"DATA",999.21,8,4)
D VU^AUPNVMSR
"DATA",999.21,8,99,0)
^^5^5^3060202.224027
"DATA",999.21,8,99,1,0)
Enter denominators only.  The 20/ is assumed.  
"DATA",999.21,8,99,2,0)

"DATA",999.21,8,99,3,0)
Enter right eye / left eye in form n/n (20/20).  If right eye only,
"DATA",999.21,8,99,4,0)
enter n (20). If left eye only enter /n (/20).  Must be between 10 and 
"DATA",999.21,8,99,5,0)
999 or must be HM, LP or NLP.
"DATA",999.21,9,0)
VISION CORRECTED^^^^^^VC
"DATA",999.21,9,4)
D VC^AUPNVMSR
"DATA",999.21,9,99,0)
^^11^11^3070613.08445
"DATA",999.21,9,99,1,0)
Enter denominators only.  The 20/ is assumed.  
"DATA",999.21,9,99,2,0)

"DATA",999.21,9,99,3,0)
Enter right eye / left eye in form n/n (20/20).  If right eye only,
"DATA",999.21,9,99,4,0)
enter n (20). If left eye only enter /n (/20).  Must be between 10 and 
"DATA",999.21,9,99,5,0)
999 or must be HM, LP or NLP.
"DATA",999.21,9,99,6,0)

"DATA",999.21,9,99,7,0)
  HM  - hand motion (can detect hand motion 1-2 feet away, but cannot
"DATA",999.21,9,99,8,0)
        count number of fingers presented at same range)
"DATA",999.21,9,99,9,0)
  LP  - light perception (can distinguish light from dark)
"DATA",999.21,9,99,10,0)
  NLP - no light perception
"DATA",999.21,9,99,11,0)

"DATA",999.21,10,0)
AUDIOMETRY^^^^^^AUD
"DATA",999.21,10,4)
K:X'?16(1.3N1"/") X Q:'$D(X)  N Y,Z F Y=1:1:16 S Z=$P(X,"/",Y) D VALIDINT(.Z,0,110) I Z[U S X=Z Q
"DATA",999.21,10,99,0)
^999.2199^5^5^3060202^
"DATA",999.21,10,99,1,0)
Enter 8 readings for right ear followed by 8 readings for left ear,
"DATA",999.21,10,99,2,0)
each separated by slashes (/).  Values must be between 0 and 110, 
"DATA",999.21,10,99,3,0)
inclusive.  For example:
"DATA",999.21,10,99,4,0)

"DATA",999.21,10,99,5,0)
         100/100/100/95/90/90/85/80/105/105/105/105/100/100/95/90/
"DATA",999.21,11,0)
TONOMETRY^^^^^^TON
"DATA",999.21,11,4)
D VALIDTON(.X)
"DATA",999.21,11,99,0)
^^9^9^3051114.154532
"DATA",999.21,11,99,1,0)
Enter intraocular pressure measurements in one of the following formats:
"DATA",999.21,11,99,2,0)

"DATA",999.21,11,99,3,0)
       Format          Example
"DATA",999.21,11,99,4,0)
       ------          -------
"DATA",999.21,11,99,5,0)
   <right>/<left>       36/42
"DATA",999.21,11,99,6,0)
      <right>            36
"DATA",999.21,11,99,7,0)
      /<left>            /42
"DATA",999.21,11,99,8,0)
      R<right>           R36
"DATA",999.21,11,99,9,0)
      L<left>            L42
"DATA",999.21,12,0)
ABDOMINAL GIRTH^1^in^cm^^^AG
"DATA",999.21,12,1)
S X=X*2.54
"DATA",999.21,12,2)
S X=X/2.54
"DATA",999.21,12,4)
D VALIDNUM(.X,0,150)
"DATA",999.21,12,99,0)
^^5^5^3060202.221112
"DATA",999.21,12,99,1,0)
Enter abdominal girth in centimeters (if metric units enabled) or inches.
"DATA",999.21,12,99,2,0)

"DATA",999.21,12,99,3,0)
To force units regardless of metric setting, append cm or in to the value.
"DATA",999.21,12,99,4,0)

"DATA",999.21,12,99,5,0)
Valid range is 0-150 centimeters (0-59 inches), inclusive.
"DATA",999.21,13,0)
FUNDAL HEIGHT^1^in^cm^^^FH
"DATA",999.21,13,1)
S X=X*2.54
"DATA",999.21,13,2)
S X=X/2.54
"DATA",999.21,13,4)
D VALIDNUM(.X,0,100)
"DATA",999.21,13,99,0)
^^5^5^3060202.221623
"DATA",999.21,13,99,1,0)
Enter fundal height in centimeters (if metric units enabled) or inches.
"DATA",999.21,13,99,2,0)

"DATA",999.21,13,99,3,0)
To force units regardless of metric setting, append cm or in to the value.
"DATA",999.21,13,99,4,0)

"DATA",999.21,13,99,5,0)
Valid range is 0-100 centimeters (0-39 inches), inclusive.
"DATA",999.21,14,0)
FETAL HEART TONES^^^^^^FT
"DATA",999.21,14,4)
D VALIDINT(.X,0,400)
"DATA",999.21,14,99,0)
^^2^2^3060202.171453
"DATA",999.21,14,99,1,0)
Enter fetal heart rate in beats per minute.  Must be an integer value in the
"DATA",999.21,14,99,2,0)
range 0-400, inclusive.
"DATA",999.21,15,0)
RESPIRATIONS^0^/min^^^^RS
"DATA",999.21,15,4)
D VALIDINT(.X,0,100)
"DATA",999.21,15,99,0)
^^1^1^3050512.000823
"DATA",999.21,15,99,1,0)
Enter respiratory rate as breaths per minute.
"DATA",999.21,16,0)
EDEMA^^^^^^ED
"DATA",999.21,16,4)
Q:X=0  K:X'?1N1"+"!(X>4)!(X<0) X S:'$L($G(X)) X="-1^Enter the degree of edema as one of the following: 0, 1+, 2+, 3+ or 4+."
"DATA",999.21,16,99,0)
^^3^3^3100920.093059
"DATA",999.21,16,99,1,0)
Enter degree of edema as one of the following:
"DATA",999.21,16,99,2,0)

"DATA",999.21,16,99,3,0)
     0, 1+, 2+, 3+ or 4+
"DATA",999.21,17,0)
PRESENTATION^^^^^^PR
"DATA",999.21,17,4)
S X=$$GET1^DIQ(9999999.87,+$$FIND1^DIC(9999999.87,,"M",X),.01) K:'$L(X) X
"DATA",999.21,17,99,0)
^999.2199^15^15^3060202^
"DATA",999.21,17,99,1,0)
Enter presentation as one of the following:
"DATA",999.21,17,99,2,0)

"DATA",999.21,17,99,3,0)
          1 - VERTEX - VT
"DATA",999.21,17,99,4,0)
          2 - COMPLETE BREACH - CB
"DATA",999.21,17,99,5,0)
          3 - DOUBLE FOOTLING - DF
"DATA",999.21,17,99,6,0)
          4 - SINGLE FOOTLING - SF
"DATA",999.21,17,99,7,0)
          5 - FRANK BREACH - FB
"DATA",999.21,17,99,8,0)
          6 - FACE - FA
"DATA",999.21,17,99,9,0)
          7 - UNSPECIFIED BREACH - UB
"DATA",999.21,17,99,10,0)
          8 - TRANSVERSE - TR
"DATA",999.21,17,99,11,0)
          9 - OTHER - OT
"DATA",999.21,17,99,12,0)
         10 - UNKNOWN - UNK
"DATA",999.21,17,99,13,0)

"DATA",999.21,17,99,14,0)

"DATA",999.21,17,99,15,0)
You may enter the number or the text or the abbreviation.
"DATA",999.21,18,0)
CERVIX DILATATION^1^in^cm^^^CXD
"DATA",999.21,18,1)
S X=X*2.54
"DATA",999.21,18,2)
S X=X/2.54
"DATA",999.21,18,4)
D VALIDNUM(.X,0,10)
"DATA",999.21,18,99,0)
^^6^6^3060202.221257
"DATA",999.21,18,99,1,0)
Enter degree of cervical dilatation in centimeters (if metric units enabled) 
"DATA",999.21,18,99,2,0)
or inches.
"DATA",999.21,18,99,3,0)

"DATA",999.21,18,99,4,0)
To force units regardless of metric setting, append cm or in to the value.
"DATA",999.21,18,99,5,0)

"DATA",999.21,18,99,6,0)
Valid range is 0-10 centimeters (0-4 inches), inclusive.
"DATA",999.21,19,0)
EFFACEMENT^^^^^^EF
"DATA",999.21,19,4)
D VALIDINT(.X,0,100)
"DATA",999.21,19,99,0)
^^2^2^3060202.171325
"DATA",999.21,19,99,1,0)
Enter degree of effacement as a percentage.  Must be an integer value between
"DATA",999.21,19,99,2,0)
0 and 100, inclusive.
"DATA",999.21,20,0)
STATION (PREGNANCY)^^^^^^SN
"DATA",999.21,20,4)
D VALIDINT(.X,-6,4)
"DATA",999.21,20,99,0)
^^1^1^3060202.173904
"DATA",999.21,20,99,1,0)
Enter station as an integer value between -6 and 4, inclusive.
"DATA",999.21,21,0)
PAIN^^^^^^PA
"DATA",999.21,21,4)
D VALIDINT(.X,0,10)
"DATA",999.21,21,99,0)
^^13^13^3060202.222903
"DATA",999.21,21,99,1,0)
Enter level of pain using the following scale:
"DATA",999.21,21,99,2,0)

"DATA",999.21,21,99,3,0)
       0       Pain free
"DATA",999.21,21,99,4,0)
       1
"DATA",999.21,21,99,5,0)
       2       Mild
"DATA",999.21,21,99,6,0)
       3
"DATA",999.21,21,99,7,0)
       4       Tolerable
"DATA",999.21,21,99,8,0)
       5
"DATA",999.21,21,99,9,0)
       6       Distressful
"DATA",999.21,21,99,10,0)
       7
"DATA",999.21,21,99,11,0)
       8       Severe
"DATA",999.21,21,99,12,0)
       9
"DATA",999.21,21,99,13,0)
       10      Totally disabling
"DATA",999.21,22,0)
02 SATURATION^0^%^%^^^O2
"DATA",999.21,22,4)
D VALIDNUM(.X,50,100)
"DATA",999.21,22,99,0)
^999.2199^2^2^3060202^
"DATA",999.21,22,99,1,0)
Enter oxygen saturation as a percentage.  Must be an integer value between 50
"DATA",999.21,22,99,2,0)
and 100, inclusive. 
"DATA",999.21,23,0)
PEAK FLOW^^^^^^PF
"DATA",999.21,23,4)
D VALIDINT(.X,50,900)
"DATA",999.21,23,99,0)
^^1^1^3060202.223507
"DATA",999.21,23,99,1,0)
Enter peak flow in liters/minute.  Allowable range is 50-900 liters/minute.
"DATA",999.21,24,0)
BODY MASS INDEX^^^^^^BMI
"DATA",999.21,24,3,0)
^999.2109^436^436^3140501^^
"DATA",999.21,24,3,1,0)
M;24;-2.01118107;16.57502768;0.080592465
"DATA",999.21,24,3,2,0)
M;24.5;-1.982373595;16.54777487;0.080127429
"DATA",999.21,24,3,3,0)
M;25.5;-1.924100169;16.49442763;0.079233994
"DATA",999.21,24,3,4,0)
M;26.5;-1.86549793;16.44259552;0.078389356
"DATA",999.21,24,3,5,0)
M;27.5;-1.807261899;16.3922434;0.077593501
"DATA",999.21,24,3,6,0)
M;28.5;-1.750118905;16.34333654;0.076846462
"DATA",999.21,24,3,7,0)
M;29.5;-1.69481584;16.29584097;0.076148308
"DATA",999.21,24,3,8,0)
M;30.5;-1.642106779;16.24972371;0.075499126
"DATA",999.21,24,3,9,0)
M;31.5;-1.592744414;16.20495268;0.074898994
"DATA",999.21,24,3,10,0)
M;32.5;-1.547442391;16.16149871;0.074347997
"DATA",999.21,24,3,11,0)
M;33.5;-1.506902601;16.11933258;0.073846139
"DATA",999.21,24,3,12,0)
M;34.5;-1.471770047;16.07842758;0.07339337
"DATA",999.21,24,3,13,0)
M;35.5;-1.442628957;16.03875896;0.072989551
"DATA",999.21,24,3,14,0)
M;36.5;-1.419991255;16.00030401;0.072634432
"DATA",999.21,24,3,15,0)
M;37.5;-1.404277619;15.96304277;0.072327649
"DATA",999.21,24,3,16,0)
M;38.5;-1.39586317;15.92695418;0.07206864
"DATA",999.21,24,3,17,0)
M;39.5;-1.394935252;15.89202582;0.071856805
"DATA",999.21,24,3,18,0)
M;40.5;-1.401671596;15.85824093;0.071691278
"DATA",999.21,24,3,19,0)
M;41.5;-1.416100312;15.82558822;0.071571093
"DATA",999.21,24,3,20,0)
M;42.5;-1.438164899;15.79405728;0.071495113
"DATA",999.21,24,3,21,0)
M;43.5;-1.467669032;15.76364255;0.071462106
"DATA",999.21,24,3,22,0)
M;44.5;-1.504376347;15.73433668;0.071470646
"DATA",999.21,24,3,23,0)
M;45.5;-1.547942838;15.70613566;0.071519218
"DATA",999.21,24,3,24,0)
M;46.5;-1.597896397;15.67904062;0.071606277
"DATA",999.21,24,3,25,0)
M;47.5;-1.653732283;15.65305192;0.071730167
"DATA",999.21,24,3,26,0)
M;48.5;-1.714869347;15.62817269;0.071889214
"DATA",999.21,24,3,27,0)
M;49.5;-1.780673181;15.604408;0.072081737
"DATA",999.21,24,3,28,0)
M;50.5;-1.850468473;15.58176458;0.072306081
"DATA",999.21,24,3,29,0)
M;51.5;-1.923551865;15.56025067;0.072560637
"DATA",999.21,24,3,30,0)
M;52.5;-1.999220429;15.5398746;0.07284384
"DATA",999.21,24,3,31,0)
M;53.5;-2.076707178;15.52064993;0.073154324
"DATA",999.21,24,3,32,0)
M;54.5;-2.155348017;15.50258427;0.073490667
"DATA",999.21,24,3,33,0)
M;55.5;-2.234438552;15.48568973;0.073851672
"DATA",999.21,24,3,34,0)
M;56.5;-2.313321723;15.46997718;0.074236235
"DATA",999.21,24,3,35,0)
M;57.5;-2.391381273;15.45545692;0.074643374
"DATA",999.21,24,3,36,0)
M;58.5;-2.468032491;15.44213961;0.075072264
"DATA",999.21,24,3,37,0)
M;59.5;-2.542781541;15.43003207;0.075522104
"DATA",999.21,24,3,38,0)
M;60.5;-2.61516595;15.41914163;0.07599225
"DATA",999.21,24,3,39,0)
M;61.5;-2.684789516;15.40947356;0.076482128
"DATA",999.21,24,3,40,0)
M;62.5;-2.751316949;15.40103139;0.076991232
"DATA",999.21,24,3,41,0)
M;63.5;-2.81445945;15.39381785;0.077519149
"DATA",999.21,24,3,42,0)
M;64.5;-2.87402476;15.38783094;0.07806539
"DATA",999.21,24,3,43,0)
M;65.5;-2.92984048;15.38306945;0.078629592
"DATA",999.21,24,3,44,0)
M;66.5;-2.981796828;15.37952958;0.079211369
"DATA",999.21,24,3,45,0)
M;67.5;-3.029831343;15.37720582;0.079810334
"DATA",999.21,24,3,46,0)
M;68.5;-3.073924224;15.37609107;0.080426086
"DATA",999.21,24,3,47,0)
M;69.5;-3.114093476;15.37617677;0.081058206
"DATA",999.21,24,3,48,0)
M;70.5;-3.15039004;15.37745304;0.081706249
"DATA",999.21,24,3,49,0)
M;71.5;-3.182893018;15.37990886;0.082369741
"DATA",999.21,24,3,50,0)
M;72.5;-3.21170511;15.38353217;0.083048178
"DATA",999.21,24,3,51,0)
M;73.5;-3.23694834;15.38831005;0.083741021
"DATA",999.21,24,3,52,0)
M;74.5;-3.25876011;15.39422883;0.0844477
"DATA",999.21,24,3,53,0)
M;75.5;-3.277281546;15.40127496;0.085167651
"DATA",999.21,24,3,54,0)
M;76.5;-3.292683774;15.40943252;0.085900184
"DATA",999.21,24,3,55,0)
M;77.5;-3.305124073;15.41868691;0.086644667
"DATA",999.21,24,3,56,0)
M;78.5;-3.314768951;15.42902273;0.087400421
"DATA",999.21,24,3,57,0)
M;79.5;-3.321785992;15.44042439;0.088166744
"DATA",999.21,24,3,58,0)
M;80.5;-3.326345795;15.45287581;0.088942897
"DATA",999.21,24,3,59,0)
M;81.5;-3.328602731;15.46636218;0.089728202
"DATA",999.21,24,3,60,0)
M;82.5;-3.328725277;15.48086704;0.090521875
"DATA",999.21,24,3,61,0)
M;83.5;-3.32687018;15.49637465;0.091323162
"DATA",999.21,24,3,62,0)
M;84.5;-3.323188896;15.51286936;0.092131305
"DATA",999.21,24,3,63,0)
M;85.5;-3.317827016;15.53033563;0.092945544
"DATA",999.21,24,3,64,0)
M;86.5;-3.310923871;15.54875807;0.093765118
"DATA",999.21,24,3,65,0)
M;87.5;-3.302612272;15.56812143;0.09458927
"DATA",999.21,24,3,66,0)
M;88.5;-3.293018361;15.58841065;0.095417247
"DATA",999.21,24,3,67,0)
M;89.5;-3.282260813;15.60961101;0.096248301
"DATA",999.21,24,3,68,0)
M;90.5;-3.270454609;15.63170735;0.097081694
"DATA",999.21,24,3,69,0)
M;91.5;-3.257703616;15.65468563;0.097916698
"DATA",999.21,24,3,70,0)
M;92.5;-3.244108214;15.67853139;0.098752593
"DATA",999.21,24,3,71,0)
M;93.5;-3.229761713;15.70323052;0.099588675
"DATA",999.21,24,3,72,0)
M;94.5;-3.214751287;15.72876911;0.100424251
"DATA",999.21,24,3,73,0)
M;95.5;-3.199158184;15.75513347;0.101258643
"DATA",999.21,24,3,74,0)
M;96.5;-3.18305795;15.78231007;0.102091189
"DATA",999.21,24,3,75,0)
M;97.5;-3.166520664;15.8102856;0.102921245
"DATA",999.21,24,3,76,0)
M;98.5;-3.1496103;15.83904708;0.103748189
"DATA",999.21,24,3,77,0)
M;99.5;-3.132389637;15.86858123;0.104571386
"DATA",999.21,24,3,78,0)
M;100.5;-3.114911153;15.89887562;0.105390269
"DATA",999.21,24,3,79,0)
M;101.5;-3.097226399;15.92991765;0.106204258
"DATA",999.21,24,3,80,0)
M;102.5;-3.079383079;15.96169481;0.107012788
"DATA",999.21,24,3,81,0)
M;103.5;-3.061423765;15.99419489;0.107815327
"DATA",999.21,24,3,82,0)
M;104.5;-3.043386071;16.02740607;0.108611374
"DATA",999.21,24,3,83,0)
M;105.5;-3.025310003;16.0613159;0.109400388
"DATA",999.21,24,3,84,0)
M;106.5;-3.007225737;16.09591292;0.110181915
"DATA",999.21,24,3,85,0)
M;107.5;-2.989164598;16.13118532;0.110955478
"DATA",999.21,24,3,86,0)
M;108.5;-2.971148225;16.16712234;0.111720691
"DATA",999.21,24,3,87,0)
M;109.5;-2.953208047;16.20371168;0.112477059
"DATA",999.21,24,3,88,0)
M;110.5;-2.935363951;16.24094239;0.1132242
"DATA",999.21,24,3,89,0)
M;111.5;-2.917635157;16.27880346;0.113961734
"DATA",999.21,24,3,90,0)
M;112.5;-2.900039803;16.31728385;0.114689291
"DATA",999.21,24,3,91,0)
M;113.5;-2.882593796;16.35637267;0.115406523
"DATA",999.21,24,3,92,0)
M;114.5;-2.865311266;16.39605916;0.116113097
"DATA",999.21,24,3,93,0)
M;115.5;-2.848204697;16.43633265;0.116808702
"DATA",999.21,24,3,94,0)
M;116.5;-2.831285052;16.47718256;0.117493042
"DATA",999.21,24,3,95,0)
M;117.5;-2.81456189;16.51859843;0.11816584
"DATA",999.21,24,3,96,0)
M;118.5;-2.79804347;16.56056987;0.118826835
"DATA",999.21,24,3,97,0)
M;119.5;-2.781736856;16.60308661;0.119475785
"DATA",999.21,24,3,98,0)
M;120.5;-2.765648008;16.64613844;0.120112464
"DATA",999.21,24,3,99,0)
M;121.5;-2.749782197;16.68971518;0.120736656
"DATA",999.21,24,3,100,0)
M;122.5;-2.734142443;16.73380695;0.121348181
"DATA",999.21,24,3,101,0)
M;123.5;-2.718732873;16.77840363;0.121946849
"DATA",999.21,24,3,102,0)
M;124.5;-2.703555506;16.82349538;0.122532501
"DATA",999.21,24,3,103,0)
M;125.5;-2.688611957;16.86907238;0.123104991
"DATA",999.21,24,3,104,0)
M;126.5;-2.673903164;16.91512487;0.123664186
"DATA",999.21,24,3,105,0)
M;127.5;-2.659429443;16.96164317;0.124209969
"DATA",999.21,24,3,106,0)
M;128.5;-2.645190534;17.00861766;0.124742239
"DATA",999.21,24,3,107,0)
M;129.5;-2.631185649;17.05603879;0.125260905
"DATA",999.21,24,3,108,0)
M;130.5;-2.617413511;17.10389705;0.125765895
"DATA",999.21,24,3,109,0)
M;131.5;-2.603872392;17.15218302;0.126257147
"DATA",999.21,24,3,110,0)
M;132.5;-2.590560148;17.20088732;0.126734613
"DATA",999.21,24,3,111,0)
M;133.5;-2.577474253;17.25000062;0.12719826
"DATA",999.21,24,3,112,0)
M;134.5;-2.564611831;17.29951367;0.127648067
"DATA",999.21,24,3,113,0)
M;135.5;-2.551969684;17.34941726;0.128084023
"DATA",999.21,24,3,114,0)
M;136.5;-2.539539972;17.39970308;0.128506192
"DATA",999.21,24,3,115,0)
M;137.5;-2.527325681;17.45036072;0.128914497
"DATA",999.21,24,3,116,0)
M;138.5;-2.515320235;17.50138161;0.129309001
"DATA",999.21,24,3,117,0)
M;139.5;-2.503519447;17.55275674;0.129689741
"DATA",999.21,24,3,118,0)
M;140.5;-2.491918934;17.60447714;0.130056765
"DATA",999.21,24,3,119,0)
M;141.5;-2.480514136;17.6565339;0.130410133
"DATA",999.21,24,3,120,0)
M;142.5;-2.469300331;17.70891811;0.130749913
"DATA",999.21,24,3,121,0)
M;143.5;-2.458272656;17.76162094;0.131076187
"DATA",999.21,24,3,122,0)
M;144.5;-2.447426113;17.81463359;0.131389042
"DATA",999.21,24,3,123,0)
M;145.5;-2.436755595;17.86794729;0.131688579
"DATA",999.21,24,3,124,0)
M;146.5;-2.426255887;17.92155332;0.131974905
"DATA",999.21,24,3,125,0)
M;147.5;-2.415921689;17.97544299;0.132248138
"DATA",999.21,24,3,126,0)
M;148.5;-2.405747619;18.02960765;0.132508403
"DATA",999.21,24,3,127,0)
M;149.5;-2.395728233;18.08403868;0.132755834
"DATA",999.21,24,3,128,0)
M;150.5;-2.385858029;18.1387275;0.132990575
"DATA",999.21,24,3,129,0)
M;151.5;-2.376131459;18.19366555;0.133212776
"DATA",999.21,24,3,130,0)
M;152.5;-2.366542942;18.24884431;0.133422595
"DATA",999.21,24,3,131,0)
M;153.5;-2.357086871;18.3042553;0.133620197
"DATA",999.21,24,3,132,0)
M;154.5;-2.347757625;18.35989003;0.133805756
"DATA",999.21,24,3,133,0)
M;155.5;-2.338549576;18.41574009;0.133979452
"DATA",999.21,24,3,134,0)
M;156.5;-2.3294571;18.47179706;0.13414147
"DATA",999.21,24,3,135,0)
M;157.5;-2.320474586;18.52805255;0.134292005
"DATA",999.21,24,3,136,0)
M;158.5;-2.311596446;18.5844982;0.134431256
"DATA",999.21,24,3,137,0)
M;159.5;-2.302817124;18.64112567;0.134559427
"DATA",999.21,24,3,138,0)
M;160.5;-2.294131107;18.69792663;0.134676731
"DATA",999.21,24,3,139,0)
M;161.5;-2.285532933;18.75489278;0.134783385
"DATA",999.21,24,3,140,0)
M;162.5;-2.277017201;18.81201584;0.134879611
"DATA",999.21,24,3,141,0)
M;163.5;-2.268578584;18.86928753;0.134965637
"DATA",999.21,24,3,142,0)
M;164.5;-2.260211837;18.92669959;0.135041695
"DATA",999.21,24,3,143,0)
M;165.5;-2.251911809;18.98424378;0.135108024
"DATA",999.21,24,3,144,0)
M;166.5;-2.243673453;19.04191185;0.135164867
"DATA",999.21,24,3,145,0)
M;167.5;-2.235491842;19.09969557;0.135212469
"DATA",999.21,24,3,146,0)
M;168.5;-2.227362173;19.15758672;0.135251083
"DATA",999.21,24,3,147,0)
M;169.5;-2.21927979;19.21557707;0.135280963
"DATA",999.21,24,3,148,0)
M;170.5;-2.211240187;19.27365839;0.135302371
"DATA",999.21,24,3,149,0)
M;171.5;-2.203239029;19.33182247;0.135315568
"DATA",999.21,24,3,150,0)
M;172.5;-2.195272161;19.39006106;0.135320824
"DATA",999.21,24,3,151,0)
M;173.5;-2.187335625;19.44836594;0.135318407
"DATA",999.21,24,3,152,0)
M;174.5;-2.179425674;19.50672885;0.135308594
"DATA",999.21,24,3,153,0)
M;175.5;-2.171538789;19.56514153;0.135291662
"DATA",999.21,24,3,154,0)
M;176.5;-2.163671689;19.62359571;0.135267891
"DATA",999.21,24,3,155,0)
M;177.5;-2.155821357;19.6820831;0.135237567
"DATA",999.21,24,3,156,0)
M;178.5;-2.147985046;19.74059538;0.135200976
"DATA",999.21,24,3,157,0)
M;179.5;-2.140160305;19.7991242;0.135158409
"DATA",999.21,24,3,158,0)
M;180.5;-2.132344989;19.85766121;0.135110159
"DATA",999.21,24,3,159,0)
M;181.5;-2.124537282;19.916198;0.135056522
"DATA",999.21,24,3,160,0)
M;182.5;-2.116735712;19.97472615;0.134997797
"DATA",999.21,24,3,161,0)
M;183.5;-2.108939167;20.03323719;0.134934285
"DATA",999.21,24,3,162,0)
M;184.5;-2.10114692;20.09172262;0.134866291
"DATA",999.21,24,3,163,0)
M;185.5;-2.093358637;20.15017387;0.134794121
"DATA",999.21,24,3,164,0)
M;186.5;-2.085574403;20.20858236;0.134718085
"DATA",999.21,24,3,165,0)
M;187.5;-2.077794735;20.26693944;0.134638494
"DATA",999.21,24,3,166,0)
M;188.5;-2.070020599;20.32523642;0.134555663
"DATA",999.21,24,3,167,0)
M;189.5;-2.062253431;20.38346455;0.13446991
"DATA",999.21,24,3,168,0)
M;190.5;-2.054495145;20.44161501;0.134381553
"DATA",999.21,24,3,169,0)
M;191.5;-2.046748156;20.49967894;0.134290916
"DATA",999.21,24,3,170,0)
M;192.5;-2.039015385;20.5576474;0.134198323
"DATA",999.21,24,3,171,0)
M;193.5;-2.031300282;20.6155114;0.134104101
"DATA",999.21,24,3,172,0)
M;194.5;-2.023606828;20.67326189;0.134008581
"DATA",999.21,24,3,173,0)
M;195.5;-2.015942013;20.73088905;0.133912066
"DATA",999.21,24,3,174,0)
M;196.5;-2.008305745;20.7883851;0.133814954
"DATA",999.21,24,3,175,0)
M;197.5;-2.000706389;20.84574003;0.133717552
"DATA",999.21,24,3,176,0)
M;198.5;-1.993150137;20.90294449;0.1336202
"DATA",999.21,24,3,177,0)
M;199.5;-1.985643741;20.95998909;0.133523244
"DATA",999.21,24,3,178,0)
M;200.5;-1.97819451;21.01686433;0.133427032
"DATA",999.21,24,3,179,0)
M;201.5;-1.970810308;21.07356067;0.133331914
"DATA",999.21,24,3,180,0)
M;202.5;-1.96349954;21.1300685;0.133238245
"DATA",999.21,24,3,181,0)
M;203.5;-1.956271141;21.18637813;0.133146383
"DATA",999.21,24,3,182,0)
M;204.5;-1.949134561;21.24247982;0.13305669
"DATA",999.21,24,3,183,0)
M;205.5;-1.942099744;21.29836376;0.132969531
"DATA",999.21,24,3,184,0)
M;206.5;-1.935177101;21.35402009;0.132885274
"DATA",999.21,24,3,185,0)
M;207.5;-1.92837748;21.40943891;0.132804292
"DATA",999.21,24,3,186,0)
M;208.5;-1.921712136;21.46461026;0.132726962
"DATA",999.21,24,3,187,0)
M;209.5;-1.915192685;21.51952414;0.132653664
"DATA",999.21,24,3,188,0)
M;210.5;-1.908831065;21.57417053;0.132584784
"DATA",999.21,24,3,189,0)
M;211.5;-1.902639482;21.62853937;0.132520711
"DATA",999.21,24,3,190,0)
M;212.5;-1.896630358;21.68262062;0.132461838
"DATA",999.21,24,3,191,0)
M;213.5;-1.890816268;21.73640419;0.132408563
"DATA",999.21,24,3,192,0)
M;214.5;-1.885209876;21.78988003;0.132361289
"DATA",999.21,24,3,193,0)
M;215.5;-1.879823505;21.84303819;0.132320427
"DATA",999.21,24,3,194,0)
M;216.5;-1.874670324;21.8958685;0.132286382
"DATA",999.21,24,3,195,0)
M;217.5;-1.869760299;21.94836168;0.1322596
"DATA",999.21,24,3,196,0)
M;218.5;-1.865113245;22.00050569;0.132240418
"DATA",999.21,24,3,197,0)
M;219.5;-1.860734944;22.05229242;0.13222933
"DATA",999.21,24,3,198,0)
M;220.5;-1.85663384;22.10371305;0.132226801
"DATA",999.21,24,3,199,0)
M;221.5;-1.852827186;22.15475603;0.132233201
"DATA",999.21,24,3,200,0)
M;222.5;-1.849323204;22.20541249;0.132248993
"DATA",999.21,24,3,201,0)
M;223.5;-1.846131607;22.255673;0.132274625
"DATA",999.21,24,3,202,0)
M;224.5;-1.843261294;22.30552831;0.132310549
"DATA",999.21,24,3,203,0)
M;225.5;-1.840720248;22.3549693;0.132357221
"DATA",999.21,24,3,204,0)
M;226.5;-1.83851544;22.40398706;0.132415103
"DATA",999.21,24,3,205,0)
M;227.5;-1.83665586;22.45257182;0.132484631
"DATA",999.21,24,3,206,0)
M;228.5;-1.835138046;22.50071778;0.132566359
"DATA",999.21,24,3,207,0)
M;229.5;-1.833972004;22.54841437;0.132660699
"DATA",999.21,24,3,208,0)
M;230.5;-1.833157751;22.59565422;0.132768153
"DATA",999.21,24,3,209,0)
M;231.5;-1.83269562;22.64242956;0.132889211
"DATA",999.21,24,3,210,0)
M;232.5;-1.832584342;22.68873292;0.133024368
"DATA",999.21,24,3,211,0)
M;233.5;-1.832820974;22.73455713;0.133174129
"DATA",999.21,24,3,212,0)
M;234.5;-1.833400825;22.7798953;0.133338999
"DATA",999.21,24,3,213,0)
M;235.5;-1.834317405;22.82474087;0.133519496
"DATA",999.21,24,3,214,0)
M;236.5;-1.83555752;22.86908912;0.133716192
"DATA",999.21,24,3,215,0)
M;237.5;-1.837119466;22.91293151;0.133929525
"DATA",999.21,24,3,216,0)
M;238.5;-1.838987063;22.95626373;0.134160073
"DATA",999.21,24,3,217,0)
M;239.5;-1.841146139;22.99908062;0.134408381
"DATA",999.21,24,3,218,0)
M;240;-1.84233016;23.02029424;0.134539365
"DATA",999.21,24,3,219,0)
F;24;-0.98660853;16.42339664;0.085451785
"DATA",999.21,24,3,220,0)
F;24.5;-1.024496827;16.38804056;0.085025838
"DATA",999.21,24,3,221,0)
F;25.5;-1.102698353;16.3189719;0.084214052
"DATA",999.21,24,3,222,0)
F;26.5;-1.18396635;16.25207985;0.083455124
"DATA",999.21,24,3,223,0)
F;27.5;-1.268071036;16.18734669;0.082748284
"DATA",999.21,24,3,224,0)
F;28.5;-1.354751525;16.12475448;0.082092737
"DATA",999.21,24,3,225,0)
F;29.5;-1.443689692;16.06428762;0.081487717
"DATA",999.21,24,3,226,0)
F;30.5;-1.53454192;16.00593001;0.080932448
"DATA",999.21,24,3,227,0)
F;31.5;-1.626928093;15.94966631;0.080426175
"DATA",999.21,24,3,228,0)
F;32.5;-1.720434829;15.89548197;0.079968176
"DATA",999.21,24,3,229,0)
F;33.5;-1.814635262;15.84336179;0.079557735
"DATA",999.21,24,3,230,0)
F;34.5;-1.909076262;15.79329146;0.079194187
"DATA",999.21,24,3,231,0)
F;35.5;-2.003296102;15.7452564;0.078876895
"DATA",999.21,24,3,232,0)
F;36.5;-2.096828937;15.69924188;0.078605255
"DATA",999.21,24,3,233,0)
F;37.5;-2.189211877;15.65523282;0.078378696
"DATA",999.21,24,3,234,0)
F;38.5;-2.279991982;15.61321371;0.078196674
"DATA",999.21,24,3,235,0)
F;39.5;-2.368732949;15.57316843;0.078058667
"DATA",999.21,24,3,236,0)
F;40.5;-2.455021314;15.53508019;0.077964169
"DATA",999.21,24,3,237,0)
F;41.5;-2.538471972;15.49893145;0.077912684
"DATA",999.21,24,3,238,0)
F;42.5;-2.618732901;15.46470384;0.077903716
"DATA",999.21,24,3,239,0)
F;43.5;-2.695488973;15.43237817;0.077936763
"DATA",999.21,24,3,240,0)
F;44.5;-2.768464816;15.40193436;0.078011309
"DATA",999.21,24,3,241,0)
F;45.5;-2.837426693;15.37335154;0.078126817
"DATA",999.21,24,3,242,0)
F;46.5;-2.902178205;15.34660842;0.078282739
"DATA",999.21,24,3,243,0)
F;47.5;-2.962580386;15.32168181;0.078478449
"DATA",999.21,24,3,244,0)
F;48.5;-3.018521987;15.29854897;0.078713325
"DATA",999.21,24,3,245,0)
F;49.5;-3.069936555;15.27718618;0.078986694
"DATA",999.21,24,3,246,0)
F;50.5;-3.116795864;15.2575692;0.079297841
"DATA",999.21,24,3,247,0)
F;51.5;-3.159107331;15.23967338;0.079646006
"DATA",999.21,24,3,248,0)
F;52.5;-3.196911083;15.22347371;0.080030389
"DATA",999.21,24,3,249,0)
F;53.5;-3.230276759;15.20894491;0.080450145
"DATA",999.21,24,3,250,0)
F;54.5;-3.259300182;15.19606152;0.080904391
"DATA",999.21,24,3,251,0)
F;55.5;-3.284099963;15.18479799;0.081392203
"DATA",999.21,24,3,252,0)
F;56.5;-3.30481415;15.17512871;0.081912623
"DATA",999.21,24,3,253,0)
F;57.5;-3.321596954;15.16702811;0.082464661
"DATA",999.21,24,3,254,0)
F;58.5;-3.334615646;15.16047068;0.083047295
"DATA",999.21,24,3,255,0)
F;59.5;-3.344047622;15.15543107;0.083659478
"DATA",999.21,24,3,256,0)
F;60.5;-3.35007771;15.15188405;0.084300139
"DATA",999.21,24,3,257,0)
F;61.5;-3.352893805;15.14980479;0.0849682
"DATA",999.21,24,3,258,0)
F;62.5;-3.352691376;15.14916825;0.085662539
"DATA",999.21,24,3,259,0)
F;63.5;-3.34966438;15.14994984;0.086382035
"DATA",999.21,24,3,260,0)
F;64.5;-3.343998803;15.15212585;0.087125591
"DATA",999.21,24,3,261,0)
F;65.5;-3.335889574;15.15567186;0.087892047
"DATA",999.21,24,3,262,0)
F;66.5;-3.325522491;15.16056419;0.088680264
"DATA",999.21,24,3,263,0)
F;67.5;-3.31307846;15.16677947;0.089489106
"DATA",999.21,24,3,264,0)
F;68.5;-3.298732648;15.17429464;0.090317434
"DATA",999.21,24,3,265,0)
F;69.5;-3.282653831;15.18308694;0.091164117
"DATA",999.21,24,3,266,0)
F;70.5;-3.265003896;15.1931339;0.092028028
"DATA",999.21,24,3,267,0)
F;71.5;-3.245937506;15.20441335;0.092908048
"DATA",999.21,24,3,268,0)
F;72.5;-3.225606516;15.21690296;0.093803033
"DATA",999.21,24,3,269,0)
F;73.5;-3.204146115;15.2305815;0.094711916
"DATA",999.21,24,3,270,0)
F;74.5;-3.181690237;15.24542745;0.095633595
"DATA",999.21,24,3,271,0)
F;75.5;-3.158363475;15.26141966;0.096566992
"DATA",999.21,24,3,272,0)
F;76.5;-3.134282833;15.27853728;0.097511046
"DATA",999.21,24,3,273,0)
F;77.5;-3.109557879;15.29675967;0.09846471
"DATA",999.21,24,3,274,0)
F;78.5;-3.084290931;15.31606644;0.099426955
"DATA",999.21,24,3,275,0)
F;79.5;-3.058577292;15.33643745;0.100396769
"DATA",999.21,24,3,276,0)
F;80.5;-3.032505499;15.35785274;0.101373159
"DATA",999.21,24,3,277,0)
F;81.5;-3.0061576;15.38029261;0.10235515
"DATA",999.21,24,3,278,0)
F;82.5;-2.979609448;15.40373754;0.103341788
"DATA",999.21,24,3,279,0)
F;83.5;-2.952930993;15.42816819;0.104332139
"DATA",999.21,24,3,280,0)
F;84.5;-2.926186592;15.45356545;0.105325289
"DATA",999.21,24,3,281,0)
F;85.5;-2.899435307;15.47991037;0.106320346
"DATA",999.21,24,3,282,0)
F;86.5;-2.872731211;15.50718419;0.10731644
"DATA",999.21,24,3,283,0)
F;87.5;-2.846123683;15.53536829;0.108312721
"DATA",999.21,24,3,284,0)
F;88.5;-2.819657704;15.56444426;0.109308364
"DATA",999.21,24,3,285,0)
F;89.5;-2.793374145;15.5943938;0.110302563
"DATA",999.21,24,3,286,0)
F;90.5;-2.767310047;15.6251988;0.111294537
"DATA",999.21,24,3,287,0)
F;91.5;-2.741498897;15.65684126;0.112283526
"DATA",999.21,24,3,288,0)
F;92.5;-2.715970894;15.68930333;0.113268793
"DATA",999.21,24,3,289,0)
F;93.5;-2.690753197;15.7225673;0.114249622
"DATA",999.21,24,3,290,0)
F;94.5;-2.665870146;15.75661555;0.115225321
"DATA",999.21,24,3,291,0)
F;95.5;-2.641343436;15.79143062;0.116195218
"DATA",999.21,24,3,292,0)
F;96.5;-2.617192204;15.82699517;0.117158667
"DATA",999.21,24,3,293,0)
F;97.5;-2.593430614;15.86329241;0.118115073
"DATA",999.21,24,3,294,0)
F;98.5;-2.570076037;15.90030484;0.119063807
"DATA",999.21,24,3,295,0)
F;99.5;-2.547141473;15.93801545;0.12000429
"DATA",999.21,24,3,296,0)
F;100.5;-2.524635245;15.97640787;0.120935994
"DATA",999.21,24,3,297,0)
F;101.5;-2.502569666;16.01546483;0.121858355
"DATA",999.21,24,3,298,0)
F;102.5;-2.48095189;16.05516984;0.12277087
"DATA",999.21,24,3,299,0)
F;103.5;-2.459785573;16.09550688;0.123673085
"DATA",999.21,24,3,300,0)
F;104.5;-2.439080117;16.13645881;0.124564484
"DATA",999.21,24,3,301,0)
F;105.5;-2.418838304;16.17800955;0.125444639
"DATA",999.21,24,3,302,0)
F;106.5;-2.399063683;16.22014281;0.126313121
"DATA",999.21,24,3,303,0)
F;107.5;-2.379756861;16.26284277;0.127169545
"DATA",999.21,24,3,304,0)
F;108.5;-2.360920527;16.30609316;0.128013515
"DATA",999.21,24,3,305,0)
F;109.5;-2.342557728;16.34987759;0.128844639
"DATA",999.21,24,3,306,0)
F;110.5;-2.324663326;16.39418118;0.129662637
"DATA",999.21,24,3,307,0)
F;111.5;-2.307240716;16.43898741;0.130467138
"DATA",999.21,24,3,308,0)
F;112.5;-2.290287663;16.48428082;0.131257852
"DATA",999.21,24,3,309,0)
F;113.5;-2.273803847;16.53004554;0.132034479
"DATA",999.21,24,3,310,0)
F;114.5;-2.257782149;16.57626713;0.132796819
"DATA",999.21,24,3,311,0)
F;115.5;-2.242227723;16.62292864;0.133544525
"DATA",999.21,24,3,312,0)
F;116.5;-2.227132805;16.67001572;0.134277436
"DATA",999.21,24,3,313,0)
F;117.5;-2.212495585;16.71751288;0.134995324
"DATA",999.21,24,3,314,0)
F;118.5;-2.19831275;16.76540496;0.135697996
"DATA",999.21,24,3,315,0)
F;119.5;-2.184580762;16.81367689;0.136385276
"DATA",999.21,24,3,316,0)
F;120.5;-2.171295888;16.86231366;0.137057004
"DATA",999.21,24,3,317,0)
F;121.5;-2.158454232;16.91130036;0.137713039
"DATA",999.21,24,3,318,0)
F;122.5;-2.146051754;16.96062216;0.138353254
"DATA",999.21,24,3,319,0)
F;123.5;-2.134084303;17.0102643;0.138977537
"DATA",999.21,24,3,320,0)
F;124.5;-2.122547629;17.06021213;0.139585795
"DATA",999.21,24,3,321,0)
F;125.5;-2.111437411;17.11045106;0.140177947
"DATA",999.21,24,3,322,0)
F;126.5;-2.100749266;17.16096656;0.140753927
"DATA",999.21,24,3,323,0)
F;127.5;-2.090478774;17.21174424;0.141313686
"DATA",999.21,24,3,324,0)
F;128.5;-2.080621484;17.26276973;0.141857186
"DATA",999.21,24,3,325,0)
F;129.5;-2.071172932;17.31402878;0.142384404
"DATA",999.21,24,3,326,0)
F;130.5;-2.062128649;17.3655072;0.142895332
"DATA",999.21,24,3,327,0)
F;131.5;-2.053484173;17.4171909;0.143389972
"DATA",999.21,24,3,328,0)
F;132.5;-2.045235058;17.46906585;0.143868341
"DATA",999.21,24,3,329,0)
F;133.5;-2.03737688;17.52111811;0.144330469
"DATA",999.21,24,3,330,0)
F;134.5;-2.029906684;17.57333347;0.144776372
"DATA",999.21,24,3,331,0)
F;135.5;-2.022817914;17.62569869;0.145206138
"DATA",999.21,24,3,332,0)
F;136.5;-2.016107084;17.67819987;0.145619819
"DATA",999.21,24,3,333,0)
F;137.5;-2.009769905;17.7308234;0.146017491
"DATA",999.21,24,3,334,0)
F;138.5;-2.003802134;17.78355575;0.146399239
"DATA",999.21,24,3,335,0)
F;139.5;-1.998199572;17.83638347;0.146765161
"DATA",999.21,24,3,336,0)
F;140.5;-1.992958064;17.88929321;0.147115364
"DATA",999.21,24,3,337,0)
F;141.5;-1.988073505;17.94227168;0.147449967
"DATA",999.21,24,3,338,0)
F;142.5;-1.983541835;17.9953057;0.147769097
"DATA",999.21,24,3,339,0)
F;143.5;-1.979359041;18.04838216;0.148072891
"DATA",999.21,24,3,340,0)
F;144.5;-1.975521156;18.10148804;0.148361495
"DATA",999.21,24,3,341,0)
F;145.5;-1.972024258;18.15461039;0.148635067
"DATA",999.21,24,3,342,0)
F;146.5;-1.968864465;18.20773639;0.148893769
"DATA",999.21,24,3,343,0)
F;147.5;-1.966037938;18.26085325;0.149137776
"DATA",999.21,24,3,344,0)
F;148.5;-1.963540872;18.31394832;0.14936727
"DATA",999.21,24,3,345,0)
F;149.5;-1.961369499;18.36700902;0.149582439
"DATA",999.21,24,3,346,0)
F;150.5;-1.959520079;18.42002284;0.149783482
"DATA",999.21,24,3,347,0)
F;151.5;-1.9579889;18.47297739;0.149970604
"DATA",999.21,24,3,348,0)
F;152.5;-1.956772271;18.52586035;0.15014402
"DATA",999.21,24,3,349,0)
F;153.5;-1.95586652;18.57865951;0.15030395
"DATA",999.21,24,3,350,0)
F;154.5;-1.955267984;18.63136275;0.150450621
"DATA",999.21,24,3,351,0)
F;155.5;-1.954973011;18.68395801;0.15058427
"DATA",999.21,24,3,352,0)
F;156.5;-1.954977947;18.73643338;0.150705138
"DATA",999.21,24,3,353,0)
F;157.5;-1.955279136;18.788777;0.150813475
"DATA",999.21,24,3,354,0)
F;158.5;-1.955872909;18.84097713;0.150909535
"DATA",999.21,24,3,355,0)
F;159.5;-1.956755579;18.89302212;0.150993582
"DATA",999.21,24,3,356,0)
F;160.5;-1.957923436;18.94490041;0.151065883
"DATA",999.21,24,3,357,0)
F;161.5;-1.959372737;18.99660055;0.151126714
"DATA",999.21,24,3,358,0)
F;162.5;-1.9610997;19.04811118;0.151176355
"DATA",999.21,24,3,359,0)
F;163.5;-1.963100496;19.09942105;0.151215094
"DATA",999.21,24,3,360,0)
F;164.5;-1.96537124;19.15051899;0.151243223
"DATA",999.21,24,3,361,0)
F;165.5;-1.967907983;19.20139397;0.151261042
"DATA",999.21,24,3,362,0)
F;166.5;-1.970706706;19.25203503;0.151268855
"DATA",999.21,24,3,363,0)
F;167.5;-1.973763307;19.30243131;0.151266974
"DATA",999.21,24,3,364,0)
F;168.5;-1.977073595;19.35257209;0.151255713
"DATA",999.21,24,3,365,0)
F;169.5;-1.980633277;19.40244671;0.151235395
"DATA",999.21,24,3,366,0)
F;170.5;-1.984437954;19.45204465;0.151206347
"DATA",999.21,24,3,367,0)
F;171.5;-1.988483106;19.50135548;0.151168902
"DATA",999.21,24,3,368,0)
F;172.5;-1.992764085;19.55036888;0.151123398
"DATA",999.21,24,3,369,0)
F;173.5;-1.997276103;19.59907464;0.15107018
"DATA",999.21,24,3,370,0)
F;174.5;-2.002014224;19.64746266;0.151009595
"DATA",999.21,24,3,371,0)
F;175.5;-2.00697335;19.69552294;0.150942
"DATA",999.21,24,3,372,0)
F;176.5;-2.012148213;19.7432456;0.150867753
"DATA",999.21,24,3,373,0)
F;177.5;-2.017533363;19.79062086;0.150787221
"DATA",999.21,24,3,374,0)
F;178.5;-2.023123159;19.83763907;0.150700774
"DATA",999.21,24,3,375,0)
F;179.5;-2.028911755;19.88429066;0.150608788
"DATA",999.21,24,3,376,0)
F;180.5;-2.034893091;19.9305662;0.150511645
"DATA",999.21,24,3,377,0)
F;181.5;-2.041060881;19.97645636;0.150409731
"DATA",999.21,24,3,378,0)
F;182.5;-2.047408604;20.02195192;0.15030344
"DATA",999.21,24,3,379,0)
F;183.5;-2.05392949;20.06704377;0.150193169
"DATA",999.21,24,3,380,0)
F;184.5;-2.060616513;20.11172291;0.150079322
"DATA",999.21,24,3,381,0)
F;185.5;-2.067462375;20.15598047;0.149962308
"DATA",999.21,24,3,382,0)
F;186.5;-2.074459502;20.19980767;0.14984254
"DATA",999.21,24,3,383,0)
F;187.5;-2.081600029;20.24319586;0.149720441
"DATA",999.21,24,3,384,0)
F;188.5;-2.088875793;20.28613648;0.149596434
"DATA",999.21,24,3,385,0)
F;189.5;-2.096278323;20.32862109;0.149470953
"DATA",999.21,24,3,386,0)
F;190.5;-2.103798828;20.37064138;0.149344433
"DATA",999.21,24,3,387,0)
F;191.5;-2.111428194;20.41218911;0.149217319
"DATA",999.21,24,3,388,0)
F;192.5;-2.119156972;20.45325617;0.14909006
"DATA",999.21,24,3,389,0)
F;193.5;-2.126975375;20.49383457;0.14896311
"DATA",999.21,24,3,390,0)
F;194.5;-2.134873266;20.5339164;0.148836931
"DATA",999.21,24,3,391,0)
F;195.5;-2.142840157;20.57349387;0.148711989
"DATA",999.21,24,3,392,0)
F;196.5;-2.150865204;20.61255929;0.148588757
"DATA",999.21,24,3,393,0)
F;197.5;-2.158937201;20.65110506;0.148467715
"DATA",999.21,24,3,394,0)
F;198.5;-2.167044578;20.6891237;0.148349348
"DATA",999.21,24,3,395,0)
F;199.5;-2.175176987;20.72660728;0.14823412
"DATA",999.21,24,3,396,0)
F;200.5;-2.183317362;20.76355011;0.148122614
"DATA",999.21,24,3,397,0)
F;201.5;-2.191457792;20.79994337;0.148015249
"DATA",999.21,24,3,398,0)
F;202.5;-2.199583649;20.83578051;0.147912564
"DATA",999.21,24,3,399,0)
F;203.5;-2.207681525;20.87105449;0.147815078
"DATA",999.21,24,3,400,0)
F;204.5;-2.215737645;20.90575839;0.147723315
"DATA",999.21,24,3,401,0)
F;205.5;-2.223739902;20.93988477;0.147637768
"DATA",999.21,24,3,402,0)
F;206.5;-2.231667995;20.97342858;0.147559083
"DATA",999.21,24,3,403,0)
F;207.5;-2.239511942;21.00638171;0.147487716
"DATA",999.21,24,3,404,0)
F;208.5;-2.247257081;21.0387374;0.14742421
"DATA",999.21,24,3,405,0)
F;209.5;-2.254885145;21.07048996;0.147369174
"DATA",999.21,24,3,406,0)
F;210.5;-2.26238209;21.10163241;0.147323144
"DATA",999.21,24,3,407,0)
F;211.5;-2.269731517;21.13215845;0.147286698
"DATA",999.21,24,3,408,0)
F;212.5;-2.276917229;21.16206171;0.147260415
"DATA",999.21,24,3,409,0)
F;213.5;-2.283925442;21.1913351;0.147244828
"DATA",999.21,24,3,410,0)
F;214.5;-2.290731442;21.21997472;0.147240683
"DATA",999.21,24,3,411,0)
F;215.5;-2.29732427;21.24797262;0.147248467
"DATA",999.21,24,3,412,0)
F;216.5;-2.303687802;21.27532239;0.14726877
"DATA",999.21,24,3,413,0)
F;217.5;-2.309799971;21.30201933;0.147302299
"DATA",999.21,24,3,414,0)
F;218.5;-2.315651874;21.32805489;0.147349514
"DATA",999.21,24,3,415,0)
F;219.5;-2.32121731;21.35342563;0.147411215
"DATA",999.21,24,3,416,0)
F;220.5;-2.326481911;21.37812462;0.147487979
"DATA",999.21,24,3,417,0)
F;221.5;-2.331428139;21.40214589;0.147580453
"DATA",999.21,24,3,418,0)
F;222.5;-2.336038473;21.42548351;0.147689289
"DATA",999.21,24,3,419,0)
F;223.5;-2.34029545;21.44813156;0.14781515
"DATA",999.21,24,3,420,0)
F;224.5;-2.344181703;21.47008412;0.147958706
"DATA",999.21,24,3,421,0)
F;225.5;-2.34768;21.49133529;0.148120633
"DATA",999.21,24,3,422,0)
F;226.5;-2.350773286;21.51187918;0.148301619
"DATA",999.21,24,3,423,0)
F;227.5;-2.353444725;21.53170989;0.148502355
"DATA",999.21,24,3,424,0)
F;228.5;-2.355677743;21.55082155;0.148723546
"DATA",999.21,24,3,425,0)
F;229.5;-2.35745607;21.56920824;0.148965902
"DATA",999.21,24,3,426,0)
F;230.5;-2.358763788;21.58686406;0.149230142
"DATA",999.21,24,3,427,0)
F;231.5;-2.359585369;21.60378309;0.149516994
"DATA",999.21,24,3,428,0)
F;232.5;-2.359905726;21.61995939;0.149827195
"DATA",999.21,24,3,429,0)
F;233.5;-2.359710258;21.635387;0.150161492
"DATA",999.21,24,3,430,0)
F;234.5;-2.358980464;21.65006126;0.150520734
"DATA",999.21,24,3,431,0)
F;235.5;-2.357714508;21.6639727;0.150905439
"DATA",999.21,24,3,432,0)
F;236.5;-2.355892424;21.67711736;0.151316531
"DATA",999.21,24,3,433,0)
F;237.5;-2.353501353;21.68948935;0.151754808
"DATA",999.21,24,3,434,0)
F;238.5;-2.350528726;21.70108288;0.152221086
"DATA",999.21,24,3,435,0)
F;239.5;-2.346962247;21.71189225;0.152716206
"DATA",999.21,24,3,436,0)
F;240;-2.34495843;21.71699934;0.152974718
"DATA",999.21,24,10)
D QRYBMI^RGCWVM(0)
"DATA",999.21,25,0)
B.M.I. PERCENTILE^^%^%^5^85^BMI%
"DATA",999.21,25,10)
D QRYBMI^RGCWVM(1)
"DATA",999.21,26,0)
WAIST CIRCUMFERENCE^0^in^cm^17^40^WC
"DATA",999.21,26,1)
S X=X*2.54
"DATA",999.21,26,2)
S X=X/2.54
"DATA",999.21,26,4)
D VALIDNUM(.X,0,150)
"DATA",999.21,26,99,0)
^999.2199^4^4^3060612^
"DATA",999.21,26,99,1,0)
Enter waist circumference in centimeters (if metric units enabled) or inches.
"DATA",999.21,26,99,2,0)
Acceptable range is 0-150 inches (0-381 centimeters).
"DATA",999.21,26,99,3,0)

"DATA",999.21,26,99,4,0)
To force units regardless of metric setting, append cm or in to the value.
"DATA",999.21,27,0)
PHQ2^^^^^^PHQ2
"DATA",999.21,27,4)
D VALIDINT(.X,0,6)
"DATA",999.21,27,99,0)
^^4^4^3071026.093051
"DATA",999.21,27,99,1,0)
Enter a total PHQ2 score.  Allowable range is 0-6.
"DATA",999.21,27,99,2,0)

"DATA",999.21,27,99,3,0)
A score of 3 or higher is considered a positive screen and further evaluation 
"DATA",999.21,27,99,4,0)
is indicated. 
"DATA",999.21,28,0)
PHQ9^^^^^^PHQ9
"DATA",999.21,28,4)
D VALIDINT(.X,0,27)
"DATA",999.21,28,99,0)
^^7^7^3071026.09334
"DATA",999.21,28,99,1,0)
Enter a total PHQ9 score.  Allowable range is 0-27.
"DATA",999.21,28,99,2,0)

"DATA",999.21,28,99,3,0)
   0 - 4  No depression
"DATA",999.21,28,99,4,0)
   5 - 9  Minimal symptoms
"DATA",999.21,28,99,5,0)
  10 - 14 Mild symptoms
"DATA",999.21,28,99,6,0)
  15 - 19 Moderate symptoms
"DATA",999.21,28,99,7,0)
    20+   Severe symptoms
"DATA",999.21,29,0)
AUDIT^^^^^^AUDT
"DATA",999.21,29,4)
D VALIDINT(.X,0,40)
"DATA",999.21,29,99,0)
^^8^8^3071026.093553
"DATA",999.21,29,99,1,0)
Enter a total AUDIT score.  Allowable range is 0-40.
"DATA",999.21,29,99,2,0)

"DATA",999.21,29,99,3,0)
Zone I:   Score  0 - 7   Low risk drinking or abstinence
"DATA",999.21,29,99,4,0)
Zone II:  Score  8 - 15  Alcohol use in excess of low-risk guidelines 
"DATA",999.21,29,99,5,0)
Zone III: Score 16 - 19  Harmful and hazardous drinking 
"DATA",999.21,29,99,6,0)
Zone IV:  Score 20 - 40  Referral to specialist for diagnostic evaluation 
"DATA",999.21,29,99,7,0)
                         and treament
"DATA",999.21,29,99,8,0)

"DATA",999.21,30,0)
CRAFFT^^^^^^CRFT
"DATA",999.21,30,4)
D VALIDINT(.X,0,6)
"DATA",999.21,30,99,0)
^^4^4^3071026.105109
"DATA",999.21,30,99,1,0)
Enter a total CRAFFT score.  Allowable range is 0-6.
"DATA",999.21,30,99,2,0)

"DATA",999.21,30,99,3,0)
Positive answers to two or more questions are highly predictive of an alcohol 
"DATA",999.21,30,99,4,0)
or drug-related disorder. Further assessment is indicated. 
"DATA",999.21,30,99,5,0)
            Allowable Range for days 0-6  Ex: 6/7 
"DATA",999.21,31,0)
ANKLE BLOOD PRESSURE^0^mmHg^mmHg^90^150^AKBP
"DATA",999.21,31,4)
D VALIDBP(.X,20,275,20,200)
"DATA",999.21,31,99,0)
^^8^8^3071026.095351
"DATA",999.21,31,99,1,0)
Enter an ankle blood pressure measurement, in mmHg, in the format:
"DATA",999.21,31,99,2,0)

"DATA",999.21,31,99,3,0)
     <Systolic>/<Diastolic>
"DATA",999.21,31,99,4,0)

"DATA",999.21,31,99,5,0)
For example,
"DATA",999.21,31,99,6,0)

"DATA",999.21,31,99,7,0)
       120/95
"DATA",999.21,31,99,8,0)

"DATA",999.21,32,0)
ASQ - FINE MOTOR^^^^^^ASQF
"DATA",999.21,32,4)
D VALIDINT(.X,0,95,5)
"DATA",999.21,32,99,0)
^999.2199^2^2^3071026^
"DATA",999.21,32,99,1,0)
Enter an ASQ FINE MOTOR development score between 0 and 95,
"DATA",999.21,32,99,2,0)
in increments of 5. 
"DATA",999.21,33,0)
ASQ - GROSS MOTOR^^^^^^ASQG
"DATA",999.21,33,4)
D VALIDINT(.X,0,95,5)
"DATA",999.21,33,99,0)
^999.2199^2^2^3071026^
"DATA",999.21,33,99,1,0)
Enter an ASQ GROSS MOTOR development score between 0 and 95,
"DATA",999.21,33,99,2,0)
in increments of 5. 
"DATA",999.21,34,0)
ASQ - LANGUAGE^^^^^^ASQL
"DATA",999.21,34,4)
D VALIDINT(.X,0,95,5)
"DATA",999.21,34,99,0)
^999.2199^2^2^3071026^
"DATA",999.21,34,99,1,0)
Enter an ASQ LANGUAGE development score between 0 and 95,
"DATA",999.21,34,99,2,0)
in increments of 5. 
"DATA",999.21,35,0)
ASQ - SOCIAL^^^^^^ASQS
"DATA",999.21,35,4)
D VALIDINT(.X,0,95,5)
"DATA",999.21,35,99,0)
^999.2199^2^2^3071026^
"DATA",999.21,35,99,1,0)
Enter an ASQ SOCIAL development score between 0 and 95,
"DATA",999.21,35,99,2,0)
in increments of 5. 
"DATA",999.21,36,0)
ASQ - PROBLEM SOLVING^^^^^^ASQP
"DATA",999.21,36,4)
D VALIDINT(.X,0,95,5)
"DATA",999.21,36,99,0)
^999.2199^2^2^3071026^
"DATA",999.21,36,99,1,0)
Enter an ASQ PROBLEM SOLVING development score between 0 and 95,
"DATA",999.21,36,99,2,0)
in increments of 5.
"DATA",999.21,37,0)
ASQ - QUESTIONNAIRE (MOS)^^^^^^ASQM
"DATA",999.21,37,4)
S X=$$UP^XLFSTR(X) I '$D(^VEN(7.14,"B",X)) S X="-1^Enter the name of the ASQ questionnaire"
"DATA",999.21,37,99,0)
^999.2199^1^1^3071026.121647
"DATA",999.21,37,99,1,0)
Enter the name of the ASQ questionnaire.
"DATA",999.21,38,0)
AUDIT-C^^^^^^AUDC
"DATA",999.21,38,4)
D VALIDINT(.X,0,12)
"DATA",999.21,38,99,0)
^^8^8^3081202.161203
"DATA",999.21,38,99,1,0)
 Enter a total AUDIT-C score. Range: 0-12
"DATA",999.21,38,99,2,0)

"DATA",999.21,38,99,3,0)
 The AUDIT-C (the first three AUDIT questions which focus on alcohol
"DATA",999.21,38,99,4,0)
 consumption) is scored on a scale of 0-12 (scores of 0 reflect no
"DATA",999.21,38,99,5,0)
 alcohol use). In men, a score of 4 or more is considered positive; in
"DATA",999.21,38,99,6,0)
 women, a score of 3 or more is considered positive. A positive score
"DATA",999.21,38,99,7,0)
 means the patient is at increased risk for hazardous drinking or active
"DATA",999.21,38,99,8,0)
 alcohol abuse or dependence.
"DATA",999.21,39,0)
ASTHMA WORK/SCHOOL DAYS MISSED^^^^^^ADM
"DATA",999.21,39,4)
D VALIDINT(.X,0,14,1)
"DATA",999.21,39,99,0)
^^1^1^3090616.091604
"DATA",999.21,39,99,1,0)
Enter the number of school/work days missed as a number from 0-14. 
"DATA",999.21,40,0)
ASTHMA SYMPTOM FREE DAYS^^^^^^ASFD
"DATA",999.21,40,4)
D VALIDINT(.X,0,14,1)
"DATA",999.21,40,99,0)
^^1^1^3090616.091753
"DATA",999.21,40,99,1,0)
Enter symptom free days as a number from 0-14.
"DATA",999.21,41,0)
BEST PEAK FLOW^^^^^^BPF
"DATA",999.21,41,4)
D VALIDINT(.X,50,1000,1)
"DATA",999.21,41,99,0)
^^1^1^3090616.091904
"DATA",999.21,41,99,1,0)
Enter the best peak flow for this patient as a number from 50-1000.
"DATA",999.21,42,0)
FEF 25-75^^^^^^FEF
"DATA",999.21,42,4)
D VALIDINT(.X,0,150,1)
"DATA",999.21,42,99,0)
^999.2199^1^1^3090623^
"DATA",999.21,42,99,1,0)
Enter the FEF 25-75 score as a number from 0-150.
"DATA",999.21,43,0)
FEV1/FVC^^^^^^FVFC
"DATA",999.21,43,4)
D FVFC^AUPNVMSR
"DATA",999.21,43,99,0)
^^1^1^3090616.092158
"DATA",999.21,43,99,1,0)
Enter both fields as numbers from 0-10 with a slash between them (ie. 5/8).
"DATA",999.21,46,0)
MINI MENTAL STATUS EXAM^^^^^^MMSE
"DATA",999.21,46,4)
D VALIDNUM(.X,0,30)
"DATA",999.21,46,99,0)
^999.2199^3^3^3110920^
"DATA",999.21,46,99,1,0)
Enter a total MMSE score. A score of 25-30 is considered normal;
"DATA",999.21,46,99,2,0)
19-24 indicates mild impairment; 10-19 represents moderate impairment and a 
"DATA",999.21,46,99,3,0)
score below 10 indicates severe dementia. 
"DATA",999.21,47,0)
ESTIMATED GESTATIONAL AGE^^^^^^EGA
"DATA",999.21,47,4)
D EGA^AUPNVMSR
"DATA",999.21,47,99,0)
^^5^5^3110902.121156
"DATA",999.21,47,99,1,0)
Enter weeks gestation for # weeks and # days/7:
"DATA",999.21,47,99,2,0)
  Example:  33 weeks 2 days gestation enter as 33 2/7
"DATA",999.21,47,99,3,0)
            24 weeks 0 days gestation enter as 24
"DATA",999.21,47,99,4,0)
            Allowable Range for weeks 4-44
"DATA",999.21,47,99,5,0)
            Allowable Range for days 0-6  Ex: 6/7 
"DATA",999.21,48,0)
ASQ - AUTISM SCREEN^^^^^^ASQA
"DATA",999.21,48,4)
D ASQX^VENPCCQ
"DATA",999.21,48,99,0)
^^5^5^3120925.121059
"DATA",999.21,48,99,1,0)
Enter a score in the following format:
"DATA",999.21,48,99,2,0)
  nn (nn)
"DATA",999.21,48,99,3,0)
  nn.nn (nn)
"DATA",999.21,48,99,4,0)
  nn (nn.nn)
"DATA",999.21,48,99,5,0)
  nn.nn (nn.nn)
"DATA",999.21,49,0)
PHQ-9 MODIFIED FOR TEENS^^^^^^PHQT
"DATA",999.21,49,4)
D VALIDNUM(.X,0,27)
"DATA",999.21,49,99,0)
^^11^11^3120806.101802
"DATA",999.21,49,99,1,0)
Enter a total PHQ-9 Modified for Teens scrore. The allowable range is 0-27. 
"DATA",999.21,49,99,2,0)
A positive score is a total score equal to or greater than 11 OR a positive
"DATA",999.21,49,99,3,0)
response to questions 12 or 13.
"DATA",999.21,49,99,4,0)

"DATA",999.21,49,99,5,0)
Depression Severity:  1 - 4:  Minimal depression; 5 - 9:  Mild depression; 10
"DATA",999.21,49,99,6,0)
 - 14:  Moderate depression; 15 - 19:  Moderately severe depression; 20 - 27:
"DATA",999.21,49,99,7,0)
 Severe depression.
"DATA",999.21,49,99,8,0)
 
"DATA",999.21,49,99,9,0)
Suicidality:  Regardless of the PHQ-9 Modified total score, endorsement of
"DATA",999.21,49,99,10,0)
serious suicidal ideation OR past suicide attempt (a "Yes" response to
"DATA",999.21,49,99,11,0)
questions 12 or 13) should be considered a positive screen.
"DATA",999.21,300,0)
CARDIAC EJECTION FRACTION^^^^^^CEF
"DATA",999.21,300,4)
D VALIDNUM(.X,5,99)
"DATA",999.21,300,99,0)
^^1^1^3100826.100113
"DATA",999.21,300,99,1,0)
Enter cardiac ejection fraction as a number between 5 and 99.
"DATA",999.21,336,0)
LAST KNOWN WELL^^^^^^LKW
"DATA",999.21,336,4)
S X=$$UP^XLFSTR(X) I X'="WELL" S X="-1^Enter WELL as the value."
"DATA",999.21,336,99,0)
^999.2199^3^3^3110209^
"DATA",999.21,336,99,1,0)
Enter the item WELL at the last known time prior to the patient displaying
"DATA",999.21,336,99,2,0)
stroke symptoms.
"DATA",999.21,336,99,3,0)

"DATA",999.21,344,0)
O2 SATURATION^0^%^%^^^O2
"DATA",999.21,344,4)
D VALIDNUM(.X,50,100)
"DATA",999.21,344,99,0)
^999.2199^2^2^3090930^^
"DATA",999.21,344,99,1,0)
Enter oxygen saturation as a percentage.  Must be an integer value between 50
"DATA",999.21,344,99,2,0)
and 100, inclusive. 
"FIA",999.1)
CAREWEB SERIALIZATION
"FIA",999.1,0)
^RGCWF(999.1,
"FIA",999.1,0,0)
999.1I
"FIA",999.1,0,1)
n^y^f^^n^^y^o^n
"FIA",999.1,0,10)

"FIA",999.1,0,11)
I $$SCRN^RGCWKDTP(Y,1)
"FIA",999.1,0,"RLRO")

"FIA",999.1,999.1)
0
"FIA",999.1,999.11)
0
"FIA",999.1,999.12)
0
"FIA",999.1,999.13)
0
"FIA",999.201)
CAREWEB NOTIFICATION CONTROL
"FIA",999.201,0)
^RGCWF(999.201,
"FIA",999.201,0,0)
999.201
"FIA",999.201,0,1)
n^y^f^^y^^y^o^n
"FIA",999.201,0,10)

"FIA",999.201,0,11)
I $$SCRN^RGCWKDTP(Y,4)
"FIA",999.201,0,"RLRO")

"FIA",999.201,999.201)
0
"FIA",999.21)
CAREWEB MEASUREMENT CONTROL
"FIA",999.21,0)
^RGCWF(999.21,
"FIA",999.21,0,0)
999.21
"FIA",999.21,0,1)
y^y^f^^n^^y^o^n
"FIA",999.21,0,10)

"FIA",999.21,0,11)

"FIA",999.21,0,"RLRO")

"FIA",999.21,999.21)
0
"FIA",999.21,999.2109)
0
"FIA",999.21,999.2199)
0
"FIA",19941.21)
CIA EVENT TYPE
"FIA",19941.21,0)
^CIANB(19941.21,
"FIA",19941.21,0,0)
19941.21
"FIA",19941.21,0,1)
n^y^f^^y^^y^o^n
"FIA",19941.21,0,10)

"FIA",19941.21,0,11)
I $$SCRN^RGCWKDTP(Y,5)
"FIA",19941.21,0,"RLRO")

"FIA",19941.21,19941.21)
0
"FIA",19941.21,19941.212)
0
"FIA",19941.21,19941.2121)
0
"FIA",19941.21,19941.2199)
0
"INI")
PRE^RGCWKDIN
"INIT")
POST^RGCWKDIN
"KRN",8989.51,404,-1)
0^5
"KRN",8989.51,404,0)
RGCWVM TEMPLATE^Vital Measurement Input Template^1^Sequence^Measurement
"KRN",8989.51,404,1)
P^999.21
"KRN",8989.51,404,6)
N
"KRN",8989.51,404,20,0)
^8989.512^1^1^3020321^
"KRN",8989.51,404,20,1,0)
Controls the formatting of the vital measurement data entry dialog.
"KRN",8989.51,404,30,0)
^8989.513I^6^6
"KRN",8989.51,404,30,1,0)
100^200
"KRN",8989.51,404,30,2,0)
200^8930
"KRN",8989.51,404,30,3,0)
300^49
"KRN",8989.51,404,30,4,0)
400^44
"KRN",8989.51,404,30,5,0)
500^4
"KRN",8989.51,404,30,6,0)
900^4.2
"KRN",8989.51,405,-1)
0^7
"KRN",8989.51,405,0)
RGCWVM VITAL LIST^Vital signs list for cover sheet^1^Sequence^Vital
"KRN",8989.51,405,1)
P^999.21
"KRN",8989.51,405,6)
N^1:999999^Sequence number for vital
"KRN",8989.51,405,20,0)
^8989.512^1^1^3140430^^
"KRN",8989.51,405,20,1,0)
Lists which vitals appear on the cover sheet and in which order.
"KRN",8989.51,405,30,0)
^8989.513I^6^6
"KRN",8989.51,405,30,1,0)
900^4.2
"KRN",8989.51,405,30,2,0)
100^200
"KRN",8989.51,405,30,3,0)
200^8930
"KRN",8989.51,405,30,4,0)
300^49
"KRN",8989.51,405,30,5,0)
400^44
"KRN",8989.51,405,30,6,0)
500^4
"KRN",8989.51,406,-1)
0^6
"KRN",8989.51,406,0)
RGCWVM USE VMSR^Use PCC/PCE for vital measurements?^0^^Use V file for vital measurements?
"KRN",8989.51,406,1)
Y
"KRN",8989.51,406,2)
S ^XTMP("CIAOCVVM VITAL LIST",0)=$$FMADD^XLFDT(DT,30)_U_DT
"KRN",8989.51,406,30,0)
^8989.513I^1^1
"KRN",8989.51,406,30,1,0)
1^4.2
"KRN",8989.51,407,-1)
0^3
"KRN",8989.51,407,0)
RGCWVM ERROR RPT^Can View Entered in Error Report^^^Can View Entered in Error Report?
"KRN",8989.51,407,1)
Y
"KRN",8989.51,407,20,0)
^^1^1^3100127.090306
"KRN",8989.51,407,20,1,0)
If yes, the user can view the entered in error reports
"KRN",8989.51,407,30,0)
^8989.513I^2^2
"KRN",8989.51,407,30,1,0)
100^200
"KRN",8989.51,407,30,2,0)
200^8930
"KRN",8989.51,408,-1)
0^1
"KRN",8989.51,408,0)
RGCWVM DATA ENTRY^Can enter vital measurements?^^^Can enter vital measurements?
"KRN",8989.51,408,1)
Y
"KRN",8989.51,408,20,0)
^^1^1^3041230.11405
"KRN",8989.51,408,20,1,0)
If yes, the user is permitted to enter vital measurement data.
"KRN",8989.51,408,30,0)
^8989.513I^6^6
"KRN",8989.51,408,30,1,0)
100^200
"KRN",8989.51,408,30,2,0)
200^8930
"KRN",8989.51,408,30,3,0)
300^49
"KRN",8989.51,408,30,4,0)
400^44
"KRN",8989.51,408,30,5,0)
500^4
"KRN",8989.51,408,30,6,0)
900^4.2
"KRN",8989.51,409,-1)
0^2
"KRN",8989.51,409,0)
RGCWVM DEFAULT UNITS^Default units for measurement^1^Measurement Type^Default Units
"KRN",8989.51,409,1)
S^0:US;1:METRIC
"KRN",8989.51,409,6)
P^90460.01
"KRN",8989.51,409,20,0)
^8989.512^1^1^3070724^
"KRN",8989.51,409,20,1,0)
Permits overriding the default units for any measurement type.
"KRN",8989.51,409,30,0)
^8989.513I^6^6
"KRN",8989.51,409,30,1,0)
100^200
"KRN",8989.51,409,30,2,0)
200^8930
"KRN",8989.51,409,30,3,0)
300^49
"KRN",8989.51,409,30,4,0)
400^44
"KRN",8989.51,409,30,5,0)
500^4
"KRN",8989.51,409,30,6,0)
900^4.2
"KRN",8989.51,410,-1)
0^4
"KRN",8989.51,410,0)
RGCWVM NEW DATE DEFAULT^Select new date default^0^^Default radio group button
"KRN",8989.51,410,1)
N^0:2^0-Current Visit;2-Now
"KRN",8989.51,410,2)
K:X=1 X
"KRN",8989.51,410,30,0)
^8989.513I^6^6
"KRN",8989.51,410,30,1,0)
800^4.2
"KRN",8989.51,410,30,2,0)
700^4
"KRN",8989.51,410,30,3,0)
600^44
"KRN",8989.51,410,30,4,0)
500^49
"KRN",8989.51,410,30,5,0)
400^8930
"KRN",8989.51,410,30,6,0)
100^200
"KRN",8994,2684,-1)
0^5
"KRN",8994,2684,0)
RGCWVM LIST^LIST^RGCWVM^4^^^^1
"KRN",8994,2685,-1)
0^1
"KRN",8994,2685,0)
RGCWVM DETAIL^DETAIL^RGCWVM^4^^^^1
"KRN",8994,2686,-1)
0^2
"KRN",8994,2686,0)
RGCWVM GRID^GRID^RGCWVM^4^^^^1
"KRN",8994,2687,-1)
0^7
"KRN",8994,2687,0)
RGCWVM SAVE^SAVE^RGCWVM^1
"KRN",8994,2688,-1)
0^8
"KRN",8994,2688,0)
RGCWVM TEMPLATE^TEMPLATE^RGCWVM^4^^^^1
"KRN",8994,2689,-1)
0^9
"KRN",8994,2689,0)
RGCWVM VALIDATE^VALIDATE^RGCWVM^1
"KRN",8994,2690,-1)
0^6
"KRN",8994,2690,0)
RGCWVM PCTILE^PCTILE^RGCWVM^4^^^^1
"KRN",8994,2691,-1)
0^3
"KRN",8994,2691,0)
RGCWVM HELP^HELP^RGCWVM^2^^^^1
"KRN",8994,2692,-1)
0^4
"KRN",8994,2692,0)
RGCWVM LASTVIT^LASTVIT^RGCWVM^4
"KRN",8994,2693,-1)
0^12
"KRN",8994,2693,0)
RGCWVM2 GETCATS^GETCATS^RGCWVM2^4^^^^1
"KRN",8994,2693,1,0)
^8994.01^7^7^3091230^
"KRN",8994,2693,1,1,0)
This RPC will return the categories and the qualifiers for a particular vital sign
"KRN",8994,2693,1,2,0)
The input for this is the name of abbreviation of the vital sign from the 
"KRN",8994,2693,1,3,0)
BEH MEASURMENT CONTROL file so it can be used by both databases
"KRN",8994,2693,1,4,0)

"KRN",8994,2693,1,5,0)
The output will be an array of items in the following format. Each category may have multple qualifiers
"KRN",8994,2693,1,6,0)
CATEGORY IEN^CATEGORY NAME^QUALIFIER~QUALIFIER~QUALIFIER ETC 
"KRN",8994,2693,1,7,0)

"KRN",8994,2693,2,0)
^8994.02A^1^1
"KRN",8994,2693,2,1,0)
IEN^1^^1
"KRN",8994,2693,2,1,1,0)
^8994.021^1^1^3091230^
"KRN",8994,2693,2,1,1,1,0)
Name or abbreviation of the vital sign to check for categories and qualifiers
"KRN",8994,2693,2,"B","IEN",1)

"KRN",8994,2693,3,0)
^8994.03^2^2^3091230^
"KRN",8994,2693,3,1,0)
Array of items in the following format
"KRN",8994,2693,3,2,0)
CAT IEN^CAT NAME^QUALIFER~QUALIFER...
"KRN",8994,2694,-1)
0^10
"KRN",8994,2694,0)
RGCWVM2 EIE^EIE^RGCWVM2^1
"KRN",8994,2694,1,0)
^8994.01^5^5^3100224^^
"KRN",8994,2694,1,1,0)
This RPC will store the entered in error information on one particular vital measurement
"KRN",8994,2694,1,2,0)
Input is a string in the following format
"KRN",8994,2694,1,3,0)
FILE IEN^DUZ^REASON
"KRN",8994,2694,1,4,0)

"KRN",8994,2694,1,5,0)
Output is either OK or an error message
"KRN",8994,2694,2,0)
^8994.02A^1^1
"KRN",8994,2694,2,1,0)
BEHDATA^1^^1
"KRN",8994,2694,2,1,1,0)
^8994.021^2^2^3091230^
"KRN",8994,2694,2,1,1,1,0)
Input is the data to be entered in error
"KRN",8994,2694,2,1,1,2,0)
IEN of the vital measurement^DUZ of the person entering in error^REASON entered in error (set of codes)
"KRN",8994,2694,2,"B","BEHDATA",1)

"KRN",8994,2694,3,0)
^8994.03^1^1^3091230^
"KRN",8994,2694,3,1,0)
Return is 0 if its OK and an error message if it is not ok
"KRN",8994,2695,-1)
0^13
"KRN",8994,2695,0)
RGCWVM2 QUAL^QUAL^RGCWVM2^1^^^^1
"KRN",8994,2695,1,0)
^8994.01^5^5^3091230.115848
"KRN",8994,2695,1,1,0)
This RPC will store qualifiers for a vital entry
"KRN",8994,2695,1,2,0)
The input values are the IEN of the vital measuremnt and the list of qualifiers
"KRN",8994,2695,1,3,0)
separated by the ~ sign since this entry point is also used in the RGCWVM SAVE call
"KRN",8994,2695,1,4,0)

"KRN",8994,2695,1,5,0)
Return is an Ok that it was saved or an error message.
"KRN",8994,2695,2,0)
^8994.02A^2^2
"KRN",8994,2695,2,1,0)
IEN^1^^1
"KRN",8994,2695,2,1,1,0)
^^1^1^3091230.115917
"KRN",8994,2695,2,1,1,1,0)
IEN of the vital measurement
"KRN",8994,2695,2,2,0)
QUALS^1
"KRN",8994,2695,2,2,1,0)
^^2^2^3091230.120015
"KRN",8994,2695,2,2,1,1,0)
List of qualifiers separated by ~ signs. The qualifers can be sent as either the
"KRN",8994,2695,2,2,1,2,0)
name of the qualifier or its IEN
"KRN",8994,2695,2,"B","IEN",1)

"KRN",8994,2695,2,"B","QUALS",2)

"KRN",8994,2695,3,0)
^^1^1^3091230.120028
"KRN",8994,2695,3,1,0)
OK or an error message
"KRN",8994,2696,-1)
0^14
"KRN",8994,2696,0)
RGCWVM2 VUNITS^VUNITS^RGCWVM2^1^^^^1
"KRN",8994,2696,1,0)
^8994.01^1^1^3100218.104508
"KRN",8994,2696,1,1,0)
Send in the name of a vital and it returns the units (metric and English) and the highs and lows if set 
"KRN",8994,2696,2,0)
^8994.02A^1^1
"KRN",8994,2696,2,1,0)
VIT^1^^1
"KRN",8994,2696,2,1,1,0)
^^1^1^3100218.104528
"KRN",8994,2696,2,1,1,1,0)
Vital measurement by name of abbreviation to lookup
"KRN",8994,2696,2,"B","VIT",1)

"KRN",8994,2696,3,0)
^^3^3^3100218.104629
"KRN",8994,2696,3,1,0)
List in format english units^lo^hi^metric^lo^hi
"KRN",8994,2696,3,2,0)

"KRN",8994,2696,3,3,0)
in^17^40^cm^43.18^101.6 
"KRN",8994,2697,-1)
0^11
"KRN",8994,2697,0)
RGCWVM2 GETCATP^GETCATP^RGCWVM2^4^^^^1
"MBREQ")
1
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PGL",19941.21,0,7,7)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"PRE")
RGCWKDIN
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","RGCWKDIN")
0^^B31866196
"RTN","RGCWKDIN",1,0)
RGCKDIN ;RI/CBMI/DKM - CareWeb KIDS installation support ;02-Feb-2015 12:11;DKM
"RTN","RGCWKDIN",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 107
"RTN","RGCWKDIN",3,0)
 ; Environment check
"RTN","RGCWKDIN",4,0)
EC X $G(@XPDGREF@("EC"))
"RTN","RGCWKDIN",5,0)
 Q
"RTN","RGCWKDIN",6,0)
 ; Preinit
"RTN","RGCWKDIN",7,0)
PRE N RGX,RGY
"RTN","RGCWKDIN",8,0)
 D MES(),OBJINST,SDINIT^RGCWFUTL(,60,1)
"RTN","RGCWKDIN",9,0)
 F  D  Q:'RGX
"RTN","RGCWKDIN",10,0)
 .S RGX=$$SHOWSESS^RGCWFUTL
"RTN","RGCWKDIN",11,0)
 .R:RGX "Waiting for active sessions to terminate...",RGY:10,!!
"RTN","RGCWKDIN",12,0)
 .I RGX,RGY=U,$$ASK^RGUT("There are still active sessions.  Are you sure you want to proceed") S RGX=0
"RTN","RGCWKDIN",13,0)
 D MES("Proceeding with installation...")
"RTN","RGCWKDIN",14,0)
 D INITIAL,SAVEOPT
"RTN","RGCWKDIN",15,0)
 Q
"RTN","RGCWKDIN",16,0)
 ; Postinit
"RTN","RGCWKDIN",17,0)
POST N PAR,Y
"RTN","RGCWKDIN",18,0)
 X ^%ZOSF("EON"),^%ZOSF("TRMOFF")
"RTN","RGCWKDIN",19,0)
 D RESPTR,DEFPAR,RESTOPT,REGISTER,FINAL
"RTN","RGCWKDIN",20,0)
 W !!!
"RTN","RGCWKDIN",21,0)
 Q
"RTN","RGCWKDIN",22,0)
 ; Execute initial preinit code, if any
"RTN","RGCWKDIN",23,0)
INITIAL ; EP
"RTN","RGCWKDIN",24,0)
 X $G(@XPDGREF@("INITIAL"))
"RTN","RGCWKDIN",25,0)
 Q
"RTN","RGCWKDIN",26,0)
 ; Execute final postinit code, if any
"RTN","RGCWKDIN",27,0)
FINAL ; EP
"RTN","RGCWKDIN",28,0)
 X $G(@XPDGREF@("FINAL"))
"RTN","RGCWKDIN",29,0)
 Q
"RTN","RGCWKDIN",30,0)
 ; Initializes default parameter values.  Does not affect existing entries.
"RTN","RGCWKDIN",31,0)
DEFPAR N PAR,ENT,VAL,INST,LP,Y
"RTN","RGCWKDIN",32,0)
 D MES("Setting up default site parameters...")
"RTN","RGCWKDIN",33,0)
 F LP=0:0 S LP=$O(@XPDGREF@("PARAM",LP)) Q:'LP  K VAL M VAL=^(LP) D
"RTN","RGCWKDIN",34,0)
 .S Y=VAL,VAL=$$MSG^RGUT($P(Y,U,3,999),"|",0),PAR=$P(Y,U),INST=$P(Y,U,2)
"RTN","RGCWKDIN",35,0)
 .S ENT=$$ENT^RGCWFPAR(PAR),ENT=$P(ENT,U,$L(ENT,U))
"RTN","RGCWKDIN",36,0)
 .D:$L(ENT) ADD^XPAR(ENT,PAR,INST,.VAL)
"RTN","RGCWKDIN",37,0)
 Q
"RTN","RGCWKDIN",38,0)
 ; Delete a file or subfile
"RTN","RGCWKDIN",39,0)
 ;   DIU = File or subfile #
"RTN","RGCWKDIN",40,0)
DELFIL(DIU) ; EP
"RTN","RGCWKDIN",41,0)
 N $ET
"RTN","RGCWKDIN",42,0)
 S $ET="",@$$TRAP^RGUTOS("DELERR^RGCWKDIN")
"RTN","RGCWKDIN",43,0)
 Q:'$D(^DD(DIU))
"RTN","RGCWKDIN",44,0)
 S DIU(0)=$S($D(^DIC(DIU)):"D",1:"S")
"RTN","RGCWKDIN",45,0)
 D EN^DIU2
"RTN","RGCWKDIN",46,0)
 Q
"RTN","RGCWKDIN",47,0)
DELERR N ERR
"RTN","RGCWKDIN",48,0)
 S ERR=$$EC^%ZOSV
"RTN","RGCWKDIN",49,0)
 D MES("An error occurred deleting file #"_$G(DIU))
"RTN","RGCWKDIN",50,0)
 D MES("The error was: "_ERR)
"RTN","RGCWKDIN",51,0)
 D MES("Please delete the file manually after correcting the problem.")
"RTN","RGCWKDIN",52,0)
 Q
"RTN","RGCWKDIN",53,0)
 ; Save ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK option
"RTN","RGCWKDIN",54,0)
SAVEOPT N OPT
"RTN","RGCWKDIN",55,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",56,0)
 Q:'OPT
"RTN","RGCWKDIN",57,0)
 M @XPDGREF@("ITMSAVE")=^DIC(19,OPT,10,"B")
"RTN","RGCWKDIN",58,0)
 M @XPDGREF@("RPCSAVE")=^DIC(19,OPT,"RPC","B")
"RTN","RGCWKDIN",59,0)
 Q
"RTN","RGCWKDIN",60,0)
 ; Restore ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK
"RTN","RGCWKDIN",61,0)
RESTOPT N OPT,ITM,RPC
"RTN","RGCWKDIN",62,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",63,0)
 Q:'OPT
"RTN","RGCWKDIN",64,0)
 F ITM=0:0 S ITM=$O(@XPDGREF@("ITMSAVE",ITM)) Q:'ITM  I $$REGCTX^RGUTRPC(ITM,OPT)
"RTN","RGCWKDIN",65,0)
 F RPC=0:0 S RPC=$O(@XPDGREF@("RPCSAVE",RPC)) Q:'RPC  I $$REGRPC^RGUTRPC(RPC,OPT)
"RTN","RGCWKDIN",66,0)
 Q
"RTN","RGCWKDIN",67,0)
 ; Resolve pointers in multiples (KIDS doesn't)
"RTN","RGCWKDIN",68,0)
RESPTR ; EP
"RTN","RGCWKDIN",69,0)
 N TGT,SRC,SUB,NOD,NAM,VAL,IEN,CNT,SGB,PTR
"RTN","RGCWKDIN",70,0)
 S SUB=0
"RTN","RGCWKDIN",71,0)
 F  S SUB=$O(@XPDGREF@("PTRS",SUB)) Q:'SUB  S X=^(SUB)  D
"RTN","RGCWKDIN",72,0)
 .S NOD=+X,SRC=$P(X,U,2),TGT=$P(X,U,3),SGB=$$ROOT^DILFD(SRC,,1),NAM=""
"RTN","RGCWKDIN",73,0)
 .F  S NAM=$O(@XPDGREF@("PTRS",SUB,NAM)) Q:'$L(NAM)  D
"RTN","RGCWKDIN",74,0)
 ..S IEN=$$FIND1^DIC(SRC,"","QX",NAM),VAL="",CNT=0
"RTN","RGCWKDIN",75,0)
 ..Q:IEN'>0
"RTN","RGCWKDIN",76,0)
 ..K @SGB@(IEN,NOD)
"RTN","RGCWKDIN",77,0)
 ..F  S VAL=$O(@XPDGREF@("PTRS",SUB,NAM,VAL)) Q:'$L(VAL)  D
"RTN","RGCWKDIN",78,0)
 ...S PTR=$$FIND1^DIC(TGT,,"X",VAL)
"RTN","RGCWKDIN",79,0)
 ...I 'PTR D MES("  Failed to resolve "_VAL) Q
"RTN","RGCWKDIN",80,0)
 ...S CNT=CNT+1,@SGB@(IEN,NOD,CNT,0)=PTR,@SGB@(IEN,NOD,"B",PTR,CNT)=""
"RTN","RGCWKDIN",81,0)
 ..S:CNT @SGB@(IEN,NOD,0)=U_SUB_"P^"_CNT_U_CNT
"RTN","RGCWKDIN",82,0)
 Q
"RTN","RGCWKDIN",83,0)
 ; Check binary version against M system
"RTN","RGCWKDIN",84,0)
OBJCHK ; EP
"RTN","RGCWKDIN",85,0)
 N VER,MSYS
"RTN","RGCWKDIN",86,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",87,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",88,0)
 I '$D(VER) D
"RTN","RGCWKDIN",89,0)
 .D MES("This package contains object code that is not supported on "_MSYS_" installations.",2)
"RTN","RGCWKDIN",90,0)
 E  I VER="" D
"RTN","RGCWKDIN",91,0)
 .D MES("This package does not contain object code for this version of "_MSYS_" installations.",2)
"RTN","RGCWKDIN",92,0)
 Q
"RTN","RGCWKDIN",93,0)
 ; Get M system type and target version
"RTN","RGCWKDIN",94,0)
GETMSYS(MSYS,VER) ;
"RTN","RGCWKDIN",95,0)
 K MSYS,VER
"RTN","RGCWKDIN",96,0)
 Q:'$D(@XPDGREF@("OBJ"))
"RTN","RGCWKDIN",97,0)
 S MSYS=$$UP^XLFSTR($P($$VERSION^%ZOSV(1)," ")),MSYS(0)=$S(MSYS="CACHE":1,MSYS="JUMPS":2,1:0)
"RTN","RGCWKDIN",98,0)
 Q:'$D(@XPDGREF@("OBJ",MSYS(0)))
"RTN","RGCWKDIN",99,0)
 S VER=$TR($$VERSION^%ZOSV()," ")
"RTN","RGCWKDIN",100,0)
 F  Q:'$L(VER)  Q:$D(@XPDGREF@("OBJ",MSYS(0),VER))  S VER=$P(VER,".",1,$L(VER,".")-1)
"RTN","RGCWKDIN",101,0)
 Q
"RTN","RGCWKDIN",102,0)
 ; Install routine binaries
"RTN","RGCWKDIN",103,0)
OBJINST ; EP
"RTN","RGCWKDIN",104,0)
 N MSYS,RTN,OBJ,SUB,GBL
"RTN","RGCWKDIN",105,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",106,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",107,0)
 Q:$D(@XPDGREF@("OBJ",MSYS(0)))<10
"RTN","RGCWKDIN",108,0)
 S RTN=""
"RTN","RGCWKDIN",109,0)
 D MES("Installing routine binaries...")
"RTN","RGCWKDIN",110,0)
 F  S RTN=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN)) Q:'$L(RTN)  D
"RTN","RGCWKDIN",111,0)
 .X "ZR  ZS @RTN"
"RTN","RGCWKDIN",112,0)
 .S OBJ="",SUB=0,GBL=$NA(@$S(MSYS(0)=1:"^rOBJ(RTN)",1:"^$R(RTN,""OBJECT"")"))
"RTN","RGCWKDIN",113,0)
 .F  S SUB=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN,SUB)) Q:'SUB  S OBJ=OBJ_^(SUB,0)
"RTN","RGCWKDIN",114,0)
 .S @GBL=$S(MSYS(0)=1:$$DECODE^RGUTUU(OBJ),1:OBJ)
"RTN","RGCWKDIN",115,0)
 Q
"RTN","RGCWKDIN",116,0)
 ; Perform various registration actions
"RTN","RGCWKDIN",117,0)
REGISTER N X,CTX
"RTN","RGCWKDIN",118,0)
 S CTX=$$GETOPT^RGUTRPC("RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",119,0)
 Q:'CTX
"RTN","RGCWKDIN",120,0)
 F X="RGCW","CIAV","CIAU","DG","DDR","RGUT","BEH" D REGNMSP^RGUTRPC(X,CTX)
"RTN","RGCWKDIN",121,0)
 F X="OR CPRS GUI CHART" D DOREG(X)
"RTN","RGCWKDIN",122,0)
 Q
"RTN","RGCWKDIN",123,0)
 ; Add an option as a subcontext to CareWeb Framework
"RTN","RGCWKDIN",124,0)
 ; Remove any redundant RPC's
"RTN","RGCWKDIN",125,0)
DOREG(OPT) ;
"RTN","RGCWKDIN",126,0)
 N RPC,CNT1,CNT2,STAT,IEN
"RTN","RGCWKDIN",127,0)
 S IEN=$$GETOPT^RGUTRPC(OPT)
"RTN","RGCWKDIN",128,0)
 Q:'IEN
"RTN","RGCWKDIN",129,0)
 W !!,"Registering ",OPT," as a subcontext under RGCWF CAREWEB FRAMEWORK...",!
"RTN","RGCWKDIN",130,0)
 I $$REGCTX^RGUTRPC(IEN,CTX)
"RTN","RGCWKDIN",131,0)
 W "Removing redundant RPC references...",!
"RTN","RGCWKDIN",132,0)
 S (CNT1,CNT2)=0
"RTN","RGCWKDIN",133,0)
 F RPC=0:0 S RPC=$O(^DIC(19,IEN,"RPC","B",RPC)) Q:'RPC  D
"RTN","RGCWKDIN",134,0)
 .S STAT=$$REGRPC^RGUTRPC(RPC,CTX,1)
"RTN","RGCWKDIN",135,0)
 .Q:STAT=-1
"RTN","RGCWKDIN",136,0)
 .W $$GET1^DIQ(8994,RPC,.01)_" - "
"RTN","RGCWKDIN",137,0)
 .I STAT=1 W "Removed",! S CNT1=CNT1+1
"RTN","RGCWKDIN",138,0)
 .E  I 'STAT W "Not removed",! S CNT2=CNT2+1
"RTN","RGCWKDIN",139,0)
 W !,CNT1," remote procedure(s) removed",!
"RTN","RGCWKDIN",140,0)
 W:CNT2 CNT2," remote procedure(s) could not be removed",!!
"RTN","RGCWKDIN",141,0)
 Q
"RTN","RGCWKDIN",142,0)
 ; Check if specified routine is installed
"RTN","RGCWKDIN",143,0)
RTNTST(RTN,VN,MSG) ;
"RTN","RGCWKDIN",144,0)
 D:$$RTNVER(RTN)<VN MES(MSG_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",145,0)
 Q
"RTN","RGCWKDIN",146,0)
 ; Get version # for specified routine
"RTN","RGCWKDIN",147,0)
RTNVER(RTN) ;
"RTN","RGCWKDIN",148,0)
 Q $P($T(+2^@RTN),";",3)
"RTN","RGCWKDIN",149,0)
 ; Check patch #s for specified routine
"RTN","RGCWKDIN",150,0)
PATCH(RTN,PN,MSG) ;
"RTN","RGCWKDIN",151,0)
 N X,Y,L,F
"RTN","RGCWKDIN",152,0)
 F X=1:1:$L(PN,",") D
"RTN","RGCWKDIN",153,0)
 .S Y=$P(PN,",",X),F=0
"RTN","RGCWKDIN",154,0)
 .F L=2,3 D  Q:F
"RTN","RGCWKDIN",155,0)
 ..S F=$TR($P($T(+L^@RTN),";",5),"*",",")[(","_Y_",")
"RTN","RGCWKDIN",156,0)
 .D:'F MES(MSG_" patch #"_Y_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",157,0)
 Q
"RTN","RGCWKDIN",158,0)
 ; Display message in MSG and optionally set quit flag to QUIT
"RTN","RGCWKDIN",159,0)
MES(MSG,QUIT) ;
"RTN","RGCWKDIN",160,0)
 D BMES^XPDUTL("  "_$G(MSG))
"RTN","RGCWKDIN",161,0)
 S:$G(QUIT) XPDQUIT=QUIT
"RTN","RGCWKDIN",162,0)
 Q
"RTN","RGCWVM")
0^1^B174083110
"RTN","RGCWVM",1,0)
RGCWVM ;MSC/IND/DKM - Cover Sheet: Vital Measurements ;02-Feb-2015 10:15;DKM
"RTN","RGCWVM",2,0)
 ;;1.0;CAREWEB FRAMEWORK;**001003,001004,001005,001006,001009**;Sep 18, 2007;Build 107
"RTN","RGCWVM",3,0)
 ;=================================================================
"RTN","RGCWVM",4,0)
 ; RPC: Return patient's most recent vital measurements
"RTN","RGCWVM",5,0)
 ;     vfile ien^vital name^vital abbr^date/time taken^value+units (US & metric)^Pt status (in,out)
"RTN","RGCWVM",6,0)
LIST(DATA,DFN,START,END,VITS,VSTR,METRIC,PTST,FSDATA) ;EP
"RTN","RGCWVM",7,0)
 N RMAX,O2
"RTN","RGCWVM",8,0)
 S RMAX=1
"RTN","RGCWVM",9,0)
 D QUERY("LISTX")
"RTN","RGCWVM",10,0)
 Q
"RTN","RGCWVM",11,0)
 ; Format data for list view
"RTN","RGCWVM",12,0)
LISTX N X
"RTN","RGCWVM",13,0)
 S X=RESULT(VUNT)_" "_$P(VUNT(VUNT),U)_U
"RTN","RGCWVM",14,0)
 S:VUNT(0)'=VUNT(1) X=X_RESULT('VUNT)_" "_$P(VUNT('VUNT),U)
"RTN","RGCWVM",15,0)
 I $G(O2)'="" S QUALIF=QUALIF_" "_O2 K O2      ;EHR11
"RTN","RGCWVM",16,0)
 D ADD(VIEN_U_VNAM_U_VABR_U_DATE_U_X_U_QUALIF)
"RTN","RGCWVM",17,0)
 Q
"RTN","RGCWVM",18,0)
 ; RPC: Return last vital for a specific date range
"RTN","RGCWVM",19,0)
LASTVIT(DATA,DFN,START,END,VITS,METRIC,FSDATA) ;EP
"RTN","RGCWVM",20,0)
 N VSTR,RMAX
"RTN","RGCWVM",21,0)
 S RMAX=1
"RTN","RGCWVM",22,0)
 D QUERY("LASTVITX")
"RTN","RGCWVM",23,0)
 Q
"RTN","RGCWVM",24,0)
 ; Format data for list view
"RTN","RGCWVM",25,0)
LASTVITX N X
"RTN","RGCWVM",26,0)
 S X=RESULT(VUNT)_" "_$P(VUNT(VUNT),U)_U
"RTN","RGCWVM",27,0)
 S:VUNT(0)'=VUNT(1) X=X_"("_RESULT('VUNT)_" "_$P(VUNT('VUNT),U)_")"
"RTN","RGCWVM",28,0)
 D ADD(VIEN_U_VABR_U_RESULT(VUNT)_U_DATE_U_X_U_QUALIF)
"RTN","RGCWVM",29,0)
 Q
"RTN","RGCWVM",30,0)
 ; Return last vital for specified type
"RTN","RGCWVM",31,0)
 ; Return format is: DT TAKEN^DFN^VTYP^VCTL^LOC^ENTERED BY^^RATE
"RTN","RGCWVM",32,0)
LAST(DFN,VITS,METRIC,START,END) ;EP
"RTN","RGCWVM",33,0)
 N VSTR,RMAX,DATA,LAST
"RTN","RGCWVM",34,0)
 S RMAX=1
"RTN","RGCWVM",35,0)
 D QUERY("LASTX")
"RTN","RGCWVM",36,0)
 Q $G(LAST)
"RTN","RGCWVM",37,0)
LASTX S LAST=DATE_U_DFN_U_VTYP_U_VCTL_U_LOC_U_ENTERBY_U_U_RESULT(METRIC)_U_QUALIF
"RTN","RGCWVM",38,0)
 Q
"RTN","RGCWVM",39,0)
 ; RPC: Return data for grid view
"RTN","RGCWVM",40,0)
GRID(DATA,DFN,START,END,RMAX,VITS,VSTR,METRIC,SD,FSDATA,PTST) ;EP
"RTN","RGCWVM",41,0)
 N CNT
"RTN","RGCWVM",42,0)
 D QUERY("GRIDX",.CNT,.SD)
"RTN","RGCWVM",43,0)
 M @DATA@(0)=VITS
"RTN","RGCWVM",44,0)
 S @DATA@(0)=CNT(1)_U_CNT(2)_U_CNT(3)
"RTN","RGCWVM",45,0)
 Q
"RTN","RGCWVM",46,0)
 ; Format for grid view
"RTN","RGCWVM",47,0)
GRIDX I '$D(DATE(DATE(0))) D
"RTN","RGCWVM",48,0)
 .S CNT(2)=CNT(2)+1,DATE(DATE(0))=CNT(2)
"RTN","RGCWVM",49,0)
 .D ADD(CNT(2)_U_DATE(0),,DATE(0))
"RTN","RGCWVM",50,0)
 I $G(O2)'="" S QUALIF=QUALIF_":"_O2 K O2      ;EHR11
"RTN","RGCWVM",51,0)
 D ADD(DATE(DATE(0))_U_CNT(1)_U_RESULT(METRIC)_U_$$FLAG_U_VIEN_U_QUALIF,,"R")
"RTN","RGCWVM",52,0)
 I $G(COMMENT)'="" D ADD(DATE(DATE(0))_U_CNT(1)_U_VIEN_U_COMMENT,,"C")
"RTN","RGCWVM",53,0)
 S CNT(3)=CNT(3)+1
"RTN","RGCWVM",54,0)
 Q
"RTN","RGCWVM",55,0)
 ; RPC: Return data for vital entry template
"RTN","RGCWVM",56,0)
TEMPLATE(DATA,DFN,VSTR,METRIC) ;EP
"RTN","RGCWVM",57,0)
 N VITS
"RTN","RGCWVM",58,0)
 S:'$P(VSTR,";",4) $P(VSTR,";",4)=-1
"RTN","RGCWVM",59,0)
 D VLIST(.VITS,"RGCWVM TEMPLATE",+VSTR)
"RTN","RGCWVM",60,0)
 ;IHS/MSC/MGH Called now to truncate to 2 decimal places
"RTN","RGCWVM",61,0)
 D GRID(.DATA,DFN,,,,.VITS,VSTR,.METRIC,2)
"RTN","RGCWVM",62,0)
 Q
"RTN","RGCWVM",63,0)
 ; Return flag for abnormal
"RTN","RGCWVM",64,0)
FLAG() N LO,HI,VAL
"RTN","RGCWVM",65,0)
 S LO=$P(VUNT(VUNT),U,2,3),HI=$P(LO,U,2),LO=$P(LO,U),VAL=RESULT(VUNT)
"RTN","RGCWVM",66,0)
 Q $S(VAL'=+VAL:"",$L(LO)&(VAL<LO):"L",$L(HI)&(VAL>HI):"H",1:"")
"RTN","RGCWVM",67,0)
 ; RPC: Return data for detail view
"RTN","RGCWVM",68,0)
DETAIL(DATA,DFN,START,END,RMAX,VITS,VSTR,METRIC) ;EP
"RTN","RGCWVM",69,0)
 D QUERY("DETAILX")
"RTN","RGCWVM",70,0)
 Q
"RTN","RGCWVM",71,0)
 ; Format for detail view
"RTN","RGCWVM",72,0)
DETAILX I '$D(DATE(DATE(0),LOC,ENTERBY)) D
"RTN","RGCWVM",73,0)
 .S CNT(2)=CNT(2)+1,DATE(DATE(0),LOC,ENTERBY)=CNT(2)
"RTN","RGCWVM",74,0)
 .D ADD("",,CNT(2))
"RTN","RGCWVM",75,0)
 .D ADD($$ENTRY^RGUTDT(DATE)_"      Location: "_$P($G(^SC(LOC,0)),U)_"  Entered by: "_$P($G(^VA(200,ENTERBY,0)),U),,CNT(2))
"RTN","RGCWVM",76,0)
 .D ADD($$REPEAT^XLFSTR("-",80),,CNT(2))
"RTN","RGCWVM",77,0)
 I $G(O2)'="" S QUALIF=QUALIF_" "_O2 K O2          ;EHR11
"RTN","RGCWVM",78,0)
 D ADD(RESULT(METRIC)_" "_$P(VUNT(METRIC),U)_"  "_QUALIF,"  "_VNAM,DATE(DATE(0),LOC,ENTERBY))
"RTN","RGCWVM",79,0)
 Q
"RTN","RGCWVM",80,0)
 ; Query logic for vitals
"RTN","RGCWVM",81,0)
QUERY(RTN,CNT,SD) ;
"RTN","RGCWVM",82,0)
 N SEQ,VIEN,IDT,DATE,LOC,VTYP,VNAM,VCTL,VABR,RCNT,RESULT,ENTERBY,VMSR,VUNT,VSIT,QRY,DEFUNT,X,Y,Z
"RTN","RGCWVM",83,0)
 N QUALS,QUALIF,QUALN,COMMENT,QARY
"RTN","RGCWVM",84,0)
 S DATA=$$TMPGBL^CIANBRPC,START=+$G(START),END=+$G(END),RMAX=+$G(RMAX),VSTR=$G(VSTR),VSIT=+$P(VSTR,";",4),PTST=$G(PTST)
"RTN","RGCWVM",85,0)
 S (CNT,CNT(1),CNT(2),CNT(3),SEQ)=0
"RTN","RGCWVM",86,0)
 Q:'DFN
"RTN","RGCWVM",87,0)
 S:'START START=DT+1
"RTN","RGCWVM",88,0)
 S:START<END X=START,START=END,END=X
"RTN","RGCWVM",89,0)
 S START=9999999-$S(START#1:START,1:START+.9),END=9999999-END
"RTN","RGCWVM",90,0)
 S:'RMAX RMAX=99999999
"RTN","RGCWVM",91,0)
 I $D(VITS)=1,$L(VITS) S VITS(1)=VITS
"RTN","RGCWVM",92,0)
 D:$D(VITS)'>1 VLIST(.VITS,"RGCWVM VITAL LIST",+VSTR)
"RTN","RGCWVM",93,0)
 S VMSR=$$VMSR,METRIC=$G(METRIC,-1),METRIC=$S(METRIC<0:-1,METRIC>0:1,1:0),DEFUNT=METRIC<0
"RTN","RGCWVM",94,0)
 F  S SEQ=$O(VITS(SEQ)) Q:'SEQ  D
"RTN","RGCWVM",95,0)
 .S VCTL=+VITS(SEQ)
"RTN","RGCWVM",96,0)
 .D TYPEINFO(.VCTL,.VNAM,.VABR,.VUNT,VMSR,.VTYP)
"RTN","RGCWVM",97,0)
 .;I VCTL'>0!(VTYP'>0) K VITS(SEQ) Q
"RTN","RGCWVM",98,0)
 .S:DEFUNT METRIC=$$DEFUNIT(VCTL,VUNT)
"RTN","RGCWVM",99,0)
 .K QARY D GETCATS^RGCWVM2(.QARY,VABR)
"RTN","RGCWVM",100,0)
 .S VITS(SEQ)=VCTL_U_VTYP_U_VNAM_U_VABR_U_VUNT(METRIC)_U_$S($O(^RGCWF(999.21,VCTL,3,0)):"RGCWVM PCTILE",1:"")_U_($D(@(QARY))=10)
"RTN","RGCWVM",101,0)
 .S IDT=START,RCNT=0,CNT(1)=CNT(1)+1,QRY=$G(^RGCWF(999.21,VCTL,10))
"RTN","RGCWVM",102,0)
 .I $L(QRY) X QRY Q
"RTN","RGCWVM",103,0)
 .D QRYGMR:'VMSR,QRYMSR:VMSR
"RTN","RGCWVM",104,0)
 Q
"RTN","RGCWVM",105,0)
 ; Query logic for Vitals package
"RTN","RGCWVM",106,0)
QRYGMR F  Q:'IDT!(IDT>END)!(RCNT=RMAX)  D
"RTN","RGCWVM",107,0)
 .S VIEN=$C(1)
"RTN","RGCWVM",108,0)
 .S XREF="AA"
"RTN","RGCWVM",109,0)
 .F  S VIEN=$O(^GMR(120.5,XREF,DFN,VTYP,IDT,VIEN),-1) Q:'VIEN  D  Q:RCNT=RMAX
"RTN","RGCWVM",110,0)
 ..;IHS/MSC/MGH Quit if this vital was entered in error
"RTN","RGCWVM",111,0)
 ..Q:$P($G(^GMR(120.5,VIEN,2)),U)  S X=$G(^(0))
"RTN","RGCWVM",112,0)
 ..Q:$P(X,U,2)'=DFN
"RTN","RGCWVM",113,0)
 ..Q:$P(X,U,3)'=VTYP
"RTN","RGCWVM",114,0)
 ..I VSIT,+$G(^GMR(120.5,VIEN,9000010))'=VSIT Q
"RTN","RGCWVM",115,0)
 ..S RESULT(VUNT)=$$TRIM^XLFSTR($P(X,U,8)),DATE=+X,LOC=+$P(X,U,5),ENTERBY=+$P(X,U,6),RCNT=RCNT+1
"RTN","RGCWVM",116,0)
 ..S DATE(0)=DATE*10000\1/10000
"RTN","RGCWVM",117,0)
 ..;IHS/MSC/MGH Get qualifier informaton for GMR file patch 5
"RTN","RGCWVM",118,0)
 ..S QUALIF="",COMMENT=""
"RTN","RGCWVM",119,0)
 ..S QUALS=0 F  S QUALS=$O(^GMR(120.5,VIEN,5,QUALS)) Q:QUALS=""  D
"RTN","RGCWVM",120,0)
 ...S QUALN=$P($G(^GMR(120.5,VIEN,5,QUALS,0)),U)
"RTN","RGCWVM",121,0)
 ...S:+QUALN QUALN=$P($G(^GMRD(120.52,QUALN,0)),U)
"RTN","RGCWVM",122,0)
 ...I QUALIF="" S QUALIF=QUALN
"RTN","RGCWVM",123,0)
 ...E  I QUALN'="" S QUALIF=QUALIF_"~"_QUALN
"RTN","RGCWVM",124,0)
 ..D CALLBCK
"RTN","RGCWVM",125,0)
 .S IDT=$O(^GMR(120.5,"AA",DFN,VTYP,IDT))
"RTN","RGCWVM",126,0)
 Q
"RTN","RGCWVM",127,0)
 ; Query logic for V file
"RTN","RGCWVM",128,0)
QRYMSR D BLDXRF(VTYP)
"RTN","RGCWVM",129,0)
 F  Q:'IDT!(RCNT=RMAX)  D
"RTN","RGCWVM",130,0)
 .S VIEN=$C(1)
"RTN","RGCWVM",131,0)
 .F  S VIEN=$O(^TMP("RGCWVM",$J,VTYP,IDT,VIEN),-1) Q:'VIEN  D  Q:RCNT=RMAX
"RTN","RGCWVM",132,0)
 ..D GETMSR(VIEN,.X,.DATE,.LOC,.ENTERBY)
"RTN","RGCWVM",133,0)
 ..S RESULT(VUNT)=X,RCNT=RCNT+1
"RTN","RGCWVM",134,0)
 ..K O2 S O2=$P($G(^AUPNVMSR(VIEN,0)),U,10)   ;EHR11
"RTN","RGCWVM",135,0)
 ..S QUALIF=""
"RTN","RGCWVM",136,0)
 ..S QUALS=0 F  S QUALS=$O(^AUPNVMSR(VIEN,5,QUALS)) Q:'+QUALS  D
"RTN","RGCWVM",137,0)
 ...S QUALIEN=$P($G(^AUPNVMSR(VIEN,5,QUALS,0)),U,1)
"RTN","RGCWVM",138,0)
 ...I +QUALIEN D
"RTN","RGCWVM",139,0)
 ....S QUALN=$P($G(^GMRD(120.52,QUALIEN,0)),U,1)
"RTN","RGCWVM",140,0)
 ....;S QUALIF=$S(QUALIF="":$S(RTN="GRIDX":QUALIEN_";"_QUALN,1:QUALN),1:$S(RTN="GRIDX":QUALIF_","_QUALIEN_";"_QUALN,1:QUALIF_","_QUALN))
"RTN","RGCWVM",141,0)
 ....S QUALIF=$S(QUALIF="":QUALN,1:QUALIF_","_QUALN)
"RTN","RGCWVM",142,0)
 ..D CALLBCK
"RTN","RGCWVM",143,0)
 .S IDT=$O(^TMP("RGCWVM",$J,VTYP,IDT))
"RTN","RGCWVM",144,0)
 K ^TMP("RGCWVM",$J)
"RTN","RGCWVM",145,0)
 Q
"RTN","RGCWVM",146,0)
 ; Query logic for BMI
"RTN","RGCWVM",147,0)
 ; Redone to use same logic as health summary
"RTN","RGCWVM",148,0)
QRYBMI(PCTILE) ;
"RTN","RGCWVM",149,0)
 D QRYBMI^RGCWVM2(PCTILE)
"RTN","RGCWVM",150,0)
 Q
"RTN","RGCWVM",151,0)
 ; Get measurement data
"RTN","RGCWVM",152,0)
GETMSR(VIEN,RESULT,DATE,LOC,ENTERBY) ;
"RTN","RGCWVM",153,0)
 N X,X12,DATEE
"RTN","RGCWVM",154,0)
 S X=$G(^AUPNVMSR(VIEN,0)),X12=$G(^(12))
"RTN","RGCWVM",155,0)
 S DATEE=$P(X,U,7)
"RTN","RGCWVM",156,0)
 S DATE=+X12,ENTERBY=+$P(X12,U,4)
"RTN","RGCWVM",157,0)
 S RESULT=$$TRIM^XLFSTR($P(X,U,4)),X=+$P(X,U,3)
"RTN","RGCWVM",158,0)
 S X=$G(^AUPNVSIT(X,0))
"RTN","RGCWVM",159,0)
 S:'DATE DATE=+X
"RTN","RGCWVM",160,0)
 S LOC=+$P(X,U,22),DATE(0)=DATE*10000\1/10000
"RTN","RGCWVM",161,0)
 ;IHS/MSC/MGH Get qualifier information patch 5
"RTN","RGCWVM",162,0)
 S QUALIF="" S COMMENT=""
"RTN","RGCWVM",163,0)
 I $D(^AUPNVMSR(VIEN,5))>0 D
"RTN","RGCWVM",164,0)
 .S QUALS=0 F  S QUALS=$O(^AUPNVMSR(VIEN,5,QUALS)) Q:QUALS=""  D
"RTN","RGCWVM",165,0)
 ..S QUALN=$P($G(^AUPNVMSR(VIEN,5,QUALS,0)),U,1)
"RTN","RGCWVM",166,0)
 ..I QUALN S QUALN=$P($G(^GMRD(120.52,QUALN,0)),U,1)
"RTN","RGCWVM",167,0)
 ..I QUALIF="" S QUALIF=QUALN
"RTN","RGCWVM",168,0)
 ..E  S QUALIF=QUALIF_"~"_QUALN
"RTN","RGCWVM",169,0)
 I +$G(FSDATA)>0 D
"RTN","RGCWVM",170,0)
 .S COMMENT=$P($G(^AUPNVMSR(VIEN,811)),U,1)
"RTN","RGCWVM",171,0)
 Q
"RTN","RGCWVM",172,0)
 ; Build temp xref for measurement type
"RTN","RGCWVM",173,0)
BLDXRF(VTYP) ;
"RTN","RGCWVM",174,0)
 N X,Y,Z,TT,CVISIT,CTYPE,XREF,MDATE,EIE
"RTN","RGCWVM",175,0)
 S X=0
"RTN","RGCWVM",176,0)
 K ^TMP("RGCWVM",$J,VTYP)
"RTN","RGCWVM",177,0)
 ;IHS/MSC/MGH Use different cross-reference if flowsheets
"RTN","RGCWVM",178,0)
 I +$G(FSDATA)>0 S XREF="AE"
"RTN","RGCWVM",179,0)
 E  S XREF="AA"
"RTN","RGCWVM",180,0)
 F  S X=$O(^AUPNVMSR(XREF,DFN,VTYP,X)),VIEN=0 Q:'X  D
"RTN","RGCWVM",181,0)
 .F  S VIEN=$O(^AUPNVMSR(XREF,DFN,VTYP,X,VIEN)) Q:'VIEN  D
"RTN","RGCWVM",182,0)
 ..S Z=$G(^AUPNVMSR(VIEN,0)),Y=+$G(^(12)),Y=$S(Y:9999999-Y,1:X)
"RTN","RGCWVM",183,0)
 ..S Y=$S(XREF="AA":Y,1:X)
"RTN","RGCWVM",184,0)
 ..Q:+Z'=VTYP
"RTN","RGCWVM",185,0)
 ..Q:$P(Z,U,2)'=DFN
"RTN","RGCWVM",186,0)
 ..I VSIT,$P(Z,U,3)'=VSIT Q
"RTN","RGCWVM",187,0)
 ..S MDATE=$S(XREF="AA":Y,1:X)
"RTN","RGCWVM",188,0)
 ..Q:MDATE<START
"RTN","RGCWVM",189,0)
 ..Q:MDATE>END
"RTN","RGCWVM",190,0)
 ..;IHS/MSC/MGH  Quit if entered in error
"RTN","RGCWVM",191,0)
 ..S EIE=$$GET1^DIQ(9000010.01,VIEN,2,"I")
"RTN","RGCWVM",192,0)
 ..Q:EIE=1
"RTN","RGCWVM",193,0)
 ..;IHS/MSC/MGH Check for inpt or outpt status
"RTN","RGCWVM",194,0)
 ..I PTST="I"!(PTST="O") D
"RTN","RGCWVM",195,0)
 ...S CVISIT=$P($G(^AUPNVMSR(VIEN,0)),U,3)
"RTN","RGCWVM",196,0)
 ...I CVISIT'="" S CTYPE=$P($G(^AUPNVSIT(CVISIT,0)),U,7)
"RTN","RGCWVM",197,0)
 ...I PTST="H"&(CTYPE="H") S ^TMP("RGCWVM",$J,VTYP,MDATE,VIEN)=""
"RTN","RGCWVM",198,0)
 ...I PTST="O"&(CTYPE'="H") S ^TMP("RGCWVM",$J,VTYP,MDATE,VIEN)=""
"RTN","RGCWVM",199,0)
 ..I PTST="" S ^TMP("RGCWVM",$J,VTYP,MDATE,VIEN)=""
"RTN","RGCWVM",200,0)
 Q
"RTN","RGCWVM",201,0)
 ; Perform query callback
"RTN","RGCWVM",202,0)
CALLBCK S RESULT('VUNT)=$$CONVERT(RESULT(VUNT),VUNT,.SD)
"RTN","RGCWVM",203,0)
 S RESULT(VUNT)=$$ROUND(RESULT(VUNT),.SD)
"RTN","RGCWVM",204,0)
 D @RTN
"RTN","RGCWVM",205,0)
 Q
"RTN","RGCWVM",206,0)
 ; Return info for vital type
"RTN","RGCWVM",207,0)
TYPEINFO(VCTL,VNAM,VABR,VUNT,VMSR,VTYP) ;EP
"RTN","RGCWVM",208,0)
 N X
"RTN","RGCWVM",209,0)
 S VCTL=$$VCTL(VCTL)
"RTN","RGCWVM",210,0)
 S X=$G(^RGCWF(999.21,VCTL,0))
"RTN","RGCWVM",211,0)
 I '$L(X) S (VNAM,VABR,VUNT,VCTL)="" Q
"RTN","RGCWVM",212,0)
 S VNAM=$P(X,U),VABR=$P(X,U,7)
"RTN","RGCWVM",213,0)
 S:'$D(VMSR) VMSR=$$VMSR
"RTN","RGCWVM",214,0)
 F X=VABR,VNAM D  Q:VTYP
"RTN","RGCWVM",215,0)
 .S VTYP=$$VTYPE(X,VMSR)
"RTN","RGCWVM",216,0)
 ;I 'VTYP S (VNAM,VABR,VUNT,VCTL)="" Q
"RTN","RGCWVM",217,0)
 D UNITS(.VUNT)
"RTN","RGCWVM",218,0)
 Q
"RTN","RGCWVM",219,0)
 ; Returns IEN of vital control ien
"RTN","RGCWVM",220,0)
VCTL(X) Q $S(X=+X:X,1:+$O(^RGCWF(999.21,"B",X,0)))
"RTN","RGCWVM",221,0)
 ; Returns vital control IEN given measure type IEN
"RTN","RGCWVM",222,0)
TYP2CTL(VTYP,VMSR) ;
"RTN","RGCWVM",223,0)
 N FNUM,X
"RTN","RGCWVM",224,0)
 S:'$D(VMSR) VMSR=$$VMSR
"RTN","RGCWVM",225,0)
 S FNUM=$S(VMSR:9999999.07,1:120.51)
"RTN","RGCWVM",226,0)
 S X=$$GET1^DIQ(FNUM,VTYP,.01)
"RTN","RGCWVM",227,0)
 S:$L(X) X=$$VCTL(X)
"RTN","RGCWVM",228,0)
 Q:X X
"RTN","RGCWVM",229,0)
 S X=$$GET1^DIQ(FNUM,VTYP,$S(VMSR:.02,1:7))
"RTN","RGCWVM",230,0)
 Q $S($L(X):$$VCTL(X),1:"")
"RTN","RGCWVM",231,0)
 ; Gets vital type based on name or abbreviation
"RTN","RGCWVM",232,0)
VTYPE(X,VMSR) ;
"RTN","RGCWVM",233,0)
 N FNUM
"RTN","RGCWVM",234,0)
 S:'$D(VMSR) VMSR=$$VMSR
"RTN","RGCWVM",235,0)
 S FNUM=$S(VMSR:9999999.07,1:120.51)
"RTN","RGCWVM",236,0)
 Q +$$FIND1^DIC(FNUM,"","X",$$UP^XLFSTR(X),"B^"_$S(VMSR:"D",1:"APCE^C"))
"RTN","RGCWVM",237,0)
 ; Returns true if V file is used for vital measurements
"RTN","RGCWVM",238,0)
VMSR() Q ''$$GET^XPAR("ALL","RGCWVM USE VMSR")
"RTN","RGCWVM",239,0)
 ; Get default units
"RTN","RGCWVM",240,0)
DEFUNIT(VCTL,VUNT) ;
"RTN","RGCWVM",241,0)
 N UNIT
"RTN","RGCWVM",242,0)
 D GETPAR^RGCWFPAR(.UNIT,"RGCWVM DEFAULT UNITS",,"`"_VCTL)
"RTN","RGCWVM",243,0)
 ;S UNIT=$$GET^XPAR("ALL","RGCWVM DEFAULT UNITS","`"_VCTL)
"RTN","RGCWVM",244,0)
 I UNIT="" D
"RTN","RGCWVM",245,0)
 .D:$G(VUNT)="" TYPEINFO(VCTL,,,.VUNT)
"RTN","RGCWVM",246,0)
 .S UNIT=VUNT
"RTN","RGCWVM",247,0)
 Q UNIT
"RTN","RGCWVM",248,0)
 ; Get vital list
"RTN","RGCWVM",249,0)
 ;   PRM = Name of parameter containing vital list
"RTN","RGCWVM",250,0)
 ;   LOC = Optional hosp location IEN
"RTN","RGCWVM",251,0)
VLIST(DATA,PRM,LOC) ;
"RTN","RGCWVM",252,0)
 N ENT
"RTN","RGCWVM",253,0)
 S ENT=$$ENT^RGCWFPAR(PRM)
"RTN","RGCWVM",254,0)
 ;S ENT=$S($G(LOC)>0:"ALL^LOC.`"_LOC,1:"ALL")
"RTN","RGCWVM",255,0)
 D GETLST^XPAR(.DATA,ENT,PRM,"I")
"RTN","RGCWVM",256,0)
 Q
"RTN","RGCWVM",257,0)
 ; Return units+normal range
"RTN","RGCWVM",258,0)
 ;  .VUNT = Returned unit values as:
"RTN","RGCWVM",259,0)
 ;     VUNT    = Default system (0=US, 1=Metric)
"RTN","RGCWVM",260,0)
 ;     VUNT(0) = US unit^LO^HI
"RTN","RGCWVM",261,0)
 ;     VUNT(1) = Metric unit^LO^HI
"RTN","RGCWVM",262,0)
 ;  Return value = US unit^LO^HI^Metric unit^LO^HI
"RTN","RGCWVM",263,0)
UNITS(VUNT) ;
"RTN","RGCWVM",264,0)
 N LO,HI,X
"RTN","RGCWVM",265,0)
 I 'VCTL S VUNT=0,(VUNT(0),VUNT(1))="^^"
"RTN","RGCWVM",266,0)
 E  D
"RTN","RGCWVM",267,0)
 .S X=^RGCWF(999.21,VCTL,0),VUNT=+$P(X,U,2),LO=$P(X,U,5),HI=$P(X,U,6)
"RTN","RGCWVM",268,0)
 .S VUNT(VUNT)=$P(X,U,3+VUNT)_U_LO_U_HI
"RTN","RGCWVM",269,0)
 .S VUNT('VUNT)=$P(X,U,4-VUNT)
"RTN","RGCWVM",270,0)
 .I '$L(VUNT('VUNT)) S VUNT('VUNT)=VUNT(VUNT)
"RTN","RGCWVM",271,0)
 .E  S VUNT('VUNT)=VUNT('VUNT)_U_$$CONVERT(LO,VUNT)_U_$$CONVERT(HI,VUNT)
"RTN","RGCWVM",272,0)
 Q:$Q VUNT(0)_U_VUNT(1)
"RTN","RGCWVM",273,0)
 Q
"RTN","RGCWVM",274,0)
 ; RPC: Return help text for vital type
"RTN","RGCWVM",275,0)
HELP(DATA,VCTL) ;EP
"RTN","RGCWVM",276,0)
 M DATA=^RGCWF(999.21,VCTL,99)
"RTN","RGCWVM",277,0)
 K DATA(0)
"RTN","RGCWVM",278,0)
 S:$D(DATA)'>1 DATA(1)="No help is available for this item."
"RTN","RGCWVM",279,0)
 Q
"RTN","RGCWVM",280,0)
 ; RPC: Return percentile values
"RTN","RGCWVM",281,0)
PCTILE(DATA,VCTL,DFN,START,END,METRIC) ;EP
"RTN","RGCWVM",282,0)
 N I,X,DOB,SEX,AGE,L,M,S,P,D,Z,ID,V,C
"RTN","RGCWVM",283,0)
 S METRIC=+$G(METRIC),X=$G(^DPT(+DFN,0)),SEX=$P(X,U,2),DOB=$P(X,U,3)
"RTN","RGCWVM",284,0)
 Q:'$L(SEX)!'DOB
"RTN","RGCWVM",285,0)
 S:METRIC<0 METRIC=$$DEFUNIT(VCTL)
"RTN","RGCWVM",286,0)
 S START=$$FMDIFF^XLFDT(START,DOB)/30-1
"RTN","RGCWVM",287,0)
 S END=$$FMDIFF^XLFDT(END,DOB)/30+1
"RTN","RGCWVM",288,0)
 S (I,C)=0
"RTN","RGCWVM",289,0)
 F  S I=$O(^RGCWF(999.21,VCTL,3,I)) Q:'I  S X=^(I,0) D
"RTN","RGCWVM",290,0)
 .S AGE=+$P(X,";",2)
"RTN","RGCWVM",291,0)
 .Q:AGE<START!(AGE>END)!($P(X,";")'=SEX)
"RTN","RGCWVM",292,0)
 .S L=$P(X,";",3),M=$P(X,";",4),S=$P(X,";",5),D=$$FMADD^XLFDT(DOB,AGE*30)
"RTN","RGCWVM",293,0)
 .F P=2:1:10 D
"RTN","RGCWVM",294,0)
 ..S ID=$P("3^5^10^25^50^75^85^90^95^97",U,P)  ;Added 85 in p11
"RTN","RGCWVM",295,0)
 ..S Z=$P("-1.881^-1.645^-1.282^-0.674^0^0.674^1.036^1.282^1.645^1.881",U,P)
"RTN","RGCWVM",296,0)
 ..I L S V=L*S*Z+1**(1/L)*M
"RTN","RGCWVM",297,0)
 ..E  S V=2.71828183**(S*Z)*M
"RTN","RGCWVM",298,0)
 ..S C=C+1,@DATA@(C)=ID_U_D_U_$S(METRIC:V,1:$$CONVERT(V,1,0))
"RTN","RGCWVM",299,0)
 Q
"RTN","RGCWVM",300,0)
 ; Round value to specified # fractional digits
"RTN","RGCWVM",301,0)
ROUND(VAL,SD) ;
"RTN","RGCWVM",302,0)
 Q:VAL'=+VAL!($G(SD)=0) VAL
"RTN","RGCWVM",303,0)
 Q +$J(VAL,0,$S($D(SD):SD,VAL<1:2,VAL<10:2,1:2))
"RTN","RGCWVM",304,0)
 ; Convert between metric and US
"RTN","RGCWVM",305,0)
CONVERT(X,TOUS,SD) ;
"RTN","RGCWVM",306,0)
 Q:'VCTL!'$L(X) ""
"RTN","RGCWVM",307,0)
 X $G(^RGCWF(999.21,VCTL,$S(TOUS:2,1:1)))
"RTN","RGCWVM",308,0)
 S X=$$ROUND(X,.SD)
"RTN","RGCWVM",309,0)
 Q X
"RTN","RGCWVM",310,0)
 ; Convert ff'ii" to inches
"RTN","RGCWVM",311,0)
CVTFTIN(X) ;
"RTN","RGCWVM",312,0)
 N F,I
"RTN","RGCWVM",313,0)
 I X'["'",X'["""" Q X
"RTN","RGCWVM",314,0)
 S X=$TR(X," ")
"RTN","RGCWVM",315,0)
 I X["'" S F=$P(X,"'"),I=$P(X,"'",2,99) Q:F'=+F X
"RTN","RGCWVM",316,0)
 E  S F=0,I=X
"RTN","RGCWVM",317,0)
 I $L(I) Q:$E(I,$L(I))'="""" X S I=$E(I,1,$L(I)-1) Q:I'=+I X
"RTN","RGCWVM",318,0)
 Q F*12+I_"IN"
"RTN","RGCWVM",319,0)
 ; Valid blood pressure
"RTN","RGCWVM",320,0)
VALIDBP(VAL,SLO,SHI,DLO,DHI) ;EP
"RTN","RGCWVM",321,0)
 N SBP,DBP
"RTN","RGCWVM",322,0)
 I VAL'?1.N1"/"1.N S VAL="-1^Format must be <systolic>/<diastolic>." Q
"RTN","RGCWVM",323,0)
 S SBP=+$P(VAL,"/"),DBP=+$P(VAL,"/",2)
"RTN","RGCWVM",324,0)
 D VALIDNUM(.SBP,SLO,SHI)
"RTN","RGCWVM",325,0)
 I SBP[U S VAL="-1^Systolic pressure "_$P(SBP," ",2,999) Q
"RTN","RGCWVM",326,0)
 D VALIDNUM(.DBP,DLO,DHI)
"RTN","RGCWVM",327,0)
 I DBP[U S VAL="-1^Diastolic pressure "_$P(DBP," ",2,999) Q
"RTN","RGCWVM",328,0)
 I SBP'>DBP S VAL="-1^Systolic BP<Diastolic BP" Q
"RTN","RGCWVM",329,0)
 S VAL=SBP_"/"_DBP
"RTN","RGCWVM",330,0)
 Q
"RTN","RGCWVM",331,0)
 ; Validate integer value
"RTN","RGCWVM",332,0)
VALIDINT(VAL,LO,HI,INC) ;EP
"RTN","RGCWVM",333,0)
 I VAL\1'=VAL S VAL="-1^Input must be an integer value." Q
"RTN","RGCWVM",334,0)
 D VALIDNUM(.VAL,LO,HI)
"RTN","RGCWVM",335,0)
 I $G(INC),VAL'[U,VAL#INC S VAL="-1^Input must be in increments of "_INC_"."
"RTN","RGCWVM",336,0)
 Q
"RTN","RGCWVM",337,0)
 ; Validate numeric value
"RTN","RGCWVM",338,0)
VALIDNUM(VAL,LO,HI) ;EP
"RTN","RGCWVM",339,0)
 I VAL'=+VAL S VAL="-1^Input must be a numeric value."
"RTN","RGCWVM",340,0)
 E  I VAL<LO!(VAL>HI) D
"RTN","RGCWVM",341,0)
 .N UNT
"RTN","RGCWVM",342,0)
 .I VUNT'=METRIC S LO=$$CONVERT(LO,VUNT),HI=$$CONVERT(HI,VUNT),UNT=VUNT('VUNT)
"RTN","RGCWVM",343,0)
 .E  S UNT=VUNT(VUNT)
"RTN","RGCWVM",344,0)
 .S VAL="-1^Input must be between "_LO_" and "_HI_" "_$P(UNT,U)_"."
"RTN","RGCWVM",345,0)
 Q
"RTN","RGCWVM",346,0)
 ; Validate tonometric value
"RTN","RGCWVM",347,0)
VALIDTON(VAL) ;EP
"RTN","RGCWVM",348,0)
 N LV,RV
"RTN","RGCWVM",349,0)
 S VAL=$$UP^XLFSTR(VAL)
"RTN","RGCWVM",350,0)
 I $L(VAL,"/")>2 S VAL=-1
"RTN","RGCWVM",351,0)
 E  D
"RTN","RGCWVM",352,0)
 .S RV=$P(VAL,"/"),LV=$P(VAL,"/",2),VAL=""
"RTN","RGCWVM",353,0)
 .I $E(RV)="L" D  Q:VAL
"RTN","RGCWVM",354,0)
 ..I LV="" S LV=RV,RV=""
"RTN","RGCWVM",355,0)
 ..E  S VAL=-1
"RTN","RGCWVM",356,0)
 .D VT1(.RV,"R"),VT1(.LV,"L")
"RTN","RGCWVM",357,0)
 I VAL S:VAL'[U $P(VAL,U,2)="Invalid input format."
"RTN","RGCWVM",358,0)
 E  S VAL=RV_$S($L(LV):"/",1:"")_LV
"RTN","RGCWVM",359,0)
 Q
"RTN","RGCWVM",360,0)
VT1(TON,PFX) ;
"RTN","RGCWVM",361,0)
 S:$E(TON)=PFX TON=$E(TON,2,999)
"RTN","RGCWVM",362,0)
 Q:'$L(TON)
"RTN","RGCWVM",363,0)
 I $TR(TON,"0123456789")'="" S VAL=-1
"RTN","RGCWVM",364,0)
 E  D
"RTN","RGCWVM",365,0)
 .S TON=+TON
"RTN","RGCWVM",366,0)
 .I TON>80 S VAL="-1^Value must be between 0 and 80, inclusive."
"RTN","RGCWVM",367,0)
 .E  S TON=PFX_TON
"RTN","RGCWVM",368,0)
 Q
"RTN","RGCWVM",369,0)
 ; RPC: Validate value X for measurement type VCTL
"RTN","RGCWVM",370,0)
 ; Returns normalized value in DATA if valid, or -1^error if not
"RTN","RGCWVM",371,0)
VALIDATE(DATA,VCTL,METRIC,X) ;EP
"RTN","RGCWVM",372,0)
 N VABR,VUNT,VMSR,LP,UNIT
"RTN","RGCWVM",373,0)
 D TYPEINFO(.VCTL,,,.VUNT)
"RTN","RGCWVM",374,0)
 S X=$$UP^XLFSTR($$TRIM^XLFSTR(X)),METRIC=$G(METRIC,-1),METRIC=$S(METRIC<0:$$DEFUNIT(VCTL,VUNT),METRIC>0:1,1:0),UNIT=-1
"RTN","RGCWVM",375,0)
 S X=$$CVTFTIN(X)
"RTN","RGCWVM",376,0)
 F LP=VUNT,1-VUNT D  Q:UNIT>-1
"RTN","RGCWVM",377,0)
 .N Y,Z
"RTN","RGCWVM",378,0)
 .S Y=$$UP^XLFSTR($P(VUNT(LP),U))
"RTN","RGCWVM",379,0)
 .F Z=1:1:$L(Y) D  Q:UNIT>-1
"RTN","RGCWVM",380,0)
 ..S:$E(X,$L(X)-Z+1,99)=$E(Y,1,Z) UNIT=LP,X=$$TRIM^XLFSTR($E(X,1,$L(X)-Z))
"RTN","RGCWVM",381,0)
 S:UNIT<0 UNIT=METRIC
"RTN","RGCWVM",382,0)
 S:UNIT'=VUNT X=$$CONVERT(X,UNIT,0),UNIT=VUNT
"RTN","RGCWVM",383,0)
 X $G(^RGCWF(999.21,VCTL,4))
"RTN","RGCWVM",384,0)
 S:$G(X)="" X="-1^Invalid entry.  Try again."
"RTN","RGCWVM",385,0)
 I X'[U,UNIT'=METRIC S X=$$CONVERT(X,UNIT,2)
"RTN","RGCWVM",386,0)
 S DATA=X
"RTN","RGCWVM",387,0)
 Q
"RTN","RGCWVM",388,0)
 ; Normalize value for storage
"RTN","RGCWVM",389,0)
NORM(VTYP,VAL,UNT,VMSR) ;EP
"RTN","RGCWVM",390,0)
 N VCTL,VUNT
"RTN","RGCWVM",391,0)
 S:'$D(VMSR) VMSR=$$VMSR
"RTN","RGCWVM",392,0)
 S VCTL=$S(VTYP=+VTYP:$$TYP2CTL(VTYP,VMSR),1:VTYP)
"RTN","RGCWVM",393,0)
 D TYPEINFO(.VCTL,,,.VUNT,VMSR,.VTYP)
"RTN","RGCWVM",394,0)
 Q:'VCTL!'VTYP "-1^Unrecognized measurement type."
"RTN","RGCWVM",395,0)
 Q:VAL=" " 0
"RTN","RGCWVM",396,0)
 D VALIDATE(.VAL,VCTL,VUNT,VAL_UNT)
"RTN","RGCWVM",397,0)
 Q:VAL[U VAL
"RTN","RGCWVM",398,0)
 S UNT=$P(VUNT(VUNT),U)
"RTN","RGCWVM",399,0)
 Q 0
"RTN","RGCWVM",400,0)
 ; RPC: Store vitals data
"RTN","RGCWVM",401,0)
SAVE(DATA,DFN,VITS) ;EP
"RTN","RGCWVM",402,0)
 N VMSR,LP,VCNT
"RTN","RGCWVM",403,0)
 S VMSR=$$VMSR,LP="",VCNT=0
"RTN","RGCWVM",404,0)
 F  S LP=$O(VITS(LP)) Q:'LP  D
"RTN","RGCWVM",405,0)
 .N VTYP,VAL,UNT,DEL,X
"RTN","RGCWVM",406,0)
 .S VITS=VITS(LP)
"RTN","RGCWVM",407,0)
 .Q:$E(VITS,1,3)'="VIT"
"RTN","RGCWVM",408,0)
 .S DEL=$P(VITS,U)["-",VTYP=$P(VITS,U,2)
"RTN","RGCWVM",409,0)
 .S VAL=$S(DEL:" ",1:$P(VITS,U,5)),UNT=$S(DEL:"",1:$P(VITS,U,7))
"RTN","RGCWVM",410,0)
 .I $$NORM(.VTYP,.VAL,.UNT,VMSR) S VCNT=VCNT+1
"RTN","RGCWVM",411,0)
 .E  S $P(VITS,U,2)=VTYP,$P(VITS,U,5)=VAL,$P(VITS,U,7)=UNT,VITS(LP)=VITS
"RTN","RGCWVM",412,0)
 I VCNT S DATA="-1^"_$$SNGPLR^RGUT(VCNT," entry"," entries")_" failed validation.  No results stored."
"RTN","RGCWVM",413,0)
 E  D SAVE^BEHOENPC(.DATA,.VITS)
"RTN","RGCWVM",414,0)
 Q
"RTN","RGCWVM",415,0)
 ; Add to output global
"RTN","RGCWVM",416,0)
ADD(TXT,LBL,SUB) ;
"RTN","RGCWVM",417,0)
 S CNT=CNT+1,@DATA@($G(SUB,0),CNT)=$S($D(LBL):$$LJ^XLFSTR(LBL,20),1:"")_$G(TXT),LBL=""
"RTN","RGCWVM",418,0)
 Q
"RTN","RGCWVM2")
0^2^B60323852
"RTN","RGCWVM2",1,0)
RGCWVM2 ;IHS/MSC/MGH - Triage: Vital Measurements ;18-Aug-2014 17:20;DKM
"RTN","RGCWVM2",2,0)
 ;;1.0;CAREWEB FRAMEWORK;**001004,001005,001007,001009**;Sep 18, 2007;Build 107
"RTN","RGCWVM2",3,0)
 ;=================================================================
"RTN","RGCWVM2",4,0)
QUAL(RESULT,IEN,QUALS) ;EP Store the vitals qualifiers
"RTN","RGCWVM2",5,0)
 ;Entry data is the IEN of the measurment and the qualifiers separated by ~
"RTN","RGCWVM2",6,0)
 N BEHCNT,BEHERR,BEHFDA,BEHOKAY,BEHVIEN,BEHQUAL,VMSR,FNUM,F2NUM,QUALNAME
"RTN","RGCWVM2",7,0)
 S VMSR=$$VMSR
"RTN","RGCWVM2",8,0)
 S BEHCNT=0
"RTN","RGCWVM2",9,0)
 S FNUM=$S(VMSR:9000010.01,1:120.5)
"RTN","RGCWVM2",10,0)
 S F2NUM=$S(VMSR:9000010.015,1:120.505)
"RTN","RGCWVM2",11,0)
 I VMSR,'$D(^AUPNVMSR(+IEN,0))#2 S RESULT="-1^Vital entry Not Found" Q
"RTN","RGCWVM2",12,0)
 I 'VMSR,'$D(^GMR(120.5,+IEN,0))#2 S RESULT="-1^Vital entry Not Found" Q
"RTN","RGCWVM2",13,0)
 S QUALNAME="" F  S QUALNAME=$O(QUALS(QUALNAME)) Q:QUALNAME=""!(+$G(RESULT)<0)  D
"RTN","RGCWVM2",14,0)
 .;Find the qualifier
"RTN","RGCWVM2",15,0)
 .I +QUALNAME S BEHQUAL=QUALNAME
"RTN","RGCWVM2",16,0)
 .E  S BEHQUAL="" S BEHQUAL=$O(^GMRD(120.52,"B",QUALNAME,BEHQUAL)) I BEHQUAL="" S RESULT="-1^Cannot find qualifier" Q
"RTN","RGCWVM2",17,0)
 .; Is the qualifier already stored?
"RTN","RGCWVM2",18,0)
 .I 'VMSR,$O(^GMR(120.5,IEN,5,"B",BEHQUAL,0))>0 S RESULT="-1"  Q
"RTN","RGCWVM2",19,0)
 .I VMSR,$O(^AUPNVSMR(IEN,5,"B",BEHQUAL,0))>0 S RESULT="-1"  Q
"RTN","RGCWVM2",20,0)
 .; Legitimate Qualifier?
"RTN","RGCWVM2",21,0)
 .I '$D(^GMRD(120.52,BEHQUAL,0)) D  S RESULT=""  Q
"RTN","RGCWVM2",22,0)
 .S BEHCNT=BEHCNT+1
"RTN","RGCWVM2",23,0)
 .; Store the  qualifier
"RTN","RGCWVM2",24,0)
 .K BEHFDA,BEHOKAY,BEHERR
"RTN","RGCWVM2",25,0)
 .S BEHFDA(F2NUM,"+1,"_IEN_",",.01)=BEHQUAL
"RTN","RGCWVM2",26,0)
 .D UPDATE^DIE("","BEHFDA","BEHOKAY","BEHERR")
"RTN","RGCWVM2",27,0)
 .I $D(BEHERR) S RESULT="-1^Unable to store qualifier"
"RTN","RGCWVM2",28,0)
 .E  S RESULT=+$G(BEHOKAY(1))
"RTN","RGCWVM2",29,0)
 Q
"RTN","RGCWVM2",30,0)
PO2(RESULT,IEN,QUALS) ;Store data for O2 Saturation
"RTN","RGCWVM2",31,0)
 N QUAL,QUALNAME,VAL,O2,RESULT,FDA,FNUM,I
"RTN","RGCWVM2",32,0)
 S VAL=""
"RTN","RGCWVM2",33,0)
 S QUALNAME=$P(QUALS,"~",1)
"RTN","RGCWVM2",34,0)
 S QUAL(QUALNAME)=""
"RTN","RGCWVM2",35,0)
 D QUAL^RGCWVM2(.RESULT,IEN,.QUAL)
"RTN","RGCWVM2",36,0)
 S O2=""
"RTN","RGCWVM2",37,0)
 F I=2:1:3 D
"RTN","RGCWVM2",38,0)
 .S VAL=$P(QUALS,"~",I)
"RTN","RGCWVM2",39,0)
 .I VAL'="" S O2=$S(O2="":$P(VAL,";",1)_" "_$P(VAL,";",2),1:O2_" "_$P(VAL,";",1)_" "_$P(VAL,";",2))
"RTN","RGCWVM2",40,0)
 I VAL'="" D
"RTN","RGCWVM2",41,0)
 .S FNUM=9000010.01
"RTN","RGCWVM2",42,0)
 .S FDA=$NA(FDA(FNUM,IEN_","))
"RTN","RGCWVM2",43,0)
 .S @FDA@(1.4)=O2
"RTN","RGCWVM2",44,0)
 .S RESULT=$$UPDATE^BGOUTL(.FDA,"E")
"RTN","RGCWVM2",45,0)
 Q
"RTN","RGCWVM2",46,0)
EIE(RESULT,BEHDATA) ; EP Store entered in error data
"RTN","RGCWVM2",47,0)
 ;BEHDATA CONSISTS OF THE FOLLOWING DATA:
"RTN","RGCWVM2",48,0)
 ;FILE IEN^DUZ^REASON
"RTN","RGCWVM2",49,0)
 N BEHFDA,BEHIEN,BEHIENS,BEHERR,FNUM,F2NUM,VMSR
"RTN","RGCWVM2",50,0)
 S VMSR=$$VMSR
"RTN","RGCWVM2",51,0)
 S FNUM=$S(VMSR:9000010.01,1:120.5)
"RTN","RGCWVM2",52,0)
 S F2NUM=$S(VMSR:9000010.014,1:120.506)
"RTN","RGCWVM2",53,0)
 I VMSR,'$D(^AUPNVMSR(+BEHDATA,0))#2 S RESULT="ERROR: Record Not Found" Q
"RTN","RGCWVM2",54,0)
 I 'VMSR,'$D(^GMR(120.5,+BEHDATA,0))#2 S RESULT="ERROR: Record Not Found" Q
"RTN","RGCWVM2",55,0)
 S BEHIENS=(+BEHDATA)_","
"RTN","RGCWVM2",56,0)
 S BEHFDA(FNUM,BEHIENS,2)=1
"RTN","RGCWVM2",57,0)
 S BEHFDA(FNUM,BEHIENS,3)=$P(BEHDATA,"^",2)
"RTN","RGCWVM2",58,0)
 S BEHFDA(F2NUM,"+1,"_BEHIENS,.01)=$P(BEHDATA,"^",3)
"RTN","RGCWVM2",59,0)
 D UPDATE^DIE("","BEHFDA","BEHIEN","BEHERR")
"RTN","RGCWVM2",60,0)
 I $D(BEHIEN(1)) S RESULT="OK"
"RTN","RGCWVM2",61,0)
 D VFEVT^BEHOENPC(FNUM,+BEHDATA,1)
"RTN","RGCWVM2",62,0)
 I $D(BEHERR)>0 S RESULT="Unable to process entered in error"
"RTN","RGCWVM2",63,0)
 Q
"RTN","RGCWVM2",64,0)
GETCATS(RESULTS,VIT,LONG) ;EP Given a vital sign, return the categories for this VM and the default
"RTN","RGCWVM2",65,0)
 N BEHCAT,BEHQUAL,ID,ABB,VMSR,Y,CNT
"RTN","RGCWVM2",66,0)
 S RESULTS=$$TMPGBL
"RTN","RGCWVM2",67,0)
 S LONG=$G(LONG,0)
"RTN","RGCWVM2",68,0)
 S CNT=0
"RTN","RGCWVM2",69,0)
 S VMSR=$$VMSR
"RTN","RGCWVM2",70,0)
 S FNUM=$S(VMSR:9999999.07,1:120.51)
"RTN","RGCWVM2",71,0)
 S ID="" S ID=$O(^RGCWF(999.21,"B",VIT,ID))
"RTN","RGCWVM2",72,0)
 I ID="" S @RESULTS@(1)="No vital in BEH MEASUREMENT CONTROL FILE" Q
"RTN","RGCWVM2",73,0)
 S ABB=$P($G(^RGCWF(999.21,ID,0)),U,7) I ABB="" S @RESULTS@(1)="No abbreviation for vital in BEH MEASURMENT CONTROL FILE" Q
"RTN","RGCWVM2",74,0)
 I VMSR S IEN="" S IEN=$O(^AUTTMSR("B",ABB,IEN)) I IEN="" S @RESULTS@(1)="Unable to find MEASUREMENT TYPE in file" Q
"RTN","RGCWVM2",75,0)
 I 'VMSR S IEN="" S IEN=$O(^GMRD(120.51,"C",ABB,IEN)) I IEN="" S @RESULTS@(1)="Unable to find MEASUREMENT TYPE in file" Q
"RTN","RGCWVM2",76,0)
 ;Get all the qualifiers for this category
"RTN","RGCWVM2",77,0)
 I LONG D
"RTN","RGCWVM2",78,0)
 .F BEHCAT=0:0 S BEHCAT=$O(^GMRD(120.52,"AA",IEN,BEHCAT)) Q:'BEHCAT  D
"RTN","RGCWVM2",79,0)
 ..S CNT=CNT+1,@RESULTS@(CNT)="C"_U_BEHCAT_U_$P(^GMRD(120.53,BEHCAT,0),U)
"RTN","RGCWVM2",80,0)
 ..S BEHQUAL="",X="" F  S X=$O(^GMRD(120.52,"AA",IEN,BEHCAT,X)) Q:X=""  D
"RTN","RGCWVM2",81,0)
 ...S CNT=CNT+1
"RTN","RGCWVM2",82,0)
 ...S @RESULTS@(CNT)="Q"_U_$O(^GMRD(120.52,"AA",IEN,BEHCAT,X,0))_U_X
"RTN","RGCWVM2",83,0)
 ..;S Y=$O(@RESULTS@("").-1)+1
"RTN","RGCWVM2",84,0)
 ..;S @RESULTS@(Y)=BEHCAT
"RTN","RGCWVM2",85,0)
 E  D
"RTN","RGCWVM2",86,0)
 .F BEHCAT=0:0 S BEHCAT=$O(^GMRD(120.52,"AA",IEN,BEHCAT)) Q:'BEHCAT  D
"RTN","RGCWVM2",87,0)
 ..S BEHQUAL="",X="" F  S X=$O(^GMRD(120.52,"AA",IEN,BEHCAT,X)) Q:X=""  D
"RTN","RGCWVM2",88,0)
 ...S BEHQUAL=BEHQUAL_$S(BEHQUAL]"":"~",1:"")_X
"RTN","RGCWVM2",89,0)
 ..S Y=$O(@RESULTS@(""),-1)+1
"RTN","RGCWVM2",90,0)
 ..S @RESULTS@(Y)=BEHCAT_U_$P(^GMRD(120.53,BEHCAT,0),U)_U_BEHQUAL
"RTN","RGCWVM2",91,0)
 Q
"RTN","RGCWVM2",92,0)
QRYBMI(PCTILE) ;Moved from RGCWVM for space
"RTN","RGCWVM2",93,0)
 N VTWT,VTHT,RSWT,RSHT,BMI,WTDT
"RTN","RGCWVM2",94,0)
 S VTWT=$$VTYPE^RGCWVM("WT"),VTHT=$$VTYPE^RGCWVM("HT"),PCTILE=+$G(PCTILE)
"RTN","RGCWVM2",95,0)
 I 'VMSR D GMRBMI(PCTILE) Q
"RTN","RGCWVM2",96,0)
 D BLDXRF^RGCWVM(VTWT),BLDXRF^RGCWVM(VTHT)
"RTN","RGCWVM2",97,0)
 F  Q:'IDT!(RCNT=RMAX)  D
"RTN","RGCWVM2",98,0)
 .S VIEN=$C(1)
"RTN","RGCWVM2",99,0)
 .F  S VIEN=$O(^TMP("RGCWVM",$J,VTWT,IDT,VIEN),-1) Q:'VIEN  D  Q:RCNT=RMAX
"RTN","RGCWVM2",100,0)
 ..D GETMSR^RGCWVM(VIEN,.RSWT,.DATE,.LOC,.ENTERBY)
"RTN","RGCWVM2",101,0)
 ..;IHS/MSC/MGH Save the wt date to use if the ht isn't too old patch 4
"RTN","RGCWVM2",102,0)
 ..S QUALIF=""
"RTN","RGCWVM2",103,0)
 ..S WTDT=DATE
"RTN","RGCWVM2",104,0)
 ..S RSHT=$$FNDHT(IDT)
"RTN","RGCWVM2",105,0)
 ..Q:'RSHT
"RTN","RGCWVM2",106,0)
 ..S QUALIF=""
"RTN","RGCWVM2",107,0)
 ..S RSWT=RSWT*.45359,RSHT=RSHT*.0254,RSHT=RSHT*RSHT,BMI=+$J(RSWT/RSHT,0,2)
"RTN","RGCWVM2",108,0)
 ..S:PCTILE BMI=$$BMIPCT(BMI,DFN,DATE)
"RTN","RGCWVM2",109,0)
 ..Q:'BMI
"RTN","RGCWVM2",110,0)
 ..S RESULT(VUNT)=BMI,RCNT=RCNT+1
"RTN","RGCWVM2",111,0)
 ..S DATE=WTDT
"RTN","RGCWVM2",112,0)
 ..D CALLBCK^RGCWVM
"RTN","RGCWVM2",113,0)
 .S IDT=$O(^TMP("RGCWVM",$J,VTWT,IDT))
"RTN","RGCWVM2",114,0)
 K ^TMP("RGCWVM",$J)
"RTN","RGCWVM2",115,0)
 Q
"RTN","RGCWVM2",116,0)
FNDHT(IDT) ;Find closest height before weight
"RTN","RGCWVM2",117,0)
 N VIEN,RESULT,DOB,SEX,TAGE,X,X2,X1,SX,APCHMDT
"RTN","RGCWVM2",118,0)
 S VIEN=$O(^TMP("RGCWVM",$J,VTHT,IDT,""))
"RTN","RGCWVM2",119,0)
 I 'VIEN D
"RTN","RGCWVM2",120,0)
 .;IHS/MSC/MGH Added in HS logic for lookback days for ht. Patch 4
"RTN","RGCWVM2",121,0)
 .;Only allowed to look forward for the same date as the wt. Otherwise,
"RTN","RGCWVM2",122,0)
 .N ID1,ID2
"RTN","RGCWVM2",123,0)
 .S DOB=$P(^DPT(DFN,0),U,3),SEX=$P(^DPT(DFN,0),U,2),X2=DOB,X1=DT D ^%DTC S TAGE=X,SX=$S(SEX="M":2,SEX="F":3,1:"")
"RTN","RGCWVM2",124,0)
 .S ID1=$O(^TMP("RGCWVM",$J,VTHT,IDT),-1),ID2=$O(^TMP("RGCWVM",$J,VTHT,IDT))
"RTN","RGCWVM2",125,0)
 .I ID1 D
"RTN","RGCWVM2",126,0)
 ..S X1=$P(ID1,".",1),X2=$P(IDT,".",1)
"RTN","RGCWVM2",127,0)
 ..I X1=X2 S ID2=ID1
"RTN","RGCWVM2",128,0)
 .I ID2 D
"RTN","RGCWVM2",129,0)
 ..S X1=9999999-(ID2\1)
"RTN","RGCWVM2",130,0)
 ..S APCHMDT=$$FMDIFF^XLFDT(X1,DOB,1)
"RTN","RGCWVM2",131,0)
 ..S X1=9999999-(IDT\1),X2=9999999-ID2
"RTN","RGCWVM2",132,0)
 ..S X=$$FMDIFF^XLFDT(X1,X2,1)
"RTN","RGCWVM2",133,0)
 ..I ((X>90)&(APCHMDT<1096))!((X>180)&(APCHMDT<4381))!((X>365)&(APCHMDT<6571))!((APCHMDT<6571)&(TAGE>6571)) S ID2=""
"RTN","RGCWVM2",134,0)
 ..S:ID2 VIEN=$O(^TMP("RGCWVM",$J,VTHT,ID2,""))
"RTN","RGCWVM2",135,0)
 D:VIEN GETMSR^RGCWVM(VIEN,.RESULT)
"RTN","RGCWVM2",136,0)
 Q $G(RESULT)
"RTN","RGCWVM2",137,0)
 ; Compute BMI percentile
"RTN","RGCWVM2",138,0)
BMIPCT(BMI,DFN,DATE) ;
"RTN","RGCWVM2",139,0)
 N PCT,VAL,LP,DIF,DAT,X1,X2
"RTN","RGCWVM2",140,0)
 D PCTILE^RGCWVM("PCT",$$VCTL^RGCWVM("BMI"),DFN,DATE,DATE)
"RTN","RGCWVM2",141,0)
 S DIF=9999999
"RTN","RGCWVM2",142,0)
 F LP=0:0 S LP=$O(PCT(LP)) Q:'LP  D
"RTN","RGCWVM2",143,0)
 .S X1=PCT(LP),DAT=$P(X1,U,2),VAL(DAT,$P(X1,U,3))=$P(X1,U)
"RTN","RGCWVM2",144,0)
DD .S X1=$$FMDIFF^XLFDT(DATE,DAT),X1=$S(X1<0:-X1,1:X1)
"RTN","RGCWVM2",145,0)
 .S:X1<DIF DIF=X1,DIF(0)=DAT
"RTN","RGCWVM2",146,0)
 Q:DIF>30 0
"RTN","RGCWVM2",147,0)
 S DAT=DIF(0)
"RTN","RGCWVM2",148,0)
 Q:$D(VAL(DAT,BMI)) VAL(DAT,BMI)
"RTN","RGCWVM2",149,0)
 S X1=$O(VAL(DAT,BMI),-1),X2=$O(VAL(DAT,BMI))
"RTN","RGCWVM2",150,0)
 Q +$J($S('X1:1,'X2:100,1:(BMI-X1)/(X2-X1)*(VAL(DAT,X2)-VAL(DAT,X1))+VAL(DAT,X1)),0,1)
"RTN","RGCWVM2",151,0)
 ;RPC entry point to get units for a vital
"RTN","RGCWVM2",152,0)
 ;Input=vital measurement by name
"RTN","RGCWVM2",153,0)
 ;Return value = US unit^LO^HI^Metric unit^LO^HI
"RTN","RGCWVM2",154,0)
VUNITS(RET,VIT) ;EP
"RTN","RGCWVM2",155,0)
 Q:VIT=""
"RTN","RGCWVM2",156,0)
 S RET=""
"RTN","RGCWVM2",157,0)
 N VCTL
"RTN","RGCWVM2",158,0)
 S VCTL="" S VCTL=$O(^RGCWF(999.21,"B",VIT,VCTL))
"RTN","RGCWVM2",159,0)
 I VCTL="" Q "Unable to find vital "_VIT
"RTN","RGCWVM2",160,0)
 S RET=$$UNITS^RGCWVM(.VUNT)
"RTN","RGCWVM2",161,0)
 Q RET
"RTN","RGCWVM2",162,0)
TMPGBL(X) ;EP
"RTN","RGCWVM2",163,0)
 K ^TMP("RGCWVM"_$G(X),$J) Q $NA(^($J))
"RTN","RGCWVM2",164,0)
 ; Returns true if V file is used for vital measurements
"RTN","RGCWVM2",165,0)
VMSR() Q ''$$GET^XPAR("ALL","RGCWVM USE VMSR")
"RTN","RGCWVM2",166,0)
GMRBMI(PCTILE) ;Get BMI for sites using GMRV vitals
"RTN","RGCWVM2",167,0)
 N GBMI,QUALIF,BMI
"RTN","RGCWVM2",168,0)
 S IDT=START,XREF="AA",VTYP=VTWT,QUALIF=""
"RTN","RGCWVM2",169,0)
 F  S IDT=$O(^GMR(120.5,XREF,DFN,VTYP,IDT)) Q:'IDT!(IDT>END)!(RCNT=RMAX)  D
"RTN","RGCWVM2",170,0)
 .S VIEN=$C(1)
"RTN","RGCWVM2",171,0)
 .F  S VIEN=$O(^GMR(120.5,XREF,DFN,VTYP,IDT,VIEN),-1) Q:'VIEN  D  Q:RCNT=RMAX
"RTN","RGCWVM2",172,0)
 ..Q:$P($G(^GMR(120.5,VIEN,2)),U)  S X=$G(^(0))
"RTN","RGCWVM2",173,0)
 ..Q:$P(X,U,2)'=DFN
"RTN","RGCWVM2",174,0)
 ..Q:$P(X,U,3)'=VTYP
"RTN","RGCWVM2",175,0)
 ..I VSIT,+$G(^GMR(120.5,VIEN,9000010))'=VSIT Q
"RTN","RGCWVM2",176,0)
 ..S GBMI(2)=$$TRIM^XLFSTR($P(X,U,8)),DATE=+X,LOC=+$P(X,U,5)
"RTN","RGCWVM2",177,0)
 ..S GBMI(1)=DATE
"RTN","RGCWVM2",178,0)
 ..S WTDT=DATE,DATE(0)=DATE*10000\1/10000
"RTN","RGCWVM2",179,0)
 ..D CALBMI^GMRVBMI(.GBMI)
"RTN","RGCWVM2",180,0)
 ..I $D(GBMI)>10 D
"RTN","RGCWVM2",181,0)
 ...S BMI=GBMI
"RTN","RGCWVM2",182,0)
 ...S:PCTILE BMI=$$BMIPCT(BMI,DFN,DATE)
"RTN","RGCWVM2",183,0)
 ..E  S BMI=0
"RTN","RGCWVM2",184,0)
 ..Q:'BMI
"RTN","RGCWVM2",185,0)
 ..S RESULT(VUNT)=BMI,RCNT=RCNT+1
"RTN","RGCWVM2",186,0)
 ..S DATE=WTDT
"RTN","RGCWVM2",187,0)
 ..D CALLBCK^RGCWVM
"RTN","RGCWVM2",188,0)
 Q
"RTN","RGCWVM2",189,0)
GETCATP(RESULTS,VIEN) ;EP Given a vital sign and an IEN, return the categories for this VM and the default
"RTN","RGCWVM2",190,0)
 N BEHCAT,BEHQUAL,ID,ABB,VMSR,Y,CNT,FNUM2,CHK,QUALIEN
"RTN","RGCWVM2",191,0)
 S RESULTS=$$TMPGBL
"RTN","RGCWVM2",192,0)
 S CNT=0
"RTN","RGCWVM2",193,0)
 S VMSR=$$VMSR
"RTN","RGCWVM2",194,0)
 ;Get results for this IEN
"RTN","RGCWVM2",195,0)
 I VMSR D
"RTN","RGCWVM2",196,0)
 .S IEN=$P($G(^AUPNVMSR(VIEN,0)),U,1)
"RTN","RGCWVM2",197,0)
 .S QUALS=0 F  S QUALS=$O(^AUPNVMSR(VIEN,5,QUALS)) Q:'+QUALS  D
"RTN","RGCWVM2",198,0)
 ..S QUALIEN($P($G(^AUPNVMSR(VIEN,5,QUALS,0)),U,1))=""
"RTN","RGCWVM2",199,0)
 I 'VMSR D
"RTN","RGCWVM2",200,0)
 .S IEN=$P($G(^GMR(120.5,VIEN,0)),U,3)
"RTN","RGCWVM2",201,0)
 .S QUALS=0 F  S QUALS=$O(^GMR(120.5,VIEN,5,QUALS)) Q:QUALS=""  D
"RTN","RGCWVM2",202,0)
 ..S QUALIEN($P($G(^GMR(120.5,VIEN,5,QUALS,0)),U,1))=""
"RTN","RGCWVM2",203,0)
 ;Get all the qualifiers for this category
"RTN","RGCWVM2",204,0)
 F BEHCAT=0:0 S BEHCAT=$O(^GMRD(120.52,"AA",IEN,BEHCAT)) Q:'BEHCAT  D
"RTN","RGCWVM2",205,0)
 .S CNT=CNT+1,@RESULTS@(CNT)="C"_U_BEHCAT_U_$P(^GMRD(120.53,BEHCAT,0),U)
"RTN","RGCWVM2",206,0)
 .S BEHQUAL="",X="" F  S X=$O(^GMRD(120.52,"AA",IEN,BEHCAT,X)) Q:X=""  D
"RTN","RGCWVM2",207,0)
 ..S CNT=CNT+1
"RTN","RGCWVM2",208,0)
 ..S CHK=$O(^GMRD(120.52,"AA",IEN,BEHCAT,X,0))
"RTN","RGCWVM2",209,0)
 ..S @RESULTS@(CNT)="Q"_U_CHK_U_X
"RTN","RGCWVM2",210,0)
 ..I $D(QUALIEN(CHK)) S @RESULTS@(CNT)="Q"_U_CHK_U_X_U_1
"RTN","RGCWVM2",211,0)
 Q
"RTN","RGCWVMC")
0^3^B15698048
"RTN","RGCWVMC",1,0)
RGCWVMC ;IHS/MSC/MGH - CUMULATIVE VITALS/MEASUREMENTS FOR PATIENT OVER GIVEN DATE RANGE ;18-Aug-2014 17:20;DKM
"RTN","RGCWVMC",2,0)
 ;;1.0;CAREWEB FRAMEWORK;**001004,001005**;March 20,2007;Build 107
"RTN","RGCWVMC",3,0)
DEV ;S %ZIS="Q",%ZIS("B")="" D ^%ZIS K %ZIS G:POP Q3 I $E(IOST)="P",'$D(IO("Q")),'$D(IO("S")) D ^%ZISC W !,?3,"PRINTED REPORTS MUST BE QUEUED!!",$C(7) G DEV
"RTN","RGCWVMC",4,0)
 ;I $D(IO("Q")) S (ZTSAVE("^TMP($J,"),ZTSAVE("GMRVSDT"),ZTSAVE("GMRVFDT"))="",ZTIO=ION,ZTDESC="Cumulative vital/measurement report",ZTRTN="START^GMRVSC0" D ^%ZTLOAD K IO("Q"),ZTSK,ZTIO G Q3
"RTN","RGCWVMC",5,0)
FOOTER ;REPORT FOOTER SUBROUTINE
"RTN","RGCWVMC",6,0)
 ;W !!,"*** (E) - Error entry",
"RTN","RGCWVMC",7,0)
 W !! W:VADM(1)'="" ?$X-3,$E(VADM(1),1,15) W:VADM(2)'="" ?17,$P(VADM(2),"^",2) W:VADM(3)'="" ?30,$P(VADM(3),"^",2) W:VADM(4)'="" ?43,$P(VADM(4),"^")_" YRS"
"RTN","RGCWVMC",8,0)
 W:VADM(5)'="" ?51,$P(VADM(5),"^",2)
"RTN","RGCWVMC",9,0)
 W ?65,"VAF 10-7987j" W !,"Unit: "_$S($P(VAIN(4),"^",2)'="":$P(VAIN(4),"^",2),1:"     "),?32,"Room: "_$S($P(VAIN(5),"^")'="":$P(VAIN(5),"^"),1:"   "),!
"RTN","RGCWVMC",10,0)
 I '$D(BEHVHLOC) S BEHVHLOC=$P($G(^DIC(42,+$G(VAIN(4)),44)),"^")
"RTN","RGCWVMC",11,0)
 W "Division: "_$S(BEHVHLOC>0:$$GET1^DIQ(4,+$$GET1^DIQ(44,+BEHVHLOC,3,"I"),.01,"I"),1:""),!
"RTN","RGCWVMC",12,0)
 Q
"RTN","RGCWVMC",13,0)
WRT ;
"RTN","RGCWVMC",14,0)
 S GMR1ST=1 K GMRSITE D DEM^VADPT,INP^VADPT S GWARD=$S($P(VAIN(4),"^",2)'="":$P(VAIN(4),"^",2),1:"   "),GBED=$S(VAIN(5)'="":$P(VAIN(5),"^"),1:"   ") D HDR^RGCWVMC2
"RTN","RGCWVMC",15,0)
 Q
"RTN","RGCWVMC",16,0)
EN3(DFN,BEHVSDT,BEHVFDT) ; APPLICATION PROGRAM INTERFACE FOR PATIENT CUMULATIVE VITALS REPORT
"RTN","RGCWVMC",17,0)
 ; INPUT VARIABLES:    DFN=PATIENT NUMBER
"RTN","RGCWVMC",18,0)
 ;                     BEHVSDT=START DATE
"RTN","RGCWVMC",19,0)
 ;                     BEHVFDT=FINISH DATE OF REPORT
"RTN","RGCWVMC",20,0)
 S BEHVOR=1
"RTN","RGCWVMC",21,0)
EN5 S (BEHOUT,BEHPG)=0 D DEM^VADPT,INP^VADPT S GBED=$S(VAIN(5)'="":VAIN(5),1:"   "),GWARD=$S($P(VAIN(4),"^",2)="":"   ",1:$P(VAIN(4),"^",2))
"RTN","RGCWVMC",22,0)
 S BEH1ST=1,BEHDATE(0)=0 D NOW^%DTC S Y=% D D^DIQ S BEHPDT=$P(Y,"@")_" ("_$P($P(Y,"@",2),":",1,2)_")",$P(BEHDSH,"-",81)=""
"RTN","RGCWVMC",23,0)
 N GPEDIS S GPEDIS=$O(^GMRD(120.52,"B","DORSALIS PEDIS",0)) Q:GPEDIS'>0
"RTN","RGCWVMC",24,0)
 K ^TMP("BEHV",$J)
"RTN","RGCWVMC",25,0)
 ;Find the vitals from the parameter
"RTN","RGCWVMC",26,0)
 S PRM="RGCWVM VITAL LIST"
"RTN","RGCWVMC",27,0)
 N ENT,DATA
"RTN","RGCWVMC",28,0)
 S ENT=$$ENT^RGCWFPAR(PRM)
"RTN","RGCWVMC",29,0)
 D GETLST^XPAR(.DATA,ENT,PRM,"I")
"RTN","RGCWVMC",30,0)
 ;F I=1:1:DATA S BEHVTYP=$G(DATA(I)) D
"RTN","RGCWVMC",31,0)
 S I="" F  S I=$O(DATA(I)) Q:I=""  D
"RTN","RGCWVMC",32,0)
 .;Get the abbreviation
"RTN","RGCWVMC",33,0)
 .S BEHVTYP=$G(DATA(I))
"RTN","RGCWVMC",34,0)
 .Q:BEHVTYP=""
"RTN","RGCWVMC",35,0)
 .S BEHVITY=$P($G(^RGCWF(999.21,BEHVTYP,0)),U,7)
"RTN","RGCWVMC",36,0)
 .D SETVAR
"RTN","RGCWVMC",37,0)
 U IO D HDR^RGCWVMC2
"RTN","RGCWVMC",38,0)
 I $O(^TMP("BEHV",$J,0))'>0 W !!,"No cumulative vitals data for "_$S($D(OPSPNM):ORSPNM,1:"this patient"),! S:$D(ORSPNM) BEHOUT=1 G Q3
"RTN","RGCWVMC",39,0)
 F BEHDATE=0:0 S BEHDATE=$O(BEHVDT(BEHDATE)) Q:BEHDATE'>0!BEHOUT  I $D(^TMP("BEHV",$J,BEHDATE)) D PRT
"RTN","RGCWVMC",40,0)
Q3 I IOSL'<($Y+10) F X=1:1 W ! Q:IOSL<($Y+10)
"RTN","RGCWVMC",41,0)
 I 'BEHOUT W ! D FOOTER^RGCWVMC
"RTN","RGCWVMC",42,0)
 D KVAR^VADPT K BEHVOR,VA,GBED,GWARD,^TMP("BEHV",$J),BEH1ST,BEHVTY,BEHVITY,BEHVDATE,BEHSITE,BEHDSH,BEHQUAL,BEHVX,GMRX,GX,BEHDAT,GMRLN,GMRPDT,GMRSP,GMRVDA,GMRY,%,BEHDATE
"RTN","RGCWVMC",43,0)
 K BEHDT,BEHPDT,BEHPG,BEHVDA,BEHVDT,BEHVHLOC,BEHVTYP,GMR1ST,GPRT,I,PRM,X,Y,AGE
"RTN","RGCWVMC",44,0)
 I $D(ORSPNM) K GMRPG,BEHVSDT,BEHVFDT S:$D(ZTQUEUED) ZTREQ="@" D ^%ZISC
"RTN","RGCWVMC",45,0)
 Q
"RTN","RGCWVMC",46,0)
SETVAR ;Get the vital data
"RTN","RGCWVMC",47,0)
 S BEHDT="" F  S BEHDT=$O(^AUPNVMSR("AE",DFN,BEHVTYP,BEHDT)) Q:BEHDT'>0  S BEHDATE=9999999-BEHDT I '(BEHDATE>BEHVFDT!(BEHDATE<BEHVSDT)) D SETND
"RTN","RGCWVMC",48,0)
 Q
"RTN","RGCWVMC",49,0)
SETND ;
"RTN","RGCWVMC",50,0)
 S BEHVDA="" F  S BEHVDA=$O(^AUPNVMSR("AE",DFN,BEHVTYP,BEHDT,BEHVDA)) Q:BEHVDA'>0  D SETUT
"RTN","RGCWVMC",51,0)
 Q
"RTN","RGCWVMC",52,0)
SETUT N STIM
"RTN","RGCWVMC",53,0)
 ;S STIM=$P($G(^AUPNVMSR(BEHVDA,0)),U,7)
"RTN","RGCWVMC",54,0)
 S STIM=$P($G(^AUPNVMSR(BEHVDA,12)),U,1)
"RTN","RGCWVMC",55,0)
 I STIM="" S STIM=BEHDATE
"RTN","RGCWVMC",56,0)
 S ^TMP("BEHV",$J,+$E(STIM,1,12),BEHVITY,BEHVDA)=$S('$D(^AUPNVMSR(BEHVDA,2)):0,1:+$P(^(2),"^"))
"RTN","RGCWVMC",57,0)
 S BEHVDT(+$E(STIM,1,12))="" Q
"RTN","RGCWVMC",58,0)
 Q
"RTN","RGCWVMC",59,0)
PRT ;PRINT V/M BY DATE/TIME
"RTN","RGCWVMC",60,0)
 D:IOSL<($Y+9) HDR^RGCWVMC2 Q:BEHOUT
"RTN","RGCWVMC",61,0)
 S Y=BEHDATE X ^DD("DD") I $P(BEHDATE,".")'=BEHDATE(0) W !,$E(BEHDATE,4,5)_"/"_$E(BEHDATE,6,7)_"/"_$E(BEHDATE,2,3) S BEHDATE(0)=$P(BEHDATE,".")
"RTN","RGCWVMC",62,0)
 D:IOSL<($Y+9) HDR^RGCWVMC2 Q:BEHOUT  W !,?2,$P($P(Y,"@",2),":",1,2)
"RTN","RGCWVMC",63,0)
 I $D(^TMP("BEHV",$J,BEHDATE)) D
"RTN","RGCWVMC",64,0)
 .K BEHLN,GERROR S BEHVTY="" F  S BEHVTY=$O(^TMP("BEHV",$J,BEHDATE,BEHVTY)) Q:BEHVTY=""  D
"RTN","RGCWVMC",65,0)
 ..S GPRT(BEHVTY)=0 I $D(^TMP("BEHV",$J,BEHDATE,BEHVTY)) D
"RTN","RGCWVMC",66,0)
 ...F BEHVDA=0:0 S BEHVDA=$O(^TMP("BEHV",$J,BEHDATE,BEHVTY,BEHVDA)) Q:BEHVDA'>0!BEHOUT  D SETLN^RGCWVMC2
"RTN","RGCWVMC",67,0)
 Q
"RTN","RGCWVMC2")
0^4^B11058740
"RTN","RGCWVMC2",1,0)
RGCWVMC2 ;MSC/IND/MGH - CUMMULATIVE VITALS/MEASUREMENTS CONT ;20-Jan-2015 13:23;DKM
"RTN","RGCWVMC2",2,0)
 ;;1.0;CAREWEB FRAMEWORK;**001004,001005**;Mar 20, 2007;Build 107
"RTN","RGCWVMC2",3,0)
 ;=================================================================
"RTN","RGCWVMC2",4,0)
SETLN ; Store the data in the one line
"RTN","RGCWVMC2",5,0)
 N BEH,ALTU,DEFU,DEFAULT,BEHVER,QUALS,VAL
"RTN","RGCWVMC2",6,0)
 S BEHVER=^TMP("BEHV",$J,BEHDATE,BEHVTY,BEHVDA) N BEHVPO
"RTN","RGCWVMC2",7,0)
 D:IOSL<($Y+9) HDR Q:BEHOUT  W ! W:BEHVER ?3,"(E)"
"RTN","RGCWVMC2",8,0)
 I GPRT(BEHVTY)=0 D
"RTN","RGCWVMC2",9,0)
 . W ?4,BEHVTY_": "
"RTN","RGCWVMC2",10,0)
 S GPRT(BEHVTY)=1
"RTN","RGCWVMC2",11,0)
 S BEHDAT=$G(^AUPNVMSR(BEHVDA,0))
"RTN","RGCWVMC2",12,0)
 S BEHVX=BEHVTY,BEHVX(0)=$P(BEHDAT,"^",4) D
"RTN","RGCWVMC2",13,0)
 .I "UNAVAILABLEPASSREFUSED"[$$UP^XLFSTR(BEHVX(0)) W ?9,BEHVX(0) Q
"RTN","RGCWVMC2",14,0)
 .;Get the result
"RTN","RGCWVMC2",15,0)
 .S TYP=$P(^AUPNVMSR(BEHVDA,0),U),VAL=$P(BEHDAT,U,4),MR=""
"RTN","RGCWVMC2",16,0)
 . I BEHVTY="PA" D  Q
"RTN","RGCWVMC2",17,0)
 . . I VAL=0 W ?9,VAL_" - No pain" Q
"RTN","RGCWVMC2",18,0)
 . . I VAL=99 W ?9,VAL_" - Unable to respond" Q
"RTN","RGCWVMC2",19,0)
 . . I VAL=10 W ?9,VAL_" - Worst imaginable pain" Q
"RTN","RGCWVMC2",20,0)
 . . S QUALS=$$QUAL(BEHVDA)
"RTN","RGCWVMC2",21,0)
 . . W ?9,VAL_" "_QUALS
"RTN","RGCWVMC2",22,0)
 .S:'$G(DAT) DAT=DT
"RTN","RGCWVMC2",23,0)
 .S AGE=$$PTAGE^BGOUTL(DFN,$S(X:X,1:DAT))
"RTN","RGCWVMC2",24,0)
 .S BEH="" S BEH=$O(^RGCWF(999.21,"B",BEHVTY,BEH))
"RTN","RGCWVMC2",25,0)
 .I BEHVTY="" D
"RTN","RGCWVMC2",26,0)
 ..W ?9,$$RND(VAL)
"RTN","RGCWVMC2",27,0)
 .E  D
"RTN","RGCWVMC2",28,0)
 ..S DATA=$G(^RGCWF(999.21,BEH,0))
"RTN","RGCWVMC2",29,0)
 ..S DEFAULT=$P(DATA,U,2)
"RTN","RGCWVMC2",30,0)
 ..I DEFAULT=1 D
"RTN","RGCWVMC2",31,0)
 ...S DEFU=$P(DATA,U,4),ALTU=$P(DATA,U,3)
"RTN","RGCWVMC2",32,0)
 ...I ALTU=""!(DEFU=ALTU) D
"RTN","RGCWVMC2",33,0)
 ....S QUALS=$$QUAL(BEHVDA)
"RTN","RGCWVMC2",34,0)
 ....W ?9,$$RND(VAL)_" "_DEFU_" "_QUALS
"RTN","RGCWVMC2",35,0)
 ...E  S X=VAL I $D(^RGCWF(999.21,BEH,2)) X $G(^RGCWF(999.21,BEH,2)) D
"RTN","RGCWVMC2",36,0)
 ....S QUALS=$$QUAL(BEHVDA)
"RTN","RGCWVMC2",37,0)
 ....W ?9,$$RND(VAL)_" "_DEFU_" ("_$$RND(X)_" "_ALTU_") "_QUALS
"RTN","RGCWVMC2",38,0)
 ..I DEFAULT=0 D
"RTN","RGCWVMC2",39,0)
 ...S DEFU=$P(DATA,U,3),ALTU=$P(DATA,U,4)
"RTN","RGCWVMC2",40,0)
 ...I ALTU=""!(DEFU=ALTU) D
"RTN","RGCWVMC2",41,0)
 ....S QUALS=$$QUAL(BEHVDA)
"RTN","RGCWVMC2",42,0)
 ....W ?9,$$RND(VAL)_" "_DEFU
"RTN","RGCWVMC2",43,0)
 ...E  S X=VAL I $D(^RGCWF(999.21,BEH,1)) X $G(^RGCWF(999.21,BEH,1)) D
"RTN","RGCWVMC2",44,0)
 ....S QUALS=$$QUAL(BEHVDA)
"RTN","RGCWVMC2",45,0)
 ....W ?9,$$RND(VAL)_" "_DEFU_" ("_$$RND(X)_" "_ALTU_") "_QUALS
"RTN","RGCWVMC2",46,0)
 ..I DEFAULT="" D
"RTN","RGCWVMC2",47,0)
 ...S QUALS=$$QUAL(BEHVDA)
"RTN","RGCWVMC2",48,0)
 ...W ?9,$$RND(VAL)_" "_QUALS
"RTN","RGCWVMC2",49,0)
 Q:$G(AGE)'>2!'$D(WT)!'$D(HT)
"RTN","RGCWVMC2",50,0)
 S VAL=$$RND((WT*704.5)/(HT*HT))
"RTN","RGCWVMC2",51,0)
 S MR=$S(AGE<20:"",VAL<18.5:"Underweight",VAL<25:"Normal Weight",VAL<30:"Overweight",VAL<35:"Obesity - Class 1",VAL<40:"Obesity - Class 2",1:"Extreme Obesity")
"RTN","RGCWVMC2",52,0)
 W ?9,"BMI: "_VAL_" "_MR
"RTN","RGCWVMC2",53,0)
 Q
"RTN","RGCWVMC2",54,0)
RND(X) Q $S(X=+X:+$J(X,0,2),1:X)
"RTN","RGCWVMC2",55,0)
HDR ;
"RTN","RGCWVMC2",56,0)
 I 'BEH1ST D FOOTER^BEHVSC0
"RTN","RGCWVMC2",57,0)
 I $E(IOST)'="P",'BEH1ST W "Press return to continue ""^"" to escape " R X:DTIME I X="^"!'$T S BEHOUT=1 Q
"RTN","RGCWVMC2",58,0)
 W:'($E(IOST)'="C"&'$D(GFLAG)) @IOF S BEHPG=BEHPG+1,GFLAG=1
"RTN","RGCWVMC2",59,0)
 W !,BEHPDT,?25,"Cumulative Vitals/Measurements Report",?70,"Page ",BEHPG,!!,$E(BEHDSH,1,78)
"RTN","RGCWVMC2",60,0)
 I 'BEH1ST,$P(BEHDATE,".")=BEHDATE(0) W !,$E(BEHDATE(0),4,5)_"/"_$E(BEHDATE(0),6,7)_"/"_$E(BEHDATE,2,3)_" (continued)",!
"RTN","RGCWVMC2",61,0)
 S BEH1ST=0
"RTN","RGCWVMC2",62,0)
 Q
"RTN","RGCWVMC2",63,0)
BLNK ;
"RTN","RGCWVMC2",64,0)
 F I=1:1:$L(Z) Q:$E(Z,I)'=" "
"RTN","RGCWVMC2",65,0)
 S Z=$E(Z,I,$L(Z))
"RTN","RGCWVMC2",66,0)
 Q
"RTN","RGCWVMC2",67,0)
QUAL(BEHIEN) ;Add on qualifiers
"RTN","RGCWVMC2",68,0)
 N QUALSTR,MOD,QUAL
"RTN","RGCWVMC2",69,0)
 S QUALSTR=""
"RTN","RGCWVMC2",70,0)
 S MOD=0 F  S MOD=$O(^AUPNVMSR(BEHIEN,5,MOD)) Q:'+MOD  D
"RTN","RGCWVMC2",71,0)
 .S QUAL=$G(^AUPNVMSR(BEHIEN,5,MOD,0))
"RTN","RGCWVMC2",72,0)
 .S QUAL=$P($G(^GMRD(120.52,QUAL,0)),U,1)
"RTN","RGCWVMC2",73,0)
 .S QUALSTR=QUALSTR_$S(QUALSTR'="":", ",1:"")_QUAL
"RTN","RGCWVMC2",74,0)
 Q QUALSTR
"RTN","RGCWVMER")
0^5^B23054989
"RTN","RGCWVMER",1,0)
RGCWVMER ;MSC/IND/MGH - VITALS ENTERED IN ERROR REPORT ;20-Jan-2015 13:23;DKM
"RTN","RGCWVMER",2,0)
 ;;1.0;CAREWEB FRAMEWORK;**001004,001005**;Mar 20, 2007;Build 107
"RTN","RGCWVMER",3,0)
 ;=================================================================
"RTN","RGCWVMER",4,0)
EN1 ; EP Entry point
"RTN","RGCWVMER",5,0)
 D DEM^VADPT D NOW^%DTC S Y=% X ^DD("DD") S BEHPDT=$P(Y,"@")_" ("_$P($P(Y,"@",2),":",1,2)_")",(BEHOUT,BEHPG)=0,BEH1ST=1,$P(BEHDSH,"-",81)=""
"RTN","RGCWVMER",6,0)
 F BEHVITY=0:0 S BEHVITY=$O(^AUPNVMSR("AE",DFN,BEHVITY)) Q:BEHVITY'>0  F BEHVDT=0:0 S BEHVDT=$O(^AUPNVMSR("AE",DFN,BEHVITY,BEHVDT)) Q:BEHVDT'>0  S BEHVDATE=9999999-BEHVDT I BEHVDATE'<BEHVSDT,BEHVDATE'>BEHVFDT D SORT
"RTN","RGCWVMER",7,0)
 U IO D HDR I $O(^TMP("BEHOERR",$J,0))'>0 W !,"THERE IS NO DATA FOR THIS REPORT" G QT
"RTN","RGCWVMER",8,0)
 F BEHDATE=0:0 S BEHDATE=$O(^TMP("BEHOERR",$J,BEHDATE)) Q:BEHDATE'>0!BEHOUT  D
"RTN","RGCWVMER",9,0)
 .F BEHVITY=0:0 S BEHVITY=$O(^TMP("BEHOERR",$J,BEHDATE,BEHVITY)) Q:BEHVITY'>0!BEHOUT  D
"RTN","RGCWVMER",10,0)
 ..F BEHVDA=0:0 S BEHVDA=$O(^TMP("BEHOERR",$J,BEHDATE,BEHVITY,BEHVDA)) Q:BEHVDA'>0  D WRT Q:BEHOUT
"RTN","RGCWVMER",11,0)
QT ;
"RTN","RGCWVMER",12,0)
 I IOSL'<($Y+8) F X=1:1 W ! Q:IOSL<($Y+8)
"RTN","RGCWVMER",13,0)
 I 'BEHOUT,$E(IOST)'="P" W !!,"Press return to continue ""^"" to escape " R X:DTIME
"RTN","RGCWVMER",14,0)
Q ; KILL VARIBLES
"RTN","RGCWVMER",15,0)
 K ^TMP("BEHOERR",$J),DFN,BEH1ST,BEHDAT,BEHDATE,BEHDSH,BEHOUT,BEHPDT,BEHPG,BEHPR,BEHSITE,BEHVDA,BEHVDATE,BEHVDT,BEHVERR
"RTN","RGCWVMER",16,0)
 K BEHVFDT,BEHVITY,BEHVSDT,BEHVX,POP,DIPGM,BEHP,BEHTYPE,BEHOV,DIPGM,%T,%
"RTN","RGCWVMER",17,0)
 D KVAR^VADPT K VA
"RTN","RGCWVMER",18,0)
 K GREASON,BEHZZ,BEHTAKEN,BEHVARY,GX,BEHQUAL,BEHVPO D ^%ZISC Q
"RTN","RGCWVMER",19,0)
SORT ;
"RTN","RGCWVMER",20,0)
 F BEHVDA=0:0 S BEHVDA=$O(^AUPNVMSR("AE",DFN,BEHVITY,BEHVDT,BEHVDA)) Q:BEHVDA'>0  D
"RTN","RGCWVMER",21,0)
 .I $D(^AUPNVMSR(BEHVDA,2)) D
"RTN","RGCWVMER",22,0)
 ..S BEHVERR=$G(^AUPNVMSR(BEHVDA,0))
"RTN","RGCWVMER",23,0)
 ..;Get the time taken
"RTN","RGCWVMER",24,0)
 ..S BEHTAKEN=$P($G(^AUPNVMSR(BEHVDA,12)),U,1)
"RTN","RGCWVMER",25,0)
 ..S BEHTAKEN=9999999-BEHTAKEN
"RTN","RGCWVMER",26,0)
 ..I BEHTAKEN="" S BEHTAKEN=BEHVDT
"RTN","RGCWVMER",27,0)
 ..S ^TMP("BEHOERR",$J,BEHTAKEN,BEHVITY,BEHVDA)=BEHVERR
"RTN","RGCWVMER",28,0)
 Q
"RTN","RGCWVMER",29,0)
WRT ;
"RTN","RGCWVMER",30,0)
 D:IOSL<($Y+8) HDR Q:BEHOUT  K BEHPR
"RTN","RGCWVMER",31,0)
 S BEHVERR=^TMP("BEHOERR",$J,BEHDATE,BEHVITY,BEHVDA)
"RTN","RGCWVMER",32,0)
 I $D(^AUPNVMSR(BEHVDA,0)) D
"RTN","RGCWVMER",33,0)
 . S BEHDAT("BAD")=$S($D(^AUPNVMSR(+BEHVDA,0)):^(0),1:"")
"RTN","RGCWVMER",34,0)
 . K BEHVX,BEHVX(0),BEHVX(1)
"RTN","RGCWVMER",35,0)
 . S BEHVX=$P(^AUTTMSR(BEHVITY,0),"^",2)
"RTN","RGCWVMER",36,0)
 . S BEHVX(0)=$P(BEHDAT("BAD"),"^",4) D
"RTN","RGCWVMER",37,0)
 ..I BEHVX(0)>0 S BEHVX(0)=$$VALUE(BEHVITY,BEHVX(0)) S BEHVX(1)=""
"RTN","RGCWVMER",38,0)
 . S BEHZZ="" I +$D(^AUPNVMSR(BEHVDA,5)) K BEHVARY S BEHVARY="" D
"RTN","RGCWVMER",39,0)
 ..S BEHZZ=$$QUAL^RGCWVMC2(BEHVDA)
"RTN","RGCWVMER",40,0)
 ..S BEHVX(1)=" ("_BEHZZ_")"
"RTN","RGCWVMER",41,0)
 . S BEHVPO=$P($G(^AUPNVSMR(BEHVDA,0)),"^",10)
"RTN","RGCWVMER",42,0)
 . S $P(BEHDAT("BAD"),"^",4)=BEHVX(0)_BEHVX(1)_$S(BEHVPO'="":" with supplemental O2 "_$S(BEHVPO["l/min":$P(BEHVPO," l/min")_"L/min",1:"")_$S(BEHVPO["l/min":$P(BEHVPO," l/min",2),1:BEHVPO),1:"")_$S(BEHZZ'=""&(BEHVX="O2"):" via ",1:"")
"RTN","RGCWVMER",43,0)
 . S GREASON="" D ERREASON
"RTN","RGCWVMER",44,0)
 S Y=9999999-BEHDATE D D^DIQ S BEHPR("VSDT")=Y
"RTN","RGCWVMER",45,0)
 S EIE=$P($G(^AUPNVMSR(BEHVDA,2)),U,2)
"RTN","RGCWVMER",46,0)
 I EIE'="" S BEHPR("ENUS")=$P($G(^VA(200,EIE,0)),U,1)
"RTN","RGCWVMER",47,0)
 E  S BEHPR("ENUS")=""
"RTN","RGCWVMER",48,0)
 S BEHPR("TYPE")=$S(BEHVITY="":"",$D(^AUTTMSR(BEHVITY,0)):$P(^(0),"^"),1:"")
"RTN","RGCWVMER",49,0)
 W !,BEHPR("VSDT"),?23,BEHPR("TYPE"),?58,BEHPR("ENUS"),!,?3,"Reason: ",GREASON
"RTN","RGCWVMER",50,0)
 I BEHVDA>0 W !,?3,"(Bad data)  ",$P(BEHDAT("BAD"),"^",4)
"RTN","RGCWVMER",51,0)
 W ! Q
"RTN","RGCWVMER",52,0)
HDR ;
"RTN","RGCWVMER",53,0)
 I $E(IOST)'="P",'BEH1ST W !,"Press return to continue ""^"" to escape " R X:DTIME I X="^"!'$T S GMROUT=1 Q
"RTN","RGCWVMER",54,0)
 W:'($E(IOST)'="C"&'BEHPG) @IOF S BEH1ST=0,BEHPG=BEHPG+1
"RTN","RGCWVMER",55,0)
 W !,BEHPDT,?22,"ENTERED IN ERROR VITAL/MEASUREMENT REPORT",?70,"PAGE ",BEHPG
"RTN","RGCWVMER",56,0)
 W !,"Patient: ",VADM(1),?$X+5,$P(VADM(2),"^",2),!!,"Date Vit./Meas. taken",?58,"User who made error",!,BEHDSH,!
"RTN","RGCWVMER",57,0)
 Q
"RTN","RGCWVMER",58,0)
VALUE(TYPE,DATA) ;Get the value for this result
"RTN","RGCWVMER",59,0)
 N TYP,VAL,AGE,BEH,DATAG,DEFAULT,DEFU,ALTU,VALUE
"RTN","RGCWVMER",60,0)
 S TYP=$P(^AUPNVMSR(BEHVDA,0),U)
"RTN","RGCWVMER",61,0)
 S VAL=$P($G(^AUPNVMSR(BEHVDA,0)),U,4)
"RTN","RGCWVMER",62,0)
 S:'$G(DAT) DAT=DT
"RTN","RGCWVMER",63,0)
 S AGE=$$PTAGE^BGOUTL(DFN,$S(X:X,1:DAT))
"RTN","RGCWVMER",64,0)
 S TYP=$P($G(^RGCWF(999.21,TYP,0)),U,7)
"RTN","RGCWVMER",65,0)
 S BEH="" S BEH=$O(^RGCWF(999.21,"B",TYP,BEH))
"RTN","RGCWVMER",66,0)
 I TYP="" S VALUE=$$RND(VAL)
"RTN","RGCWVMER",67,0)
 E  D
"RTN","RGCWVMER",68,0)
 .S DATAG=$G(^RGCWF(999.21,BEH,0))
"RTN","RGCWVMER",69,0)
 .S DEFAULT=$P(DATAG,U,2)
"RTN","RGCWVMER",70,0)
 .I DEFAULT=1 D
"RTN","RGCWVMER",71,0)
 ..S DEFU=$P(DATAG,U,4),ALTU=$P(DATAG,U,3)
"RTN","RGCWVMER",72,0)
 ..I ALTU=""!(DEFU=ALTU) S VALUE=$$RND(VAL)_" "_DEFU
"RTN","RGCWVMER",73,0)
 ..E  S X=VAL I $D(^RGCWF(999.21,BEH,2)) X $G(^RGCWF(999.21,BEH,2)) D
"RTN","RGCWVMER",74,0)
 ...S VALUE=$$RND(VAL)_" "_DEFU_" ("_$$RND(X)_" "_ALTU_")"
"RTN","RGCWVMER",75,0)
 .I DEFAULT=0 D
"RTN","RGCWVMER",76,0)
 ..S DEFU=$P(DATAG,U,3),ALTU=$P(DATAG,U,4)
"RTN","RGCWVMER",77,0)
 ..I ALTU=""!(DEFU=ALTU) S VALUE=$$RND(VAL)_" "_DEFU
"RTN","RGCWVMER",78,0)
 ..E  S X=VAL I $D(^RGCWF(999.21,BEH,1)) X $G(^RGCWF(999.21,BEH,1)) D
"RTN","RGCWVMER",79,0)
 ...S VALUE=$$RND(VAL)_" "_DEFU_" ("_$$RND(X)_" "_ALTU_")"
"RTN","RGCWVMER",80,0)
 .I DEFAULT="" S VALUE=$$RND(VAL)
"RTN","RGCWVMER",81,0)
 Q VALUE
"RTN","RGCWVMER",82,0)
ERREASON ;Reason for entered in error
"RTN","RGCWVMER",83,0)
 Q:'$D(^AUPNVMSR(+BEHVDA,2.1))
"RTN","RGCWVMER",84,0)
 S GER=0 F  S GER=$O(^AUPNVMSR(+BEHVDA,2.1,GER)) Q:GER'>0  S GER(1)=$G(^AUPNVMSR(+BEHVDA,2.1,GER,0)) D
"RTN","RGCWVMER",85,0)
 . S GER(2)=$S(GER(1)=1:"incorrect date/time",GER(1)=2:"incorrect reading",GER(1)=3:"incorrect patient",GER(1)=4:"invalid record",1:GER(1))
"RTN","RGCWVMER",86,0)
 . I GER(2)'="" S GREASON=GREASON_$S(GREASON'="":", ",1:"")_GER(2)
"RTN","RGCWVMER",87,0)
 .Q
"RTN","RGCWVMER",88,0)
 K GER Q
"RTN","RGCWVMER",89,0)
RND(X) Q $S(X=+X:+$J(X,0,2),1:X)
"RTN","RGCWVMIN")
0^6^B678147
"RTN","RGCWVMIN",1,0)
RGCWVMIN ;MSC/IND/DKM - Installation Support ;18-Aug-2014 17:20;DKM
"RTN","RGCWVMIN",2,0)
 ;;1.0;CAREWEB FRAMEWORK;**001002**;Mar 20, 2007;Build 107
"RTN","RGCWVMIN",3,0)
 ;=================================================================
"RTN","RGCWVMIN",4,0)
PREINIT ;EP - Preinitialization
"RTN","RGCWVMIN",5,0)
 Q
"RTN","RGCWVMIN",6,0)
POSTINIT ;EP - Postinitialization
"RTN","RGCWVMIN",7,0)
 N LP,CLS
"RTN","RGCWVMIN",8,0)
 F LP=0:1 S CLS=$P($T(CANENTER+LP),";;",2) Q:'$L(CLS)  D
"RTN","RGCWVMIN",9,0)
 .D ADD^XPAR("CLS."_CLS,"RGCWVM DATA ENTRY",,"YES")
"RTN","RGCWVMIN",10,0)
 D ADD^XPAR("PKG","RGCWVM USE VMSR",,$G(DUZ("AG"))="I")
"RTN","RGCWVMIN",11,0)
 ;D REGMENU^BEHUTIL("RGCWVM MAIN",,"VIT")
"RTN","RGCWVMIN",12,0)
 Q
"RTN","RGCWVMIN",13,0)
 ; List of user classes that can enter vitals by default
"RTN","RGCWVMIN",14,0)
CANENTER ;;PROVIDER
"RTN","RGCWVMIN",15,0)
 ;;NURSE
"RTN","RGCWVMIN",16,0)
 ;;NURSE PRACTITIONER
"RTN","RGCWVMIN",17,0)
 ;;NURSE LICENSED PRACTICAL
"RTN","RGCWVMIN",18,0)
 ;;NURSING ASSISTANT
"RTN","RGCWVMIN",19,0)
 ;;NURSING SUPERVISOR
"RTN","RGCWVMIN",20,0)
 ;;NURSE CLINICAL SPECIALIST
"RTN","RGCWVMIN",21,0)
 ;;
"RTN","RGCWVMRP")
0^7^B10141484
"RTN","RGCWVMRP",1,0)
RGCWVMRP ;IHS/MSC/MGH - OE/RR REPORTS FOR MEASUREMNTS AND I&O;18-Aug-2014 17:20;DKM
"RTN","RGCWVMRP",2,0)
 ;;1.0;CAREWEB FRAMEWORK;**001004,001005**;March 20,2007;Build 107
"RTN","RGCWVMRP",3,0)
 ;
"RTN","RGCWVMRP",4,0)
VITALS(ROOT,ORDFN,ID,ALPHA,OMEGA,ORDTRNG,REMOTE,ORMAX,ORFHIE) ; -- get vitals report
"RTN","RGCWVMRP",5,0)
 D START^ORWRP(132,"VITALSB^RGCWVMRP(.ROOT,.ORDFN,.ID,.ALPHA,.OMEGA,.ORDTRNG,.REMOTE,.ORMAX,.ORFHIE)")
"RTN","RGCWVMRP",6,0)
 Q
"RTN","RGCWVMRP",7,0)
VITALSB(ROOT,ORDFN,ID,ALPHA,OMEGA,ORDTRNG,REMOTE,ORMAX,ORFHIE) ; -- build vitals report
"RTN","RGCWVMRP",8,0)
 N ORVP,XQORNOD,ORSSTRT,ORSSTOP
"RTN","RGCWVMRP",9,0)
 Q:'$G(ORDFN)
"RTN","RGCWVMRP",10,0)
 I $L(ORDTRNG),'$G(ALPHA) S ALPHA=$$FMADD^XLFDT(DT,-ORDTRNG),OMEGA=$$NOW^XLFDT
"RTN","RGCWVMRP",11,0)
 Q:'$G(ALPHA)  Q:'$G(OMEGA)
"RTN","RGCWVMRP",12,0)
 I '$P(OMEGA,".",2) S OMEGA=OMEGA_".2359"
"RTN","RGCWVMRP",13,0)
 S ORVP=ORDFN_";DPT(",XQORNOD=1,ORSSTRT(XQORNOD)=ALPHA,ORSSTOP(XQORNOD)=OMEGA
"RTN","RGCWVMRP",14,0)
 D VITCUM
"RTN","RGCWVMRP",15,0)
 Q
"RTN","RGCWVMRP",16,0)
VITCUM ; Print Vitals Cumulative Report
"RTN","RGCWVMRP",17,0)
 N %,DFN,BEH1ST,BEHDAT,BEHDATE,BEHSH,BEHDT,BEHLN,BEHOUT,BEHPDT,BEHPG
"RTN","RGCWVMRP",18,0)
 N BEHSITE,BEHSP,BEHVDA,BEHVFDT,BEHVITY,BEHVSDT,BEHVTY,GMTVX,BEHY,I
"RTN","RGCWVMRP",19,0)
 N VA,VADM
"RTN","RGCWVMRP",20,0)
 S DFN=+ORVP,BEHVSDT=$G(ORSSTRT(+XQORNOD)),BEHVFDT=$G(ORSSTOP(+XQORNOD))
"RTN","RGCWVMRP",21,0)
 D EN3^RGCWVMC(DFN,BEHVSDT,BEHVFDT) G:BEHOUT VCOUT
"RTN","RGCWVMRP",22,0)
VCOUT ;
"RTN","RGCWVMRP",23,0)
 Q
"RTN","RGCWVMRP",24,0)
IANDO(ROOT,ORDFN,ID,ALPHA,OMEGA,ORDTRNG,REMOTE,ORMAX,ORFHIE) ; -- get Intake and output report
"RTN","RGCWVMRP",25,0)
 D START^ORWRP(132,"IANDOSB^RGCWVMRP(.ROOT,.ORDFN,.ID,.ALPHA,.OMEGA,.ORDTRNG,.REMOTE,.ORMAX,.ORFHIE)")
"RTN","RGCWVMRP",26,0)
 Q
"RTN","RGCWVMRP",27,0)
IANDOSB(ROOT,ORDFN,ID,ALPHA,OMEGA,ORDTRNG,REMOTE,ORMAX,ORFHIE) ; -- build I&O report
"RTN","RGCWVMRP",28,0)
 N ORVP,XQORNOD,ORSSTRT,ORSSTOP
"RTN","RGCWVMRP",29,0)
 Q:'$G(ORDFN)
"RTN","RGCWVMRP",30,0)
 I $L(ORDTRNG),'$G(ALPHA) S ALPHA=$$FMADD^XLFDT(DT,-ORDTRNG),OMEGA=$$NOW^XLFDT
"RTN","RGCWVMRP",31,0)
 Q:'$G(ALPHA)  Q:'$G(OMEGA)
"RTN","RGCWVMRP",32,0)
 I '$P(OMEGA,".",2) S OMEGA=OMEGA_".2359"
"RTN","RGCWVMRP",33,0)
 S ORVP=ORDFN_";DPT(",XQORNOD=1,ORSSTRT(XQORNOD)=ALPHA,ORSSTOP(XQORNOD)=OMEGA
"RTN","RGCWVMRP",34,0)
 D IOCUM
"RTN","RGCWVMRP",35,0)
 Q
"RTN","RGCWVMRP",36,0)
IOCUM ; Print I&O Cumulative Report
"RTN","RGCWVMRP",37,0)
 N VA,VADM,DFN,%,GMREDB,GMRSTRT,GMRFIN,GMRCOL,GMROUT,GRPT
"RTN","RGCWVMRP",38,0)
 S DFN=+ORVP,GMRSTRT=$G(ORSSTRT(+XQORNOD)),GMRFIN=$G(ORSSTOP(+XQORNOD))
"RTN","RGCWVMRP",39,0)
 S GMREDB="P",GRPT=1,GMROUT=0
"RTN","RGCWVMRP",40,0)
 S GMRCOL=6*(3+$P(^GMRD(126.56,0),"^",4)+$P(^GMRD(126.58,0),"^",4))
"RTN","RGCWVMRP",41,0)
 D START^GMRYRP0 G VCOUT
"RTN","RGCWVMRP",42,0)
 Q
"RTN","RGCWVMRP",43,0)
VERR(ROOT,ORDFN,ID,ALPHA,OMEGA,ORDTRNG,REMOTE,ORMAX,ORFHIE) ; -- get error report
"RTN","RGCWVMRP",44,0)
 D START^ORWRP(132,"VERRSB^RGCWVMRP(.ROOT,.ORDFN,.ID,.ALPHA,.OMEGA,.ORDTRNG,.REMOTE,.ORMAX,.ORFHIE)")
"RTN","RGCWVMRP",45,0)
 Q
"RTN","RGCWVMRP",46,0)
VERRSB(ROOT,ORDFN,ID,ALPHA,OMEGA,ORDTRNG,REMOTE,ORMAX,ORFHIE) ; -- build vitals error report
"RTN","RGCWVMRP",47,0)
 N ORVP,XQORNOD,ORSSTRT,ORSSTOP
"RTN","RGCWVMRP",48,0)
 Q:'$G(ORDFN)
"RTN","RGCWVMRP",49,0)
 I $L(ORDTRNG),'$G(ALPHA) S ALPHA=$$FMADD^XLFDT(DT,-ORDTRNG),OMEGA=$$NOW^XLFDT
"RTN","RGCWVMRP",50,0)
 Q:'$G(ALPHA)  Q:'$G(OMEGA)
"RTN","RGCWVMRP",51,0)
 I '$P(OMEGA,".",2) S OMEGA=OMEGA_".2359"
"RTN","RGCWVMRP",52,0)
 S ORVP=ORDFN_";DPT(",XQORNOD=1,ORSSTRT(XQORNOD)=ALPHA,ORSSTOP(XQORNOD)=OMEGA
"RTN","RGCWVMRP",53,0)
 D ERRPT
"RTN","RGCWVMRP",54,0)
 Q
"RTN","RGCWVMRP",55,0)
ERRPT ; Print Vitals Entered in error Report
"RTN","RGCWVMRP",56,0)
 N VA,VADM,DFN,%,GMREDB,GMRVSDT,GMRVFDT,GMRCOL,PARAM,DATA
"RTN","RGCWVMRP",57,0)
 S DFN=+ORVP,BEHVSDT=$G(ORSSTRT(+XQORNOD)),BEHVFDT=$G(ORSSTOP(+XQORNOD))
"RTN","RGCWVMRP",58,0)
 S PARAM="RGCWVM ERROR RPT"
"RTN","RGCWVMRP",59,0)
 D GETPAR^RGCWFPAR(.DATA,PARAM)
"RTN","RGCWVMRP",60,0)
 I DATA=0 W !,"You are not authorized to view the error reprort" Q
"RTN","RGCWVMRP",61,0)
 I DATA=1 D EN1^RGCWVMER
"RTN","RGCWVMRP",62,0)
 Q
"SEC","^DIC",999.1,999.1,0,"AUDIT")
@
"SEC","^DIC",999.1,999.1,0,"DD")
@
"SEC","^DIC",999.1,999.1,0,"DEL")
@
"SEC","^DIC",999.1,999.1,0,"LAYGO")
@
"SEC","^DIC",999.1,999.1,0,"RD")
@
"SEC","^DIC",999.1,999.1,0,"WR")
@
"SEC","^DIC",999.201,999.201,0,"AUDIT")
@
"SEC","^DIC",999.201,999.201,0,"DD")
@
"SEC","^DIC",999.201,999.201,0,"DEL")
@
"SEC","^DIC",999.201,999.201,0,"LAYGO")
@
"SEC","^DIC",999.201,999.201,0,"RD")
@
"SEC","^DIC",999.201,999.201,0,"WR")
@
"SEC","^DIC",999.21,999.21,0,"AUDIT")
@
"SEC","^DIC",999.21,999.21,0,"DD")
@
"SEC","^DIC",999.21,999.21,0,"DEL")
@
"SEC","^DIC",999.21,999.21,0,"LAYGO")
@
"SEC","^DIC",999.21,999.21,0,"RD")
@
"SEC","^DIC",999.21,999.21,0,"WR")
@
"SEC","^DIC",19941.21,19941.21,0,"AUDIT")
@
"SEC","^DIC",19941.21,19941.21,0,"DD")
@
"SEC","^DIC",19941.21,19941.21,0,"DEL")
@
"SEC","^DIC",19941.21,19941.21,0,"LAYGO")
@
"SEC","^DIC",19941.21,19941.21,0,"RD")
@
"SEC","^DIC",19941.21,19941.21,0,"WR")
@
"TEMP","EC")

"TEMP","FINAL")
D POSTINIT^RGCWVMIN
"TEMP","INITIAL")
D PREINIT^RGCWVMIN
"TEMP","PARAM",1)
RGCWVM TEMPLATE^10^TEMPERATURE
"TEMP","PARAM",2)
RGCWVM TEMPLATE^20^PULSE
"TEMP","PARAM",3)
RGCWVM TEMPLATE^30^RESPIRATIONS
"TEMP","PARAM",4)
RGCWVM TEMPLATE^40^BLOOD PRESSURE
"TEMP","PARAM",5)
RGCWVM TEMPLATE^50^HEIGHT
"TEMP","PARAM",6)
RGCWVM TEMPLATE^60^WEIGHT
"TEMP","PARAM",7)
RGCWVM TEMPLATE^70^PAIN
"TEMP","PARAM",8)
RGCWVM VITAL LIST^10^TEMPERATURE
"TEMP","PARAM",9)
RGCWVM VITAL LIST^20^PULSE
"TEMP","PARAM",10)
RGCWVM VITAL LIST^30^RESPIRATIONS
"TEMP","PARAM",11)
RGCWVM VITAL LIST^40^BLOOD PRESSURE
"TEMP","PARAM",12)
RGCWVM VITAL LIST^50^HEIGHT
"TEMP","PARAM",13)
RGCWVM VITAL LIST^60^WEIGHT
"TEMP","PARAM",14)
RGCWVM VITAL LIST^70^PAIN
"TEMP","PARAM",15)
RGCWVM VITAL LIST^80^HEAD CIRCUMFERENCE
"TEMP","PARAM",16)
RGCWVM VITAL LIST^90^BODY MASS INDEX
"TEMP","PTRS",19941.212)
20^19941.21^19.1
"TEMP","PTRS",19941.2121)
21^19941.21^19.1
"TEMP","TGT")
12
"VER")
8.0^22.0
"^DD",999.1,999.1,0)
FIELD^^10^4
"^DD",999.1,999.1,0,"DDA")
N
"^DD",999.1,999.1,0,"DT")
3150211
"^DD",999.1,999.1,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",999.1,999.1,0,"IX","B",999.1,.01)

"^DD",999.1,999.1,0,"NM","CAREWEB SERIALIZATION")

"^DD",999.1,999.1,0,"PT",999.991,.01)

"^DD",999.1,999.1,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",999.1,999.1,.01,1,0)
^.1
"^DD",999.1,999.1,.01,1,1,0)
999.1^B
"^DD",999.1,999.1,.01,1,1,1)
S ^RGCWF(999.1,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.1,.01,1,1,2)
K ^RGCWF(999.1,"B",$E(X,1,30),DA)
"^DD",999.1,999.1,.01,3)
Replace Name of the serialization type (1-30 characters).
"^DD",999.1,999.1,.01,"DT")
3150211
"^DD",999.1,999.1,1,0)
CONTENT TYPE^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",999.1,999.1,1,3)
Content type generated by this serialization type.
"^DD",999.1,999.1,1,"DT")
3150211
"^DD",999.1,999.1,2,0)
SERIALIZER^F^^0;3^K:$L(X)>10!($L(X)<1)!'(X?1.A0.AN) X
"^DD",999.1,999.1,2,3)
Name of serialization routine.
"^DD",999.1,999.1,2,"DT")
3150211
"^DD",999.1,999.1,10,0)
RESOURCE^999.11^^10;0
"^DD",999.1,999.11,0)
RESOURCE SUB-FIELD^^2^8
"^DD",999.1,999.11,0,"DT")
3150211
"^DD",999.1,999.11,0,"IX","B",999.11,.01)

"^DD",999.1,999.11,0,"IX","C",999.11,.01)

"^DD",999.1,999.11,0,"NM","RESOURCE")

"^DD",999.1,999.11,0,"UP")
999.1
"^DD",999.1,999.11,.01,0)
RESOURCE^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.11,.01,1,0)
^.1^^-1
"^DD",999.1,999.11,.01,1,1,0)
999.11^B^MUMPS
"^DD",999.1,999.11,.01,1,1,1)
S ^RGCWF(999.1,DA(1),10,"B",X,DA)=$$TOPTRN^RGCWSER(X)
"^DD",999.1,999.11,.01,1,1,2)
K ^RGCWF(999.1,DA(1),10,"B",X,DA)
"^DD",999.1,999.11,.01,1,1,"DT")
3150211
"^DD",999.1,999.11,.01,1,2,0)
999.11^C^MUMPS
"^DD",999.1,999.11,.01,1,2,1)
S ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)=""
"^DD",999.1,999.11,.01,1,2,2)
K ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)
"^DD",999.1,999.11,.01,1,2,"DT")
3150211
"^DD",999.1,999.11,.01,3)
Enter path name for the resource.
"^DD",999.1,999.11,.01,"DT")
3150211
"^DD",999.1,999.11,1,0)
INTERNAL^S^0:NO;1:YES;^0;2^Q
"^DD",999.1,999.11,1,3)
Enter YES if this is an internal resource.
"^DD",999.1,999.11,1,"DT")
3150221
"^DD",999.1,999.11,2,0)
SOURCE^NJ10,4XO^^0;3^K:'$$VFILE^DILFD(X) X
"^DD",999.1,999.11,2,2)
S Y(0)=Y S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,2.1)
S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,3)
Enter a file or subfile number.
"^DD",999.1,999.11,2,"DT")
3150211
"^DD",999.1,999.11,10,0)
CUSTOM SERIALIZER^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,10,3)
M code to invoke custom serializer.
"^DD",999.1,999.11,10,9)
@
"^DD",999.1,999.11,10,"DT")
3150211
"^DD",999.1,999.11,20,0)
CUSTOM RETRIEVAL^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,20,3)
M code to invoke custom retrieval logic.
"^DD",999.1,999.11,20,9)
@
"^DD",999.1,999.11,20,"DT")
3150211
"^DD",999.1,999.11,30,0)
PROPERTY^999.12I^^30;0
"^DD",999.1,999.11,40,0)
PARAMETER^999.13I^^40;0
"^DD",999.1,999.11,99,0)
DESCRIPTION^F^^99;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.11,99,3)
Enter brief description of this resource.
"^DD",999.1,999.11,99,"DT")
3150211
"^DD",999.1,999.12,0)
PROPERTY SUB-FIELD^^10^5
"^DD",999.1,999.12,0,"DT")
3150211
"^DD",999.1,999.12,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.12,0,"IX","ASEQ",999.12,3)

"^DD",999.1,999.12,0,"IX","B",999.12,.01)

"^DD",999.1,999.12,0,"NM","PROPERTY")

"^DD",999.1,999.12,0,"UP")
999.11
"^DD",999.1,999.12,.01,0)
PROPERTY^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.12,.01,1,0)
^.1
"^DD",999.1,999.12,.01,1,1,0)
999.12^B
"^DD",999.1,999.12,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.12,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)
"^DD",999.1,999.12,.01,3)
Property name to be used in serialization.
"^DD",999.1,999.12,.01,"DT")
3150211
"^DD",999.1,999.12,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.12,1,3)
Field name or # corresponding to this property
"^DD",999.1,999.12,1,"DT")
3150211
"^DD",999.1,999.12,2,0)
TYPE^RS^F:FREE TEXT;R:RAW;B:BOOLEAN;D:DATE;M:MULTIPLE;C:CUSTOM;O:OBJECT;W:WORD PROCESSING;I:INLINE;^0;3^Q
"^DD",999.1,999.12,2,3)
Encoding type for this property.
"^DD",999.1,999.12,2,"DT")
3150211
"^DD",999.1,999.12,3,0)
SEQUENCE^RNJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.12,3,1,0)
^.1
"^DD",999.1,999.12,3,1,1,0)
999.12^ASEQ
"^DD",999.1,999.12,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.12,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.12,3,1,1,"DT")
3150211
"^DD",999.1,999.12,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.12,3,"DT")
3150211
"^DD",999.1,999.12,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.12,10,3)
Enter control data.
"^DD",999.1,999.12,10,21,0)
^^7^7^3150211.121613
"^DD",999.1,999.12,10,21,1,0)
The format of this field depends on the value of the TYPE field.  For those
"^DD",999.1,999.12,10,21,2,0)
TYPE values not listed below, this field will be ignored.
"^DD",999.1,999.12,10,21,3,0)

"^DD",999.1,999.12,10,21,4,0)
C (Custom) - Executable M code.
"^DD",999.1,999.12,10,21,5,0)
O (Object) - Alias name of the target object.
"^DD",999.1,999.12,10,21,6,0)
M (Multiple) - Alias name of the multiple object.
"^DD",999.1,999.12,10,21,7,0)

"^DD",999.1,999.12,10,"DT")
3150211
"^DD",999.1,999.13,0)
PARAMETER SUB-FIELD^^10^6
"^DD",999.1,999.13,0,"DT")
3150211
"^DD",999.1,999.13,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.13,0,"IX","ASEQ",999.13,3)

"^DD",999.1,999.13,0,"IX","B",999.13,.01)

"^DD",999.1,999.13,0,"NM","PARAMETER")

"^DD",999.1,999.13,0,"UP")
999.11
"^DD",999.1,999.13,.01,0)
PARAMETER^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.13,.01,1,0)
^.1
"^DD",999.1,999.13,.01,1,1,0)
999.13^B
"^DD",999.1,999.13,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.13,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)
"^DD",999.1,999.13,.01,3)
Enter name of search parameter.
"^DD",999.1,999.13,.01,"DT")
3150211
"^DD",999.1,999.13,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.13,1,3)
Field name or # corresponding to this parameter.
"^DD",999.1,999.13,1,"DT")
3150211
"^DD",999.1,999.13,2,0)
TYPE^S^N:NUMBER;D:DATE;S:STRING;T:TOKEN;R:REFERENCE;Q:QUANTITY;^0;3^Q
"^DD",999.1,999.13,2,3)
Type of the search parameter.
"^DD",999.1,999.13,2,"DT")
3150211
"^DD",999.1,999.13,3,0)
SEQUENCE^NJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.13,3,1,0)
^.1
"^DD",999.1,999.13,3,1,1,0)
999.13^ASEQ
"^DD",999.1,999.13,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.13,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.13,3,1,1,"DT")
3150211
"^DD",999.1,999.13,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.13,3,"DT")
3150211
"^DD",999.1,999.13,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.13,10,3)
M code to perform filtering.
"^DD",999.1,999.13,10,"DT")
3150211
"^DD",999.1,999.13,20,0)
COHORT^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.13,20,3)
M code to set global selector into X.
"^DD",999.1,999.13,20,9)
@
"^DD",999.1,999.13,20,"DT")
3150211
"^DD",999.201,999.201,0)
FIELD^^4^5
"^DD",999.201,999.201,0,"IX","B",999.201,.01)

"^DD",999.201,999.201,0,"NM","CAREWEB NOTIFICATION CONTROL")

"^DD",999.201,999.201,0,"PT",999.994,.01)

"^DD",999.201,999.201,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<2)!'(X'?1P.E) X
"^DD",999.201,999.201,.01,1,0)
^.1
"^DD",999.201,999.201,.01,1,1,0)
999.201^B
"^DD",999.201,999.201,.01,1,1,1)
S ^RGCWF(999.201,"B",$E(X,1,30),DA)=""
"^DD",999.201,999.201,.01,1,1,2)
K ^RGCWF(999.201,"B",$E(X,1,30),DA)
"^DD",999.201,999.201,.01,3)
Answer must be 2-30 characters in length.
"^DD",999.201,999.201,.01,"DT")
3030805
"^DD",999.201,999.201,1,0)
IDENT^RK^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,1,3)
Code to check notification identity.  Set $T to true for positive match.
"^DD",999.201,999.201,1,9)
@
"^DD",999.201,999.201,1,21,0)
^^1^1^3030804.150811
"^DD",999.201,999.201,1,21,1,0)
Should check the notification identifier in AID and set $T to true if a match.
"^DD",999.201,999.201,1,"DT")
3030804
"^DD",999.201,999.201,2,0)
PARSE^RK^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,2,3)
Code to parse data elements from notification.
"^DD",999.201,999.201,2,9)
@
"^DD",999.201,999.201,2,21,0)
^^8^8^3030804.170957
"^DD",999.201,999.201,2,21,1,0)
Code to parse standard data elements from notification.  Elements should be
"^DD",999.201,999.201,2,21,2,0)
returned in ALR array as follows:
"^DD",999.201,999.201,2,21,3,0)

"^DD",999.201,999.201,2,21,4,0)
ALR("DFN")=Patient IEN (if patient-orientation)
"^DD",999.201,999.201,2,21,5,0)
ALR("INF")=Info only flag
"^DD",999.201,999.201,2,21,6,0)
ALR("TYP")=Notification type code
"^DD",999.201,999.201,2,21,7,0)
ALR("PRI")=Priority code
"^DD",999.201,999.201,2,21,8,0)
ALR("XTR")=Additional data
"^DD",999.201,999.201,2,"DT")
3030804
"^DD",999.201,999.201,3,0)
PROCESS^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,3,3)
Post processing logic for alert.
"^DD",999.201,999.201,3,9)
@
"^DD",999.201,999.201,3,"DT")
3030805
"^DD",999.201,999.201,4,0)
UPDATE^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,4,3)
Optional logic to update alerts for current user.
"^DD",999.201,999.201,4,9)
@
"^DD",999.201,999.201,4,21,0)
^^2^2^3080128.135828
"^DD",999.201,999.201,4,21,1,0)
This logic provides the opportunity to update alerts (add or delete) 
"^DD",999.201,999.201,4,21,2,0)
for the current user prior to retrieving them.
"^DD",999.201,999.201,4,"DT")
3080128
"^DD",999.21,999.21,0)
FIELD^^99^13
"^DD",999.21,999.21,0,"DT")
3041215
"^DD",999.21,999.21,0,"IX","B",999.21,.01)

"^DD",999.21,999.21,0,"IX","B",999.21,.5)

"^DD",999.21,999.21,0,"NM","CAREWEB MEASUREMENT CONTROL")

"^DD",999.21,999.21,0,"VRPK")

"^DD",999.21,999.21,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",999.21,999.21,.01,1,0)
^.1
"^DD",999.21,999.21,.01,1,1,0)
999.21^B
"^DD",999.21,999.21,.01,1,1,1)
S ^RGCWF(999.21,"B",$E(X,1,30),DA)=""
"^DD",999.21,999.21,.01,1,1,2)
K ^RGCWF(999.21,"B",$E(X,1,30),DA)
"^DD",999.21,999.21,.01,3)
Answer must be 1-30 characters in length.
"^DD",999.21,999.21,.01,"DT")
3041019
"^DD",999.21,999.21,.5,0)
ABBREVIATION^F^^0;7^K:$L(X)>10!($L(X)<1) X
"^DD",999.21,999.21,.5,1,0)
^.1
"^DD",999.21,999.21,.5,1,1,0)
999.21^B
"^DD",999.21,999.21,.5,1,1,1)
S ^RGCWF(999.21,"B",$E(X,1,30),DA)=""
"^DD",999.21,999.21,.5,1,1,2)
K ^RGCWF(999.21,"B",$E(X,1,30),DA)
"^DD",999.21,999.21,.5,1,1,"DT")
3041021
"^DD",999.21,999.21,.5,3)
Abbreviation for this measurement type.
"^DD",999.21,999.21,.5,"DT")
3041021
"^DD",999.21,999.21,1,0)
DEFAULT UNITS^S^0:US;1:METRIC;^0;2^Q
"^DD",999.21,999.21,1,"DT")
3041019
"^DD",999.21,999.21,2,0)
UNITS (US)^F^^0;3^K:$L(X)>10!($L(X)<1) X
"^DD",999.21,999.21,2,3)
Answer must be 1-10 characters in length.
"^DD",999.21,999.21,2,"DT")
3041019
"^DD",999.21,999.21,3,0)
UNITS (METRIC)^F^^0;4^K:$L(X)>10!($L(X)<1) X
"^DD",999.21,999.21,3,3)
Answer must be 1-10 characters in length.
"^DD",999.21,999.21,3,"DT")
3041019
"^DD",999.21,999.21,4,0)
NORMAL LO^NJ17,4^^0;5^K:+X'=X!(X>999999999999)!(X<-9999999999999)!(X?.E1"."5N.N) X
"^DD",999.21,999.21,4,3)
Low normal value in default units.
"^DD",999.21,999.21,4,"DT")
3041019
"^DD",999.21,999.21,5,0)
NORMAL HI^NJ17,4^^0;6^K:+X'=X!(X>999999999999)!(X<-9999999999999)!(X?.E1"."5N.N) X
"^DD",999.21,999.21,5,3)
High normal value in default units.
"^DD",999.21,999.21,5,"DT")
3041019
"^DD",999.21,999.21,6,0)
INPUT TRANSFORM^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.21,999.21,6,3)
M code to transform value in X to internal form.
"^DD",999.21,999.21,6,9)
@
"^DD",999.21,999.21,6,"DT")
3041021
"^DD",999.21,999.21,7,0)
US TO METRIC^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.21,999.21,7,3)
M code to convert value in X from US to metric units.
"^DD",999.21,999.21,7,9)
@
"^DD",999.21,999.21,7,"DT")
3041019
"^DD",999.21,999.21,8,0)
METRIC TO US^K^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.21,999.21,8,3)
M code to convert value in X from metric to US units.
"^DD",999.21,999.21,8,9)
@
"^DD",999.21,999.21,8,"DT")
3041019
"^DD",999.21,999.21,9,0)
PERCENTILE DATA^999.2109^^3;0
"^DD",999.21,999.21,10,0)
RETRIEVAL LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.21,999.21,10,3)
If measurement requires special retrieval logic, enter it here.
"^DD",999.21,999.21,10,9)
@
"^DD",999.21,999.21,10,"DT")
3041215
"^DD",999.21,999.21,99,0)
DESCRIPTION^999.2199^^99;0
"^DD",999.21,999.2109,0)
PERCENTILE DATA SUB-FIELD^^.01^1
"^DD",999.21,999.2109,0,"DT")
3041019
"^DD",999.21,999.2109,0,"NM","PERCENTILE DATA")

"^DD",999.21,999.2109,0,"UP")
999.21
"^DD",999.21,999.2109,.01,0)
PERCENTILE DATA^WL^^0;1^Q
"^DD",999.21,999.2109,.01,3)
Control data for generating percentile values.
"^DD",999.21,999.2109,.01,"DT")
3041019
"^DD",999.21,999.2199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",999.21,999.2199,0,"DT")
3041102
"^DD",999.21,999.2199,0,"NM","DESCRIPTION")

"^DD",999.21,999.2199,0,"UP")
999.21
"^DD",999.21,999.2199,.01,0)
DESCRIPTION^WL^^0;1^Q
"^DD",999.21,999.2199,.01,3)
Enter text to appear when help is requested.
"^DD",999.21,999.2199,.01,"DT")
3041102
"^DD",19941.21,19941.21,0)
FIELD^^7^14
"^DD",19941.21,19941.21,0,"DT")
3091007
"^DD",19941.21,19941.21,0,"IX","B",19941.21,.01)

"^DD",19941.21,19941.21,0,"NM","CIA EVENT TYPE")

"^DD",19941.21,19941.21,0,"PT",999.995,.01)

"^DD",19941.21,19941.21,0,"PT",19930.995,.01)

"^DD",19941.21,19941.21,0,"PT",19941.23,1)

"^DD",19941.21,19941.21,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19941.21,19941.21,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",19941.21,19941.21,.01,1,0)
^.1
"^DD",19941.21,19941.21,.01,1,1,0)
19941.21^B
"^DD",19941.21,19941.21,.01,1,1,1)
S ^CIANB(19941.21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.21,.01,1,1,2)
K ^CIANB(19941.21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.21,.01,3)
Answer must be 3-100 characters in length.
"^DD",19941.21,19941.21,.01,"DT")
3030611
"^DD",19941.21,19941.21,1,0)
MONITOR^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,1,3)
M code to invoke monitor for this event type
"^DD",19941.21,19941.21,1,9)
@
"^DD",19941.21,19941.21,1,"DT")
3021021
"^DD",19941.21,19941.21,2,0)
DISABLE^S^0:NO;1:YES;^0;2^Q
"^DD",19941.21,19941.21,2,3)
Enter YES to disable this event type.
"^DD",19941.21,19941.21,2,21,0)
^.001^3^3^3030810^
"^DD",19941.21,19941.21,2,21,1,0)
If set to YES, this event type is disabled.  Once disabled, any attempt to 
"^DD",19941.21,19941.21,2,21,2,0)
enqueue the event will be ignored.  Disabling an event does not affect events
"^DD",19941.21,19941.21,2,21,3,0)
already in the queue. 
"^DD",19941.21,19941.21,2,"DT")
3030810
"^DD",19941.21,19941.21,3,0)
INTERVAL^NJ11,0X^^0;3^K:X<0!(X\1'=X) X
"^DD",19941.21,19941.21,3,3)
Enter the nominal polling interval in seconds.
"^DD",19941.21,19941.21,3,21,0)
^^10^10^3021021.152235
"^DD",19941.21,19941.21,3,21,1,0)
This is the nominal polling interval for the event in seconds.
"^DD",19941.21,19941.21,3,21,2,0)
The actual polling interval is dependent on the event polling
"^DD",19941.21,19941.21,3,21,3,0)
interval set for the client application as a site parameter.
"^DD",19941.21,19941.21,3,21,4,0)
The nominal polling interval guarantees that polling for this
"^DD",19941.21,19941.21,3,21,5,0)
event will not occur more frequently than this setting.
"^DD",19941.21,19941.21,3,21,6,0)
 
"^DD",19941.21,19941.21,3,21,7,0)
For events that are infrequent and/or do not require real time
"^DD",19941.21,19941.21,3,21,8,0)
notification, higher values may be selected for this field to
"^DD",19941.21,19941.21,3,21,9,0)
mitigate impact on system load. 
"^DD",19941.21,19941.21,3,21,10,0)

"^DD",19941.21,19941.21,3,"DT")
3021021
"^DD",19941.21,19941.21,4,0)
LOG EVENT^S^0:NO;1:YES;^0;4^Q
"^DD",19941.21,19941.21,4,3)
Enter YES to enable logging of this event.
"^DD",19941.21,19941.21,4,"DT")
3030611
"^DD",19941.21,19941.21,5,0)
LOG RETENTION^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.21,19941.21,5,3)
Number of days to retain log entries.
"^DD",19941.21,19941.21,5,"DT")
3030611
"^DD",19941.21,19941.21,6,0)
POLLING METHOD^S^0:PER SESSION;1:PER INTERVAL;^0;6^Q
"^DD",19941.21,19941.21,6,3)
Determines how a monitored event is polled.
"^DD",19941.21,19941.21,6,21,0)
^^11^11^3030810.175145
"^DD",19941.21,19941.21,6,21,1,0)
For monitored events, this setting determines how the monitor is invoked
"^DD",19941.21,19941.21,6,21,2,0)
when the polling interval has been reached.  PER SESSION causes the event
"^DD",19941.21,19941.21,6,21,3,0)
monitor to be invoked for each active session, setting the user and
"^DD",19941.21,19941.21,6,21,4,0)
session context prior to each call.  PER INTERVAL cause the event monitor
"^DD",19941.21,19941.21,6,21,5,0)
to be invoked only once per interval.  No user or session context information
"^DD",19941.21,19941.21,6,21,6,0)
is available to the monitor in this case.
"^DD",19941.21,19941.21,6,21,7,0)

"^DD",19941.21,19941.21,6,21,8,0)
PER SESSION is appropriate for events that depend upon a specific user or
"^DD",19941.21,19941.21,6,21,9,0)
session (e.g., notifications).  PER INTERVAL is appropriate for events 
"^DD",19941.21,19941.21,6,21,10,0)
that are independent of a user or session (e.g., status events to display
"^DD",19941.21,19941.21,6,21,11,0)
the host date/time).
"^DD",19941.21,19941.21,6,"DT")
3030810
"^DD",19941.21,19941.21,7,0)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",19941.21,19941.21,7,12)
Restricts to Extended Action Protocols starting with CIAV
"^DD",19941.21,19941.21,7,12.1)
S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X"""
"^DD",19941.21,19941.21,7,"DT")
3091007
"^DD",19941.21,19941.21,10,0)
DISPLAY LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,10,3)
Logic to display stub info in log viewer.
"^DD",19941.21,19941.21,10,9)
@
"^DD",19941.21,19941.21,10,"DT")
3030611
"^DD",19941.21,19941.21,20,0)
PUBLICATION KEY^19941.212P^^20;0
"^DD",19941.21,19941.21,21,0)
SUBSCRIPTION KEY^19941.2121P^^21;0
"^DD",19941.21,19941.21,99,0)
DESCRIPTION^19941.2199^^99;0
"^DD",19941.21,19941.21,100,0)
ERROR DATE/TIME^D^^100;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.21,19941.21,100,3)
Date and time of last error
"^DD",19941.21,19941.21,100,"DT")
3061129
"^DD",19941.21,19941.21,101,0)
ERROR TEXT^F^^100;2^K:$L(X)>240!($L(X)<1) X
"^DD",19941.21,19941.21,101,3)
Answer must be 1-240 characters in length.
"^DD",19941.21,19941.21,101,"DT")
3061129
"^DD",19941.21,19941.212,0)
PUBLICATION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.212,0,"DT")
3021021
"^DD",19941.21,19941.212,0,"IX","B",19941.212,.01)

"^DD",19941.21,19941.212,0,"NM","PUBLICATION KEY")

"^DD",19941.21,19941.212,0,"UP")
19941.21
"^DD",19941.21,19941.212,.01,0)
PUBLICATION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.212,.01,1,0)
^.1
"^DD",19941.21,19941.212,.01,1,1,0)
19941.212^B
"^DD",19941.21,19941.212,.01,1,1,1)
S ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.212,.01,1,1,2)
K ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.212,.01,3)
Security keys required to fire this event.
"^DD",19941.21,19941.212,.01,21,0)
^^2^2^3021021.152715
"^DD",19941.21,19941.212,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.212,.01,21,2,0)
the listed keys in order to fire an event of this type.
"^DD",19941.21,19941.212,.01,"DT")
3040310
"^DD",19941.21,19941.2121,0)
SUBSCRIPTION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.2121,0,"DT")
3021021
"^DD",19941.21,19941.2121,0,"IX","B",19941.2121,.01)

"^DD",19941.21,19941.2121,0,"NM","SUBSCRIPTION KEY")

"^DD",19941.21,19941.2121,0,"UP")
19941.21
"^DD",19941.21,19941.2121,.01,0)
SUBSCRIPTION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.2121,.01,1,0)
^.1
"^DD",19941.21,19941.2121,.01,1,1,0)
19941.2121^B
"^DD",19941.21,19941.2121,.01,1,1,1)
S ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.2121,.01,1,1,2)
K ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.2121,.01,3)
Security keys required to receive this event type.
"^DD",19941.21,19941.2121,.01,21,0)
^^2^2^3021021.153002
"^DD",19941.21,19941.2121,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.2121,.01,21,2,0)
the listed keys in order subscribe to an event of this type. 
"^DD",19941.21,19941.2121,.01,"DT")
3040310
"^DD",19941.21,19941.2199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",19941.21,19941.2199,0,"DT")
3021021
"^DD",19941.21,19941.2199,0,"NM","DESCRIPTION")

"^DD",19941.21,19941.2199,0,"UP")
19941.21
"^DD",19941.21,19941.2199,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",19941.21,19941.2199,.01,3)
Enter a detailed description of this event type.
"^DD",19941.21,19941.2199,.01,"DT")
3021021
"^DIC",999.1,999.1,0)
CAREWEB SERIALIZATION^999.1
"^DIC",999.1,999.1,0,"GL")
^RGCWF(999.1,
"^DIC",999.1,999.1,"%D",0)
^^1^1^3150211.113842
"^DIC",999.1,999.1,"%D",1,0)
Supports serialization of domain objects.
"^DIC",999.1,"B","CAREWEB SERIALIZATION",999.1)

"^DIC",999.201,999.201,0)
CAREWEB NOTIFICATION CONTROL^999.201
"^DIC",999.201,999.201,0,"GL")
^RGCWF(999.201,
"^DIC",999.201,"B","CAREWEB NOTIFICATION CONTROL",999.201)

"^DIC",999.21,999.21,0)
CAREWEB MEASUREMENT CONTROL^999.21
"^DIC",999.21,999.21,0,"GL")
^RGCWF(999.21,
"^DIC",999.21,999.21,"%D",0)
^^2^2^3070611.124155
"^DIC",999.21,999.21,"%D",1,0)
This file controls which measurement types may be viewed and manipulated
"^DIC",999.21,999.21,"%D",2,0)
within the RPMS-EHR application.
"^DIC",999.21,"B","CAREWEB MEASUREMENT CONTROL",999.21)

"^DIC",19941.21,19941.21,0)
CIA EVENT TYPE^19941.21
"^DIC",19941.21,19941.21,0,"GL")
^CIANB(19941.21,
"^DIC",19941.21,"B","CIA EVENT TYPE",19941.21)

**INSTALL NAME**
CAREWEB SMART ADAPTER 1.0
"BLD",8501,0)
CAREWEB SMART ADAPTER 1.0^^0^3150226^n
"BLD",8501,4,0)
^9.64PA^19941.21^3
"BLD",8501,4,999.1,0)
999.1
"BLD",8501,4,999.1,222)
n^y^f^^n^^y^o^n
"BLD",8501,4,999.1,224)
I $$SCRN^RGCWKDTP(Y,1)
"BLD",8501,4,999.201,0)
999.201
"BLD",8501,4,999.201,222)
n^y^f^^y^^y^o^n
"BLD",8501,4,999.201,224)
I $$SCRN^RGCWKDTP(Y,4)
"BLD",8501,4,19941.21,0)
19941.21
"BLD",8501,4,19941.21,222)
n^y^f^^y^^y^o^n
"BLD",8501,4,19941.21,224)
I $$SCRN^RGCWKDTP(Y,5)
"BLD",8501,4,"B",999.1,999.1)

"BLD",8501,4,"B",999.201,999.201)

"BLD",8501,4,"B",19941.21,19941.21)

"BLD",8501,6.3)
102
"BLD",8501,"INI")
PRE^RGCWKDIN
"BLD",8501,"INIT")
POST^RGCWKDIN
"BLD",8501,"KRN",0)
^9.67PA^8994^20
"BLD",8501,"KRN",.4,0)
.4
"BLD",8501,"KRN",.401,0)
.401
"BLD",8501,"KRN",.402,0)
.402
"BLD",8501,"KRN",.403,0)
.403
"BLD",8501,"KRN",.5,0)
.5
"BLD",8501,"KRN",.84,0)
.84
"BLD",8501,"KRN",3.6,0)
3.6
"BLD",8501,"KRN",3.8,0)
3.8
"BLD",8501,"KRN",9.2,0)
9.2
"BLD",8501,"KRN",9.8,0)
9.8
"BLD",8501,"KRN",9.8,"NM",0)
^9.68A^^0
"BLD",8501,"KRN",19,0)
19
"BLD",8501,"KRN",19.1,0)
19.1
"BLD",8501,"KRN",101,0)
101
"BLD",8501,"KRN",409.61,0)
409.61
"BLD",8501,"KRN",771,0)
771
"BLD",8501,"KRN",779.2,0)
779.2
"BLD",8501,"KRN",870,0)
870
"BLD",8501,"KRN",8989.51,0)
8989.51
"BLD",8501,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",8501,"KRN",8989.52,0)
8989.52
"BLD",8501,"KRN",8994,0)
8994
"BLD",8501,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",8501,"KRN",8994,"NM",1,0)
RGCWSMRT GET^^0
"BLD",8501,"KRN",8994,"NM","B","RGCWSMRT GET",1)

"BLD",8501,"KRN","B",.4,.4)

"BLD",8501,"KRN","B",.401,.401)

"BLD",8501,"KRN","B",.402,.402)

"BLD",8501,"KRN","B",.403,.403)

"BLD",8501,"KRN","B",.5,.5)

"BLD",8501,"KRN","B",.84,.84)

"BLD",8501,"KRN","B",3.6,3.6)

"BLD",8501,"KRN","B",3.8,3.8)

"BLD",8501,"KRN","B",9.2,9.2)

"BLD",8501,"KRN","B",9.8,9.8)

"BLD",8501,"KRN","B",19,19)

"BLD",8501,"KRN","B",19.1,19.1)

"BLD",8501,"KRN","B",101,101)

"BLD",8501,"KRN","B",409.61,409.61)

"BLD",8501,"KRN","B",771,771)

"BLD",8501,"KRN","B",779.2,779.2)

"BLD",8501,"KRN","B",870,870)

"BLD",8501,"KRN","B",8989.51,8989.51)

"BLD",8501,"KRN","B",8989.52,8989.52)

"BLD",8501,"KRN","B",8994,8994)

"BLD",8501,"PRE")
RGCWKDIN
"BLD",8501,"PRET")
PRETRANS^RGCWKDTP
"BLD",8501,"QUES",0)
^9.62^^
"BLD",8501,"REQB",0)
^9.611^1^1
"BLD",8501,"REQB",1,0)
VISTA SMART CONTAINER 1.0^0
"BLD",8501,"REQB","B","VISTA SMART CONTAINER 1.0",1)

"FIA",999.1)
CAREWEB SERIALIZATION
"FIA",999.1,0)
^RGCWF(999.1,
"FIA",999.1,0,0)
999.1I
"FIA",999.1,0,1)
n^y^f^^n^^y^o^n
"FIA",999.1,0,10)

"FIA",999.1,0,11)
I $$SCRN^RGCWKDTP(Y,1)
"FIA",999.1,0,"RLRO")

"FIA",999.1,999.1)
0
"FIA",999.1,999.11)
0
"FIA",999.1,999.12)
0
"FIA",999.1,999.13)
0
"FIA",999.201)
CAREWEB NOTIFICATION CONTROL
"FIA",999.201,0)
^RGCWF(999.201,
"FIA",999.201,0,0)
999.201
"FIA",999.201,0,1)
n^y^f^^y^^y^o^n
"FIA",999.201,0,10)

"FIA",999.201,0,11)
I $$SCRN^RGCWKDTP(Y,4)
"FIA",999.201,0,"RLRO")

"FIA",999.201,999.201)
0
"FIA",19941.21)
CIA EVENT TYPE
"FIA",19941.21,0)
^CIANB(19941.21,
"FIA",19941.21,0,0)
19941.21
"FIA",19941.21,0,1)
n^y^f^^y^^y^o^n
"FIA",19941.21,0,10)

"FIA",19941.21,0,11)
I $$SCRN^RGCWKDTP(Y,5)
"FIA",19941.21,0,"RLRO")

"FIA",19941.21,19941.21)
0
"FIA",19941.21,19941.212)
0
"FIA",19941.21,19941.2121)
0
"FIA",19941.21,19941.2199)
0
"INI")
PRE^RGCWKDIN
"INIT")
POST^RGCWKDIN
"KRN",8994,2698,-1)
0^1
"KRN",8994,2698,0)
RGCWSMRT GET^EN^C0SMART^2^^^^1
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PGL",19941.21,0,7,7)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"PRE")
RGCWKDIN
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","RGCWKDIN")
0^^B31866196
"RTN","RGCWKDIN",1,0)
RGCKDIN ;RI/CBMI/DKM - CareWeb KIDS installation support ;02-Feb-2015 12:11;DKM
"RTN","RGCWKDIN",2,0)
 ;;1.0;CAREWEB FRAMEWORK;;;Build 102
"RTN","RGCWKDIN",3,0)
 ; Environment check
"RTN","RGCWKDIN",4,0)
EC X $G(@XPDGREF@("EC"))
"RTN","RGCWKDIN",5,0)
 Q
"RTN","RGCWKDIN",6,0)
 ; Preinit
"RTN","RGCWKDIN",7,0)
PRE N RGX,RGY
"RTN","RGCWKDIN",8,0)
 D MES(),OBJINST,SDINIT^RGCWFUTL(,60,1)
"RTN","RGCWKDIN",9,0)
 F  D  Q:'RGX
"RTN","RGCWKDIN",10,0)
 .S RGX=$$SHOWSESS^RGCWFUTL
"RTN","RGCWKDIN",11,0)
 .R:RGX "Waiting for active sessions to terminate...",RGY:10,!!
"RTN","RGCWKDIN",12,0)
 .I RGX,RGY=U,$$ASK^RGUT("There are still active sessions.  Are you sure you want to proceed") S RGX=0
"RTN","RGCWKDIN",13,0)
 D MES("Proceeding with installation...")
"RTN","RGCWKDIN",14,0)
 D INITIAL,SAVEOPT
"RTN","RGCWKDIN",15,0)
 Q
"RTN","RGCWKDIN",16,0)
 ; Postinit
"RTN","RGCWKDIN",17,0)
POST N PAR,Y
"RTN","RGCWKDIN",18,0)
 X ^%ZOSF("EON"),^%ZOSF("TRMOFF")
"RTN","RGCWKDIN",19,0)
 D RESPTR,DEFPAR,RESTOPT,REGISTER,FINAL
"RTN","RGCWKDIN",20,0)
 W !!!
"RTN","RGCWKDIN",21,0)
 Q
"RTN","RGCWKDIN",22,0)
 ; Execute initial preinit code, if any
"RTN","RGCWKDIN",23,0)
INITIAL ; EP
"RTN","RGCWKDIN",24,0)
 X $G(@XPDGREF@("INITIAL"))
"RTN","RGCWKDIN",25,0)
 Q
"RTN","RGCWKDIN",26,0)
 ; Execute final postinit code, if any
"RTN","RGCWKDIN",27,0)
FINAL ; EP
"RTN","RGCWKDIN",28,0)
 X $G(@XPDGREF@("FINAL"))
"RTN","RGCWKDIN",29,0)
 Q
"RTN","RGCWKDIN",30,0)
 ; Initializes default parameter values.  Does not affect existing entries.
"RTN","RGCWKDIN",31,0)
DEFPAR N PAR,ENT,VAL,INST,LP,Y
"RTN","RGCWKDIN",32,0)
 D MES("Setting up default site parameters...")
"RTN","RGCWKDIN",33,0)
 F LP=0:0 S LP=$O(@XPDGREF@("PARAM",LP)) Q:'LP  K VAL M VAL=^(LP) D
"RTN","RGCWKDIN",34,0)
 .S Y=VAL,VAL=$$MSG^RGUT($P(Y,U,3,999),"|",0),PAR=$P(Y,U),INST=$P(Y,U,2)
"RTN","RGCWKDIN",35,0)
 .S ENT=$$ENT^RGCWFPAR(PAR),ENT=$P(ENT,U,$L(ENT,U))
"RTN","RGCWKDIN",36,0)
 .D:$L(ENT) ADD^XPAR(ENT,PAR,INST,.VAL)
"RTN","RGCWKDIN",37,0)
 Q
"RTN","RGCWKDIN",38,0)
 ; Delete a file or subfile
"RTN","RGCWKDIN",39,0)
 ;   DIU = File or subfile #
"RTN","RGCWKDIN",40,0)
DELFIL(DIU) ; EP
"RTN","RGCWKDIN",41,0)
 N $ET
"RTN","RGCWKDIN",42,0)
 S $ET="",@$$TRAP^RGUTOS("DELERR^RGCWKDIN")
"RTN","RGCWKDIN",43,0)
 Q:'$D(^DD(DIU))
"RTN","RGCWKDIN",44,0)
 S DIU(0)=$S($D(^DIC(DIU)):"D",1:"S")
"RTN","RGCWKDIN",45,0)
 D EN^DIU2
"RTN","RGCWKDIN",46,0)
 Q
"RTN","RGCWKDIN",47,0)
DELERR N ERR
"RTN","RGCWKDIN",48,0)
 S ERR=$$EC^%ZOSV
"RTN","RGCWKDIN",49,0)
 D MES("An error occurred deleting file #"_$G(DIU))
"RTN","RGCWKDIN",50,0)
 D MES("The error was: "_ERR)
"RTN","RGCWKDIN",51,0)
 D MES("Please delete the file manually after correcting the problem.")
"RTN","RGCWKDIN",52,0)
 Q
"RTN","RGCWKDIN",53,0)
 ; Save ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK option
"RTN","RGCWKDIN",54,0)
SAVEOPT N OPT
"RTN","RGCWKDIN",55,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",56,0)
 Q:'OPT
"RTN","RGCWKDIN",57,0)
 M @XPDGREF@("ITMSAVE")=^DIC(19,OPT,10,"B")
"RTN","RGCWKDIN",58,0)
 M @XPDGREF@("RPCSAVE")=^DIC(19,OPT,"RPC","B")
"RTN","RGCWKDIN",59,0)
 Q
"RTN","RGCWKDIN",60,0)
 ; Restore ITEM and RPC entries for RGCWF CAREWEB FRAMEWORK
"RTN","RGCWKDIN",61,0)
RESTOPT N OPT,ITM,RPC
"RTN","RGCWKDIN",62,0)
 S OPT=$$FIND1^DIC(19,"","X","RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",63,0)
 Q:'OPT
"RTN","RGCWKDIN",64,0)
 F ITM=0:0 S ITM=$O(@XPDGREF@("ITMSAVE",ITM)) Q:'ITM  I $$REGCTX^RGUTRPC(ITM,OPT)
"RTN","RGCWKDIN",65,0)
 F RPC=0:0 S RPC=$O(@XPDGREF@("RPCSAVE",RPC)) Q:'RPC  I $$REGRPC^RGUTRPC(RPC,OPT)
"RTN","RGCWKDIN",66,0)
 Q
"RTN","RGCWKDIN",67,0)
 ; Resolve pointers in multiples (KIDS doesn't)
"RTN","RGCWKDIN",68,0)
RESPTR ; EP
"RTN","RGCWKDIN",69,0)
 N TGT,SRC,SUB,NOD,NAM,VAL,IEN,CNT,SGB,PTR
"RTN","RGCWKDIN",70,0)
 S SUB=0
"RTN","RGCWKDIN",71,0)
 F  S SUB=$O(@XPDGREF@("PTRS",SUB)) Q:'SUB  S X=^(SUB)  D
"RTN","RGCWKDIN",72,0)
 .S NOD=+X,SRC=$P(X,U,2),TGT=$P(X,U,3),SGB=$$ROOT^DILFD(SRC,,1),NAM=""
"RTN","RGCWKDIN",73,0)
 .F  S NAM=$O(@XPDGREF@("PTRS",SUB,NAM)) Q:'$L(NAM)  D
"RTN","RGCWKDIN",74,0)
 ..S IEN=$$FIND1^DIC(SRC,"","QX",NAM),VAL="",CNT=0
"RTN","RGCWKDIN",75,0)
 ..Q:IEN'>0
"RTN","RGCWKDIN",76,0)
 ..K @SGB@(IEN,NOD)
"RTN","RGCWKDIN",77,0)
 ..F  S VAL=$O(@XPDGREF@("PTRS",SUB,NAM,VAL)) Q:'$L(VAL)  D
"RTN","RGCWKDIN",78,0)
 ...S PTR=$$FIND1^DIC(TGT,,"X",VAL)
"RTN","RGCWKDIN",79,0)
 ...I 'PTR D MES("  Failed to resolve "_VAL) Q
"RTN","RGCWKDIN",80,0)
 ...S CNT=CNT+1,@SGB@(IEN,NOD,CNT,0)=PTR,@SGB@(IEN,NOD,"B",PTR,CNT)=""
"RTN","RGCWKDIN",81,0)
 ..S:CNT @SGB@(IEN,NOD,0)=U_SUB_"P^"_CNT_U_CNT
"RTN","RGCWKDIN",82,0)
 Q
"RTN","RGCWKDIN",83,0)
 ; Check binary version against M system
"RTN","RGCWKDIN",84,0)
OBJCHK ; EP
"RTN","RGCWKDIN",85,0)
 N VER,MSYS
"RTN","RGCWKDIN",86,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",87,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",88,0)
 I '$D(VER) D
"RTN","RGCWKDIN",89,0)
 .D MES("This package contains object code that is not supported on "_MSYS_" installations.",2)
"RTN","RGCWKDIN",90,0)
 E  I VER="" D
"RTN","RGCWKDIN",91,0)
 .D MES("This package does not contain object code for this version of "_MSYS_" installations.",2)
"RTN","RGCWKDIN",92,0)
 Q
"RTN","RGCWKDIN",93,0)
 ; Get M system type and target version
"RTN","RGCWKDIN",94,0)
GETMSYS(MSYS,VER) ;
"RTN","RGCWKDIN",95,0)
 K MSYS,VER
"RTN","RGCWKDIN",96,0)
 Q:'$D(@XPDGREF@("OBJ"))
"RTN","RGCWKDIN",97,0)
 S MSYS=$$UP^XLFSTR($P($$VERSION^%ZOSV(1)," ")),MSYS(0)=$S(MSYS="CACHE":1,MSYS="JUMPS":2,1:0)
"RTN","RGCWKDIN",98,0)
 Q:'$D(@XPDGREF@("OBJ",MSYS(0)))
"RTN","RGCWKDIN",99,0)
 S VER=$TR($$VERSION^%ZOSV()," ")
"RTN","RGCWKDIN",100,0)
 F  Q:'$L(VER)  Q:$D(@XPDGREF@("OBJ",MSYS(0),VER))  S VER=$P(VER,".",1,$L(VER,".")-1)
"RTN","RGCWKDIN",101,0)
 Q
"RTN","RGCWKDIN",102,0)
 ; Install routine binaries
"RTN","RGCWKDIN",103,0)
OBJINST ; EP
"RTN","RGCWKDIN",104,0)
 N MSYS,RTN,OBJ,SUB,GBL
"RTN","RGCWKDIN",105,0)
 D GETMSYS(.MSYS,.VER)
"RTN","RGCWKDIN",106,0)
 Q:'$D(MSYS)
"RTN","RGCWKDIN",107,0)
 Q:$D(@XPDGREF@("OBJ",MSYS(0)))<10
"RTN","RGCWKDIN",108,0)
 S RTN=""
"RTN","RGCWKDIN",109,0)
 D MES("Installing routine binaries...")
"RTN","RGCWKDIN",110,0)
 F  S RTN=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN)) Q:'$L(RTN)  D
"RTN","RGCWKDIN",111,0)
 .X "ZR  ZS @RTN"
"RTN","RGCWKDIN",112,0)
 .S OBJ="",SUB=0,GBL=$NA(@$S(MSYS(0)=1:"^rOBJ(RTN)",1:"^$R(RTN,""OBJECT"")"))
"RTN","RGCWKDIN",113,0)
 .F  S SUB=$O(@XPDGREF@("OBJ",MSYS(0),VER,RTN,SUB)) Q:'SUB  S OBJ=OBJ_^(SUB,0)
"RTN","RGCWKDIN",114,0)
 .S @GBL=$S(MSYS(0)=1:$$DECODE^RGUTUU(OBJ),1:OBJ)
"RTN","RGCWKDIN",115,0)
 Q
"RTN","RGCWKDIN",116,0)
 ; Perform various registration actions
"RTN","RGCWKDIN",117,0)
REGISTER N X,CTX
"RTN","RGCWKDIN",118,0)
 S CTX=$$GETOPT^RGUTRPC("RGCWF CAREWEB FRAMEWORK")
"RTN","RGCWKDIN",119,0)
 Q:'CTX
"RTN","RGCWKDIN",120,0)
 F X="RGCW","CIAV","CIAU","DG","DDR","RGUT","BEH" D REGNMSP^RGUTRPC(X,CTX)
"RTN","RGCWKDIN",121,0)
 F X="OR CPRS GUI CHART" D DOREG(X)
"RTN","RGCWKDIN",122,0)
 Q
"RTN","RGCWKDIN",123,0)
 ; Add an option as a subcontext to CareWeb Framework
"RTN","RGCWKDIN",124,0)
 ; Remove any redundant RPC's
"RTN","RGCWKDIN",125,0)
DOREG(OPT) ;
"RTN","RGCWKDIN",126,0)
 N RPC,CNT1,CNT2,STAT,IEN
"RTN","RGCWKDIN",127,0)
 S IEN=$$GETOPT^RGUTRPC(OPT)
"RTN","RGCWKDIN",128,0)
 Q:'IEN
"RTN","RGCWKDIN",129,0)
 W !!,"Registering ",OPT," as a subcontext under RGCWF CAREWEB FRAMEWORK...",!
"RTN","RGCWKDIN",130,0)
 I $$REGCTX^RGUTRPC(IEN,CTX)
"RTN","RGCWKDIN",131,0)
 W "Removing redundant RPC references...",!
"RTN","RGCWKDIN",132,0)
 S (CNT1,CNT2)=0
"RTN","RGCWKDIN",133,0)
 F RPC=0:0 S RPC=$O(^DIC(19,IEN,"RPC","B",RPC)) Q:'RPC  D
"RTN","RGCWKDIN",134,0)
 .S STAT=$$REGRPC^RGUTRPC(RPC,CTX,1)
"RTN","RGCWKDIN",135,0)
 .Q:STAT=-1
"RTN","RGCWKDIN",136,0)
 .W $$GET1^DIQ(8994,RPC,.01)_" - "
"RTN","RGCWKDIN",137,0)
 .I STAT=1 W "Removed",! S CNT1=CNT1+1
"RTN","RGCWKDIN",138,0)
 .E  I 'STAT W "Not removed",! S CNT2=CNT2+1
"RTN","RGCWKDIN",139,0)
 W !,CNT1," remote procedure(s) removed",!
"RTN","RGCWKDIN",140,0)
 W:CNT2 CNT2," remote procedure(s) could not be removed",!!
"RTN","RGCWKDIN",141,0)
 Q
"RTN","RGCWKDIN",142,0)
 ; Check if specified routine is installed
"RTN","RGCWKDIN",143,0)
RTNTST(RTN,VN,MSG) ;
"RTN","RGCWKDIN",144,0)
 D:$$RTNVER(RTN)<VN MES(MSG_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",145,0)
 Q
"RTN","RGCWKDIN",146,0)
 ; Get version # for specified routine
"RTN","RGCWKDIN",147,0)
RTNVER(RTN) ;
"RTN","RGCWKDIN",148,0)
 Q $P($T(+2^@RTN),";",3)
"RTN","RGCWKDIN",149,0)
 ; Check patch #s for specified routine
"RTN","RGCWKDIN",150,0)
PATCH(RTN,PN,MSG) ;
"RTN","RGCWKDIN",151,0)
 N X,Y,L,F
"RTN","RGCWKDIN",152,0)
 F X=1:1:$L(PN,",") D
"RTN","RGCWKDIN",153,0)
 .S Y=$P(PN,",",X),F=0
"RTN","RGCWKDIN",154,0)
 .F L=2,3 D  Q:F
"RTN","RGCWKDIN",155,0)
 ..S F=$TR($P($T(+L^@RTN),";",5),"*",",")[(","_Y_",")
"RTN","RGCWKDIN",156,0)
 .D:'F MES(MSG_" patch #"_Y_" must be installed before proceeding.",2)
"RTN","RGCWKDIN",157,0)
 Q
"RTN","RGCWKDIN",158,0)
 ; Display message in MSG and optionally set quit flag to QUIT
"RTN","RGCWKDIN",159,0)
MES(MSG,QUIT) ;
"RTN","RGCWKDIN",160,0)
 D BMES^XPDUTL("  "_$G(MSG))
"RTN","RGCWKDIN",161,0)
 S:$G(QUIT) XPDQUIT=QUIT
"RTN","RGCWKDIN",162,0)
 Q
"SEC","^DIC",999.1,999.1,0,"AUDIT")
@
"SEC","^DIC",999.1,999.1,0,"DD")
@
"SEC","^DIC",999.1,999.1,0,"DEL")
@
"SEC","^DIC",999.1,999.1,0,"LAYGO")
@
"SEC","^DIC",999.1,999.1,0,"RD")
@
"SEC","^DIC",999.1,999.1,0,"WR")
@
"SEC","^DIC",999.201,999.201,0,"AUDIT")
@
"SEC","^DIC",999.201,999.201,0,"DD")
@
"SEC","^DIC",999.201,999.201,0,"DEL")
@
"SEC","^DIC",999.201,999.201,0,"LAYGO")
@
"SEC","^DIC",999.201,999.201,0,"RD")
@
"SEC","^DIC",999.201,999.201,0,"WR")
@
"SEC","^DIC",19941.21,19941.21,0,"AUDIT")
@
"SEC","^DIC",19941.21,19941.21,0,"DD")
@
"SEC","^DIC",19941.21,19941.21,0,"DEL")
@
"SEC","^DIC",19941.21,19941.21,0,"LAYGO")
@
"SEC","^DIC",19941.21,19941.21,0,"RD")
@
"SEC","^DIC",19941.21,19941.21,0,"WR")
@
"TEMP","EC")

"TEMP","FINAL")

"TEMP","INITIAL")

"TEMP","PTRS",19941.212)
20^19941.21^19.1
"TEMP","PTRS",19941.2121)
21^19941.21^19.1
"TEMP","TGT")
13
"VER")
8.0^22.0
"^DD",999.1,999.1,0)
FIELD^^10^4
"^DD",999.1,999.1,0,"DDA")
N
"^DD",999.1,999.1,0,"DT")
3150211
"^DD",999.1,999.1,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",999.1,999.1,0,"IX","B",999.1,.01)

"^DD",999.1,999.1,0,"NM","CAREWEB SERIALIZATION")

"^DD",999.1,999.1,0,"PT",999.991,.01)

"^DD",999.1,999.1,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",999.1,999.1,.01,1,0)
^.1
"^DD",999.1,999.1,.01,1,1,0)
999.1^B
"^DD",999.1,999.1,.01,1,1,1)
S ^RGCWF(999.1,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.1,.01,1,1,2)
K ^RGCWF(999.1,"B",$E(X,1,30),DA)
"^DD",999.1,999.1,.01,3)
Replace Name of the serialization type (1-30 characters).
"^DD",999.1,999.1,.01,"DT")
3150211
"^DD",999.1,999.1,1,0)
CONTENT TYPE^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",999.1,999.1,1,3)
Content type generated by this serialization type.
"^DD",999.1,999.1,1,"DT")
3150211
"^DD",999.1,999.1,2,0)
SERIALIZER^F^^0;3^K:$L(X)>10!($L(X)<1)!'(X?1.A0.AN) X
"^DD",999.1,999.1,2,3)
Name of serialization routine.
"^DD",999.1,999.1,2,"DT")
3150211
"^DD",999.1,999.1,10,0)
RESOURCE^999.11^^10;0
"^DD",999.1,999.11,0)
RESOURCE SUB-FIELD^^2^8
"^DD",999.1,999.11,0,"DT")
3150211
"^DD",999.1,999.11,0,"IX","B",999.11,.01)

"^DD",999.1,999.11,0,"IX","C",999.11,.01)

"^DD",999.1,999.11,0,"NM","RESOURCE")

"^DD",999.1,999.11,0,"UP")
999.1
"^DD",999.1,999.11,.01,0)
RESOURCE^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.11,.01,1,0)
^.1^^-1
"^DD",999.1,999.11,.01,1,1,0)
999.11^B^MUMPS
"^DD",999.1,999.11,.01,1,1,1)
S ^RGCWF(999.1,DA(1),10,"B",X,DA)=$$TOPTRN^RGCWSER(X)
"^DD",999.1,999.11,.01,1,1,2)
K ^RGCWF(999.1,DA(1),10,"B",X,DA)
"^DD",999.1,999.11,.01,1,1,"DT")
3150211
"^DD",999.1,999.11,.01,1,2,0)
999.11^C^MUMPS
"^DD",999.1,999.11,.01,1,2,1)
S ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)=""
"^DD",999.1,999.11,.01,1,2,2)
K ^RGCWF(999.1,DA(1),10,"C",$$UP^XLFSTR(X),DA)
"^DD",999.1,999.11,.01,1,2,"DT")
3150211
"^DD",999.1,999.11,.01,3)
Enter path name for the resource.
"^DD",999.1,999.11,.01,"DT")
3150211
"^DD",999.1,999.11,1,0)
INTERNAL^S^0:NO;1:YES;^0;2^Q
"^DD",999.1,999.11,1,3)
Enter YES if this is an internal resource.
"^DD",999.1,999.11,1,"DT")
3150221
"^DD",999.1,999.11,2,0)
SOURCE^NJ10,4XO^^0;3^K:'$$VFILE^DILFD(X) X
"^DD",999.1,999.11,2,2)
S Y(0)=Y S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,2.1)
S Y=Y_" ("_$P($G(^DIC(Y,0),^DD(Y,0)),U)_")"
"^DD",999.1,999.11,2,3)
Enter a file or subfile number.
"^DD",999.1,999.11,2,"DT")
3150211
"^DD",999.1,999.11,10,0)
CUSTOM SERIALIZER^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,10,3)
M code to invoke custom serializer.
"^DD",999.1,999.11,10,9)
@
"^DD",999.1,999.11,10,"DT")
3150211
"^DD",999.1,999.11,20,0)
CUSTOM RETRIEVAL^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.11,20,3)
M code to invoke custom retrieval logic.
"^DD",999.1,999.11,20,9)
@
"^DD",999.1,999.11,20,"DT")
3150211
"^DD",999.1,999.11,30,0)
PROPERTY^999.12I^^30;0
"^DD",999.1,999.11,40,0)
PARAMETER^999.13I^^40;0
"^DD",999.1,999.11,99,0)
DESCRIPTION^F^^99;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.11,99,3)
Enter brief description of this resource.
"^DD",999.1,999.11,99,"DT")
3150211
"^DD",999.1,999.12,0)
PROPERTY SUB-FIELD^^10^5
"^DD",999.1,999.12,0,"DT")
3150211
"^DD",999.1,999.12,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.12,0,"IX","ASEQ",999.12,3)

"^DD",999.1,999.12,0,"IX","B",999.12,.01)

"^DD",999.1,999.12,0,"NM","PROPERTY")

"^DD",999.1,999.12,0,"UP")
999.11
"^DD",999.1,999.12,.01,0)
PROPERTY^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.12,.01,1,0)
^.1
"^DD",999.1,999.12,.01,1,1,0)
999.12^B
"^DD",999.1,999.12,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.12,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"B",$E(X,1,30),DA)
"^DD",999.1,999.12,.01,3)
Property name to be used in serialization.
"^DD",999.1,999.12,.01,"DT")
3150211
"^DD",999.1,999.12,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.12,1,3)
Field name or # corresponding to this property
"^DD",999.1,999.12,1,"DT")
3150211
"^DD",999.1,999.12,2,0)
TYPE^RS^F:FREE TEXT;R:RAW;B:BOOLEAN;D:DATE;M:MULTIPLE;C:CUSTOM;O:OBJECT;W:WORD PROCESSING;I:INLINE;^0;3^Q
"^DD",999.1,999.12,2,3)
Encoding type for this property.
"^DD",999.1,999.12,2,"DT")
3150211
"^DD",999.1,999.12,3,0)
SEQUENCE^RNJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.12,3,1,0)
^.1
"^DD",999.1,999.12,3,1,1,0)
999.12^ASEQ
"^DD",999.1,999.12,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.12,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),30,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.12,3,1,1,"DT")
3150211
"^DD",999.1,999.12,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.12,3,"DT")
3150211
"^DD",999.1,999.12,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.12,10,3)
Enter control data.
"^DD",999.1,999.12,10,21,0)
^^7^7^3150211.121613
"^DD",999.1,999.12,10,21,1,0)
The format of this field depends on the value of the TYPE field.  For those
"^DD",999.1,999.12,10,21,2,0)
TYPE values not listed below, this field will be ignored.
"^DD",999.1,999.12,10,21,3,0)

"^DD",999.1,999.12,10,21,4,0)
C (Custom) - Executable M code.
"^DD",999.1,999.12,10,21,5,0)
O (Object) - Alias name of the target object.
"^DD",999.1,999.12,10,21,6,0)
M (Multiple) - Alias name of the multiple object.
"^DD",999.1,999.12,10,21,7,0)

"^DD",999.1,999.12,10,"DT")
3150211
"^DD",999.1,999.13,0)
PARAMETER SUB-FIELD^^10^6
"^DD",999.1,999.13,0,"DT")
3150211
"^DD",999.1,999.13,0,"ID",3)
W "   ",$P(^(0),U,4)
"^DD",999.1,999.13,0,"IX","ASEQ",999.13,3)

"^DD",999.1,999.13,0,"IX","B",999.13,.01)

"^DD",999.1,999.13,0,"NM","PARAMETER")

"^DD",999.1,999.13,0,"UP")
999.11
"^DD",999.1,999.13,.01,0)
PARAMETER^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",999.1,999.13,.01,1,0)
^.1
"^DD",999.1,999.13,.01,1,1,0)
999.13^B
"^DD",999.1,999.13,.01,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)=""
"^DD",999.1,999.13,.01,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"B",$E(X,1,30),DA)
"^DD",999.1,999.13,.01,3)
Enter name of search parameter.
"^DD",999.1,999.13,.01,"DT")
3150211
"^DD",999.1,999.13,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",999.1,999.13,1,3)
Field name or # corresponding to this parameter.
"^DD",999.1,999.13,1,"DT")
3150211
"^DD",999.1,999.13,2,0)
TYPE^S^N:NUMBER;D:DATE;S:STRING;T:TOKEN;R:REFERENCE;Q:QUANTITY;^0;3^Q
"^DD",999.1,999.13,2,3)
Type of the search parameter.
"^DD",999.1,999.13,2,"DT")
3150211
"^DD",999.1,999.13,3,0)
SEQUENCE^NJ10,4^^0;4^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."5N.N) X
"^DD",999.1,999.13,3,1,0)
^.1
"^DD",999.1,999.13,3,1,1,0)
999.13^ASEQ
"^DD",999.1,999.13,3,1,1,1)
S ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)=""
"^DD",999.1,999.13,3,1,1,2)
K ^RGCWF(999.1,DA(2),10,DA(1),40,"ASEQ",$E(X,1,30),DA)
"^DD",999.1,999.13,3,1,1,"DT")
3150211
"^DD",999.1,999.13,3,3)
Enter sequence number for process ordering.
"^DD",999.1,999.13,3,"DT")
3150211
"^DD",999.1,999.13,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",999.1,999.13,10,3)
M code to perform filtering.
"^DD",999.1,999.13,10,"DT")
3150211
"^DD",999.1,999.13,20,0)
COHORT^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.1,999.13,20,3)
M code to set global selector into X.
"^DD",999.1,999.13,20,9)
@
"^DD",999.1,999.13,20,"DT")
3150211
"^DD",999.201,999.201,0)
FIELD^^4^5
"^DD",999.201,999.201,0,"IX","B",999.201,.01)

"^DD",999.201,999.201,0,"NM","CAREWEB NOTIFICATION CONTROL")

"^DD",999.201,999.201,0,"PT",999.994,.01)

"^DD",999.201,999.201,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<2)!'(X'?1P.E) X
"^DD",999.201,999.201,.01,1,0)
^.1
"^DD",999.201,999.201,.01,1,1,0)
999.201^B
"^DD",999.201,999.201,.01,1,1,1)
S ^RGCWF(999.201,"B",$E(X,1,30),DA)=""
"^DD",999.201,999.201,.01,1,1,2)
K ^RGCWF(999.201,"B",$E(X,1,30),DA)
"^DD",999.201,999.201,.01,3)
Answer must be 2-30 characters in length.
"^DD",999.201,999.201,.01,"DT")
3030805
"^DD",999.201,999.201,1,0)
IDENT^RK^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,1,3)
Code to check notification identity.  Set $T to true for positive match.
"^DD",999.201,999.201,1,9)
@
"^DD",999.201,999.201,1,21,0)
^^1^1^3030804.150811
"^DD",999.201,999.201,1,21,1,0)
Should check the notification identifier in AID and set $T to true if a match.
"^DD",999.201,999.201,1,"DT")
3030804
"^DD",999.201,999.201,2,0)
PARSE^RK^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,2,3)
Code to parse data elements from notification.
"^DD",999.201,999.201,2,9)
@
"^DD",999.201,999.201,2,21,0)
^^8^8^3030804.170957
"^DD",999.201,999.201,2,21,1,0)
Code to parse standard data elements from notification.  Elements should be
"^DD",999.201,999.201,2,21,2,0)
returned in ALR array as follows:
"^DD",999.201,999.201,2,21,3,0)

"^DD",999.201,999.201,2,21,4,0)
ALR("DFN")=Patient IEN (if patient-orientation)
"^DD",999.201,999.201,2,21,5,0)
ALR("INF")=Info only flag
"^DD",999.201,999.201,2,21,6,0)
ALR("TYP")=Notification type code
"^DD",999.201,999.201,2,21,7,0)
ALR("PRI")=Priority code
"^DD",999.201,999.201,2,21,8,0)
ALR("XTR")=Additional data
"^DD",999.201,999.201,2,"DT")
3030804
"^DD",999.201,999.201,3,0)
PROCESS^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,3,3)
Post processing logic for alert.
"^DD",999.201,999.201,3,9)
@
"^DD",999.201,999.201,3,"DT")
3030805
"^DD",999.201,999.201,4,0)
UPDATE^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",999.201,999.201,4,3)
Optional logic to update alerts for current user.
"^DD",999.201,999.201,4,9)
@
"^DD",999.201,999.201,4,21,0)
^^2^2^3080128.135828
"^DD",999.201,999.201,4,21,1,0)
This logic provides the opportunity to update alerts (add or delete) 
"^DD",999.201,999.201,4,21,2,0)
for the current user prior to retrieving them.
"^DD",999.201,999.201,4,"DT")
3080128
"^DD",19941.21,19941.21,0)
FIELD^^7^14
"^DD",19941.21,19941.21,0,"DT")
3091007
"^DD",19941.21,19941.21,0,"IX","B",19941.21,.01)

"^DD",19941.21,19941.21,0,"NM","CIA EVENT TYPE")

"^DD",19941.21,19941.21,0,"PT",999.995,.01)

"^DD",19941.21,19941.21,0,"PT",19930.995,.01)

"^DD",19941.21,19941.21,0,"PT",19941.23,1)

"^DD",19941.21,19941.21,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19941.21,19941.21,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",19941.21,19941.21,.01,1,0)
^.1
"^DD",19941.21,19941.21,.01,1,1,0)
19941.21^B
"^DD",19941.21,19941.21,.01,1,1,1)
S ^CIANB(19941.21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.21,.01,1,1,2)
K ^CIANB(19941.21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.21,.01,3)
Answer must be 3-100 characters in length.
"^DD",19941.21,19941.21,.01,"DT")
3030611
"^DD",19941.21,19941.21,1,0)
MONITOR^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,1,3)
M code to invoke monitor for this event type
"^DD",19941.21,19941.21,1,9)
@
"^DD",19941.21,19941.21,1,"DT")
3021021
"^DD",19941.21,19941.21,2,0)
DISABLE^S^0:NO;1:YES;^0;2^Q
"^DD",19941.21,19941.21,2,3)
Enter YES to disable this event type.
"^DD",19941.21,19941.21,2,21,0)
^.001^3^3^3030810^
"^DD",19941.21,19941.21,2,21,1,0)
If set to YES, this event type is disabled.  Once disabled, any attempt to 
"^DD",19941.21,19941.21,2,21,2,0)
enqueue the event will be ignored.  Disabling an event does not affect events
"^DD",19941.21,19941.21,2,21,3,0)
already in the queue. 
"^DD",19941.21,19941.21,2,"DT")
3030810
"^DD",19941.21,19941.21,3,0)
INTERVAL^NJ11,0X^^0;3^K:X<0!(X\1'=X) X
"^DD",19941.21,19941.21,3,3)
Enter the nominal polling interval in seconds.
"^DD",19941.21,19941.21,3,21,0)
^^10^10^3021021.152235
"^DD",19941.21,19941.21,3,21,1,0)
This is the nominal polling interval for the event in seconds.
"^DD",19941.21,19941.21,3,21,2,0)
The actual polling interval is dependent on the event polling
"^DD",19941.21,19941.21,3,21,3,0)
interval set for the client application as a site parameter.
"^DD",19941.21,19941.21,3,21,4,0)
The nominal polling interval guarantees that polling for this
"^DD",19941.21,19941.21,3,21,5,0)
event will not occur more frequently than this setting.
"^DD",19941.21,19941.21,3,21,6,0)
 
"^DD",19941.21,19941.21,3,21,7,0)
For events that are infrequent and/or do not require real time
"^DD",19941.21,19941.21,3,21,8,0)
notification, higher values may be selected for this field to
"^DD",19941.21,19941.21,3,21,9,0)
mitigate impact on system load. 
"^DD",19941.21,19941.21,3,21,10,0)

"^DD",19941.21,19941.21,3,"DT")
3021021
"^DD",19941.21,19941.21,4,0)
LOG EVENT^S^0:NO;1:YES;^0;4^Q
"^DD",19941.21,19941.21,4,3)
Enter YES to enable logging of this event.
"^DD",19941.21,19941.21,4,"DT")
3030611
"^DD",19941.21,19941.21,5,0)
LOG RETENTION^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.21,19941.21,5,3)
Number of days to retain log entries.
"^DD",19941.21,19941.21,5,"DT")
3030611
"^DD",19941.21,19941.21,6,0)
POLLING METHOD^S^0:PER SESSION;1:PER INTERVAL;^0;6^Q
"^DD",19941.21,19941.21,6,3)
Determines how a monitored event is polled.
"^DD",19941.21,19941.21,6,21,0)
^^11^11^3030810.175145
"^DD",19941.21,19941.21,6,21,1,0)
For monitored events, this setting determines how the monitor is invoked
"^DD",19941.21,19941.21,6,21,2,0)
when the polling interval has been reached.  PER SESSION causes the event
"^DD",19941.21,19941.21,6,21,3,0)
monitor to be invoked for each active session, setting the user and
"^DD",19941.21,19941.21,6,21,4,0)
session context prior to each call.  PER INTERVAL cause the event monitor
"^DD",19941.21,19941.21,6,21,5,0)
to be invoked only once per interval.  No user or session context information
"^DD",19941.21,19941.21,6,21,6,0)
is available to the monitor in this case.
"^DD",19941.21,19941.21,6,21,7,0)

"^DD",19941.21,19941.21,6,21,8,0)
PER SESSION is appropriate for events that depend upon a specific user or
"^DD",19941.21,19941.21,6,21,9,0)
session (e.g., notifications).  PER INTERVAL is appropriate for events 
"^DD",19941.21,19941.21,6,21,10,0)
that are independent of a user or session (e.g., status events to display
"^DD",19941.21,19941.21,6,21,11,0)
the host date/time).
"^DD",19941.21,19941.21,6,"DT")
3030810
"^DD",19941.21,19941.21,7,0)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",19941.21,19941.21,7,12)
Restricts to Extended Action Protocols starting with CIAV
"^DD",19941.21,19941.21,7,12.1)
S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X"""
"^DD",19941.21,19941.21,7,"DT")
3091007
"^DD",19941.21,19941.21,10,0)
DISPLAY LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,10,3)
Logic to display stub info in log viewer.
"^DD",19941.21,19941.21,10,9)
@
"^DD",19941.21,19941.21,10,"DT")
3030611
"^DD",19941.21,19941.21,20,0)
PUBLICATION KEY^19941.212P^^20;0
"^DD",19941.21,19941.21,21,0)
SUBSCRIPTION KEY^19941.2121P^^21;0
"^DD",19941.21,19941.21,99,0)
DESCRIPTION^19941.2199^^99;0
"^DD",19941.21,19941.21,100,0)
ERROR DATE/TIME^D^^100;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.21,19941.21,100,3)
Date and time of last error
"^DD",19941.21,19941.21,100,"DT")
3061129
"^DD",19941.21,19941.21,101,0)
ERROR TEXT^F^^100;2^K:$L(X)>240!($L(X)<1) X
"^DD",19941.21,19941.21,101,3)
Answer must be 1-240 characters in length.
"^DD",19941.21,19941.21,101,"DT")
3061129
"^DD",19941.21,19941.212,0)
PUBLICATION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.212,0,"DT")
3021021
"^DD",19941.21,19941.212,0,"IX","B",19941.212,.01)

"^DD",19941.21,19941.212,0,"NM","PUBLICATION KEY")

"^DD",19941.21,19941.212,0,"UP")
19941.21
"^DD",19941.21,19941.212,.01,0)
PUBLICATION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.212,.01,1,0)
^.1
"^DD",19941.21,19941.212,.01,1,1,0)
19941.212^B
"^DD",19941.21,19941.212,.01,1,1,1)
S ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.212,.01,1,1,2)
K ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.212,.01,3)
Security keys required to fire this event.
"^DD",19941.21,19941.212,.01,21,0)
^^2^2^3021021.152715
"^DD",19941.21,19941.212,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.212,.01,21,2,0)
the listed keys in order to fire an event of this type.
"^DD",19941.21,19941.212,.01,"DT")
3040310
"^DD",19941.21,19941.2121,0)
SUBSCRIPTION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.2121,0,"DT")
3021021
"^DD",19941.21,19941.2121,0,"IX","B",19941.2121,.01)

"^DD",19941.21,19941.2121,0,"NM","SUBSCRIPTION KEY")

"^DD",19941.21,19941.2121,0,"UP")
19941.21
"^DD",19941.21,19941.2121,.01,0)
SUBSCRIPTION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.2121,.01,1,0)
^.1
"^DD",19941.21,19941.2121,.01,1,1,0)
19941.2121^B
"^DD",19941.21,19941.2121,.01,1,1,1)
S ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.2121,.01,1,1,2)
K ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.2121,.01,3)
Security keys required to receive this event type.
"^DD",19941.21,19941.2121,.01,21,0)
^^2^2^3021021.153002
"^DD",19941.21,19941.2121,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.2121,.01,21,2,0)
the listed keys in order subscribe to an event of this type. 
"^DD",19941.21,19941.2121,.01,"DT")
3040310
"^DD",19941.21,19941.2199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",19941.21,19941.2199,0,"DT")
3021021
"^DD",19941.21,19941.2199,0,"NM","DESCRIPTION")

"^DD",19941.21,19941.2199,0,"UP")
19941.21
"^DD",19941.21,19941.2199,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",19941.21,19941.2199,.01,3)
Enter a detailed description of this event type.
"^DD",19941.21,19941.2199,.01,"DT")
3021021
"^DIC",999.1,999.1,0)
CAREWEB SERIALIZATION^999.1
"^DIC",999.1,999.1,0,"GL")
^RGCWF(999.1,
"^DIC",999.1,999.1,"%D",0)
^^1^1^3150211.113842
"^DIC",999.1,999.1,"%D",1,0)
Supports serialization of domain objects.
"^DIC",999.1,"B","CAREWEB SERIALIZATION",999.1)

"^DIC",999.201,999.201,0)
CAREWEB NOTIFICATION CONTROL^999.201
"^DIC",999.201,999.201,0,"GL")
^RGCWF(999.201,
"^DIC",999.201,"B","CAREWEB NOTIFICATION CONTROL",999.201)

"^DIC",19941.21,19941.21,0)
CIA EVENT TYPE^19941.21
"^DIC",19941.21,19941.21,0,"GL")
^CIANB(19941.21,
"^DIC",19941.21,"B","CIA EVENT TYPE",19941.21)

**END**
**END**
